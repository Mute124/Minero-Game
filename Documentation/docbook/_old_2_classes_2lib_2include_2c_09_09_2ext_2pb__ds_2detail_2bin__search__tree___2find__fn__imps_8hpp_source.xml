<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2find__fn__imps_8hpp_source" xml:lang="en-US">
<title>find_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
44 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_const_iterator
45 PB_DS_CLASS_C_DEC::
46 lower_bound(key_const_reference&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
47 <emphasis role="keyword"></emphasis>{
48 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
49 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
50 
51 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_nd&#32;!=&#32;0)
52 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cmp_Fn::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value),&#32;r_key))
53 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
54 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
57 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
58 &#32;&#32;&#32;&#32;&#32;&#32;}
59 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(p_pot);
60 }
61 
62 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
63 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_iterator
64 PB_DS_CLASS_C_DEC::
65 lower_bound(key_const_reference&#32;r_key)
66 {
67 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
68 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
69 
70 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_nd&#32;!=&#32;0)
71 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cmp_Fn::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value),&#32;r_key))
72 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
73 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
76 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
77 &#32;&#32;&#32;&#32;&#32;&#32;}
78 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(p_pot);
79 }
80 
81 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
82 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_const_iterator
83 PB_DS_CLASS_C_DEC::
84 upper_bound(key_const_reference&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
85 <emphasis role="keyword"></emphasis>{
86 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
87 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
88 
89 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_nd&#32;!=&#32;0)
90 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value)))
91 &#32;&#32;&#32;&#32;&#32;&#32;{
92 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
93 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
94 &#32;&#32;&#32;&#32;&#32;&#32;}
95 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
97 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_iterator(p_pot);
98 }
99 
100 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
101 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_iterator
102 PB_DS_CLASS_C_DEC::
103 upper_bound(key_const_reference&#32;r_key)
104 {
105 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
106 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
107 
108 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(p_nd&#32;!=&#32;0)
109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value)))
110 &#32;&#32;&#32;&#32;&#32;&#32;{
111 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
112 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
113 &#32;&#32;&#32;&#32;&#32;&#32;}
114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
115 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
116 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point_iterator(p_pot);
117 }
118 
119 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
120 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_iterator
121 PB_DS_CLASS_C_DEC::
122 find(key_const_reference&#32;r_key)
123 {
124 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1aab7f010e7d119791c979b0a32848c437">PB_DS_STRUCT_ONLY_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
125 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
126 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
127 
128 &#32;&#32;while&#32;(p_nd&#32;!=&#32;0)
129 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(!Cmp_Fn::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value),&#32;r_key))
130 &#32;&#32;&#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
132 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
133 &#32;&#32;&#32;&#32;&#32;&#32;}
134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
136 
137 &#32;&#32;node_pointer&#32;ret&#32;=&#32;p_pot;
138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_pot&#32;!=&#32;m_p_head)
139 &#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__cmp&#32;=&#32;Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_pot-&gt;m_value));
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__cmp)
142 &#32;&#32;&#32;&#32;ret&#32;=&#32;m_p_head;
143 &#32;&#32;&#32;&#32;}
144 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point_iterator(ret);
145 }
146 
147 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
148 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_const_iterator
149 PB_DS_CLASS_C_DEC::
150 find(key_const_reference&#32;r_key)<emphasis role="keyword">&#32;const</emphasis>
151 <emphasis role="keyword"></emphasis>{
152 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1aab7f010e7d119791c979b0a32848c437">PB_DS_STRUCT_ONLY_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
153 &#32;&#32;node_pointer&#32;p_pot&#32;=&#32;m_p_head;
154 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_p_head-&gt;m_p_parent;
155 
156 &#32;&#32;while&#32;(p_nd&#32;!=&#32;0)
157 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(!Cmp_Fn::operator()(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_nd-&gt;m_value),&#32;r_key))
158 &#32;&#32;&#32;&#32;&#32;&#32;{
159 &#32;&#32;&#32;&#32;p_pot&#32;=&#32;p_nd;
160 &#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_left;
161 &#32;&#32;&#32;&#32;&#32;&#32;}
162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;p_nd&#32;=&#32;p_nd-&gt;m_p_right;
164 
165 &#32;&#32;node_pointer&#32;ret&#32;=&#32;p_pot;
166 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_pot&#32;!=&#32;m_p_head)
167 &#32;&#32;&#32;&#32;{
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__cmp&#32;=&#32;Cmp_Fn::operator()(r_key,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(p_pot-&gt;m_value));
169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__cmp)
170 &#32;&#32;&#32;&#32;ret&#32;=&#32;m_p_head;
171 &#32;&#32;&#32;&#32;}
172 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point_const_iterator(ret);
173 }
174 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
