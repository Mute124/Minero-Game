<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2raylib_2src_2external_2glfw_2src_2monitor_8c_source" xml:lang="en-US">
<title>monitor.c</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/raylib/src/external/glfw/src/monitor.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//========================================================================</emphasis>
2 <emphasis role="comment">//&#32;GLFW&#32;3.4&#32;-&#32;www.glfw.org</emphasis>
3 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
4 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2002-2006&#32;Marcus&#32;Geelnard</emphasis>
5 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2006-2019&#32;Camilla&#32;LÃ¶wy&#32;&lt;elmindreda@glfw.org&gt;</emphasis>
6 <emphasis role="comment">//</emphasis>
7 <emphasis role="comment">//&#32;This&#32;software&#32;is&#32;provided&#32;&apos;as-is&apos;,&#32;without&#32;any&#32;express&#32;or&#32;implied</emphasis>
8 <emphasis role="comment">//&#32;warranty.&#32;In&#32;no&#32;event&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages</emphasis>
9 <emphasis role="comment">//&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
10 <emphasis role="comment">//</emphasis>
11 <emphasis role="comment">//&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,</emphasis>
12 <emphasis role="comment">//&#32;including&#32;commercial&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it</emphasis>
13 <emphasis role="comment">//&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
14 <emphasis role="comment">//</emphasis>
15 <emphasis role="comment">//&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not</emphasis>
16 <emphasis role="comment">//&#32;&#32;&#32;&#32;claim&#32;that&#32;you&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software</emphasis>
17 <emphasis role="comment">//&#32;&#32;&#32;&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment&#32;in&#32;the&#32;product&#32;documentation&#32;would</emphasis>
18 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
19 <emphasis role="comment">//</emphasis>
20 <emphasis role="comment">//&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not</emphasis>
21 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;misrepresented&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
22 <emphasis role="comment">//</emphasis>
23 <emphasis role="comment">//&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source</emphasis>
24 <emphasis role="comment">//&#32;&#32;&#32;&#32;distribution.</emphasis>
25 <emphasis role="comment">//</emphasis>
26 <emphasis role="comment">//========================================================================</emphasis>
27 <emphasis role="comment">//&#32;Please&#32;use&#32;C89&#32;style&#32;variable&#32;declarations&#32;in&#32;this&#32;file&#32;because&#32;VS&#32;2010</emphasis>
28 <emphasis role="comment">//========================================================================</emphasis>
29 
30 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2internal_8h">internal.h</link>&quot;</emphasis>
31 
32 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
33 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
34 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
35 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
38 
39 
40 <emphasis role="comment">//&#32;Lexically&#32;compare&#32;video&#32;modes,&#32;used&#32;by&#32;qsort</emphasis>
41 <emphasis role="comment">//</emphasis>
42 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;compareVideoModes(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;fp,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;sp)
43 {
44 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;fm&#32;=&#32;fp;
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;sm&#32;=&#32;sp;
46 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;fbpp&#32;=&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>&#32;+&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>&#32;+&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>;
47 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sbpp&#32;=&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>&#32;+&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>&#32;+&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>;
48 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;farea&#32;=&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;*&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>;
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sarea&#32;=&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;*&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>;
50 
51 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First&#32;sort&#32;on&#32;color&#32;bits&#32;per&#32;pixel</emphasis>
52 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fbpp&#32;!=&#32;sbpp)
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fbpp&#32;-&#32;sbpp;
54 
55 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Then&#32;sort&#32;on&#32;screen&#32;area</emphasis>
56 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(farea&#32;!=&#32;sarea)
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;farea&#32;-&#32;sarea;
58 
59 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Then&#32;sort&#32;on&#32;width</emphasis>
60 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;!=&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>)
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;-&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>;
62 
63 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Lastly&#32;sort&#32;on&#32;refresh&#32;rate</emphasis>
64 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>&#32;-&#32;sm-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>;
65 }
66 
67 <emphasis role="comment">//&#32;Retrieves&#32;the&#32;available&#32;modes&#32;for&#32;the&#32;specified&#32;monitor</emphasis>
68 <emphasis role="comment">//</emphasis>
69 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;refreshVideoModes(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor)
70 {
71 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;modeCount;
72 &#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;modes;
73 
74 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>)
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
76 
77 &#32;&#32;&#32;&#32;modes&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1a5efe2824e8779cb098c34a5764cf3c73">_glfwPlatformGetVideoModes</link>(monitor,&#32;&amp;modeCount);
78 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!modes)
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
80 
81 &#32;&#32;&#32;&#32;qsort(modes,&#32;modeCount,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>),&#32;compareVideoModes);
82 
83 &#32;&#32;&#32;&#32;free(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>);
84 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>&#32;=&#32;modes;
85 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a49766384d467b40c9bb362459761418f">modeCount</link>&#32;=&#32;modeCount;
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
88 }
89 
90 
94 
95 <emphasis role="comment">//&#32;Notifies&#32;shared&#32;code&#32;of&#32;a&#32;monitor&#32;connection&#32;or&#32;disconnection</emphasis>
96 <emphasis role="comment">//</emphasis>
97 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;action,&#32;<emphasis role="keywordtype">int</emphasis>&#32;placement)
98 {
99 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;==&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e">GLFW_CONNECTED</link>)
100 &#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>++;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>&#32;=
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;realloc(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>);
104 
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(placement&#32;==&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a9455a4c5815aa9184abd69811f939496">_GLFW_INSERT_FIRST</link>)
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memmove(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>&#32;+&#32;1,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">size_t</emphasis>)&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>&#32;-&#32;1)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*));
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>[0]&#32;=&#32;monitor;
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>[<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>&#32;-&#32;1]&#32;=&#32;monitor;
114 &#32;&#32;&#32;&#32;}
115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;==&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32">GLFW_DISCONNECTED</link>)
116 &#32;&#32;&#32;&#32;{
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>;
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a937f0cca52677efb92365dff58e28525">windowListHead</link>;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>-&gt;next)
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>-&gt;monitor&#32;==&#32;monitor)
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;xoff,&#32;yoff;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__window_8m_1a553e9df9260702f74ddb6e4e9ca43493">_glfwPlatformGetWindowSize</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>);
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__window_8m_1a06ec935287d5beb1cd790cdf3f598700">_glfwPlatformSetWindowMonitor</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;0);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__window_8m_1a5dbdea593f2ce9dcc0c83bb5f318d598">_glfwPlatformGetWindowFrameSize</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;&amp;xoff,&#32;&amp;yoff,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__window_8m_1a576e7fe0e61105497dfcd5cc8e8d235a">_glfwPlatformSetWindowPos</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>,&#32;xoff,&#32;yoff);
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
131 
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>;&#32;&#32;i++)
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>[i]&#32;==&#32;monitor)
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>--;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memmove(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>&#32;+&#32;i,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>&#32;+&#32;i&#32;+&#32;1,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">size_t</emphasis>)&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>&#32;-&#32;i)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*));
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
143 &#32;&#32;&#32;&#32;}
144 
145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5ee445bbec186953fd231517cb036c84">callbacks</link>.<link linkend="_struct___g_l_f_wlibrary_1acea278bb2641c36a371e9e715b7a8f9a">monitor</link>)
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5ee445bbec186953fd231517cb036c84">callbacks</link>.<link linkend="_struct___g_l_f_wlibrary_1acea278bb2641c36a371e9e715b7a8f9a">monitor</link>((<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*)&#32;monitor,&#32;action);
147 
148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;==&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32">GLFW_DISCONNECTED</link>)
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a5555e8488ac56b446d0a28d3330666f6">_glfwFreeMonitor</link>(monitor);
150 }
151 
152 <emphasis role="comment">//&#32;Notifies&#32;shared&#32;code&#32;that&#32;a&#32;full&#32;screen&#32;window&#32;has&#32;acquired&#32;or&#32;released</emphasis>
153 <emphasis role="comment">//&#32;a&#32;monitor</emphasis>
154 <emphasis role="comment">//</emphasis>
155 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a079c865515272434dc96d0f384beda9e">_glfwInputMonitorWindow</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor,&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>)
156 {
157 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a847a4ba1515d5390d824b911fe938a00">window</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a92dbce8e3247f6a78126c99877caacb6">window</link>;
158 }
159 
160 
164 
165 <emphasis role="comment">//&#32;Allocates&#32;and&#32;returns&#32;a&#32;monitor&#32;object&#32;with&#32;the&#32;specified&#32;name&#32;and&#32;dimensions</emphasis>
166 <emphasis role="comment">//</emphasis>
167 <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1ab4ba217654cabec88984af9ffea64850">_glfwAllocMonitor</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;widthMM,&#32;<emphasis role="keywordtype">int</emphasis>&#32;heightMM)
168 {
169 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>));
170 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a4d0e40c8dc4d7913e5e78a81955a834f">widthMM</link>&#32;=&#32;widthMM;
171 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ae5f696ed8a038e0aba539cb52a04b887">heightMM</link>&#32;=&#32;heightMM;
172 
173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>)
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6de796eed8017f294063089325e1874d">name</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1af725e1f466a710a1fc590ff3726f1151">_glfw_strdup</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a14d7642df08c5cb68e4fb90cc8a73509">name</link>);
175 
176 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;monitor;
177 }
178 
179 <emphasis role="comment">//&#32;Frees&#32;a&#32;monitor&#32;object&#32;and&#32;any&#32;data&#32;associated&#32;with&#32;it</emphasis>
180 <emphasis role="comment">//</emphasis>
181 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a5555e8488ac56b446d0a28d3330666f6">_glfwFreeMonitor</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor)
182 {
183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
185 
186 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1a0dcf01b53eb877c4e823ba63fe8ecbca">_glfwPlatformFreeMonitor</link>(monitor);
187 
188 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link>(&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a64188202c44980245af7cb1ce9a24d44">originalRamp</link>);
189 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link>(&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6761d674e05aecaf0cadf7e127f96d85">currentRamp</link>);
190 
191 &#32;&#32;&#32;&#32;free(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>);
192 &#32;&#32;&#32;&#32;free(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6de796eed8017f294063089325e1874d">name</link>);
193 &#32;&#32;&#32;&#32;free(monitor);
194 }
195 
196 <emphasis role="comment">//&#32;Allocates&#32;red,&#32;green&#32;and&#32;blue&#32;value&#32;arrays&#32;of&#32;the&#32;specified&#32;size</emphasis>
197 <emphasis role="comment">//</emphasis>
198 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1acb6a8b432b06fd0accdfc0e046785109">_glfwAllocGammaArrays</link>(<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>*&#32;ramp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
199 {
200 &#32;&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd">red</link>&#32;=&#32;calloc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>));
201 &#32;&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c">green</link>&#32;=&#32;calloc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>));
202 &#32;&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a">blue</link>&#32;=&#32;calloc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>));
203 &#32;&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
204 }
205 
206 <emphasis role="comment">//&#32;Frees&#32;the&#32;red,&#32;green&#32;and&#32;blue&#32;value&#32;arrays&#32;and&#32;clears&#32;the&#32;struct</emphasis>
207 <emphasis role="comment">//</emphasis>
208 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link>(<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>*&#32;ramp)
209 {
210 &#32;&#32;&#32;&#32;free(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd">red</link>);
211 &#32;&#32;&#32;&#32;free(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c">green</link>);
212 &#32;&#32;&#32;&#32;free(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a">blue</link>);
213 
214 &#32;&#32;&#32;&#32;memset(ramp,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>));
215 }
216 
217 <emphasis role="comment">//&#32;Chooses&#32;the&#32;video&#32;mode&#32;most&#32;closely&#32;matching&#32;the&#32;desired&#32;one</emphasis>
218 <emphasis role="comment">//</emphasis>
219 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a4976e6b5e27cd6dfefcd5bd89944dc3e">_glfwChooseVideoMode</link>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor,
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;desired)
221 {
222 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
223 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizeDiff,&#32;leastSizeDiff&#32;=&#32;UINT_MAX;
224 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;rateDiff,&#32;leastRateDiff&#32;=&#32;UINT_MAX;
225 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;colorDiff,&#32;leastColorDiff&#32;=&#32;UINT_MAX;
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;current;
227 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;closest&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
228 
229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!refreshVideoModes(monitor))
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
231 
232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a49766384d467b40c9bb362459761418f">modeCount</link>;&#32;&#32;i++)
233 &#32;&#32;&#32;&#32;{
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>&#32;+&#32;i;
235 
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorDiff&#32;=&#32;0;
237 
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorDiff&#32;+=&#32;abs(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>);
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorDiff&#32;+=&#32;abs(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>);
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorDiff&#32;+=&#32;abs(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>);
244 
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sizeDiff&#32;=&#32;abs((current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>)&#32;*
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>)&#32;+
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>)&#32;*
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>));
249 
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rateDiff&#32;=&#32;abs(current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>&#32;-&#32;desired-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>);
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rateDiff&#32;=&#32;UINT_MAX&#32;-&#32;current-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>;
254 
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((colorDiff&#32;&lt;&#32;leastColorDiff)&#32;||
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(colorDiff&#32;==&#32;leastColorDiff&#32;&amp;&amp;&#32;sizeDiff&#32;&lt;&#32;leastSizeDiff)&#32;||
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(colorDiff&#32;==&#32;leastColorDiff&#32;&amp;&amp;&#32;sizeDiff&#32;==&#32;leastSizeDiff&#32;&amp;&amp;&#32;rateDiff&#32;&lt;&#32;leastRateDiff))
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closest&#32;=&#32;current;
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leastSizeDiff&#32;=&#32;sizeDiff;
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leastRateDiff&#32;=&#32;rateDiff;
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leastColorDiff&#32;=&#32;colorDiff;
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
264 &#32;&#32;&#32;&#32;}
265 
266 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;closest;
267 }
268 
269 <emphasis role="comment">//&#32;Performs&#32;lexical&#32;comparison&#32;between&#32;two&#32;@ref&#32;GLFWvidmode&#32;structures</emphasis>
270 <emphasis role="comment">//</emphasis>
271 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1aa4fbaa8f018b65095626fc495a53ba9f">_glfwCompareVideoModes</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;fm,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;sm)
272 {
273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;compareVideoModes(fm,&#32;sm);
274 }
275 
276 <emphasis role="comment">//&#32;Splits&#32;a&#32;color&#32;depth&#32;into&#32;red,&#32;green&#32;and&#32;blue&#32;bit&#32;depths</emphasis>
277 <emphasis role="comment">//</emphasis>
278 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a3f83dfd3a9beffeba9bac74ec15071a0">_glfwSplitBPP</link>(<emphasis role="keywordtype">int</emphasis>&#32;bpp,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;red,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aef30e4e3dccbffce99b7509d5366faef">green</link>,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>)
279 {
280 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;delta;
281 
282 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;assume&#32;that&#32;by&#32;32&#32;the&#32;user&#32;really&#32;meant&#32;24</emphasis>
283 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bpp&#32;==&#32;32)
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bpp&#32;=&#32;24;
285 
286 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;&quot;bits&#32;per&#32;pixel&quot;&#32;to&#32;red,&#32;green&#32;&amp;&#32;blue&#32;sizes</emphasis>
287 
288 &#32;&#32;&#32;&#32;*red&#32;=&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aef30e4e3dccbffce99b7509d5366faef">green</link>&#32;=&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ab4fcc6ff520ae4d9de259c8468a5cd93">blue</link>&#32;=&#32;bpp&#32;/&#32;3;
289 &#32;&#32;&#32;&#32;delta&#32;=&#32;bpp&#32;-&#32;(*red&#32;*&#32;3);
290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delta&#32;&gt;=&#32;1)
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aef30e4e3dccbffce99b7509d5366faef">green</link>&#32;=&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aef30e4e3dccbffce99b7509d5366faef">green</link>&#32;+&#32;1;
292 
293 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delta&#32;==&#32;2)
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*red&#32;=&#32;*red&#32;+&#32;1;
295 }
296 
297 
301 
302 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>**&#32;<link linkend="_group__monitor_1ga8c78e5db186ee10d00c053faf81998af">glfwGetMonitors</link>(<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)
303 {
304 &#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
305 
306 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;0;
307 
308 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
309 
310 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>;
311 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>**)&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>;
312 }
313 
314 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="_group__monitor_1ga34befff4f9f0fae09dd8de6fb0eb4f3e">glfwGetPrimaryMonitor</link>(<emphasis role="keywordtype">void</emphasis>)
315 {
316 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
317 
318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>)
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
320 
321 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aeb9b7d6d135aa6a4a2dfac6eea072e31">monitors</link>[0];
322 }
323 
324 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1ga45b5481a614ad7beb2aade9746d07563">glfwGetMonitorPos</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;ypos)
325 {
326 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
327 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
328 
329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;0;
331 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;0;
333 
334 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
335 
336 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1ac3047b94f0248b06b160f08992939796">_glfwPlatformGetMonitorPos</link>(monitor,&#32;xpos,&#32;ypos);
337 }
338 
339 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1ga5a3ac0f6e3786df47aabccfb5760b31d">glfwGetMonitorWorkarea</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>*&#32;xpos,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;ypos,
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
342 {
343 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
344 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
345 
346 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;0;
348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;0;
350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;0;
352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>)
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;0;
354 
355 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
356 
357 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1ad3bed68d40919e525ddd445bcde90b2b">_glfwPlatformGetMonitorWorkarea</link>(monitor,&#32;xpos,&#32;ypos,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>);
358 }
359 
360 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1gad0e93a9e42b32394369cabbbdc1ab702">glfwGetMonitorPhysicalSize</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;widthMM,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;heightMM)
361 {
362 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
363 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
364 
365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(widthMM)
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*widthMM&#32;=&#32;0;
367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(heightMM)
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*heightMM&#32;=&#32;0;
369 
370 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
371 
372 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(widthMM)
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*widthMM&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a4d0e40c8dc4d7913e5e78a81955a834f">widthMM</link>;
374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(heightMM)
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*heightMM&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ae5f696ed8a038e0aba539cb52a04b887">heightMM</link>;
376 }
377 
378 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1ga28d856d94bea2ce8f09a67bb0346aaff">glfwGetMonitorContentScale</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>*&#32;xscale,&#32;<emphasis role="keywordtype">float</emphasis>*&#32;yscale)
380 {
381 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
382 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
383 
384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;0.f;
386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;0.f;
388 
389 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
390 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1acaffbb192928a16cf1742151757a867c">_glfwPlatformGetMonitorContentScale</link>(monitor,&#32;xscale,&#32;yscale);
391 }
392 
393 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_group__monitor_1ga6d0ee079c807cd123b56dc3fc01e8fd9">glfwGetMonitorName</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)
394 {
395 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
396 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
397 
398 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6de796eed8017f294063089325e1874d">name</link>;
400 }
401 
402 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1ga6d89c74c1c293f0ab78a00c3c6d1ae44">glfwSetMonitorUserPointer</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>)
403 {
404 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
405 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
406 
407 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
408 &#32;&#32;&#32;&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a5fa094f11e8c268223f4793899760e32">userPointer</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>;
409 }
410 
411 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_group__monitor_1ga13cb11e8f507dbc477e10a040f0fad7f">glfwGetMonitorUserPointer</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)
412 {
413 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
414 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
415 
416 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
417 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a5fa094f11e8c268223f4793899760e32">userPointer</link>;
418 }
419 
420 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<link linkend="_group__monitor_1gaabe16caca8dea952504dfdebdf4cd249">GLFWmonitorfun</link>&#32;<link linkend="_group__monitor_1ga9fa7cc37cd79216a7fc0b77af54109a1">glfwSetMonitorCallback</link>(<link linkend="_group__monitor_1gaabe16caca8dea952504dfdebdf4cd249">GLFWmonitorfun</link>&#32;cbfun)
421 {
422 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
423 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2internal_8h_1a6d781c3aa2be3c4fdb4b72fd1a7b15ad">_GLFW_SWAP_POINTERS</link>(<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5ee445bbec186953fd231517cb036c84">callbacks</link>.<link linkend="_struct___g_l_f_wlibrary_1acea278bb2641c36a371e9e715b7a8f9a">monitor</link>,&#32;cbfun);
424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cbfun;
425 }
426 
427 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="_group__monitor_1ga7eaea6132f15e9b5d47eb94f88547f79">glfwGetVideoModes</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)
428 {
429 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
430 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
431 &#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
432 
433 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;0;
434 
435 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
436 
437 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!refreshVideoModes(monitor))
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
439 
440 &#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a49766384d467b40c9bb362459761418f">modeCount</link>;
441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab0cde5f7efa4f40833d069c83d5af701">modes</link>;
442 }
443 
444 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="_group__monitor_1ga21f7f60de4f4d0fa360c7ad159b75c9e">glfwGetVideoMode</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)
445 {
446 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
447 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
448 
449 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
450 
451 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1ab8336e546a783459b673772b591ffacd">_glfwPlatformGetVideoMode</link>(monitor,&#32;&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab2a33bceb848570cca7b213fcddb9e84">currentMode</link>);
452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1ab2a33bceb848570cca7b213fcddb9e84">currentMode</link>;
453 }
454 
455 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1ga3e4ab484476c935b4cd0bf49a5c429d6">glfwSetGamma</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;gamma)
456 {
457 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
458 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>;
459 &#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>&#32;ramp;
460 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>*&#32;original;
461 &#32;&#32;&#32;&#32;assert(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
462 &#32;&#32;&#32;&#32;assert(gamma&#32;&gt;&#32;0.f);
463 &#32;&#32;&#32;&#32;assert(gamma&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2float_8h_1a7fbf1534f9e0f0bfdb86fb928902474c">FLT_MAX</link>);
464 
465 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
466 
467 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gamma&#32;!=&#32;gamma&#32;||&#32;gamma&#32;&lt;=&#32;0.f&#32;||&#32;gamma&#32;&gt;&#32;<link linkend="__classes_2lib_2include_2float_8h_1a7fbf1534f9e0f0bfdb86fb928902474c">FLT_MAX</link>)
468 &#32;&#32;&#32;&#32;{
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;gamma&#32;value&#32;%f&quot;</emphasis>,&#32;gamma);
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
471 &#32;&#32;&#32;&#32;}
472 
473 &#32;&#32;&#32;&#32;original&#32;=&#32;<link linkend="_group__monitor_1gafe7b41852c1a14fe978f0e5381969885">glfwGetGammaRamp</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>);
474 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!original)
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
476 
477 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>&#32;=&#32;calloc(original-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>));
478 
479 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;original-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>;&#32;&#32;i++)
480 &#32;&#32;&#32;&#32;{
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>;
482 
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;intensity</emphasis>
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;i&#32;/&#32;(float)&#32;(original-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;-&#32;1);
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;gamma&#32;curve</emphasis>
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;powf(<link linkend="_classvalue">value</link>,&#32;1.f&#32;/&#32;gamma)&#32;*&#32;65535.f&#32;+&#32;0.5f;
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clamp&#32;to&#32;value&#32;range</emphasis>
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1af27e3c452fbb2a7133339f77b72fcf37">_glfw_fminf</link>(<link linkend="_classvalue">value</link>,&#32;65535.f);
489 
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;short)&#32;<link linkend="_classvalue">value</link>;
491 &#32;&#32;&#32;&#32;}
492 
493 &#32;&#32;&#32;&#32;ramp.<link linkend="_struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd">red</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>;
494 &#32;&#32;&#32;&#32;ramp.<link linkend="_struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c">green</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>;
495 &#32;&#32;&#32;&#32;ramp.<link linkend="_struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a">blue</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>;
496 &#32;&#32;&#32;&#32;ramp.<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;=&#32;original-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>;
497 
498 &#32;&#32;&#32;&#32;<link linkend="_group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558">glfwSetGammaRamp</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;&amp;ramp);
499 &#32;&#32;&#32;&#32;free(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>);
500 }
501 
502 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>*&#32;<link linkend="_group__monitor_1gafe7b41852c1a14fe978f0e5381969885">glfwGetGammaRamp</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>)
503 {
504 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
505 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
506 
507 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
508 
509 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2monitor_8c_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link>(&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6761d674e05aecaf0cadf7e127f96d85">currentRamp</link>);
510 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1ac4bf2f5025cc6800bbe44615e5404c36">_glfwPlatformGetGammaRamp</link>(monitor,&#32;&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6761d674e05aecaf0cadf7e127f96d85">currentRamp</link>))
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
512 
513 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a6761d674e05aecaf0cadf7e127f96d85">currentRamp</link>;
514 }
515 
516 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__monitor_1gac9f36a1cfa10eab191d3029ea8bc9558">glfwSetGammaRamp</link>(<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>*&#32;ramp)
517 {
518 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a48fc485a2a8834589d1f1afeec65193c">handle</link>;
519 &#32;&#32;&#32;&#32;assert(monitor&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
520 &#32;&#32;&#32;&#32;assert(ramp&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
521 &#32;&#32;&#32;&#32;assert(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;&gt;&#32;0);
522 &#32;&#32;&#32;&#32;assert(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a87eabbc644cdb77145caf4a0a1b5d9bd">red</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
523 &#32;&#32;&#32;&#32;assert(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acea1bf88573f37cb0583a0fc005bbd0c">green</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
524 &#32;&#32;&#32;&#32;assert(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1abd4ac5a186d9c000b9313099898df32a">blue</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
525 
526 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;&lt;=&#32;0)
527 &#32;&#32;&#32;&#32;{
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Invalid&#32;gamma&#32;ramp&#32;size&#32;%i&quot;</emphasis>,
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
532 &#32;&#32;&#32;&#32;}
533 
534 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
535 
536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a64188202c44980245af7cb1ce9a24d44">originalRamp</link>.<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>)
537 &#32;&#32;&#32;&#32;{
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1ac4bf2f5025cc6800bbe44615e5404c36">_glfwPlatformGetGammaRamp</link>(monitor,&#32;&amp;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a64188202c44980245af7cb1ce9a24d44">originalRamp</link>))
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
540 &#32;&#32;&#32;&#32;}
541 
542 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glfw_2src_2cocoa__monitor_8m_1abcaf1fc34700bd62b558caccce3ab45b">_glfwPlatformSetGammaRamp</link>(monitor,&#32;ramp);
543 }
544 
</programlisting></section>
