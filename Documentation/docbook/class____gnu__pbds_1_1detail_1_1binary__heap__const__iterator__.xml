<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__" xml:lang="en-US">
<title>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary></indexterm>
<para>

<para>Const point-type iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;const_iterator.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator____inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator____coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6">binary_heap_const_iterator_</link> (entry_pointer p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e">binary_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624">binary_heap_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6">binary_heap_const_iterator_</link> (entry_pointer p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e">binary_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624">binary_heap_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6">binary_heap_const_iterator_</link> (entry_pointer p_e)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e">binary_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624">binary_heap_const_iterator_</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2">operator++</link> (int)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Value_Type, typename Entry, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</title></simplesect>

<para>Const point-type iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a8233f5369e1b6e60da547f7f1843e030"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a157eb231eb4380523a8b4f619829787e"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a74b080229c28726dcc2bf12ce54cfefe"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1aac3f2af936b4120fe980c2d7075dd6f4"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0907bb639cf9ac29dab204626ec12377"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1adc01f11049fc8b3283d60458c4e2d04f"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af7d6e44fa7c917f95357a470af816658"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (entry_pointer p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (entry_pointer p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ab4923edfeffc034e8899c72f1b4605f6"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (entry_pointer p_e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1af0a2dc25dbba85fcd249ab120194f33e"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae1e5c7467605a29e1268bd34dd84a624"/><section>
    <title>binary_heap_const_iterator_()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>binary_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>binary_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::binary_heap_const_iterator_ (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ade2fe116ea5d8252d04e3205d8a097f5"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___a0d7a47e93b02fe1d76e906da64e48d29_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a0d7a47e93b02fe1d76e906da64e48d29"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___ae95a62f51e7450de8c6d40ede35f0ad2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___ae95a62f51e7450de8c6d40ede35f0ad2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1ae95a62f51e7450de8c6d40ede35f0ad2"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___ae95a62f51e7450de8c6d40ede35f0ad2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator___1a49be997a654cf31a5688f876b3a0926b"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Value_Type , typename Entry , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Simple, typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link>&lt; Value_Type, Entry, Simple, _Alloc &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2const__iterator_8hpp">const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2const__iterator_8hpp">const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/binary_heap_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2const__iterator_8hpp">const_iterator.hpp</link></section>
</section>
