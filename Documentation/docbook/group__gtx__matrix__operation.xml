<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__matrix__operation" xml:lang="en-US">
<title>GLM_GTX_matrix_operation</title>
<indexterm><primary>GLM_GTX_matrix_operation</primary></indexterm>
Collaboration diagram for GLM_GTX_matrix_operation:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__operation.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga14b6d85caaf3f73ecfd112af21e43f4a">glm::diagonal2x2</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 3, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga2802f0ab40cb610a4db64cf94165f24d">glm::diagonal2x3</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 4, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1gaebc7ba0b970a5f3dcf7756260345c15d">glm::diagonal2x4</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 2, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga39a2995444790ddf5ce4ac86f65abc2d">glm::diagonal3x2</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1gab0776014f8dca4b93b82dd550811203b">glm::diagonal3x3</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 4, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga98c12a295cafa516c7ab5ef21a7dd3b4">glm::diagonal3x4</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 2, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga4401bb6a7ff65f5de907e899786d1876">glm::diagonal4x2</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 3, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga3aa5fe07f3d1f5273af3109ac4fd08a1">glm::diagonal4x3</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga0fb3fe6e9574daed7607107ce887a5d0">glm::diagonal4x4</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga369022e996273a05b051e632d5e77c02">glm::adjugate</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp;m)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1gab58d3085abe3c4da8b76801e829ac3b6">glm::adjugate</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__matrix__operation_1ga63250094b97153675e7e50615fdf643a">glm::adjugate</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/matrix_operation.hpp&gt; to use the features of this extension.</para>

<para>Build diagonal matrices from vectors. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__matrix__operation_1ga369022e996273a05b051e632d5e77c02"/><section>
    <title>adjugate()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>adjugate</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>adjugate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; glm::adjugate (<link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; const &amp; m)</computeroutput></para>
<para>Build an adjugate matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1gab58d3085abe3c4da8b76801e829ac3b6"/><section>
    <title>adjugate()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>adjugate</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>adjugate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::adjugate (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m)</computeroutput></para>
<para>Build an adjugate matrix. From GLM_GTX_matrix_operation extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__operation_gab58d3085abe3c4da8b76801e829ac3b6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga63250094b97153675e7e50615fdf643a"/><section>
    <title>adjugate()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>adjugate</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>adjugate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::adjugate (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m)</computeroutput></para>
<para>Build an adjugate matrix. From GLM_GTX_matrix_operation extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__operation_ga63250094b97153675e7e50615fdf643a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga14b6d85caaf3f73ecfd112af21e43f4a"/><section>
    <title>diagonal2x2()</title>
<indexterm><primary>diagonal2x2</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal2x2</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, Q &gt; glm::diagonal2x2 (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga2802f0ab40cb610a4db64cf94165f24d"/><section>
    <title>diagonal2x3()</title>
<indexterm><primary>diagonal2x3</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal2x3</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 3, T, Q &gt; glm::diagonal2x3 (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1gaebc7ba0b970a5f3dcf7756260345c15d"/><section>
    <title>diagonal2x4()</title>
<indexterm><primary>diagonal2x4</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal2x4</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 4, T, Q &gt; glm::diagonal2x4 (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga39a2995444790ddf5ce4ac86f65abc2d"/><section>
    <title>diagonal3x2()</title>
<indexterm><primary>diagonal3x2</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal3x2</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 2, T, Q &gt; glm::diagonal3x2 (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1gab0776014f8dca4b93b82dd550811203b"/><section>
    <title>diagonal3x3()</title>
<indexterm><primary>diagonal3x3</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal3x3</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::diagonal3x3 (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga98c12a295cafa516c7ab5ef21a7dd3b4"/><section>
    <title>diagonal3x4()</title>
<indexterm><primary>diagonal3x4</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal3x4</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 4, T, Q &gt; glm::diagonal3x4 (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga4401bb6a7ff65f5de907e899786d1876"/><section>
    <title>diagonal4x2()</title>
<indexterm><primary>diagonal4x2</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal4x2</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 2, T, Q &gt; glm::diagonal4x2 (<link linkend="_structglm_1_1vec">vec</link>&lt; 2, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga3aa5fe07f3d1f5273af3109ac4fd08a1"/><section>
    <title>diagonal4x3()</title>
<indexterm><primary>diagonal4x3</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal4x3</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 3, T, Q &gt; glm::diagonal4x3 (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
</section>
<anchor xml:id="_group__gtx__matrix__operation_1ga0fb3fe6e9574daed7607107ce887a5d0"/><section>
    <title>diagonal4x4()</title>
<indexterm><primary>diagonal4x4</primary><secondary>GLM_GTX_matrix_operation</secondary></indexterm>
<indexterm><primary>GLM_GTX_matrix_operation</primary><secondary>diagonal4x4</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::diagonal4x4 (<link linkend="_structglm_1_1vec">vec</link>&lt; 4, T, Q &gt; const &amp; v)</computeroutput></para>
<para>Build a diagonal matrix. From GLM_GTX_matrix_operation extension. </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__matrix__operation_ga0fb3fe6e9574daed7607107ce887a5d0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
