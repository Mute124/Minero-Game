<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2debug_2functions_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/debug/functions.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/debug/functions.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;bits/stl_function.h&gt;<?linebreak?>#include &lt;debug/helper_functions.h&gt;<?linebreak?>#include &lt;debug/formatter.h&gt;<?linebreak?></programlisting>Include dependency graph for functions.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2debug_2functions_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__debug_1_1___insert__range__from__self__is__safe">__gnu_debug::_Insert_range_from_self_is_safe&lt; _Sequence &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__debug_1_1___is__contiguous__sequence">__gnu_debug::_Is_contiguous_sequence&lt; _Sequence &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__debug">__gnu_debug</link></para>

<para>GNU debug classes for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _InputIterator &gt; </para><para>_InputIterator <link linkend="_namespace____gnu__debug_1ad59179a185c074a84904c8fd2f812f64">__gnu_debug::__check_valid_range</link> (const _InputIterator &amp;__first, const _InputIterator &amp;__last, const char *__file, unsigned int __line, const char *__function)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a751305fd2294c20ef62edf3f81a8c36a">__gnu_debug::__foreign_iterator_aux4</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, const typename _Sequence::value_type *__other)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1ae0ecc491d66e20a67340ec8b829729a8">__gnu_debug::__foreign_iterator_aux4</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;,...)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _InputIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a348ec2dc61e36a61b9f140258cef708a">__gnu_debug::__foreign_iterator_aux3</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, const _InputIterator &amp;__other, const _InputIterator &amp;__other_end, std::__true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _InputIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a32cc2dd37a4933b67b89d64b4e534134">__gnu_debug::__foreign_iterator_aux3</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;, const _InputIterator &amp;, const _InputIterator &amp;, std::__false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _OtherIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1abf375a8881d7ac42d203d4921c8432b2">__gnu_debug::__foreign_iterator_aux2</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _OtherIterator, _Sequence, _Category &gt; &amp;__other, const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _OtherIterator, _Sequence, _Category &gt; &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _OtherIterator , typename _OtherSequence , typename _OtherCategory &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a1d808d872be652bf205e370a2a3fd097">__gnu_debug::__foreign_iterator_aux2</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;, const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _OtherIterator, _OtherSequence, _OtherCategory &gt; &amp;, const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _OtherIterator, _OtherSequence, _OtherCategory &gt; &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _InputIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1aed7be38d3fd4b160a1afa8d983888a53">__gnu_debug::__foreign_iterator_aux2</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, const _InputIterator &amp;__other, const _InputIterator &amp;__other_end)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _Integral &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a3c62c796270c0807e359e192899b195d">__gnu_debug::__foreign_iterator_aux</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;, _Integral, _Integral, std::__true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _InputIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a8fff95c3b145cf87a5769a2348fb45e6">__gnu_debug::__foreign_iterator_aux</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, _InputIterator __other, _InputIterator __other_end, std::__false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence , typename _Category , typename _InputIterator &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1afc1f2fc793beaba993007c005a5524d4">__gnu_debug::__foreign_iterator</link> (const <link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator</link>&lt; _Iterator, _Sequence, _Category &gt; &amp;__it, _InputIterator __other, _InputIterator __other_end)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a74cd6dab5052e34e53fa39afcf85501e">__gnu_debug::__check_sorted_aux</link> (const _InputIterator &amp;, const _InputIterator &amp;, std::input_iterator_tag)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a6c16469d4ca2cb54ea48903ebbf7ef99">__gnu_debug::__check_sorted_aux</link> (_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1acc7a303af601deb92445f7dffc37cdf8">__gnu_debug::__check_sorted_aux</link> (const _InputIterator &amp;, const _InputIterator &amp;, _Predicate, std::input_iterator_tag)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a2107629f8fc6b6f0273641ac62a1575f">__gnu_debug::__check_sorted_aux</link> (_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, std::forward_iterator_tag)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a057953c09e8c69805993f15d4179e28f">__gnu_debug::__check_sorted</link> (const _InputIterator &amp;__first, const _InputIterator &amp;__last)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a1e89e48e09629a3aab1c8677ce058c36">__gnu_debug::__check_sorted</link> (const _InputIterator &amp;__first, const _InputIterator &amp;__last, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a1a63d867aaca079b068ac6935533a82a">__gnu_debug::__check_sorted_set_aux</link> (const _InputIterator &amp;__first, const _InputIterator &amp;__last, std::__true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a4327661d00ab0e9873cf43da00748825">__gnu_debug::__check_sorted_set_aux</link> (const _InputIterator &amp;, const _InputIterator &amp;, std::__false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a0197e77bdc60187c0be5f1c0528013ad">__gnu_debug::__check_sorted_set_aux</link> (const _InputIterator &amp;__first, const _InputIterator &amp;__last, _Predicate __pred, std::__true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a0f74fc5c25e29222dc5492c83ecbaa27">__gnu_debug::__check_sorted_set_aux</link> (const _InputIterator &amp;, const _InputIterator &amp;, _Predicate, std::__false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator1 , typename _InputIterator2 &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a5418e32aa0769e428659329219dec2c6">__gnu_debug::__check_sorted_set</link> (const _InputIterator1 &amp;__first, const _InputIterator1 &amp;__last, const _InputIterator2 &amp;)</para>
</listitem>
            <listitem><para>template&lt;typename _InputIterator1 , typename _InputIterator2 , typename _Predicate &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1ac35cc9bc80fa42387b8d557f72b1eee8">__gnu_debug::__check_sorted_set</link> (const _InputIterator1 &amp;__first, const _InputIterator1 &amp;__last, const _InputIterator2 &amp;, _Predicate __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _Tp &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a46f0279f9f405bcbb8c9d0466cb0ca52">__gnu_debug::__check_partitioned_lower</link> (_ForwardIterator __first, _ForwardIterator __last, const _Tp &amp;__value)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _Tp &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1acc1ad9ee2fe652d6e2821050e936e179">__gnu_debug::__check_partitioned_upper</link> (_ForwardIterator __first, _ForwardIterator __last, const _Tp &amp;__value)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _Tp , typename _Pred &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1afc8147dfac4dad9ef38f6ab8bdf78d33">__gnu_debug::__check_partitioned_lower</link> (_ForwardIterator __first, _ForwardIterator __last, const _Tp &amp;__value, _Pred __pred)</para>
</listitem>
            <listitem><para>template&lt;typename _ForwardIterator , typename _Tp , typename _Pred &gt; </para><para>_GLIBCXX20_CONSTEXPR <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a5dd04442037e39dc7e4ef8bba0e9daba">__gnu_debug::__check_partitioned_upper</link> (_ForwardIterator __first, _ForwardIterator __last, const _Tp &amp;__value, _Pred __pred)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
