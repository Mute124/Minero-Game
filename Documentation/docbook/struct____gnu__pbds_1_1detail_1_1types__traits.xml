<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits" xml:lang="en-US">
<title>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary></indexterm>
<para>

<para>Traits for abstract types. </para>
 
</para>
<para>
<computeroutput>#include &lt;types_traits.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1types__traits__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__pbds_1_1detail_1_1types__traits__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt; Key, Mapped &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link></para>
</listitem>
            <listitem><para>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1">key_type</link></para>
</listitem>
            <listitem><para>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a">mapped_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b">mapped_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c">mapped_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822">mapped_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9">mapped_const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865">const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97">stored_data_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317">key_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f">key_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8">key_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12">comp_hash</link></para>
</listitem>
            <listitem><para>typedef integral_constant&lt; int, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link></para>
</listitem>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt; Key, Mapped &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link></para>
</listitem>
            <listitem><para>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1">key_type</link></para>
</listitem>
            <listitem><para>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a">mapped_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b">mapped_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c">mapped_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822">mapped_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9">mapped_const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865">const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97">stored_data_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317">key_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f">key_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8">key_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12">comp_hash</link></para>
</listitem>
            <listitem><para>typedef integral_constant&lt; int, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link></para>
</listitem>
            <listitem><para>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt; Key, Mapped &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link></para>
</listitem>
            <listitem><para>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1">key_type</link></para>
</listitem>
            <listitem><para>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a">mapped_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b">mapped_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c">mapped_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822">mapped_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9">mapped_const_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696">pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865">const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac">reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97">stored_data_type</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317">key_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f">key_const_pointer</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8">key_reference</link></para>
</listitem>
            <listitem><para>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::pair&lt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link> &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12">comp_hash</link></para>
</listitem>
            <listitem><para>typedef integral_constant&lt; int, Store_Hash &gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1ac4e3debe972638accf65af610836e2ce">m_store_extra_indicator</link></para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1ae2ece2ba8144262a9baa0d188a48b0ae">m_no_throw_copies_indicator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Key, typename Mapped, typename _Alloc, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt;<?linebreak?>struct __gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</title></simplesect>

<para>Traits for abstract types. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12"/><section>
    <title>comp_hash<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>comp_hash</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>comp_hash</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef std::pair&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::comp_hash</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12"/><section>
    <title>comp_hash<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>comp_hash</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>comp_hash</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef std::pair&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::comp_hash</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6f92c4ca956cf1e7dad255a4cf185e12"/><section>
    <title>comp_hash<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>comp_hash</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>comp_hash</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef std::pair&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::comp_hash</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a976dfa7b29ca696574843ad2b2ff9865"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6c20057298e16a098d4ab4afd3847bb5"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f"/><section>
    <title>key_const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f"/><section>
    <title>key_const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a0619dacd91c6b29f6d60b2949cfea31f"/><section>
    <title>key_const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aca6c6662a89225eb56209a8b0b70553b"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317"/><section>
    <title>key_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317"/><section>
    <title>key_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a32563d2393bbcf472ddbaa2162d37317"/><section>
    <title>key_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8"/><section>
    <title>key_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8"/><section>
    <title>key_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a5fcccd261b999e877f2d419a2728c8a8"/><section>
    <title>key_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ka::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1abed71897bd4b8df7c76f0879c19feac1"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>key_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Key <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::key_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c"/><section>
    <title>mapped_const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>mapped_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c"/><section>
    <title>mapped_const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>mapped_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa8d66a0f78410be23fdcd76cfaa8605c"/><section>
    <title>mapped_const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>mapped_const_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9"/><section>
    <title>mapped_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>mapped_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9"/><section>
    <title>mapped_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>mapped_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af217c074c07da6e2e26b8fd793a034a9"/><section>
    <title>mapped_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>mapped_const_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::const_reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_const_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b"/><section>
    <title>mapped_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>mapped_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b"/><section>
    <title>mapped_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>mapped_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1223608a6b4f7100d23b2789e835552b"/><section>
    <title>mapped_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>mapped_pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_pointer</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822"/><section>
    <title>mapped_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>mapped_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822"/><section>
    <title>mapped_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>mapped_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1af3d6fa7ead8b90d5c684f68462773822"/><section>
    <title>mapped_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>mapped_reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_ma::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a"/><section>
    <title>mapped_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>mapped_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a"/><section>
    <title>mapped_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>mapped_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a320b31cccd4a44f449adeebb3f71180a"/><section>
    <title>mapped_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>mapped_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>mapped_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef Mapped <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::mapped_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663"/><section>
    <title>no_throw_indicator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>no_throw_indicator</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>no_throw_indicator</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::no_throw_indicator</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663"/><section>
    <title>no_throw_indicator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>no_throw_indicator</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>no_throw_indicator</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::no_throw_indicator</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663"/><section>
    <title>no_throw_indicator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>no_throw_indicator</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>no_throw_indicator</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_1a20532b0131fcd8d5355a2cb9e8562db9">__nothrowcopy::indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::no_throw_indicator</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a6b358c02e3544433a4344688c9551696"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::pointer <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a2007d0bc98e66e2984065ecea53465ac"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef __rebind_va::reference <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::reference</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef _Alloc::size_type <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b"/><section>
    <title>store_extra<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>store_extra</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>store_extra</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef integral_constant&lt;int, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::store_extra</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b"/><section>
    <title>store_extra<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>store_extra</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>store_extra</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef integral_constant&lt;int, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::store_extra</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b"/><section>
    <title>store_extra<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>store_extra</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>store_extra</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef integral_constant&lt;int, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::store_extra</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97"/><section>
    <title>stored_data_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>stored_data_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>stored_data_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::stored_data_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97"/><section>
    <title>stored_data_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>stored_data_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>stored_data_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::stored_data_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1a52738fb182a8d3923a6885cc6783bc97"/><section>
    <title>stored_data_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>stored_data_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>stored_data_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link>&lt;<link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d">value_type</link>, <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1aa87ac60217111c9a3a2517f50628f7e7">size_type</link>, Store_Hash&gt; <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::stored_data_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt;Key,Mapped&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt;Key,Mapped&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1acf98c048d5518899d3f3489f27d8066d"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link>&lt;Key,Mapped&gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1ae2ece2ba8144262a9baa0d188a48b0ae"/><section>
    <title>m_no_throw_copies_indicator</title>
<indexterm><primary>m_no_throw_copies_indicator</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>m_no_throw_copies_indicator</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a1fd2c21995592afc8eae0ab1ac7ef663">no_throw_indicator</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::m_no_throw_copies_indicator</computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1detail_1_1types__traits_1ac4e3debe972638accf65af610836e2ce"/><section>
    <title>m_store_extra_indicator</title>
<indexterm><primary>m_store_extra_indicator</primary><secondary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</primary><secondary>m_store_extra_indicator</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , typename _Alloc , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Store_Hash&gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits_1a852c173d13089e7ed2e50ba31e5e6b5b">store_extra</link> <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits</link>&lt; Key, Mapped, _Alloc, Store_Hash &gt;::m_store_extra_indicator</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp">types_traits.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp">types_traits.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2types__traits_8hpp">types_traits.hpp</link></section>
</section>
