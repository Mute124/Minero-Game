<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy" xml:lang="en-US">
<title>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary></indexterm>
<para>

<para>A resize policy which delegates operations to size and trigger policies. </para>
 
</para>
<para>
<computeroutput>#include &lt;hash_policy.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1hash__standard__resize__policy__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1hash__standard__resize__policy__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009">external_size_access</link> = External_Size_Access
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009">external_size_access</link> = External_Size_Access
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009">external_size_access</link> = External_Size_Access
 }</para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link></para>
</listitem>
            <listitem><para>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa">trigger_policy</link></para>
</listitem>
            <listitem><para>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4">size_policy</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link></para>
</listitem>
            <listitem><para>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa">trigger_policy</link></para>
</listitem>
            <listitem><para>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4">size_policy</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link></para>
</listitem>
            <listitem><para>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa">trigger_policy</link></para>
</listitem>
            <listitem><para>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4">size_policy</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Public Types inherited from <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</link>        <itemizedlist>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link></para>
</listitem>
        </itemizedlist>
Public Types inherited from <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">__gnu_pbds::hash_load_check_resize_trigger&lt; External_Load_Access, Size_Type &gt;</link>        <itemizedlist>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ae3b4c8cc019ac476199f0f66b80afdb6aa019cba1dcaba30ba1049fc462adab77">external_load_access</link> = External_Load_Access
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ae3b4c8cc019ac476199f0f66b80afdb6aa019cba1dcaba30ba1049fc462adab77">external_load_access</link> = External_Load_Access
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ae3b4c8cc019ac476199f0f66b80afdb6aa019cba1dcaba30ba1049fc462adab77">external_load_access</link> = External_Load_Access
 }</para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link></para>
</listitem>
            <listitem><para>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link></para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3">hash_standard_resize_policy</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy, const Trigger_Policy &amp;r_trigger_policy)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152">~hash_standard_resize_policy</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a">get_size_policy</link> ()</para>

<para>Access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9">get_size_policy</link> () const</para>

<para>Const access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1">get_trigger_policy</link> ()</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b">get_trigger_policy</link> () const</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf">get_actual_size</link> () const</para>

<para>Returns the actual size of the container. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2">resize</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3">hash_standard_resize_policy</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy, const Trigger_Policy &amp;r_trigger_policy)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152">~hash_standard_resize_policy</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a">get_size_policy</link> ()</para>

<para>Access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9">get_size_policy</link> () const</para>

<para>Const access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1">get_trigger_policy</link> ()</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b">get_trigger_policy</link> () const</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf">get_actual_size</link> () const</para>

<para>Returns the actual size of the container. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2">resize</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3">hash_standard_resize_policy</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119">hash_standard_resize_policy</link> (const Size_Policy &amp;r_size_policy, const Trigger_Policy &amp;r_trigger_policy)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152">~hash_standard_resize_policy</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a">get_size_policy</link> ()</para>

<para>Access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9">get_size_policy</link> () const</para>

<para>Const access to the Size_Policy object used. </para>
</listitem>
            <listitem><para>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1">get_trigger_policy</link> ()</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b">get_trigger_policy</link> () const</para>

<para>Access to the Trigger_Policy object used. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf">get_actual_size</link> () const</para>

<para>Returns the actual size of the container. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2">resize</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1afaa82af641851bf662b2cf2f60ea1eb9">hash_exponential_size_policy</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> start_size=8, <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> grow_factor=2)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a00509d52c8d945020d11e1dcca03a1b9">swap</link> (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">__gnu_pbds::hash_load_check_resize_trigger&lt; External_Load_Access, Size_Type &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1af5404477bbd9dca79da25daf6bd77592">hash_load_check_resize_trigger</link> (float load_min=0.125, float load_max=0.5)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1adad5100ba76ddd2d553e8eaf3997e8a5">swap</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">hash_load_check_resize_trigger</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a8e323998793759f3216713e01ee8c28f">~hash_load_check_resize_trigger</link> ()</para>
</listitem>
            <listitem><para>std::pair&lt; float, float &gt; <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a81fa82cbe3d7c6eab0febcba7f31a4d2">get_loads</link> () const</para>

<para>Returns a pair of the minimal and maximal loads, respectively. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a5dba0dabb39ff7313a02f51b1bfefe24">set_loads</link> (std::pair&lt; float, float &gt; load_pair)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1af5404477bbd9dca79da25daf6bd77592">hash_load_check_resize_trigger</link> (float load_min=0.125, float load_max=0.5)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1adad5100ba76ddd2d553e8eaf3997e8a5">swap</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">hash_load_check_resize_trigger</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a8e323998793759f3216713e01ee8c28f">~hash_load_check_resize_trigger</link> ()</para>
</listitem>
            <listitem><para>std::pair&lt; float, float &gt; <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a81fa82cbe3d7c6eab0febcba7f31a4d2">get_loads</link> () const</para>

<para>Returns a pair of the minimal and maximal loads, respectively. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a5dba0dabb39ff7313a02f51b1bfefe24">set_loads</link> (std::pair&lt; float, float &gt; load_pair)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1af5404477bbd9dca79da25daf6bd77592">hash_load_check_resize_trigger</link> (float load_min=0.125, float load_max=0.5)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1adad5100ba76ddd2d553e8eaf3997e8a5">swap</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">hash_load_check_resize_trigger</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a8e323998793759f3216713e01ee8c28f">~hash_load_check_resize_trigger</link> ()</para>
</listitem>
            <listitem><para>std::pair&lt; float, float &gt; <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a81fa82cbe3d7c6eab0febcba7f31a4d2">get_loads</link> () const</para>

<para>Returns a pair of the minimal and maximal loads, respectively. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a5dba0dabb39ff7313a02f51b1bfefe24">set_loads</link> (std::pair&lt; float, float &gt; load_pair)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5">notify_cleared</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd">get_new_size</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5">notify_cleared</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd">get_new_size</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5">notify_cleared</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd">get_new_size</link> (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Member Functions inherited from <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a014d7a181ee23dce2e7e080dfc719e60">get_nearest_larger_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5af7570651220b1902f50cd9a0e31216">get_nearest_smaller_size</link> (<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy_1a5eb89dd5b3edf1987accc5787b43b4d6">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>) const</para>
</listitem>
        </itemizedlist>
Protected Member Functions inherited from <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">__gnu_pbds::hash_load_check_resize_trigger&lt; External_Load_Access, Size_Type &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ac4fa09c9f734c2288de0a0b8d661a8e7">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1aba2f80b07071cf80a4f4e7615d3495c6">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a3fdda9fd32513c3fc94b5cdfac26e3bf">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a21335464e6c3f49e00ee120f56572367">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a13dbf0fc725d4f73cbd5fd577cc709b4">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a9aa3036fe447f1292c48327abbe87f5b">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a16f4b501109711ceedee29f6ff5e04a4">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a031bbb804dd718c127cb8a54577613fb">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ad0283006cc8b358f9ee79b5b4a87c1e1">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a6389dcb57ad2dc82804a7dbf32d96fc8">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a56848ffd07edfea8452fb7b199dcae42">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a4c92b235ca2dcda57fe3d4cee1afb48b">notify_cleared</link> ()</para>

<para>Notifies the table was cleared. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a027d59f653ccc3272bb94540164bfd77">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a71b06de31989feead687b088884abe41">notify_externally_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a211d714166aa4a6b12dd530f20c8c8b4">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a95b166b26a761188b7ba90da8341f4c3">is_grow_needed</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ac4fa09c9f734c2288de0a0b8d661a8e7">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1aba2f80b07071cf80a4f4e7615d3495c6">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a3fdda9fd32513c3fc94b5cdfac26e3bf">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a21335464e6c3f49e00ee120f56572367">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a13dbf0fc725d4f73cbd5fd577cc709b4">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a9aa3036fe447f1292c48327abbe87f5b">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a16f4b501109711ceedee29f6ff5e04a4">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a031bbb804dd718c127cb8a54577613fb">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ad0283006cc8b358f9ee79b5b4a87c1e1">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a6389dcb57ad2dc82804a7dbf32d96fc8">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a56848ffd07edfea8452fb7b199dcae42">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a4c92b235ca2dcda57fe3d4cee1afb48b">notify_cleared</link> ()</para>

<para>Notifies the table was cleared. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a027d59f653ccc3272bb94540164bfd77">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a71b06de31989feead687b088884abe41">notify_externally_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a211d714166aa4a6b12dd530f20c8c8b4">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a95b166b26a761188b7ba90da8341f4c3">is_grow_needed</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ac4fa09c9f734c2288de0a0b8d661a8e7">notify_insert_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1aba2f80b07071cf80a4f4e7615d3495c6">notify_insert_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a3fdda9fd32513c3fc94b5cdfac26e3bf">notify_insert_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a21335464e6c3f49e00ee120f56572367">notify_find_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a13dbf0fc725d4f73cbd5fd577cc709b4">notify_find_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a9aa3036fe447f1292c48327abbe87f5b">notify_find_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a16f4b501109711ceedee29f6ff5e04a4">notify_erase_search_start</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a031bbb804dd718c127cb8a54577613fb">notify_erase_search_collision</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ad0283006cc8b358f9ee79b5b4a87c1e1">notify_erase_search_end</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a6389dcb57ad2dc82804a7dbf32d96fc8">notify_inserted</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a56848ffd07edfea8452fb7b199dcae42">notify_erased</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a4c92b235ca2dcda57fe3d4cee1afb48b">notify_cleared</link> ()</para>

<para>Notifies the table was cleared. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a027d59f653ccc3272bb94540164bfd77">notify_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a71b06de31989feead687b088884abe41">notify_externally_resized</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> new_size)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a211d714166aa4a6b12dd530f20c8c8b4">is_resize_needed</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1a95b166b26a761188b7ba90da8341f4c3">is_grow_needed</link> (<link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger_1ab91fcad03de831e32d2ceba42ab9893c">size_type</link> num_entries) const</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Size_Policy = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type = std::size_t&gt;<?linebreak?>class __gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</title></simplesect>

<para>A resize policy which delegates operations to size and trigger policies. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4"/><section>
    <title>size_policy<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4"/><section>
    <title>size_policy<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a005b9db248419f0e050380f701c270d4"/><section>
    <title>size_policy<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>size_type</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Size_Type <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::size_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa"/><section>
    <title>trigger_policy<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::trigger_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa"/><section>
    <title>trigger_policy<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::trigger_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a467bae98cccab9d55d45eed0a4a847aa"/><section>
    <title>trigger_policy<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>typedef Trigger_Policy <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::trigger_policy</computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>external_size_access</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>external_size_access</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009"/>external_size_access</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4232e5663f85474808d78f25ad34d912"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>external_size_access</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>external_size_access</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009"/>external_size_access</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a3c31c2e44a2ccf77e86a108bfa2c1eab"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>external_size_access</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>external_size_access</secondary></indexterm>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a2164ac85b7410fa687ba5f80273e1c81ab93f8d14283fe7f77f5a46dd7f82d009"/>external_size_access</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy)</computeroutput></para>
<para>constructor taking some policies r_size_policy will be copied by the Size_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy, const Trigger_Policy &amp; r_trigger_policy)</computeroutput></para>
<para>constructor taking some policies. r_size_policy will be copied by the Size_Policy object of this object. r_trigger_policy will be copied by the Trigger_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152"/><section>
    <title>~hash_standard_resize_policy()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>~hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::~<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">hash_standard_resize_policy</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy)</computeroutput></para>
<para>constructor taking some policies r_size_policy will be copied by the Size_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy, const Trigger_Policy &amp; r_trigger_policy)</computeroutput></para>
<para>constructor taking some policies. r_size_policy will be copied by the Size_Policy object of this object. r_trigger_policy will be copied by the Trigger_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152"/><section>
    <title>~hash_standard_resize_policy()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>~hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::~<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">hash_standard_resize_policy</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1adecad428987dfd07cf4df9aa49a25dc3"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aba05ccfca9dd3a44f331377bd7cc2c42"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy)</computeroutput></para>
<para>constructor taking some policies r_size_policy will be copied by the Size_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8f0e49859d29501c85eacf73af545119"/><section>
    <title>hash_standard_resize_policy()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::hash_standard_resize_policy (const Size_Policy &amp; r_size_policy, const Trigger_Policy &amp; r_trigger_policy)</computeroutput></para>
<para>constructor taking some policies. r_size_policy will be copied by the Size_Policy object of this object. r_trigger_policy will be copied by the Trigger_Policy object of this object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa725e20173328d8dd5d9a5f714c36152"/><section>
    <title>~hash_standard_resize_policy()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~hash_standard_resize_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>~hash_standard_resize_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::~<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">hash_standard_resize_policy</link> ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf"/><section>
    <title>get_actual_size()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_actual_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_actual_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_actual_size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Returns the actual size of the container. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf"/><section>
    <title>get_actual_size()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_actual_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_actual_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_actual_size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Returns the actual size of the container. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab1e873de0a82024f07b44a0854a17ddf"/><section>
    <title>get_actual_size()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_actual_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_actual_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_actual_size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Returns the actual size of the container. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd"/><section>
    <title>get_new_size()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_new_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_new_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_new_size (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> size, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Queries what the new size should be, when the container is resized naturally. The current __size of the container is size, and the number of used entries within the container is num_used_e. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd"/><section>
    <title>get_new_size()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_new_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_new_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_new_size (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> size, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Queries what the new size should be, when the container is resized naturally. The current __size of the container is size, and the number of used entries within the container is num_used_e. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a59607830af324861fac594baff5bfdcd"/><section>
    <title>get_new_size()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_new_size</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_new_size</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_new_size (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> size, <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_used_e) const<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Queries what the new size should be, when the container is resized naturally. The current __size of the container is size, and the number of used entries within the container is num_used_e. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a"/><section>
    <title>get_size_policy()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( )</computeroutput></para><para>

<para>Access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a"/><section>
    <title>get_size_policy()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( )</computeroutput></para><para>

<para>Access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85ef6c33782f4a5e1e7fd2921d010e1a"/><section>
    <title>get_size_policy()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( )</computeroutput></para><para>

<para>Access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9"/><section>
    <title>get_size_policy()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( ) const</computeroutput></para><para>

<para>Const access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9"/><section>
    <title>get_size_policy()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( ) const</computeroutput></para><para>

<para>Const access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1acbf933ac9a8d4356949207fa762ad9e9"/><section>
    <title>get_size_policy()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>get_size_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_size_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Size_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_size_policy ( ) const</computeroutput></para><para>

<para>Const access to the Size_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1"/><section>
    <title>get_trigger_policy()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( )</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1"/><section>
    <title>get_trigger_policy()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( )</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab897e097208419985aaba8fa685f7af1"/><section>
    <title>get_trigger_policy()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( )</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b"/><section>
    <title>get_trigger_policy()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( ) const</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b"/><section>
    <title>get_trigger_policy()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( ) const</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1ab98dda215945468c1fae60ccd9253f8b"/><section>
    <title>get_trigger_policy()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>get_trigger_policy</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>get_trigger_policy</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput>const Trigger_Policy &amp; <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::get_trigger_policy ( ) const</computeroutput></para><para>

<para>Access to the Trigger_Policy object used. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65"/><section>
    <title>is_resize_needed()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>is_resize_needed</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>is_resize_needed</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::is_resize_needed ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65"/><section>
    <title>is_resize_needed()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>is_resize_needed</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>is_resize_needed</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::is_resize_needed ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a249a7b8b985cdbe402fdd7de9e15fa65"/><section>
    <title>is_resize_needed()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>is_resize_needed</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>is_resize_needed</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::is_resize_needed ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5"/><section>
    <title>notify_cleared()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_cleared</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_cleared</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_cleared ( )<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5"/><section>
    <title>notify_cleared()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_cleared</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_cleared</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_cleared ( )<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0d68c8522bd65aa20aaaa0caef387cb5"/><section>
    <title>notify_cleared()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_cleared</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_cleared</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_cleared ( )<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a"/><section>
    <title>notify_erase_search_collision()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a"/><section>
    <title>notify_erase_search_collision()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a8024fc3e3c963f20b21ca7b144a48b2a"/><section>
    <title>notify_erase_search_collision()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a"/><section>
    <title>notify_erase_search_end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a"/><section>
    <title>notify_erase_search_end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a43fa1ca48a330409b56ef66a7f728d5a"/><section>
    <title>notify_erase_search_end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96"/><section>
    <title>notify_erase_search_start()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96"/><section>
    <title>notify_erase_search_start()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a1ad6075bf4a2aed7b5ac8b37cb17ea96"/><section>
    <title>notify_erase_search_start()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_erase_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erase_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erase_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0"/><section>
    <title>notify_erased()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_erased</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erased</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erased (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0"/><section>
    <title>notify_erased()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_erased</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erased</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erased (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a85a1743d67b2c1e62a6f4662004d00b0"/><section>
    <title>notify_erased()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_erased</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_erased</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_erased (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3"/><section>
    <title>notify_find_search_collision()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_find_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3"/><section>
    <title>notify_find_search_collision()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_find_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a676f441c75f8316e37af747ea476bdb3"/><section>
    <title>notify_find_search_collision()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_find_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1"/><section>
    <title>notify_find_search_end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_find_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1"/><section>
    <title>notify_find_search_end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_find_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa9a83d25b41399b9a7e165ce2d2ebdf1"/><section>
    <title>notify_find_search_end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_find_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff"/><section>
    <title>notify_find_search_start()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_find_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff"/><section>
    <title>notify_find_search_start()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_find_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a136ce5ea0d4cb4528b5d8ead912b09ff"/><section>
    <title>notify_find_search_start()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_find_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_find_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_find_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c"/><section>
    <title>notify_insert_search_collision()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c"/><section>
    <title>notify_insert_search_collision()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a856e5cbd1d5aa9666a3359756d143c0c"/><section>
    <title>notify_insert_search_collision()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_collision</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_collision</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_collision ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2"/><section>
    <title>notify_insert_search_end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2"/><section>
    <title>notify_insert_search_end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a23b854ff97f1e0800a44b2b41adb49e2"/><section>
    <title>notify_insert_search_end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_end</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_end</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_end ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29"/><section>
    <title>notify_insert_search_start()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29"/><section>
    <title>notify_insert_search_start()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4795705e1b9a658e88e18fc448b52d29"/><section>
    <title>notify_insert_search_start()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_insert_search_start</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_insert_search_start</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_insert_search_start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d"/><section>
    <title>notify_inserted()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_inserted</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_inserted</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_inserted (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d"/><section>
    <title>notify_inserted()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_inserted</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_inserted</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_inserted (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a0053be28e62bdbdbc3b25126c3b3da8d"/><section>
    <title>notify_inserted()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_inserted</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_inserted</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_inserted (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> num_e)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65"/><section>
    <title>notify_resized()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>notify_resized</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_resized</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_resized (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65"/><section>
    <title>notify_resized()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>notify_resized</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_resized</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_resized (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a195c2ee31a20e3a09fbf40cc6bb93e65"/><section>
    <title>notify_resized()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>notify_resized</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>notify_resized</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::notify_resized (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> new_size)<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2"/><section>
    <title>resize()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>resize</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>resize</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::resize (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</computeroutput></para>
<para>Resizes the container to suggested_new_size, a suggested size (the actual size will be determined by the Size_Policy object). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2"/><section>
    <title>resize()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>resize</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>resize</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::resize (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</computeroutput></para>
<para>Resizes the container to suggested_new_size, a suggested size (the actual size will be determined by the Size_Policy object). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1aa602ba7bfa4925ea84591734c68d49e2"/><section>
    <title>resize()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>resize</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>resize</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::resize (<link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy_1ae716ba9c592311481b68746a4e10a154">size_type</link> suggested_new_size)</computeroutput></para>
<para>Resizes the container to suggested_new_size, a suggested size (the actual size will be determined by the Size_Policy object). </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1hash__standard__resize__policy_1a4e287e1cf616b0fc055661b7d997cad6"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Size_Policy  = hash_exponential_size_policy&lt;&gt;, typename Trigger_Policy  = hash_load_check_resize_trigger&lt;&gt;, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> External_Size_Access = false, typename Size_Type  = std::size_t&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy</link>&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;::swap (<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2hash__policy_8hpp">hash_policy.hpp</link></section>
</section>
