<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structnlohmann_1_1detail_1_1to__json__fn" xml:lang="en-US">
<title>nlohmann::detail::to_json_fn Struct Reference</title>
<indexterm><primary>nlohmann::detail::to_json_fn</primary></indexterm>
<para>
<computeroutput>#include &lt;json.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename BasicJsonType , typename T &gt; </para><para>auto <link linkend="_structnlohmann_1_1detail_1_1to__json__fn_1aecfb5114c8a737fc89d98589482795b8">operator()</link> (BasicJsonType &amp;j, T &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>) const noexcept(noexcept(<link linkend="_namespacenlohmann_1_1detail_1a1a804b98cbe89b7e44b698f2ca860490">to_json</link>(j, std::forward&lt; T &gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)))) -&gt; decltype(<link linkend="_namespacenlohmann_1_1detail_1a1a804b98cbe89b7e44b698f2ca860490">to_json</link>(j, std::forward&lt; T &gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)), <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>())</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structnlohmann_1_1detail_1_1to__json__fn_1aecfb5114c8a737fc89d98589482795b8"/><section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>nlohmann::detail::to_json_fn</secondary></indexterm>
<indexterm><primary>nlohmann::detail::to_json_fn</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename BasicJsonType , typename T &gt; </computeroutput><para><computeroutput>auto nlohmann::detail::to_json_fn::operator() (BasicJsonType &amp; j, T &amp;&amp; val) const -&gt; decltype(<link linkend="_namespacenlohmann_1_1detail_1a1a804b98cbe89b7e44b698f2ca860490">to_json</link>(j, std::forward&lt;T&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>)), <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>())
    <computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structnlohmann_1_1detail_1_1to__json__fn_aecfb5114c8a737fc89d98589482795b8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/vendor/<link linkend="_json_8hpp">json.hpp</link></section>
</section>
