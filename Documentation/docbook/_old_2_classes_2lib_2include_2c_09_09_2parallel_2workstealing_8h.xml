<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2workstealing_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/workstealing.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/workstealing.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;parallel/parallel.h&gt;<?linebreak?>#include &lt;parallel/random_number.h&gt;<?linebreak?>#include &lt;parallel/compatibility.h&gt;<?linebreak?></programlisting>Include dependency graph for workstealing.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2parallel_2workstealing_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1___job">__gnu_parallel::_Job&lt; _DifferenceTp &gt;</link></para>

<para>One __job for a certain thread. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2workstealing_8h_1ae0a7e9b4ffa5ebc25140207d4e834163">_GLIBCXX_JOB_VOLATILE</link>&#160;&#160;&#160;volatile</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _RAIter , typename _Op , typename _Fu , typename _Red , typename _Result &gt; </para><para>_Op <link linkend="_namespace____gnu__parallel_1a14bdca2e9c62cde7dd8478d972f60272">__gnu_parallel::__for_each_template_random_access_workstealing</link> (_RAIter __begin, _RAIter __end, _Op __op, _Fu &amp;__f, _Red __r, _Result __base, _Result &amp;__output, typename std::iterator_traits&lt; _RAIter &gt;::difference_type __bound)</para>

<para>Work stealing algorithm for random access iterators. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2workstealing_8h_1ae0a7e9b4ffa5ebc25140207d4e834163"/><section>
    <title>_GLIBCXX_JOB_VOLATILE</title>
<indexterm><primary>_GLIBCXX_JOB_VOLATILE</primary><secondary>workstealing.h</secondary></indexterm>
<indexterm><primary>workstealing.h</primary><secondary>_GLIBCXX_JOB_VOLATILE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_JOB_VOLATILE&#160;&#160;&#160;volatile</computeroutput></para></section>
</section>
</section>
