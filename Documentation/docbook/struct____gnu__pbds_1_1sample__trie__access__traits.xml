<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits" xml:lang="en-US">
<title>__gnu_pbds::sample_trie_access_traits Struct Reference</title>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary></indexterm>
<para>

<para>A sample trie element access traits. </para>
 
</para>
<para>
<computeroutput>#include &lt;sample_trie_access_traits.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3">max_size</link> = 4
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3">max_size</link> = 4
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3">max_size</link> = 4
 }</para>
</listitem>
            <listitem><para>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link></para>
</listitem>
            <listitem><para>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link></para>
</listitem>
            <listitem><para>typedef rebind_traits&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link></para>
</listitem>
            <listitem><para>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link></para>

<para>Element type. </para>
</listitem>
            <listitem><para>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link></para>
</listitem>
            <listitem><para>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link></para>
</listitem>
            <listitem><para>typedef rebind_traits&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link></para>
</listitem>
            <listitem><para>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link></para>

<para>Element type. </para>
</listitem>
            <listitem><para>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link></para>
</listitem>
            <listitem><para>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link></para>
</listitem>
            <listitem><para>typedef rebind_traits&lt; _Alloc, <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link> &gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link></para>
</listitem>
            <listitem><para>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link></para>
</listitem>
            <listitem><para>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link></para>

<para>Element type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0">begin</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the first element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52">end</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link>)</para>

<para>Maps an element to a position. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0">begin</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the first element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52">end</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link>)</para>

<para>Maps an element to a position. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0">begin</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the first element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52">end</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link>)</para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</listitem>
            <listitem><para>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680">e_pos</link> (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link>)</para>

<para>Maps an element to a position. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A sample trie element access traits. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1"/><section>
    <title>const_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>const_iterator</secondary></indexterm>
<para><computeroutput>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">__gnu_pbds::sample_trie_access_traits::const_iterator</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1"/><section>
    <title>const_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>const_iterator</secondary></indexterm>
<para><computeroutput>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">__gnu_pbds::sample_trie_access_traits::const_iterator</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1"/><section>
    <title>const_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_iterator</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>const_iterator</secondary></indexterm>
<para><computeroutput>typedef std::string::const_iterator <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">__gnu_pbds::sample_trie_access_traits::const_iterator</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f"/><section>
    <title>e_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_type</secondary></indexterm>
<para><computeroutput>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">__gnu_pbds::sample_trie_access_traits::e_type</link></computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f"/><section>
    <title>e_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_type</secondary></indexterm>
<para><computeroutput>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">__gnu_pbds::sample_trie_access_traits::e_type</link></computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f"/><section>
    <title>e_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>e_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_type</secondary></indexterm>
<para><computeroutput>typedef char <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">__gnu_pbds::sample_trie_access_traits::e_type</link></computeroutput></para><para>

<para>Element type. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0"/><section>
    <title>key_const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_const_reference</secondary></indexterm>
<para><computeroutput>typedef rebind_traits&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">__gnu_pbds::sample_trie_access_traits::key_const_reference</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0"/><section>
    <title>key_const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_const_reference</secondary></indexterm>
<para><computeroutput>typedef rebind_traits&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">__gnu_pbds::sample_trie_access_traits::key_const_reference</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0"/><section>
    <title>key_const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_const_reference</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_const_reference</secondary></indexterm>
<para><computeroutput>typedef rebind_traits&lt;_Alloc,<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">key_type</link>&gt;::const_reference <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">__gnu_pbds::sample_trie_access_traits::key_const_reference</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b"/><section>
    <title>key_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_type</secondary></indexterm>
<para><computeroutput>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">__gnu_pbds::sample_trie_access_traits::key_type</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b"/><section>
    <title>key_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_type</secondary></indexterm>
<para><computeroutput>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">__gnu_pbds::sample_trie_access_traits::key_type</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b"/><section>
    <title>key_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>key_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>key_type</secondary></indexterm>
<para><computeroutput>typedef std::string <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a34a8875d66f4fa77a6338e851de35e8b">__gnu_pbds::sample_trie_access_traits::key_type</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287"/><section>
    <title>size_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>size_type</secondary></indexterm>
<para><computeroutput>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">__gnu_pbds::sample_trie_access_traits::size_type</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287"/><section>
    <title>size_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>size_type</secondary></indexterm>
<para><computeroutput>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">__gnu_pbds::sample_trie_access_traits::size_type</link></computeroutput></para></section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287"/><section>
    <title>size_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>size_type</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>size_type</secondary></indexterm>
<para><computeroutput>typedef std::size_t <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">__gnu_pbds::sample_trie_access_traits::size_type</link></computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a6dd6c1231bc33bdfaae030302369d6c7"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa3b9e601627543ad9e3b59141fce991a"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>max_size</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>max_size</secondary></indexterm>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1afd52869244f0fd133688f43f13a8a858a659398c4e405126396b016f9ab5059b3"/>max_size</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0"/><section>
    <title>begin()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::begin (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the first element of r_key. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0"/><section>
    <title>begin()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::begin (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the first element of r_key. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1adc4b245feaab8c471b406fd0002645b0"/><section>
    <title>begin()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::begin (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the first element of r_key. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680"/><section>
    <title>e_pos()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_pos</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> __gnu_pbds::sample_trie_access_traits::e_pos (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680"/><section>
    <title>e_pos()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_pos</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> __gnu_pbds::sample_trie_access_traits::e_pos (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a2383ac05567211029913e7562b8b7680"/><section>
    <title>e_pos()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>e_pos</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>e_pos</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0f8386bb4680e6b93a2dbd9479dc0287">size_type</link> __gnu_pbds::sample_trie_access_traits::e_pos (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1aa2dd3a25e94ca227c9091491fa2c780f">e_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maps an element to a position. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52"/><section>
    <title>end()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>end</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::end (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52"/><section>
    <title>end()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>end</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::end (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</para>
</section>
<anchor xml:id="_struct____gnu__pbds_1_1sample__trie__access__traits_1a91709489f927e5cfb388b57dd05d7f52"/><section>
    <title>end()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>end</primary><secondary>__gnu_pbds::sample_trie_access_traits</secondary></indexterm>
<indexterm><primary>__gnu_pbds::sample_trie_access_traits</primary><secondary>end</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1a0289edd4cc087d8e99f403cf81d3b3e1">const_iterator</link> __gnu_pbds::sample_trie_access_traits::end (<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits_1acd2f3ccc88bbf1f0a84c5be4b917f9c0">key_const_reference</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a const_iterator to the after-last element of r_key. </para>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__access__traits_8hpp">sample_trie_access_traits.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__access__traits_8hpp">sample_trie_access_traits.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/trie_policy/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2trie__policy_2sample__trie__access__traits_8hpp">sample_trie_access_traits.hpp</link></section>
</section>
