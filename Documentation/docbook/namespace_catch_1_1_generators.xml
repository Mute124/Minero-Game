<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_catch_1_1_generators" xml:lang="en-US">
<title>Catch::Generators Namespace Reference</title>
<indexterm><primary>Catch::Generators</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_catch_1_1_generators_1_1pf">pf</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_catch_1_1_generators_1_1as">as</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_chunk_generator">ChunkGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_filter_generator">FilterGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_fixed_values_generator">FixedValuesGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">GeneratorUntypedBase</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_catch_1_1_generators_1_1_i_generator">IGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_map_generator">MapGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_repeat_generator">RepeatGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_single_value_generator">SingleValueGenerator</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_catch_1_1_generators_1_1_take_generator">TakeGenerator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">using</link> <link linkend="_namespace_catch_1_1_generators_1a1519f304113619d7d18670e2f08276c0">GeneratorBasePtr</link> = std::unique_ptr&lt; <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">GeneratorUntypedBase</link> &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1a3b2efc97978cf37951b75394aae1a3fb">value</link> (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1aff55717239311a0e8352a4de5d29967f">values</link> (std::initializer_list&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>)</para>
</listitem>
            <listitem><para>template&lt;typename... Ts&gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; std::tuple&lt; Ts... &gt; &gt; <link linkend="_namespace_catch_1_1_generators_1ae980a8b181bc56242a73161a05b312ee">table</link> (std::initializer_list&lt; std::tuple&lt; <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> std::decay&lt; <link linkend="_struct_catch_1_1_generators_1_1as">Ts</link> &gt;::type... &gt; &gt; <link linkend="_struct_catch_1_1_generators_1_1as">tuples</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , typename... Gs&gt; </para><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1a7cc95d72b060e2819b2edbbdbf8c646b">makeGenerators</link> (<link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... <link linkend="_struct_catch_1_1_generators_1_1as">moreGenerators</link>) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1abefb1a0fab3c669b98a53037b3286d22">makeGenerators</link> (<link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , typename... Gs&gt; </para><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1ab22ab581e83e71530d8bbd1c14f94abc">makeGenerators</link> (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... <link linkend="_struct_catch_1_1_generators_1_1as">moreGenerators</link>) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">U</link> , typename... Gs&gt; </para><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1aac8c5682b95d3467b013de492f21e7e2">makeGenerators</link> (<link linkend="_struct_catch_1_1_generators_1_1as">as</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;, <link linkend="_struct_catch_1_1_generators_1_1as">U</link> &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... <link linkend="_struct_catch_1_1_generators_1_1as">moreGenerators</link>) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt;</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1ac1fe3550c5f97370fc6729e04d7571b8">acquireGeneratorTracker</link> (<link linkend="_class_catch_1_1_string_ref">StringRef</link> <link linkend="_struct_catch_1_1_generators_1_1as">generatorName</link>, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp;lineInfo) -&gt; <link linkend="_struct_catch_1_1_i_generator_tracker">IGeneratorTracker</link> &amp;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link> &gt; </para><para><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> <link linkend="_namespace_catch_1_1_generators_1a3b0ab1f589b1d1e0e92afcd12cf4ab12">generate</link> (<link linkend="_class_catch_1_1_string_ref">StringRef</link> <link linkend="_struct_catch_1_1_generators_1_1as">generatorName</link>, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp;lineInfo, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp;<link linkend="_struct_catch_1_1_generators_1_1as">generatorExpression</link>) -&gt; <link linkend="_struct_catch_1_1_generators_1_1as">decltype</link>(std::declval&lt; <link linkend="_struct_catch_1_1_generators_1_1as">decltype</link>(<link linkend="_struct_catch_1_1_generators_1_1as">generatorExpression</link>())&gt;().<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">get</link>())</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1adedfdb318219078ce9107690745d2f2f">take</link> (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> Predicate &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1a4df89be8072a9685ee89b6776a54bb93">filter</link> (Predicate &amp;&amp;<link linkend="_struct_catch_1_1_generators_1_1as">pred</link>, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1a510cc0d72a7bab8f967827e695b981ba">repeat</link> (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_struct_catch_1_1_generators_1_1as">repeats</link>, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">Func</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">U</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link>  = FunctionReturnType&lt;Func, U&gt;&gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; <link linkend="_namespace_catch_1_1_generators_1af33fd06c51ac9173c3bee2ddee2559a6">map</link> (<link linkend="_struct_catch_1_1_generators_1_1as">Func</link> &amp;&amp;<link linkend="_struct_catch_1_1_generators_1_1as">function</link>, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">U</link> &gt; &amp;&amp;generator)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </para><para><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; std::vector&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &gt; <link linkend="_namespace_catch_1_1_generators_1acb4654b4e840e438e3bc204ac4d8e157">chunk</link> (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp;generator)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespace_catch_1_1_generators_1a1519f304113619d7d18670e2f08276c0"/><section>
    <title>GeneratorBasePtr</title>
<indexterm><primary>GeneratorBasePtr</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>GeneratorBasePtr</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">using</link> <link linkend="_namespace_catch_1_1_generators_1a1519f304113619d7d18670e2f08276c0">Catch::Generators::GeneratorBasePtr</link> = <link linkend="_struct_catch_1_1_generators_1_1as">typedef</link> std::unique_ptr&lt;<link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">GeneratorUntypedBase</link>&gt;</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_catch_1_1_generators_1ac1fe3550c5f97370fc6729e04d7571b8"/><section>
    <title>acquireGeneratorTracker()</title>
<indexterm><primary>acquireGeneratorTracker</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>acquireGeneratorTracker</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::acquireGeneratorTracker (<link linkend="_class_catch_1_1_string_ref">StringRef</link> generatorName, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp; lineInfo) -&gt;  <link linkend="_struct_catch_1_1_i_generator_tracker">IGeneratorTracker</link> &amp;</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_ac1fe3550c5f97370fc6729e04d7571b8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_ac1fe3550c5f97370fc6729e04d7571b8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1acb4654b4e840e438e3bc204ac4d8e157"/><section>
    <title>chunk()</title>
<indexterm><primary>chunk</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>chunk</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; std::vector&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &gt; Catch::Generators::chunk (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> size, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_acb4654b4e840e438e3bc204ac4d8e157_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_acb4654b4e840e438e3bc204ac4d8e157_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1a4df89be8072a9685ee89b6776a54bb93"/><section>
    <title>filter()</title>
<indexterm><primary>filter</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>filter</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> Predicate &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::filter (Predicate &amp;&amp; pred, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a4df89be8072a9685ee89b6776a54bb93_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1a3b0ab1f589b1d1e0e92afcd12cf4ab12"/><section>
    <title>generate()</title>
<indexterm><primary>generate</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>generate</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::generate (<link linkend="_class_catch_1_1_string_ref">StringRef</link> generatorName, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp; lineInfo, <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link> <link linkend="_struct_catch_1_1_generators_1_1as">const</link> &amp; generatorExpression) -&gt; <link linkend="_struct_catch_1_1_generators_1_1as">decltype</link>(std::declval&lt;<link linkend="_struct_catch_1_1_generators_1_1as">decltype</link>(<link linkend="_struct_catch_1_1_generators_1_1as">generatorExpression</link>())&gt;().<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1afc5e04fa58feb228bb06199ff10caa22">get</link>()) </computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a3b0ab1f589b1d1e0e92afcd12cf4ab12_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a3b0ab1f589b1d1e0e92afcd12cf4ab12_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1aac8c5682b95d3467b013de492f21e7e2"/><section>
    <title>makeGenerators()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>makeGenerators</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>makeGenerators</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">U</link> , typename... Gs&gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::makeGenerators (<link linkend="_struct_catch_1_1_generators_1_1as">as</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; , <link linkend="_struct_catch_1_1_generators_1_1as">U</link> &amp;&amp; val, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... moreGenerators) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt;<link linkend="_struct_catch_1_1_generators_1_1as">T</link>&gt; </computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_aac8c5682b95d3467b013de492f21e7e2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1abefb1a0fab3c669b98a53037b3286d22"/><section>
    <title>makeGenerators()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>makeGenerators</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>makeGenerators</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::makeGenerators (<link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt;<link linkend="_struct_catch_1_1_generators_1_1as">T</link>&gt; </computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_abefb1a0fab3c669b98a53037b3286d22_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1a7cc95d72b060e2819b2edbbdbf8c646b"/><section>
    <title>makeGenerators()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>makeGenerators</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>makeGenerators</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , typename... Gs&gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::makeGenerators (<link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... moreGenerators) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt;<link linkend="_struct_catch_1_1_generators_1_1as">T</link>&gt; </computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a7cc95d72b060e2819b2edbbdbf8c646b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a7cc95d72b060e2819b2edbbdbf8c646b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1ab22ab581e83e71530d8bbd1c14f94abc"/><section>
    <title>makeGenerators()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>makeGenerators</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>makeGenerators</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> , typename... Gs&gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_generators_1_1as">auto</link> Catch::Generators::makeGenerators (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp; val, <link linkend="_struct_catch_1_1_generators_1_1as">Gs</link> &amp;&amp;... moreGenerators) -&gt; <link linkend="_class_catch_1_1_generators_1_1_generators">Generators</link>&lt;<link linkend="_struct_catch_1_1_generators_1_1as">T</link>&gt; </computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_ab22ab581e83e71530d8bbd1c14f94abc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1af33fd06c51ac9173c3bee2ddee2559a6"/><section>
    <title>map()</title>
<indexterm><primary>map</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>map</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">Func</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">U</link> , <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link>  = FunctionReturnType&lt;Func, U&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::map (<link linkend="_struct_catch_1_1_generators_1_1as">Func</link> &amp;&amp; function, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">U</link> &gt; &amp;&amp; generator)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_af33fd06c51ac9173c3bee2ddee2559a6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_af33fd06c51ac9173c3bee2ddee2559a6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1a510cc0d72a7bab8f967827e695b981ba"/><section>
    <title>repeat()</title>
<indexterm><primary>repeat</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>repeat</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::repeat (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> repeats, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_a510cc0d72a7bab8f967827e695b981ba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1ae980a8b181bc56242a73161a05b312ee"/><section>
    <title>table()</title>
<indexterm><primary>table</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>table</secondary></indexterm>
<computeroutput>template&lt;typename... Ts&gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; std::tuple&lt; Ts... &gt; &gt; Catch::Generators::table (std::initializer_list&lt; std::tuple&lt; <link linkend="_struct_catch_1_1_generators_1_1as">typename</link> std::decay&lt; <link linkend="_struct_catch_1_1_generators_1_1as">Ts</link> &gt;::type... &gt; &gt; tuples)</computeroutput></para></section>
<anchor xml:id="_namespace_catch_1_1_generators_1adedfdb318219078ce9107690745d2f2f"/><section>
    <title>take()</title>
<indexterm><primary>take</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>take</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::take (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> target, <link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; &amp;&amp; generator)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_adedfdb318219078ce9107690745d2f2f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_catch_1_1_generators_adedfdb318219078ce9107690745d2f2f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_catch_1_1_generators_1a3b2efc97978cf37951b75394aae1a3fb"/><section>
    <title>value()</title>
<indexterm><primary>value</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>value</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::value (<link linkend="_struct_catch_1_1_generators_1_1as">T</link> &amp;&amp; value)</computeroutput></para></section>
<anchor xml:id="_namespace_catch_1_1_generators_1aff55717239311a0e8352a4de5d29967f"/><section>
    <title>values()</title>
<indexterm><primary>values</primary><secondary>Catch::Generators</secondary></indexterm>
<indexterm><primary>Catch::Generators</primary><secondary>values</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1_generators_1_1as">typename</link> <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">GeneratorWrapper</link>&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; Catch::Generators::values (std::initializer_list&lt; <link linkend="_struct_catch_1_1_generators_1_1as">T</link> &gt; values)</computeroutput></para></section>
</section>
</section>
