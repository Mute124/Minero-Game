<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__" xml:lang="en-US">
<title>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary></indexterm>
<para>

<para>Const point-type iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;const_iterator.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator____inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator____coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
            <listitem><para>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a">iterator_category</link></para>

<para>Category. </para>
</listitem>
            <listitem><para>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294">difference_type</link></para>

<para>Difference type. </para>
</listitem>
            <listitem><para>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656">value_type</link></para>

<para>Iterator&apos;s value type. </para>
</listitem>
            <listitem><para>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460">pointer</link></para>

<para>Iterator&apos;s pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e">const_pointer</link></para>

<para>Iterator&apos;s const pointer type. </para>
</listitem>
            <listitem><para>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce">reference</link></para>

<para>Iterator&apos;s reference type. </para>
</listitem>
            <listitem><para>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df">const_reference</link></para>

<para>Iterator&apos;s const reference type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74">left_child_next_sibling_heap_const_iterator_</link> (node_pointer p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d">left_child_next_sibling_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077">left_child_next_sibling_heap_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74">left_child_next_sibling_heap_const_iterator_</link> (node_pointer p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d">left_child_next_sibling_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077">left_child_next_sibling_heap_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74">left_child_next_sibling_heap_const_iterator_</link> (node_pointer p_nd)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d">left_child_next_sibling_heap_const_iterator_</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077">left_child_next_sibling_heap_const_iterator_</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp;other) const</para>

<para>Compares content (negatively) to a different iterator object. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634">operator++</link> (int)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node, typename _Alloc&gt;<?linebreak?>class __gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</title></simplesect>

<para>Const point-type iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a162def37be44e8be8c4a67ae92e99e4e"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_pointer</computeroutput></para><para>

<para>Iterator&apos;s const pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a21dc840b511d19faf16ba33864df72df"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::const_reference</computeroutput></para><para>

<para>Iterator&apos;s const reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a7a99e74779506a128cd9557bcdb62294"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef _Alloc::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::difference_type</computeroutput></para><para>

<para>Difference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1abfb76ff099663b004647df58f5caea7a"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef std::forward_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::iterator_category</computeroutput></para><para>

<para>Category. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a1db8d2d6a17d1ede94fa15d0d6056460"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para><para>

<para>Iterator&apos;s pointer type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab5f6bb8d56264c9fa8c54b38ffda86ce"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::reference <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::reference</computeroutput></para><para>

<para>Iterator&apos;s reference type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ad38e84193ee9d64e723d209b57d94656"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput>typedef base_type::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::value_type</computeroutput></para><para>

<para>Iterator&apos;s value type. </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (node_pointer p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (node_pointer p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a5c4d8413e65418f4e820c10c7671be74"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (node_pointer p_nd)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6d0bc89961b0ee4562057769c0b6d65d"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1ab2f2b1221b48f12862064c5b31c92077"/><section>
    <title>left_child_next_sibling_heap_const_iterator_()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>left_child_next_sibling_heap_const_iterator_</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>left_child_next_sibling_heap_const_iterator_</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::left_child_next_sibling_heap_const_iterator_ (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e"/><section>
    <title>operator!=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e"/><section>
    <title>operator!=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a6ec575ee22701d68ad7d49b45472094e"/><section>
    <title>operator!=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content (negatively) to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___a52cf37ac2725c062cfd1304ab9674504_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a52cf37ac2725c062cfd1304ab9674504"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___a2e25d1261c4502cf9b4b0c39224fc634_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___a2e25d1261c4502cf9b4b0c39224fc634_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a2e25d1261c4502cf9b4b0c39224fc634"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___a2e25d1261c4502cf9b4b0c39224fc634_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61"/><section>
    <title>operator==()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61"/><section>
    <title>operator==()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator___1a3398440e15b9cac6f0b77f44141e5a61"/><section>
    <title>operator==()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename _Alloc &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_</link>&lt; Node, _Alloc &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Compares content to a different iterator object. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp">const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp">const_iterator.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2const__iterator_8hpp">const_iterator.hpp</link></section>
</section>
