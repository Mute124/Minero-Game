<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__parallel_1_1____find__first__of__selector" xml:lang="en-US">
<title>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary></indexterm>
<para>

<para>Test predicate on several elements. </para>
 
</para>
<para>
<computeroutput>#include &lt;find_selectors.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1____find__first__of__selector__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1____find__first__of__selector__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b">__find_first_of_selector</link> (_FIterator __begin, _FIterator __end)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077">operator()</link> (_RAIter1 <link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>, _RAIter2 __i2, _Pred __pred)</para>

<para>Test on one position. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d">_M_sequential_algorithm</link> (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)</para>

<para>Corresponding sequential algorithm on a sequence. </para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b">__find_first_of_selector</link> (_FIterator __begin, _FIterator __end)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077">operator()</link> (_RAIter1 <link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>, _RAIter2 __i2, _Pred __pred)</para>

<para>Test on one position. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d">_M_sequential_algorithm</link> (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)</para>

<para>Corresponding sequential algorithm on a sequence. </para>
</listitem>
            <listitem><para><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b">__find_first_of_selector</link> (_FIterator __begin, _FIterator __end)</para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077">operator()</link> (_RAIter1 <link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>, _RAIter2 __i2, _Pred __pred)</para>

<para>Test on one position. </para>
</listitem>
            <listitem><para>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </para><para>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d">_M_sequential_algorithm</link> (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)</para>

<para>Corresponding sequential algorithm on a sequence. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>_FIterator <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a2d26b0ff45b0f71219a100404595d529">_M_begin</link></para>
</listitem>
            <listitem><para>_FIterator <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector_1a7bfb1a602022fba32ea73f5a972d5cd8">_M_end</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _FIterator&gt;<?linebreak?>struct __gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</title></simplesect>

<para>Test predicate on several elements. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b"/><section>
    <title>__find_first_of_selector()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__find_first_of_selector</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>__find_first_of_selector</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::__find_first_of_selector (_FIterator __begin, _FIterator __end)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b"/><section>
    <title>__find_first_of_selector()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__find_first_of_selector</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>__find_first_of_selector</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::__find_first_of_selector (_FIterator __begin, _FIterator __end)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a2f717fd63947fa50b4c6a8cfa9d7ac7b"/><section>
    <title>__find_first_of_selector()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__find_first_of_selector</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>__find_first_of_selector</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><para><computeroutput><link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::__find_first_of_selector (_FIterator __begin, _FIterator __end)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d"/><section>
    <title>_M_sequential_algorithm()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_M_sequential_algorithm</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>_M_sequential_algorithm</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::_M_sequential_algorithm (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Corresponding sequential algorithm on a sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin1</entry><entry>
<para>Begin iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end1</entry><entry>
<para>End iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__begin2</entry><entry>
<para>Begin iterator of second sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d"/><section>
    <title>_M_sequential_algorithm()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_M_sequential_algorithm</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>_M_sequential_algorithm</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::_M_sequential_algorithm (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Corresponding sequential algorithm on a sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin1</entry><entry>
<para>Begin iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end1</entry><entry>
<para>End iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__begin2</entry><entry>
<para>Begin iterator of second sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a8a0c2d1d295ed9265cdb21b7a01c695d"/><section>
    <title>_M_sequential_algorithm()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_M_sequential_algorithm</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>_M_sequential_algorithm</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput>std::pair&lt; _RAIter1, _RAIter2 &gt; <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::_M_sequential_algorithm (_RAIter1 __begin1, _RAIter1 __end1, _RAIter2 __begin2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Corresponding sequential algorithm on a sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin1</entry><entry>
<para>Begin iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end1</entry><entry>
<para>End iterator of first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__begin2</entry><entry>
<para>Begin iterator of second sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::operator() (_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Test on one position. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__i1</entry><entry>
<para>_Iterator on first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__i2</entry><entry>
<para>_Iterator on second sequence (unused). </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::operator() (_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Test on one position. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__i1</entry><entry>
<para>_Iterator on first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__i2</entry><entry>
<para>_Iterator on second sequence (unused). </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1ab86537005f7f266bbaebc18f9d44b077"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><computeroutput>template&lt;typename _RAIter1 , typename _RAIter2 , typename _Pred &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::operator() (_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Test on one position. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__i1</entry><entry>
<para>_Iterator on first sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__i2</entry><entry>
<para>_Iterator on second sequence (unused). </para>
</entry>
                            </row>
                            <row>
<entry>__pred</entry><entry>
<para>Find predicate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a2d26b0ff45b0f71219a100404595d529"/><section>
    <title>_M_begin</title>
<indexterm><primary>_M_begin</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>_M_begin</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><para><computeroutput>_FIterator <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::_M_begin</computeroutput></para></section>
<anchor xml:id="_struct____gnu__parallel_1_1____find__first__of__selector_1a7bfb1a602022fba32ea73f5a972d5cd8"/><section>
    <title>_M_end</title>
<indexterm><primary>_M_end</primary><secondary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</primary><secondary>_M_end</secondary></indexterm>
<computeroutput>template&lt;typename _FIterator &gt; </computeroutput><para><computeroutput>_FIterator <link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector</link>&lt; _FIterator &gt;::_M_end</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2find__selectors_8h">find_selectors.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2find__selectors_8h">find_selectors.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2find__selectors_8h">find_selectors.h</link></section>
</section>
