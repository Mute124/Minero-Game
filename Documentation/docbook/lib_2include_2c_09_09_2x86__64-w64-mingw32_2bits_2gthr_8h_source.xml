<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2gthr_8h_source" xml:lang="en-US">
<title>gthr.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/x86_64-w64-mingw32/bits/gthr.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Threads&#32;compatibility&#32;routines&#32;for&#32;libgcc2.&#32;&#32;*/</emphasis>
2 <emphasis role="comment">/*&#32;Compile&#32;this&#32;one&#32;with&#32;gcc.&#32;&#32;*/</emphasis>
3 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;1997-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
6 <emphasis role="comment"></emphasis>
7 <emphasis role="comment">GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under</emphasis>
8 <emphasis role="comment">the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free</emphasis>
9 <emphasis role="comment">Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
10 <emphasis role="comment">version.</emphasis>
11 <emphasis role="comment"></emphasis>
12 <emphasis role="comment">GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT&#32;ANY</emphasis>
13 <emphasis role="comment">WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or</emphasis>
14 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License</emphasis>
15 <emphasis role="comment">for&#32;more&#32;details.</emphasis>
16 <emphasis role="comment"></emphasis>
17 <emphasis role="comment">Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
18 <emphasis role="comment">permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
19 <emphasis role="comment">3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
20 <emphasis role="comment"></emphasis>
21 <emphasis role="comment">You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
22 <emphasis role="comment">a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
23 <emphasis role="comment">see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
24 <emphasis role="comment">&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
25 
26 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_GCC_GTHR_H</emphasis>
27 <emphasis role="preprocessor">#define&#32;_GLIBCXX_GCC_GTHR_H</emphasis>
28 
29 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_HIDE_EXPORTS</emphasis>
30 <emphasis role="preprocessor">#pragma&#32;GCC&#32;visibility&#32;push(default)</emphasis>
31 <emphasis role="preprocessor">#endif</emphasis>
32 
33 <emphasis role="comment">/*&#32;If&#32;this&#32;file&#32;is&#32;compiled&#32;with&#32;threads&#32;support,&#32;it&#32;must</emphasis>
34 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;__GTHREADS&#32;1</emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;to&#32;indicate&#32;that&#32;threads&#32;support&#32;is&#32;present.&#32;&#32;Also&#32;it&#32;has&#32;define</emphasis>
36 <emphasis role="comment">&#32;&#32;&#32;function</emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_active_p&#32;()</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;that&#32;returns&#32;1&#32;if&#32;thread&#32;system&#32;is&#32;active,&#32;0&#32;if&#32;not.</emphasis>
39 <emphasis role="comment"></emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;The&#32;threads&#32;interface&#32;must&#32;define&#32;the&#32;following&#32;types:</emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_key_t</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_once_t</emphasis>
43 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_mutex_t</emphasis>
44 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_recursive_mutex_t</emphasis>
45 <emphasis role="comment"></emphasis>
46 <emphasis role="comment">&#32;&#32;&#32;The&#32;threads&#32;interface&#32;must&#32;define&#32;the&#32;following&#32;macros:</emphasis>
47 <emphasis role="comment"></emphasis>
48 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_ONCE_INIT</emphasis>
49 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;initialize&#32;__gthread_once_t</emphasis>
50 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_MUTEX_INIT</emphasis>
51 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;initialize&#32;__gthread_mutex_t&#32;to&#32;get&#32;a&#32;fast</emphasis>
52 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;non-recursive&#32;mutex.</emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_MUTEX_INIT_FUNCTION</emphasis>
54 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;initialize&#32;__gthread_mutex_t&#32;to&#32;get&#32;a&#32;fast</emphasis>
55 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;non-recursive&#32;mutex.</emphasis>
56 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Define&#32;this&#32;to&#32;a&#32;function&#32;which&#32;looks&#32;like&#32;this:</emphasis>
57 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;void&#32;__GTHREAD_MUTEX_INIT_FUNCTION&#32;(__gthread_mutex_t&#32;*)</emphasis>
58 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Some&#32;systems&#32;can&apos;t&#32;initialize&#32;a&#32;mutex&#32;without&#32;a</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;call.&#32;&#32;Don&apos;t&#32;define&#32;__GTHREAD_MUTEX_INIT&#32;in&#32;this&#32;case.</emphasis>
60 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_RECURSIVE_MUTEX_INIT</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;above,&#32;but&#32;for&#32;a&#32;recursive&#32;mutex.</emphasis>
63 <emphasis role="comment"></emphasis>
64 <emphasis role="comment">&#32;&#32;&#32;The&#32;threads&#32;interface&#32;must&#32;define&#32;the&#32;following&#32;static&#32;functions:</emphasis>
65 <emphasis role="comment"></emphasis>
66 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_once&#32;(__gthread_once_t&#32;*once,&#32;void&#32;(*func)&#32;())</emphasis>
67 <emphasis role="comment"></emphasis>
68 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_key_create&#32;(__gthread_key_t&#32;*keyp,&#32;void&#32;(*dtor)&#32;(void&#32;*))</emphasis>
69 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_key_delete&#32;(__gthread_key_t&#32;key)</emphasis>
70 <emphasis role="comment"></emphasis>
71 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;void&#32;*__gthread_getspecific&#32;(__gthread_key_t&#32;key)</emphasis>
72 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_setspecific&#32;(__gthread_key_t&#32;key,&#32;const&#32;void&#32;*ptr)</emphasis>
73 <emphasis role="comment"></emphasis>
74 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_mutex_destroy&#32;(__gthread_mutex_t&#32;*mutex);</emphasis>
75 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_recursive_mutex_destroy&#32;(__gthread_recursive_mutex_t&#32;*mutex);</emphasis>
76 <emphasis role="comment"></emphasis>
77 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_mutex_lock&#32;(__gthread_mutex_t&#32;*mutex);</emphasis>
78 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_mutex_trylock&#32;(__gthread_mutex_t&#32;*mutex);</emphasis>
79 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_mutex_unlock&#32;(__gthread_mutex_t&#32;*mutex);</emphasis>
80 <emphasis role="comment"></emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_recursive_mutex_lock&#32;(__gthread_recursive_mutex_t&#32;*mutex);</emphasis>
82 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_recursive_mutex_trylock&#32;(__gthread_recursive_mutex_t&#32;*mutex);</emphasis>
83 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_recursive_mutex_unlock&#32;(__gthread_recursive_mutex_t&#32;*mutex);</emphasis>
84 <emphasis role="comment"></emphasis>
85 <emphasis role="comment">&#32;&#32;&#32;The&#32;following&#32;are&#32;supported&#32;in&#32;POSIX&#32;threads&#32;only.&#32;They&#32;are&#32;required&#32;to</emphasis>
86 <emphasis role="comment">&#32;&#32;&#32;fix&#32;a&#32;deadlock&#32;in&#32;static&#32;initialization&#32;inside&#32;libsupc++.&#32;The&#32;header&#32;file</emphasis>
87 <emphasis role="comment">&#32;&#32;&#32;gthr-posix.h&#32;defines&#32;a&#32;symbol&#32;__GTHREAD_HAS_COND&#32;to&#32;signify&#32;that&#32;these&#32;extra</emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;features&#32;are&#32;supported.</emphasis>
89 <emphasis role="comment"></emphasis>
90 <emphasis role="comment">&#32;&#32;&#32;Types:</emphasis>
91 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_cond_t</emphasis>
92 <emphasis role="comment"></emphasis>
93 <emphasis role="comment">&#32;&#32;&#32;Macros:</emphasis>
94 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_COND_INIT</emphasis>
95 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__GTHREAD_COND_INIT_FUNCTION</emphasis>
96 <emphasis role="comment"></emphasis>
97 <emphasis role="comment">&#32;&#32;&#32;Interface:</emphasis>
98 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_cond_broadcast&#32;(__gthread_cond_t&#32;*cond);</emphasis>
99 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_cond_wait&#32;(__gthread_cond_t&#32;*cond,&#32;__gthread_mutex_t&#32;*mutex);</emphasis>
100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_cond_wait_recursive&#32;(__gthread_cond_t&#32;*cond,</emphasis>
101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gthread_recursive_mutex_t&#32;*mutex);</emphasis>
102 <emphasis role="comment"></emphasis>
103 <emphasis role="comment">&#32;&#32;&#32;All&#32;functions&#32;returning&#32;int&#32;should&#32;return&#32;zero&#32;on&#32;success&#32;or&#32;the&#32;error</emphasis>
104 <emphasis role="comment">&#32;&#32;&#32;number.&#32;&#32;If&#32;the&#32;operation&#32;is&#32;not&#32;supported,&#32;-1&#32;is&#32;returned.</emphasis>
105 <emphasis role="comment"></emphasis>
106 <emphasis role="comment">&#32;&#32;&#32;If&#32;the&#32;following&#32;are&#32;also&#32;defined,&#32;you&#32;should</emphasis>
107 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;#define&#32;__GTHREADS_CXX0X&#32;1</emphasis>
108 <emphasis role="comment">&#32;&#32;&#32;to&#32;enable&#32;the&#32;c++0x&#32;thread&#32;library.</emphasis>
109 <emphasis role="comment"></emphasis>
110 <emphasis role="comment">&#32;&#32;&#32;Types:</emphasis>
111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_t</emphasis>
112 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_time_t</emphasis>
113 <emphasis role="comment"></emphasis>
114 <emphasis role="comment">&#32;&#32;&#32;Interface:</emphasis>
115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_create&#32;(__gthread_t&#32;*thread,&#32;void&#32;*(*func)&#32;(void*),</emphasis>
116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;void&#32;*args);</emphasis>
117 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_join&#32;(__gthread_t&#32;thread,&#32;void&#32;**value_ptr);</emphasis>
118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_detach&#32;(__gthread_t&#32;thread);</emphasis>
119 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_equal&#32;(__gthread_t&#32;t1,&#32;__gthread_t&#32;t2);</emphasis>
120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__gthread_t&#32;__gthread_self&#32;(void);</emphasis>
121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_yield&#32;(void);</emphasis>
122 <emphasis role="comment"></emphasis>
123 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_mutex_timedlock&#32;(__gthread_mutex_t&#32;*m,</emphasis>
124 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;__gthread_time_t&#32;*abs_timeout);</emphasis>
125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_recursive_mutex_timedlock&#32;(__gthread_recursive_mutex_t&#32;*m,</emphasis>
126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;__gthread_time_t&#32;*abs_time);</emphasis>
127 <emphasis role="comment"></emphasis>
128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_cond_signal&#32;(__gthread_cond_t&#32;*cond);</emphasis>
129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;int&#32;__gthread_cond_timedwait&#32;(__gthread_cond_t&#32;*cond,</emphasis>
130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gthread_mutex_t&#32;*mutex,</emphasis>
131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;__gthread_time_t&#32;*abs_timeout);</emphasis>
132 <emphasis role="comment"></emphasis>
133 <emphasis role="comment">*/</emphasis>
134 
135 <emphasis role="preprocessor">#if&#32;__GXX_WEAK__</emphasis>
136 <emphasis role="comment">/*&#32;The&#32;pe-coff&#32;weak&#32;support&#32;isn&apos;t&#32;fully&#32;compatible&#32;to&#32;ELF&apos;s&#32;weak.</emphasis>
137 <emphasis role="comment">&#32;&#32;&#32;For&#32;static&#32;libraries&#32;it&#32;might&#32;would&#32;work,&#32;but&#32;as&#32;we&#32;need&#32;to&#32;deal</emphasis>
138 <emphasis role="comment">&#32;&#32;&#32;with&#32;shared&#32;versions&#32;too,&#32;we&#32;disable&#32;it&#32;for&#32;mingw-targets.&#32;&#32;*/</emphasis>
139 <emphasis role="preprocessor">#ifdef&#32;__MINGW32__</emphasis>
140 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_GTHREAD_USE_WEAK</emphasis>
141 <emphasis role="preprocessor">#define&#32;_GLIBCXX_GTHREAD_USE_WEAK&#32;0</emphasis>
142 <emphasis role="preprocessor">#endif</emphasis>
143 
144 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_GTHREAD_USE_WEAK</emphasis>
145 <emphasis role="preprocessor">#define&#32;_GLIBCXX_GTHREAD_USE_WEAK&#32;1</emphasis>
146 <emphasis role="preprocessor">#endif</emphasis>
147 <emphasis role="preprocessor">#endif</emphasis>
148 <emphasis role="preprocessor">#include&#32;&lt;bits/gthr-default.h&gt;</emphasis>
149 
150 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_HIDE_EXPORTS</emphasis>
151 <emphasis role="preprocessor">#pragma&#32;GCC&#32;visibility&#32;pop</emphasis>
152 <emphasis role="preprocessor">#endif</emphasis>
153 
154 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;!&#32;_GLIBCXX_GCC_GTHR_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
