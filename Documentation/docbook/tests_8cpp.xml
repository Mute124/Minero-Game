<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tests_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/tests/tests.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/tests/tests.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;tests.h&quot;<?linebreak?></programlisting>Include dependency graph for tests.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tests_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacestd">std</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_catch">Catch</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_catch_1_1_detail">Catch::Detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a4d9ba34691283860fa892d350b69b0df">parsing_should_succeed</link> (std::string_view test_file, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> test_line, std::string_view toml_str, <link linkend="_tests_8h_1aa342e85e111fca130150cbebddfcb855">pss_func</link> &amp;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a18ae3ab36a07e388833b568cfdfa90c8">func</link>, std::string_view source_path)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a7f39c9afd5ff7b1f2357317fd634331c">parsing_should_fail</link> (std::string_view test_file, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> test_line, std::string_view toml_str, source_index expected_failure_line, source_index expected_failure_column)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a0b79a871e023fedd20fe4d0294ec4d4f">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const int &amp;)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a5b5e13b730c2e6b873cd95fb01c0cd3e">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const unsigned int &amp;)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a5ebae8cfd7fbed4200e65ae407010436">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &amp;)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1a1470f345e790256bce3a8bb34ca9034f">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const float &amp;)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1aefc0d3bdf670ac9d44342d46954f6f9c">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const double &amp;)</para>
</listitem>
            <listitem><para>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_tests_8cpp_1af49f1822ba586e46bab133be450f0022">parse_expected_value</link> (std::string_view, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, std::string_view, const std::string_view &amp;)</para>
</listitem>
            <listitem><para>template std::string <link linkend="_namespace_catch_1_1_detail_1a84aa484e594118061dd09de134a49cf7">Catch::Detail::stringify</link> (const <link linkend="_classnode__view">node_view</link>&lt; node &gt; &amp;)</para>
</listitem>
            <listitem><para>template std::string <link linkend="_namespace_catch_1_1_detail_1a6a0b1a147b0268f4e758e54a97e743c8">Catch::Detail::stringify</link> (const <link linkend="_classnode__view">node_view</link>&lt; const node &gt; &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_tests_8cpp_1a5ebae8cfd7fbed4200e65ae407010436"/><section>
    <title>parse_expected_value()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1aefc0d3bdf670ac9d44342d46954f6f9c"/><section>
    <title>parse_expected_value()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const double &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1a1470f345e790256bce3a8bb34ca9034f"/><section>
    <title>parse_expected_value()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const float &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1a0b79a871e023fedd20fe4d0294ec4d4f"/><section>
    <title>parse_expected_value()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const int &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1af49f1822ba586e46bab133be450f0022"/><section>
    <title>parse_expected_value()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const std::string_view &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1a5b5e13b730c2e6b873cd95fb01c0cd3e"/><section>
    <title>parse_expected_value()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>parse_expected_value</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parse_expected_value</secondary></indexterm>
<para><computeroutput>template <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_expected_value (std::string_view , <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> , std::string_view , const unsigned int &amp; )</computeroutput></para></section>
<anchor xml:id="_tests_8cpp_1a7f39c9afd5ff7b1f2357317fd634331c"/><section>
    <title>parsing_should_fail()</title>
<indexterm><primary>parsing_should_fail</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parsing_should_fail</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parsing_should_fail (std::string_view test_file, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> test_line, std::string_view toml_str, source_index expected_failure_line, source_index expected_failure_column)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tests_8cpp_a7f39c9afd5ff7b1f2357317fd634331c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_tests_8cpp_1a4d9ba34691283860fa892d350b69b0df"/><section>
    <title>parsing_should_succeed()</title>
<indexterm><primary>parsing_should_succeed</primary><secondary>tests.cpp</secondary></indexterm>
<indexterm><primary>tests.cpp</primary><secondary>parsing_should_succeed</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parsing_should_succeed (std::string_view test_file, <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> test_line, std::string_view toml_str, <link linkend="_tests_8h_1aa342e85e111fca130150cbebddfcb855">pss_func</link> &amp;&amp; func, std::string_view source_path)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tests_8cpp_a4d9ba34691283860fa892d350b69b0df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tests_8cpp_a4d9ba34691283860fa892d350b69b0df_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
