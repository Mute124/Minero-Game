<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structglm_1_1detail_1_1__swizzle__base2" xml:lang="en-US">
<title>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt; Struct Template Reference</title>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;_swizzle.hpp&gt;</computeroutput>
</para>
Inheritance diagram for glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__div">op_div</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__equal">op_equal</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__minus">op_minus</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__mul">op_mul</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__plus">op_plus</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235">operator=</link> (const T &amp;t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616">operator=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0">operator-=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1">operator+=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f">operator*=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd">operator/=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae">operator[]</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0">operator[]</link> (size_t i) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235">operator=</link> (const T &amp;t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616">operator=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0">operator-=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1">operator+=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f">operator*=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd">operator/=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae">operator[]</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0">operator[]</link> (size_t i) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235">operator=</link> (const T &amp;t)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616">operator=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0">operator-=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1">operator+=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f">operator*=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd">operator/=</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae">operator[]</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0">operator[]</link> (size_t i) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename U &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d">_apply_op</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that, const U &amp;op)</para>
</listitem>
            <listitem><para>template&lt;typename U &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d">_apply_op</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that, const U &amp;op)</para>
</listitem>
            <listitem><para>template&lt;typename U &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d">_apply_op</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp;that, const U &amp;op)</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Member Functions inherited from <link linkend="_structglm_1_1detail_1_1__swizzle__base0">glm::detail::_swizzle_base0&lt; T, N &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a58ae00ae58cd438031a09355472fa10f">elem</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T const &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a63f92bc860f0c0a1f56e8f9c06adc5cf">elem</link> (size_t i) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a58ae00ae58cd438031a09355472fa10f">elem</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T const &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a63f92bc860f0c0a1f56e8f9c06adc5cf">elem</link> (size_t i) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a58ae00ae58cd438031a09355472fa10f">elem</link> (size_t i)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T const &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1a63f92bc860f0c0a1f56e8f9c06adc5cf">elem</link> (size_t i) const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_structglm_1_1detail_1_1__swizzle__base0">glm::detail::_swizzle_base0&lt; T, N &gt;</link>        <itemizedlist>
            <listitem><para>char <link linkend="_structglm_1_1detail_1_1__swizzle__base0_1ab006099b8e51dae773fffee276a1a45c">_buffer</link> [1]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d"/><section>
    <title>_apply_op()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_apply_op</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>_apply_op</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><computeroutput>template&lt;typename U &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::_apply_op (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that, const U &amp; op)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a8ad0a11ec5905f2a33e42dbbadd57b0d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d"/><section>
    <title>_apply_op()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_apply_op</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>_apply_op</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><computeroutput>template&lt;typename U &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::_apply_op (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that, const U &amp; op)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a8ad0a11ec5905f2a33e42dbbadd57b0d"/><section>
    <title>_apply_op()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_apply_op</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>_apply_op</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><computeroutput>template&lt;typename U &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::_apply_op (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that, const U &amp; op)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f"/><section>
    <title>operator*=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator*= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a41a9fe45545f5adcd0c529c3a426e29f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f"/><section>
    <title>operator*=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator*= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a41a9fe45545f5adcd0c529c3a426e29f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a41a9fe45545f5adcd0c529c3a426e29f"/><section>
    <title>operator*=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator*= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a41a9fe45545f5adcd0c529c3a426e29f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1"/><section>
    <title>operator+=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator+= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a4c22bf1dde634b274789b630f75af0f1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1"/><section>
    <title>operator+=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator+= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a4c22bf1dde634b274789b630f75af0f1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a4c22bf1dde634b274789b630f75af0f1"/><section>
    <title>operator+=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator+= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a4c22bf1dde634b274789b630f75af0f1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0"/><section>
    <title>operator-=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator-= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a5e985ec8cbfa38395aa667eea74d2ca0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0"/><section>
    <title>operator-=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator-= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a5e985ec8cbfa38395aa667eea74d2ca0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a5e985ec8cbfa38395aa667eea74d2ca0"/><section>
    <title>operator-=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator-= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a5e985ec8cbfa38395aa667eea74d2ca0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd"/><section>
    <title>operator/=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator/= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_ad4ef23a8bcf9b2474f08c5f1960e3fbd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd"/><section>
    <title>operator/=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator/= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_ad4ef23a8bcf9b2474f08c5f1960e3fbd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1ad4ef23a8bcf9b2474f08c5f1960e3fbd"/><section>
    <title>operator/=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator/=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator/= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_ad4ef23a8bcf9b2474f08c5f1960e3fbd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235"/><section>
    <title>operator=()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (const T &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235"/><section>
    <title>operator=()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (const T &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a91d464c938c12741e5306b9866162235"/><section>
    <title>operator=()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (const T &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616"/><section>
    <title>operator=()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_aceb55a05b9a54396dde48e3018faf616_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616"/><section>
    <title>operator=()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_aceb55a05b9a54396dde48e3018faf616_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1aceb55a05b9a54396dde48e3018faf616"/><section>
    <title>operator=()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> <link linkend="_structglm_1_1detail_1_1__swizzle__base2">_swizzle_base2</link> &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator= (<link linkend="_structglm_1_1vec">vec</link>&lt; N, T, Q &gt; const &amp; that)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_aceb55a05b9a54396dde48e3018faf616_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae"/><section>
    <title>operator[]()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a7d02d15802f1e255ef96aa2b558b95ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae"/><section>
    <title>operator[]()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a7d02d15802f1e255ef96aa2b558b95ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a7d02d15802f1e255ef96aa2b558b95ae"/><section>
    <title>operator[]()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T &amp; <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a7d02d15802f1e255ef96aa2b558b95ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0"/><section>
    <title>operator[]()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a0e341ddb30329eabeac3361833e45cd0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0"/><section>
    <title>operator[]()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a0e341ddb30329eabeac3361833e45cd0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structglm_1_1detail_1_1__swizzle__base2_1a0e341ddb30329eabeac3361833e45cd0"/><section>
    <title>operator[]()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</secondary></indexterm>
<indexterm><primary>glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;int N, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q, int E0, int E1, int E2, int E3, int DUPLICATE_ELEMENTS&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> T <link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2</link>&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::operator[] (size_t i) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structglm_1_1detail_1_1__swizzle__base2_a0e341ddb30329eabeac3361833e45cd0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/detail/<link linkend="__classes_2lib_2glm_2glm_2detail_2__swizzle_8hpp">_swizzle.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/detail/<link linkend="_lib_2glm_2glm_2detail_2__swizzle_8hpp">_swizzle.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/detail/<link linkend="__old_2_classes_2lib_2glm_2glm_2detail_2__swizzle_8hpp">_swizzle.hpp</link></section>
</section>
