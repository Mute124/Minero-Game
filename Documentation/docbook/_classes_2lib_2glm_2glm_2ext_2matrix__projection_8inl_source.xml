<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2glm_2glm_2ext_2matrix__projection_8inl_source" xml:lang="en-US">
<title>matrix_projection.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/glm/glm/ext/matrix_projection.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
4 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1gaf98ec0fecd3a5d07592e01750927599f">projectZO</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;obj,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
5 &#32;&#32;&#32;&#32;{
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;tmp&#32;=&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(obj,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;model&#32;*&#32;tmp;
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>&#32;*&#32;tmp;
9 
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;/=&#32;tmp.w;
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.x&#32;=&#32;tmp.x&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5);
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.y&#32;=&#32;tmp.y&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5);
13 
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp[0]&#32;=&#32;tmp[0]&#32;*&#32;T(viewport[2])&#32;+&#32;T(viewport[0]);
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp[1]&#32;=&#32;tmp[1]&#32;*&#32;T(viewport[3])&#32;+&#32;T(viewport[1]);
16 
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(tmp);
18 &#32;&#32;&#32;&#32;}
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1ga7f81da150745ac8f4af75d6ce29ab81d">projectNO</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;obj,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;tmp&#32;=&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(obj,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;model&#32;*&#32;tmp;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>&#32;*&#32;tmp;
26 
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;/=&#32;tmp.w;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5);
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp[0]&#32;=&#32;tmp[0]&#32;*&#32;T(viewport[2])&#32;+&#32;T(viewport[0]);
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp[1]&#32;=&#32;tmp[1]&#32;*&#32;T(viewport[3])&#32;+&#32;T(viewport[1]);
31 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(tmp);
33 &#32;&#32;&#32;&#32;}
34 
35 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
36 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1ga478b351626e39c8e33e042ea8d1f418e">project</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;obj,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
37 &#32;&#32;&#32;&#32;{
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CLIP_CONTROL&#32;&amp;&#32;GLM_CLIP_CONTROL_ZO_BIT</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__matrix__projection_1gaf98ec0fecd3a5d07592e01750927599f">projectZO</link>(obj,&#32;model,&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;viewport);
40 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__matrix__projection_1ga7f81da150745ac8f4af75d6ce29ab81d">projectNO</link>(obj,&#32;model,&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;viewport);
42 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
43 &#32;&#32;&#32;&#32;}
44 
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
46 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1ga9b3ec0d9aeea52bbcc8c1fc3fc9830e3">unProjectZO</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;win,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
47 &#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Inverse&#32;=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>&#32;*&#32;model);
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;tmp&#32;=&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(win,&#32;T(1));
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.x&#32;=&#32;(tmp.x&#32;-&#32;T(viewport[0]))&#32;/&#32;T(viewport[2]);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.y&#32;=&#32;(tmp.y&#32;-&#32;T(viewport[1]))&#32;/&#32;T(viewport[3]);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.x&#32;=&#32;tmp.x&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.y&#32;=&#32;tmp.y&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1);
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;obj&#32;=&#32;Inverse&#32;*&#32;tmp;
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;/=&#32;obj.w;
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(obj);
60 &#32;&#32;&#32;&#32;}
61 
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
63 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1ga6214935f32f38e1dc13ba66135eb5784">unProjectNO</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;win,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
64 &#32;&#32;&#32;&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Inverse&#32;=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>&#32;*&#32;model);
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;tmp&#32;=&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(win,&#32;T(1));
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.x&#32;=&#32;(tmp.x&#32;-&#32;T(viewport[0]))&#32;/&#32;T(viewport[2]);
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.y&#32;=&#32;(tmp.y&#32;-&#32;T(viewport[1]))&#32;/&#32;T(viewport[3]);
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1);
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;obj&#32;=&#32;Inverse&#32;*&#32;tmp;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;/=&#32;obj.w;
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(obj);
76 &#32;&#32;&#32;&#32;}
77 
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;Q&gt;
79 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1gaefa35b1dbf52941052a5a3aadc298106">unProject</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;win,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;model,&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
80 &#32;&#32;&#32;&#32;{
81 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CLIP_CONTROL&#32;&amp;&#32;GLM_CLIP_CONTROL_ZO_BIT</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__matrix__projection_1ga9b3ec0d9aeea52bbcc8c1fc3fc9830e3">unProjectZO</link>(win,&#32;model,&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;viewport);
83 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__matrix__projection_1ga6214935f32f38e1dc13ba66135eb5784">unProjectNO</link>(win,&#32;model,&#32;<link linkend="_group__gtx__projection_1ga58384b7170801dd513de46f87c7fb00e">proj</link>,&#32;viewport);
85 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
86 &#32;&#32;&#32;&#32;}
87 
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q,&#32;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
89 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;<link linkend="_group__ext__matrix__projection_1ga0f93e1b7ea6887f31b643ce5099b1173">pickMatrix</link>(<link linkend="_structglm_1_1vec">vec&lt;2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;center,&#32;<link linkend="_structglm_1_1vec">vec&lt;2, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;delta,&#32;<link linkend="_structglm_1_1vec">vec&lt;4, U, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;viewport)
90 &#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(delta.x&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)&#32;&amp;&amp;&#32;delta.y&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1mat">mat&lt;4, 4, T, Q&gt;</link>&#32;Result(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
93 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!(delta.x&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)&#32;&amp;&amp;&#32;delta.y&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)))
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;&#32;<emphasis role="comment">//&#32;Error</emphasis>
96 
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>&#32;Temp(
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[2])&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;(center.x&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[0])))&#32;/&#32;delta.x,
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[3])&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;(center.y&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[1])))&#32;/&#32;delta.y,
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Translate&#32;and&#32;scale&#32;the&#32;picked&#32;region&#32;to&#32;the&#32;entire&#32;window</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result&#32;=&#32;<link linkend="_group__ext__matrix__transform_1ga67d8473d6b293d1bb2b4eaf249795cab">translate</link>(Result,&#32;Temp);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>(Result,&#32;<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[2])&#32;/&#32;delta.x,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(viewport[3])&#32;/&#32;delta.y,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)));
105 &#32;&#32;&#32;&#32;}
106 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
