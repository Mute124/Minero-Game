<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___iterator_pair" xml:lang="en-US">
<title>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary></indexterm>
<para>

<para>A pair of iterators. The usual iterator operations are applied to both child iterators. </para>
 
</para>
<para>
<computeroutput>#include &lt;iterator.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> * <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88">reference</link></para>
</listitem>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> * <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88">reference</link></para>
</listitem>
            <listitem><para>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439">iterator_category</link></para>
</listitem>
            <listitem><para>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7">value_type</link></para>
</listitem>
            <listitem><para>typedef std::iterator_traits&lt; _Iterator1 &gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356">_TraitsType</link></para>
</listitem>
            <listitem><para>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> * <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44">pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88">reference</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1">_IteratorPair</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97">operator _Iterator2</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1">_IteratorPair</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97">operator _Iterator2</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078">_IteratorPair</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1">_IteratorPair</link> (const _Iterator1 &amp;__first, const _Iterator2 &amp;__second)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97">operator _Iterator2</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87">operator=</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253">operator+</link> (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b">operator-</link> (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp;__other) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _Iterator1, typename _Iterator2, typename _IteratorCategory&gt;<?linebreak?>class __gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</title></simplesect>

<para>A pair of iterators. The usual iterator operations are applied to both child iterators. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356"/><section>
    <title>_TraitsType<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_TraitsType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356"/><section>
    <title>_TraitsType<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_TraitsType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51d2066ffde62cf5e0e41003aec1e356"/><section>
    <title>_TraitsType<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_TraitsType</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_TraitsType</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef std::iterator_traits&lt;_Iterator1&gt; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_TraitsType</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _TraitsType::difference_type <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1adb2e9619613378d65e7fab5b0fd1c439"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef _IteratorCategory <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>* <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>* <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a8ce986b5c61ef39e265a1e7c771a0d44"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>* <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a45e2cae7c57cbd176a85b2431274ca88"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a7ef6963d8d0a44bd9c5682d235c04fa7"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>typedef <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078"/><section>
    <title>_IteratorPair()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a5fb714ee7cf2d9823357344be80a2078_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1"/><section>
    <title>_IteratorPair()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078"/><section>
    <title>_IteratorPair()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1"/><section>
    <title>_IteratorPair()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a5fb714ee7cf2d9823357344be80a2078"/><section>
    <title>_IteratorPair()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1ae8d51e75ac62361e42ea62dfedefded1"/><section>
    <title>_IteratorPair()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_IteratorPair</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>_IteratorPair</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::_IteratorPair (const _Iterator1 &amp; __first, const _Iterator2 &amp; __second)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97"/><section>
    <title>operator _Iterator2()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator _Iterator2</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator _Iterator2</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator _Iterator2 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97"/><section>
    <title>operator _Iterator2()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator _Iterator2</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator _Iterator2</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator _Iterator2 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a93092c1baf3c2083ced0a9a3e84c9e97"/><section>
    <title>operator _Iterator2()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator _Iterator2</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator _Iterator2</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator _Iterator2 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253"/><section>
    <title>operator+()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a949a519838ad91994b0add7a04146253_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253"/><section>
    <title>operator+()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a949a519838ad91994b0add7a04146253_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a949a519838ad91994b0add7a04146253"/><section>
    <title>operator+()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator+ (<link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> __delta) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a949a519838ad91994b0add7a04146253_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a0857622029cbd2f70b1617edbb284cd9"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a51a7456bb4a3264bf4dfffd76d4f754d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a51a7456bb4a3264bf4dfffd76d4f754d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a51a7456bb4a3264bf4dfffd76d4f754d"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a51a7456bb4a3264bf4dfffd76d4f754d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b"/><section>
    <title>operator-()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b"/><section>
    <title>operator-()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a1fc24ee5b67efb08ca70b7445893d10b"/><section>
    <title>operator-()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair_1aef6281cf64805f90a82676e8eb8b70e0">difference_type</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator- (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4"/><section>
    <title>operator--()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4"/><section>
    <title>operator--()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a3d85ce0f62d92a04398d8cabd817add4"/><section>
    <title>operator--()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b"/><section>
    <title>operator--()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a820638c8bb723bac97bfd0fb5f923f5b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b"/><section>
    <title>operator--()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a820638c8bb723bac97bfd0fb5f923f5b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a820638c8bb723bac97bfd0fb5f923f5b"/><section>
    <title>operator--()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput>const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__parallel_1_1___iterator_pair_a820638c8bb723bac97bfd0fb5f923f5b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87"/><section>
    <title>operator=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87"/><section>
    <title>operator=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__parallel_1_1___iterator_pair_1a281f4a76d4f27a4d4dc19074f9d72e87"/><section>
    <title>operator=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename _Iterator1 , typename _Iterator2 , typename _IteratorCategory &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link> &amp; <link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;::operator= (const <link linkend="_class____gnu__parallel_1_1___iterator_pair">_IteratorPair</link>&lt; _Iterator1, _Iterator2, _IteratorCategory &gt; &amp; __other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2iterator_8h">iterator.h</link></section>
</section>
