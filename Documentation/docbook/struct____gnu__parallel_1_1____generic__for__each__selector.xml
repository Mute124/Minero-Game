<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__parallel_1_1____generic__for__each__selector" xml:lang="en-US">
<title>__gnu_parallel::__generic_for_each_selector&lt; _It &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_parallel::__generic_for_each_selector&lt; _It &gt;</primary></indexterm>
<para>

<para>Generic __selector for embarrassingly parallel functions. </para>
 
</para>
<para>
<computeroutput>#include &lt;for_each_selectors.h&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_parallel::__generic_for_each_selector&lt; _It &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1____generic__for__each__selector__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>_It <link linkend="_struct____gnu__parallel_1_1____generic__for__each__selector_1a3b43c6fa8f1aa9bf6a3506102d0755c9">_M_finish_iterator</link></para>

<para>_Iterator on last element processed; needed for some algorithms (e. g. <link linkend="_namespacestd_1a83797c5677d80005911de218c819adab">std::transform()</link>). </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _It&gt;<?linebreak?>struct __gnu_parallel::__generic_for_each_selector&lt; _It &gt;</title></simplesect>

<para>Generic __selector for embarrassingly parallel functions. </para>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1____generic__for__each__selector_1a3b43c6fa8f1aa9bf6a3506102d0755c9"/><section>
    <title>_M_finish_iterator</title>
<indexterm><primary>_M_finish_iterator</primary><secondary>__gnu_parallel::__generic_for_each_selector&lt; _It &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::__generic_for_each_selector&lt; _It &gt;</primary><secondary>_M_finish_iterator</secondary></indexterm>
<computeroutput>template&lt;typename _It &gt; </computeroutput><para><computeroutput>_It <link linkend="_struct____gnu__parallel_1_1____generic__for__each__selector">__gnu_parallel::__generic_for_each_selector</link>&lt; _It &gt;::_M_finish_iterator</computeroutput></para><para>

<para>_Iterator on last element processed; needed for some algorithms (e. g. <link linkend="_namespacestd_1a83797c5677d80005911de218c819adab">std::transform()</link>). </para>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2for__each__selectors_8h">for_each_selectors.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2for__each__selectors_8h">for_each_selectors.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2for__each__selectors_8h">for_each_selectors.h</link></section>
</section>
