<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2constructor__destructor__fn__imps_8hpp_source" xml:lang="en-US">
<title>constructor_destructor_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
43 
44 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
45 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::entry_allocator
46 PB_DS_CLASS_C_DEC::s_entry_allocator;
47 
48 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
49 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
50 <emphasis role="keywordtype">void</emphasis>
51 PB_DS_CLASS_C_DEC::
52 copy_from_range(It&#32;first_it,&#32;It&#32;last_it)
53 {
54 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(first_it&#32;!=&#32;last_it)
55 &#32;&#32;&#32;&#32;insert(*(first_it++));
56 }
57 
58 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
59 PB_DS_CLASS_C_DEC::
60 PB_DS_GP_HASH_NAME()&#32;
61 :&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1)),
62 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
63 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
64 {
65 &#32;&#32;initialize();
66 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
67 }
68 
69 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
70 PB_DS_CLASS_C_DEC::
71 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn)&#32;&#32;&#32;&#32;
72 :&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1),&#32;r_hash_fn),
73 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
74 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
75 {
76 &#32;&#32;initialize();
77 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
78 }
79 
80 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
81 PB_DS_CLASS_C_DEC::
82 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn)&#32;
83 :&#32;hash_eq_fn_base(r_eq_fn),
84 &#32;&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1),&#32;r_hash_fn),
85 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
86 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
87 {
88 &#32;&#32;initialize();
89 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
90 }
91 
92 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
93 PB_DS_CLASS_C_DEC::
94 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn,&#32;
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;&#32;r_comb_hash_fn)&#32;
96 :&#32;hash_eq_fn_base(r_eq_fn),
97 &#32;&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1),
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_hash_fn,&#32;r_comb_hash_fn),
99 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
100 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
101 {
102 &#32;&#32;initialize();
103 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
104 }
105 
106 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
107 PB_DS_CLASS_C_DEC::
108 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn,&#32;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;&#32;comb_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Probe_Fn&amp;&#32;prober)&#32;
110 :&#32;hash_eq_fn_base(r_eq_fn),
111 &#32;&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1),
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_hash_fn,&#32;comb_hash_fn,&#32;prober),
113 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
114 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
115 {
116 &#32;&#32;initialize();
117 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
118 }
119 
120 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
121 PB_DS_CLASS_C_DEC::
122 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn,&#32;
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Probe_Fn&amp;&#32;comb_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Probe_Fn&amp;&#32;prober,&#32;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Resize_Policy&amp;&#32;r_resize_policy)&#32;
125 :&#32;hash_eq_fn_base(r_eq_fn),&#32;resize_base(r_resize_policy),
126 &#32;&#32;ranged_probe_fn_base(resize_base::get_nearest_larger_size(1),
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_hash_fn,&#32;comb_hash_fn,&#32;prober),
128 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
129 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
130 {
131 &#32;&#32;initialize();
132 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
133 }
134 
135 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
136 PB_DS_CLASS_C_DEC::
137 PB_DS_GP_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)&#32;:
138 #ifdef&#32;_GLIBCXX_DEBUG
139 &#32;&#32;debug_base(other),
140 #endif&#32;
141 &#32;&#32;hash_eq_fn_base(other),
142 &#32;&#32;resize_base(other),
143 &#32;&#32;ranged_probe_fn_base(other),
144 &#32;&#32;m_num_e(other.m_num_e),
145 &#32;&#32;m_num_used_e(other.m_num_used_e),
146 &#32;&#32;m_entries(s_entry_allocator.allocate(m_num_e))
147 {
148 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_num_e;&#32;++i)
149 &#32;&#32;&#32;&#32;m_entries[i].m_stat&#32;=&#32;(entry_status)<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a59ee2044efbe9ec17437f9662d6267d2">empty_entry_status</link>;
150 
151 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a130bf0cd31a0783cd03563f46b46915b">__try</link>
152 &#32;&#32;&#32;&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_num_e;&#32;++i)
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
155 &#32;&#32;&#32;&#32;&#32;&#32;m_entries[i].m_stat&#32;=&#32;other.m_entries[i].m_stat;
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_entries[i].m_stat&#32;==&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(m_entries&#32;+&#32;i)&#32;<link linkend="_namespacefind_l_s_b_1a9f3e2ce1c42e4e79e3976f44c44b77f9">entry</link>(other.m_entries[i]);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
159 &#32;&#32;&#32;&#32;}
160 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(...)
161 &#32;&#32;&#32;&#32;{
162 &#32;&#32;&#32;&#32;&#32;&#32;deallocate_all();
163 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a92ef03a5310b10a4243a6ec8f43494b5">__throw_exception_again</link>;
164 &#32;&#32;&#32;&#32;}
165 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
166 }
167 
168 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
169 PB_DS_CLASS_C_DEC::
170 ~PB_DS_GP_HASH_NAME()
171 {&#32;deallocate_all();&#32;}
172 
173 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
174 <emphasis role="keywordtype">void</emphasis>
175 PB_DS_CLASS_C_DEC::
176 swap(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)
177 {
178 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
179 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
180 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_num_e,&#32;other.m_num_e);
181 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_num_used_e,&#32;other.m_num_used_e);
182 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_entries,&#32;other.m_entries);
183 &#32;&#32;ranged_probe_fn_base::swap(other);
184 &#32;&#32;hash_eq_fn_base::swap(other);
185 &#32;&#32;resize_base::swap(other);
186 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(debug_base::swap(other));
187 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
188 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
189 }
190 
191 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
192 <emphasis role="keywordtype">void</emphasis>
193 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
194 deallocate_all()
195 {
196 &#32;&#32;clear();
197 &#32;&#32;erase_all_valid_entries(m_entries,&#32;m_num_e);
198 &#32;&#32;s_entry_allocator.deallocate(m_entries,&#32;m_num_e);
199 }
200 
201 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
202 <emphasis role="keywordtype">void</emphasis>
203 PB_DS_CLASS_C_DEC::
204 erase_all_valid_entries(entry_array&#32;a_entries_resized,&#32;size_type&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
205 {
206 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;pos&#32;=&#32;0;&#32;pos&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;&#32;++pos)
207 &#32;&#32;&#32;&#32;{
208 &#32;&#32;&#32;&#32;&#32;&#32;entry_pointer&#32;p_e&#32;=&#32;&amp;a_entries_resized[pos];
209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_e-&gt;m_stat&#32;==&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1ad6352ffcd00cd422ee041824fdfa23bd">valid_entry_status</link>)
210 &#32;&#32;&#32;&#32;p_e-&gt;m_value.~value_type();
211 &#32;&#32;&#32;&#32;}
212 }
213 
214 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
215 <emphasis role="keywordtype">void</emphasis>
216 PB_DS_CLASS_C_DEC::
217 initialize()
218 {
219 &#32;&#32;Resize_Policy::notify_resized(m_num_e);
220 &#32;&#32;Resize_Policy::notify_cleared();
221 &#32;&#32;ranged_probe_fn_base::notify_resized(m_num_e);
222 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(size_type&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_num_e;&#32;++i)
223 &#32;&#32;&#32;&#32;m_entries[i].m_stat&#32;=&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2gp__hash__table__map___2gp__ht__map___8hpp_1a59ee2044efbe9ec17437f9662d6267d2">empty_entry_status</link>;
224 }
225 
226 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
