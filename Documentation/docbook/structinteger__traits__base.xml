<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structinteger__traits__base" xml:lang="en-US">
<title>integer_traits_base&lt; T &gt; Struct Template Reference</title>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;toml.hpp&gt;</computeroutput>
</para>
Inheritance diagram for integer_traits_base&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structinteger__traits__base__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for integer_traits_base&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structinteger__traits__base__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_structinteger__traits__base_1ac1e2ddba29af450fd6991533e88f88c7">native_type</link> = <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base_1abdf523a6640d95157dcd22f7ac5c47e7">is_native</link> = std::is_same_v&lt;T, <link linkend="_structinteger__traits__base_1ac1e2ddba29af450fd6991533e88f88c7">native_type</link>&gt;</para>
</listitem>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base_1a2483663732c9967c3c5e1c50c53bc11c">is_signed</link> = static_cast&lt;T&gt;(-1) &lt; T{}</para>
</listitem>
            <listitem><para>static constexpr auto <link linkend="_structinteger__traits__base_1a1a92f62334cbede0fad962500976ac19">type</link> = node_type::integer</para>
</listitem>
            <listitem><para>static constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base_1ada5df7608f26eb97427bdc96870d40f9">can_partially_represent_native</link> = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Static Public Attributes inherited from <link linkend="_structinteger__limits">integer_limits&lt; T &gt;</link>        <itemizedlist>
            <listitem><para>static constexpr auto <link linkend="_structinteger__limits_1a76a6fb2afdf3f0d854dc0419a0b77cf6">min</link> = (std::numeric_limits&lt;T&gt;::min)()</para>
</listitem>
            <listitem><para>static constexpr auto <link linkend="_structinteger__limits_1a9e478e2835082b1fc3a5c41dfcc98dab">max</link> = (std::numeric_limits&lt;T&gt;::max)()</para>
</listitem>
        </itemizedlist>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_structinteger__traits__base_1ac1e2ddba29af450fd6991533e88f88c7"/><section>
    <title>native_type</title>
<indexterm><primary>native_type</primary><secondary>integer_traits_base&lt; T &gt;</secondary></indexterm>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary><secondary>native_type</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>using <link linkend="_structinteger__traits__base">integer_traits_base</link>&lt; T &gt;::native_type =  <link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structinteger__traits__base_1ada5df7608f26eb97427bdc96870d40f9"/><section>
    <title>can_partially_represent_native</title>
<indexterm><primary>can_partially_represent_native</primary><secondary>integer_traits_base&lt; T &gt;</secondary></indexterm>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary><secondary>can_partially_represent_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base">integer_traits_base</link>&lt; T &gt;::can_partially_represent_native = <link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link><computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structinteger__traits__base_1abdf523a6640d95157dcd22f7ac5c47e7"/><section>
    <title>is_native</title>
<indexterm><primary>is_native</primary><secondary>integer_traits_base&lt; T &gt;</secondary></indexterm>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary><secondary>is_native</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base">integer_traits_base</link>&lt; T &gt;::is_native = std::is_same_v&lt;T, <link linkend="_structinteger__traits__base_1ac1e2ddba29af450fd6991533e88f88c7">native_type</link>&gt;<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structinteger__traits__base_1a2483663732c9967c3c5e1c50c53bc11c"/><section>
    <title>is_signed</title>
<indexterm><primary>is_signed</primary><secondary>integer_traits_base&lt; T &gt;</secondary></indexterm>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary><secondary>is_signed</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structinteger__traits__base">integer_traits_base</link>&lt; T &gt;::is_signed = static_cast&lt;T&gt;(-1) &lt; T{}<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structinteger__traits__base_1a1a92f62334cbede0fad962500976ac19"/><section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>integer_traits_base&lt; T &gt;</secondary></indexterm>
<indexterm><primary>integer_traits_base&lt; T &gt;</primary><secondary>type</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_structinteger__traits__base">integer_traits_base</link>&lt; T &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> = node_type::integer<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
