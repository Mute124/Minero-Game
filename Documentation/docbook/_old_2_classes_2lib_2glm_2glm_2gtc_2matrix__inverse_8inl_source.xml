<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtc_2matrix__inverse_8inl_source" xml:lang="en-US">
<title>matrix_inverse.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtc/matrix_inverse.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
6 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__matrix__inverse_1gae0fcc5fc8783291f9702272de428fa0e">affineInverse</link>(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
7 &#32;&#32;&#32;&#32;{
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;Inv(<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;(m)));
9 
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;(
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;(Inv[0],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)),
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;(Inv[1],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)),
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;(-Inv&#32;*&#32;vec&lt;2,&#32;T,&#32;Q&gt;(m[2]),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)));
14 &#32;&#32;&#32;&#32;}
15 
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
17 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__matrix__inverse_1gae0fcc5fc8783291f9702272de428fa0e">affineInverse</link>(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
18 &#32;&#32;&#32;&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;Inv(<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;(m)));
20 
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;(
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;4,&#32;T,&#32;Q&gt;(Inv[0],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)),
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;4,&#32;T,&#32;Q&gt;(Inv[1],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)),
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;4,&#32;T,&#32;Q&gt;(Inv[2],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)),
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;4,&#32;T,&#32;Q&gt;(-Inv&#32;*&#32;vec&lt;3,&#32;T,&#32;Q&gt;(m[3]),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)));
26 &#32;&#32;&#32;&#32;}
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
29 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__matrix__inverse_1gab213cd0e3ead5f316d583f99d6312008">inverseTranspose</link>(mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
30 &#32;&#32;&#32;&#32;{
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Determinant&#32;=&#32;m[0][0]&#32;*&#32;m[1][1]&#32;-&#32;m[1][0]&#32;*&#32;m[0][1];
32 
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;Inverse(
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[1][1]&#32;/&#32;Determinant,
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[0][1]&#32;/&#32;Determinant,
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[1][0]&#32;/&#32;Determinant,
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;/&#32;Determinant);
38 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse;
40 &#32;&#32;&#32;&#32;}
41 
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
43 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__matrix__inverse_1gab213cd0e3ead5f316d583f99d6312008">inverseTranspose</link>(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
44 &#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Determinant&#32;=
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;(m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[1][2]&#32;*&#32;m[2][1])
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;m[0][1]&#32;*&#32;(m[1][0]&#32;*&#32;m[2][2]&#32;-&#32;m[1][2]&#32;*&#32;m[2][0])
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][2]&#32;*&#32;(m[1][0]&#32;*&#32;m[2][1]&#32;-&#32;m[1][1]&#32;*&#32;m[2][0]);
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;Inverse;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][0]&#32;=&#32;+&#32;(m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2]);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][1]&#32;=&#32;-&#32;(m[1][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[1][2]);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][2]&#32;=&#32;+&#32;(m[1][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[1][1]);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][0]&#32;=&#32;-&#32;(m[0][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[0][2]);
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][1]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[0][2]);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][2]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[0][1]);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][0]&#32;=&#32;+&#32;(m[0][1]&#32;*&#32;m[1][2]&#32;-&#32;m[1][1]&#32;*&#32;m[0][2]);
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][1]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;m[1][2]&#32;-&#32;m[1][0]&#32;*&#32;m[0][2]);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][2]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;m[1][1]&#32;-&#32;m[1][0]&#32;*&#32;m[0][1]);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse&#32;/=&#32;Determinant;
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse;
63 &#32;&#32;&#32;&#32;}
64 
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
66 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__matrix__inverse_1gab213cd0e3ead5f316d583f99d6312008">inverseTranspose</link>(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
67 &#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor00&#32;=&#32;m[2][2]&#32;*&#32;m[3][3]&#32;-&#32;m[3][2]&#32;*&#32;m[2][3];
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor01&#32;=&#32;m[2][1]&#32;*&#32;m[3][3]&#32;-&#32;m[3][1]&#32;*&#32;m[2][3];
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor02&#32;=&#32;m[2][1]&#32;*&#32;m[3][2]&#32;-&#32;m[3][1]&#32;*&#32;m[2][2];
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor03&#32;=&#32;m[2][0]&#32;*&#32;m[3][3]&#32;-&#32;m[3][0]&#32;*&#32;m[2][3];
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor04&#32;=&#32;m[2][0]&#32;*&#32;m[3][2]&#32;-&#32;m[3][0]&#32;*&#32;m[2][2];
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor05&#32;=&#32;m[2][0]&#32;*&#32;m[3][1]&#32;-&#32;m[3][0]&#32;*&#32;m[2][1];
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor06&#32;=&#32;m[1][2]&#32;*&#32;m[3][3]&#32;-&#32;m[3][2]&#32;*&#32;m[1][3];
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor07&#32;=&#32;m[1][1]&#32;*&#32;m[3][3]&#32;-&#32;m[3][1]&#32;*&#32;m[1][3];
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor08&#32;=&#32;m[1][1]&#32;*&#32;m[3][2]&#32;-&#32;m[3][1]&#32;*&#32;m[1][2];
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor09&#32;=&#32;m[1][0]&#32;*&#32;m[3][3]&#32;-&#32;m[3][0]&#32;*&#32;m[1][3];
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor10&#32;=&#32;m[1][0]&#32;*&#32;m[3][2]&#32;-&#32;m[3][0]&#32;*&#32;m[1][2];
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor11&#32;=&#32;m[1][0]&#32;*&#32;m[3][1]&#32;-&#32;m[3][0]&#32;*&#32;m[1][1];
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor12&#32;=&#32;m[1][2]&#32;*&#32;m[2][3]&#32;-&#32;m[2][2]&#32;*&#32;m[1][3];
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor13&#32;=&#32;m[1][1]&#32;*&#32;m[2][3]&#32;-&#32;m[2][1]&#32;*&#32;m[1][3];
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor14&#32;=&#32;m[1][1]&#32;*&#32;m[2][2]&#32;-&#32;m[2][1]&#32;*&#32;m[1][2];
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor15&#32;=&#32;m[1][0]&#32;*&#32;m[2][3]&#32;-&#32;m[2][0]&#32;*&#32;m[1][3];
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor16&#32;=&#32;m[1][0]&#32;*&#32;m[2][2]&#32;-&#32;m[2][0]&#32;*&#32;m[1][2];
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SubFactor17&#32;=&#32;m[1][0]&#32;*&#32;m[2][1]&#32;-&#32;m[2][0]&#32;*&#32;m[1][1];
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;Inverse;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][0]&#32;=&#32;+&#32;(m[1][1]&#32;*&#32;SubFactor00&#32;-&#32;m[1][2]&#32;*&#32;SubFactor01&#32;+&#32;m[1][3]&#32;*&#32;SubFactor02);
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][1]&#32;=&#32;-&#32;(m[1][0]&#32;*&#32;SubFactor00&#32;-&#32;m[1][2]&#32;*&#32;SubFactor03&#32;+&#32;m[1][3]&#32;*&#32;SubFactor04);
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][2]&#32;=&#32;+&#32;(m[1][0]&#32;*&#32;SubFactor01&#32;-&#32;m[1][1]&#32;*&#32;SubFactor03&#32;+&#32;m[1][3]&#32;*&#32;SubFactor05);
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[0][3]&#32;=&#32;-&#32;(m[1][0]&#32;*&#32;SubFactor02&#32;-&#32;m[1][1]&#32;*&#32;SubFactor04&#32;+&#32;m[1][2]&#32;*&#32;SubFactor05);
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][0]&#32;=&#32;-&#32;(m[0][1]&#32;*&#32;SubFactor00&#32;-&#32;m[0][2]&#32;*&#32;SubFactor01&#32;+&#32;m[0][3]&#32;*&#32;SubFactor02);
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][1]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;SubFactor00&#32;-&#32;m[0][2]&#32;*&#32;SubFactor03&#32;+&#32;m[0][3]&#32;*&#32;SubFactor04);
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][2]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;SubFactor01&#32;-&#32;m[0][1]&#32;*&#32;SubFactor03&#32;+&#32;m[0][3]&#32;*&#32;SubFactor05);
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[1][3]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;SubFactor02&#32;-&#32;m[0][1]&#32;*&#32;SubFactor04&#32;+&#32;m[0][2]&#32;*&#32;SubFactor05);
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][0]&#32;=&#32;+&#32;(m[0][1]&#32;*&#32;SubFactor06&#32;-&#32;m[0][2]&#32;*&#32;SubFactor07&#32;+&#32;m[0][3]&#32;*&#32;SubFactor08);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][1]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;SubFactor06&#32;-&#32;m[0][2]&#32;*&#32;SubFactor09&#32;+&#32;m[0][3]&#32;*&#32;SubFactor10);
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][2]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;SubFactor07&#32;-&#32;m[0][1]&#32;*&#32;SubFactor09&#32;+&#32;m[0][3]&#32;*&#32;SubFactor11);
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[2][3]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;SubFactor08&#32;-&#32;m[0][1]&#32;*&#32;SubFactor10&#32;+&#32;m[0][2]&#32;*&#32;SubFactor11);
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[3][0]&#32;=&#32;-&#32;(m[0][1]&#32;*&#32;SubFactor12&#32;-&#32;m[0][2]&#32;*&#32;SubFactor13&#32;+&#32;m[0][3]&#32;*&#32;SubFactor14);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[3][1]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;SubFactor12&#32;-&#32;m[0][2]&#32;*&#32;SubFactor15&#32;+&#32;m[0][3]&#32;*&#32;SubFactor16);
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[3][2]&#32;=&#32;-&#32;(m[0][0]&#32;*&#32;SubFactor13&#32;-&#32;m[0][1]&#32;*&#32;SubFactor15&#32;+&#32;m[0][3]&#32;*&#32;SubFactor17);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse[3][3]&#32;=&#32;+&#32;(m[0][0]&#32;*&#32;SubFactor14&#32;-&#32;m[0][1]&#32;*&#32;SubFactor16&#32;+&#32;m[0][2]&#32;*&#32;SubFactor17);
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;Determinant&#32;=
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][0]&#32;*&#32;Inverse[0][0]
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][1]&#32;*&#32;Inverse[0][1]
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][2]&#32;*&#32;Inverse[0][2]
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;m[0][3]&#32;*&#32;Inverse[0][3];
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Inverse&#32;/=&#32;Determinant;
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Inverse;
117 &#32;&#32;&#32;&#32;}
118 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
