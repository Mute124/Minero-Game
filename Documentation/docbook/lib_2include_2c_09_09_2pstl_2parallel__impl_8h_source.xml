<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2pstl_2parallel__impl_8h_source" xml:lang="en-US">
<title>parallel_impl.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/parallel_impl.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 <emphasis role="comment">//===--&#32;parallel_impl.h&#32;---------------------------------------------------===//</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
5 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
6 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
9 
10 <emphasis role="preprocessor">#ifndef&#32;_PSTL_PARALLEL_IMPL_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;_PSTL_PARALLEL_IMPL_H</emphasis>
12 
13 <emphasis role="preprocessor">#include&#32;&lt;atomic&gt;</emphasis>
14 <emphasis role="comment">//&#32;This&#32;header&#32;defines&#32;the&#32;minimum&#32;set&#32;of&#32;parallel&#32;routines&#32;required&#32;to&#32;support&#32;Parallel&#32;STL,</emphasis>
15 <emphasis role="comment">//&#32;implemented&#32;on&#32;top&#32;of&#32;Intel(R)&#32;Threading&#32;Building&#32;Blocks&#32;(Intel(R)&#32;TBB)&#32;library</emphasis>
16 
17 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____pstl">__pstl</link>
18 {
19 <emphasis role="keyword">namespace&#32;</emphasis>__internal
20 {
21 
22 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
23 <emphasis role="comment">//&#32;parallel_find</emphasis>
24 <emphasis role="comment">//-----------------------------------------------------------------------</emphasis>
27 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ExecutionPolicy,&#32;<emphasis role="keyword">class</emphasis>&#32;_Index,&#32;<emphasis role="keyword">class</emphasis>&#32;_Brick,&#32;<emphasis role="keyword">class</emphasis>&#32;_Compare&gt;
28 _Index
29 <link linkend="_namespace____pstl_1_1____internal_1aa1bc2681550192052e058f8e14869ad2">__parallel_find</link>(_ExecutionPolicy&amp;&amp;&#32;__exec,&#32;_Index&#32;__first,&#32;_Index&#32;__last,&#32;_Brick&#32;__f,&#32;_Compare&#32;__comp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__b_first)
30 {
31 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_Index&gt;::difference_type&#32;_DifferenceType;
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_DifferenceType&#32;__n&#32;=&#32;__last&#32;-&#32;__first;
33 &#32;&#32;&#32;&#32;_DifferenceType&#32;__initial_dist&#32;=&#32;__b_first&#32;?&#32;__n&#32;:&#32;-1;
34 &#32;&#32;&#32;&#32;std::atomic&lt;_DifferenceType&gt;&#32;__extremum(__initial_dist);
35 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;find&#32;out&#32;what&#32;is&#32;better&#32;here:&#32;parallel_for&#32;or&#32;parallel_reduce</emphasis>
36 &#32;&#32;&#32;&#32;__par_backend::__parallel_for(std::forward&lt;_ExecutionPolicy&gt;(__exec),&#32;__first,&#32;__last,
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[__comp,&#32;__f,&#32;__first,&#32;&amp;__extremum](_Index&#32;__i,&#32;_Index&#32;__j)&#32;{
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;See&#32;&quot;Reducing&#32;Contention&#32;Through&#32;Priority&#32;Updates&quot;,&#32;PPoPP&#32;&apos;13,&#32;for&#32;discussion&#32;of</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;why&#32;using&#32;a&#32;shared&#32;variable&#32;scales&#32;fairly&#32;well&#32;in&#32;this&#32;situation.</emphasis>
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__comp(__i&#32;-&#32;__first,&#32;__extremum))
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Index&#32;__res&#32;=&#32;__f(__i,&#32;__j);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;not&#32;&apos;__last&apos;&#32;returned&#32;then&#32;we&#32;found&#32;what&#32;we&#32;want&#32;so&#32;put&#32;this&#32;to&#32;extremum</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__res&#32;!=&#32;__j)
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_DifferenceType&#32;__k&#32;=&#32;__res&#32;-&#32;__first;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__old&#32;=&#32;__extremum;&#32;__comp(__k,&#32;__old);
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__old&#32;=&#32;__extremum)
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__extremum.compare_exchange_weak(__old,&#32;__k);
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
55 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extremum&#32;!=&#32;__initial_dist&#32;?&#32;__first&#32;+&#32;__extremum&#32;:&#32;__last;
56 }
57 
58 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
59 <emphasis role="comment">//&#32;parallel_or</emphasis>
60 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
62 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;_ExecutionPolicy,&#32;<emphasis role="keyword">class</emphasis>&#32;_Index,&#32;<emphasis role="keyword">class</emphasis>&#32;_Brick&gt;
63 <emphasis role="keywordtype">bool</emphasis>
64 <link linkend="_namespace____pstl_1_1____internal_1a0b24f24f2dfdffa3149539596892d0b0">__parallel_or</link>(_ExecutionPolicy&amp;&amp;&#32;__exec,&#32;_Index&#32;__first,&#32;_Index&#32;__last,&#32;_Brick&#32;__f)
65 {
66 &#32;&#32;&#32;&#32;std::atomic&lt;bool&gt;&#32;__found(<emphasis role="keyword">false</emphasis>);
67 &#32;&#32;&#32;&#32;__par_backend::__parallel_for(std::forward&lt;_ExecutionPolicy&gt;(__exec),&#32;__first,&#32;__last,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[__f,&#32;&amp;__found](_Index&#32;__i,&#32;_Index&#32;__j)&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__found.load(std::memory_order_relaxed)&#32;&amp;&amp;&#32;__f(__i,&#32;__j))
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__found.store(<emphasis role="keyword">true</emphasis>,&#32;std::memory_order_relaxed);
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__par_backend::__cancel_execution();
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
75 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__found;
76 }
77 
78 }&#32;<emphasis role="comment">//&#32;namespace&#32;__internal</emphasis>
79 }&#32;<emphasis role="comment">//&#32;namespace&#32;__pstl</emphasis>
80 
81 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_PSTL_PARALLEL_IMPL_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
