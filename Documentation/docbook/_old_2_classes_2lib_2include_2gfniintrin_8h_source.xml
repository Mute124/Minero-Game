<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2gfniintrin_8h_source" xml:lang="en-US">
<title>gfniintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/gfniintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2017-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_IMMINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#error&#32;&quot;Never&#32;use&#32;&lt;gfniintrin.h&gt;&#32;directly;&#32;include&#32;&lt;immintrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_GFNIINTRIN_H_INCLUDED</emphasis>
29 <emphasis role="preprocessor">#define&#32;_GFNIINTRIN_H_INCLUDED</emphasis>
30 
31 <emphasis role="preprocessor">#if&#32;!defined(__GFNI__)&#32;||&#32;!defined(__SSE2__)</emphasis>
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;gfni,sse2&quot;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;__DISABLE_GFNI__</emphasis>
35 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNI__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
36 
37 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
38 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
39 _mm_gf2p8mul_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>)
40 {
41 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8mulb_v16qi((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
43 }
44 
45 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
46 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
47 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
48 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3a795c2338cd99d7ef12e0479c7b076e">_mm_gf2p8affineinv_epi64_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
49 {
50 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
53 }
54 
55 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
56 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
57 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a1afc68e7b3fbb322d05252582ea737ef">_mm_gf2p8affine_epi64_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
58 {
59 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
61 }
62 <emphasis role="preprocessor">#else</emphasis>
63 <emphasis role="preprocessor">#define&#32;_mm_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
64 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi((__v16qi)(__m128i)(A),&#32;\</emphasis>
65 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(B),&#32;(int)(C)))</emphasis>
66 <emphasis role="preprocessor">#define&#32;_mm_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
67 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi&#32;((__v16qi)(__m128i)(A),&#32;&#32;&#32;\</emphasis>
68 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(B),&#32;(int)(C)))</emphasis>
69 <emphasis role="preprocessor">#endif</emphasis>
70 
71 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_GFNI__</emphasis>
72 <emphasis role="preprocessor">#undef&#32;__DISABLE_GFNI__</emphasis>
73 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
74 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_GFNI__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
75 
76 <emphasis role="preprocessor">#if&#32;!defined(__GFNI__)&#32;||&#32;!defined(__AVX__)</emphasis>
77 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
78 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;gfni,avx&quot;)</emphasis>
79 <emphasis role="preprocessor">#define&#32;__DISABLE_GFNIAVX__</emphasis>
80 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
81 
82 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
83 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
84 _mm256_gf2p8mul_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>)
85 {
86 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8mulb_v32qi&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
88 }
89 
90 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
91 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
92 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
93 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a4be88788b737bf77bdde435534197bdd">_mm256_gf2p8affineinv_epi64_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
94 {
95 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
98 }
99 
100 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
101 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
102 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a219f14271f93cd060b707d6837b44276">_mm256_gf2p8affine_epi64_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
103 {
104 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
106 }
107 <emphasis role="preprocessor">#else</emphasis>
108 <emphasis role="preprocessor">#define&#32;_mm256_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
109 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi((__v32qi)(__m256i)(A),&#32;\</emphasis>
110 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(B),&#32;\</emphasis>
111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(C)))</emphasis>
112 <emphasis role="preprocessor">#define&#32;_mm256_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
113 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi&#32;((__v32qi)(__m256i)(A),&#32;&#32;&#32;\</emphasis>
114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;&#32;&#32;__v32qi)(__m256i)(B),&#32;(int)(C)))</emphasis>
115 <emphasis role="preprocessor">#endif</emphasis>
116 
117 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_GFNIAVX__</emphasis>
118 <emphasis role="preprocessor">#undef&#32;__DISABLE_GFNIAVX__</emphasis>
119 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
120 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
121 
122 <emphasis role="preprocessor">#if&#32;!defined(__GFNI__)&#32;||&#32;!defined(__AVX512VL__)</emphasis>
123 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
124 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;gfni,avx512vl&quot;)</emphasis>
125 <emphasis role="preprocessor">#define&#32;__DISABLE_GFNIAVX512VL__</emphasis>
126 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512VL__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
127 
128 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
129 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
130 _mm_mask_gf2p8mul_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
131 {
132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8mulb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
135 }
136 
137 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
138 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
139 _mm_maskz_gf2p8mul_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
140 {
141 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8mulb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;(__v16qi)&#32;_mm_setzero_si128&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
143 }
144 
145 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
146 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
147 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
148 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa347fb0e95cd0f2e8b1ce0176f4558a0">_mm_mask_gf2p8affineinv_epi64_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
150 {
151 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
156 }
157 
158 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
159 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
160 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1ac4dd7b25888796d09b9a6495bf97fa85">_mm_maskz_gf2p8affineinv_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
162 {
163 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;_mm_setzero_si128&#32;(),
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
167 }
168 
169 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
170 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
171 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1adad2c4f8c5ba4852f6c31a96a48fbec3">_mm_mask_gf2p8affine_epi64_epi8</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
173 {
174 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;(__v16qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
176 }
177 
178 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
179 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
180 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1ac35a84a4a7a9379a710d144efa82720c">_mm_maskz_gf2p8affine_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
182 {
183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;(__v16qi)&#32;_mm_setzero_si128&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
185 }
186 <emphasis role="preprocessor">#else</emphasis>
187 <emphasis role="preprocessor">#define&#32;_mm_mask_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
188 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(C),&#32;(__v16qi)(__m128i)(D),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
190 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(E),&#32;(__v16qi)(__m128i)(A),&#32;(__mmask16)(B)))</emphasis>
191 <emphasis role="preprocessor">#define&#32;_mm_maskz_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;\</emphasis>
192 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineinvqb_v16qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
193 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(B),&#32;(__v16qi)(__m128i)(C),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
194 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(D),&#32;(__v16qi)(__m128i)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
195 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__mmask16)(A)))</emphasis>
196 <emphasis role="preprocessor">#define&#32;_mm_mask_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;\</emphasis>
197 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi_mask((__v16qi)(__m128i)(C),\</emphasis>
198 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(D),&#32;(int)(E),&#32;(__v16qi)(__m128i)(A),&#32;(__mmask16)(B)))</emphasis>
199 <emphasis role="preprocessor">#define&#32;_mm_maskz_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
200 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vgf2p8affineqb_v16qi_mask((__v16qi)(__m128i)(B),\</emphasis>
201 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)(C),&#32;(int)(D),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)(__m128i)&#32;_mm_setzero_si128&#32;(),&#32;(__mmask16)(A)))</emphasis>
203 <emphasis role="preprocessor">#endif</emphasis>
204 
205 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_GFNIAVX512VL__</emphasis>
206 <emphasis role="preprocessor">#undef&#32;__DISABLE_GFNIAVX512VL__</emphasis>
207 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
208 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512VL__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
209 
210 <emphasis role="preprocessor">#if&#32;!defined(__GFNI__)&#32;||&#32;!defined(__AVX512VL__)&#32;||&#32;!defined(__AVX512BW__)</emphasis>
211 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
212 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;gfni,avx512vl,avx512bw&quot;)</emphasis>
213 <emphasis role="preprocessor">#define&#32;__DISABLE_GFNIAVX512VLBW__</emphasis>
214 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512VLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
215 
216 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
217 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
218 _mm256_mask_gf2p8mul_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
220 {
221 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8mulb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
224 }
225 
226 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
227 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
228 _mm256_maskz_gf2p8mul_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
229 {
230 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8mulb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;(__v32qi)&#32;_mm256_setzero_si256&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
232 }
233 
234 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
235 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
236 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
237 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a46a85101aab2d5498e5ad91a13b7f7d6">_mm256_mask_gf2p8affineinv_epi64_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
239 {
240 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
245 }
246 
247 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
248 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
249 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae480490ea187c232d17f9a12fa4b6af5">_mm256_maskz_gf2p8affineinv_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
251 {
252 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;_mm256_setzero_si256&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
255 }
256 
257 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
258 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
259 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1ab501f474c8b64dc607b179deec48c579">_mm256_mask_gf2p8affine_epi64_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
261 {
262 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
267 }
268 
269 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
270 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
271 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a9c7e51bab900e53daf60d26c6db42543">_mm256_maskz_gf2p8affine_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
273 {
274 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;(__v32qi)_mm256_setzero_si256&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
276 }
277 <emphasis role="preprocessor">#else</emphasis>
278 <emphasis role="preprocessor">#define&#32;_mm256_mask_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
279 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
280 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(C),&#32;(__v32qi)(__m256i)(D),&#32;(int)(E),&#32;&#32;&#32;&#32;&#32;\</emphasis>
281 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(A),&#32;(__mmask32)(B)))</emphasis>
282 <emphasis role="preprocessor">#define&#32;_mm256_maskz_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
283 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineinvqb_v32qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
284 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(B),&#32;(__v32qi)(__m256i)(C),&#32;(int)(D),&#32;&#32;&#32;&#32;&#32;\</emphasis>
285 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v32qi)(__m256i)&#32;_mm256_setzero_si256&#32;(),&#32;(__mmask32)(A)))</emphasis>
286 <emphasis role="preprocessor">#define&#32;_mm256_mask_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
287 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi_mask((__v32qi)(__m256i)(C),\</emphasis>
288 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(D),&#32;(int)(E),&#32;(__v32qi)(__m256i)(A),&#32;(__mmask32)(B)))</emphasis>
289 <emphasis role="preprocessor">#define&#32;_mm256_maskz_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
290 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vgf2p8affineqb_v32qi_mask((__v32qi)(__m256i)(B),\</emphasis>
291 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(C),&#32;(int)(D),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
292 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v32qi)(__m256i)&#32;_mm256_setzero_si256&#32;(),&#32;(__mmask32)(A)))</emphasis>
293 <emphasis role="preprocessor">#endif</emphasis>
294 
295 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_GFNIAVX512VLBW__</emphasis>
296 <emphasis role="preprocessor">#undef&#32;__DISABLE_GFNIAVX512VLBW__</emphasis>
297 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
298 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512VLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
299 
300 <emphasis role="preprocessor">#if&#32;!defined(__GFNI__)&#32;||&#32;!defined(__AVX512F__)&#32;||&#32;!defined(__AVX512BW__)</emphasis>
301 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
302 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;gfni,avx512f,avx512bw&quot;)</emphasis>
303 <emphasis role="preprocessor">#define&#32;__DISABLE_GFNIAVX512FBW__</emphasis>
304 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512FBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
305 
306 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
307 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
308 _mm512_mask_gf2p8mul_epi8&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
310 {
311 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8mulb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;(__v64qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
313 }
314 
315 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
316 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
317 _mm512_maskz_gf2p8mul_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
318 {
319 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8mulb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;(__v64qi)&#32;_mm512_setzero_si512&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
321 }
322 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
323 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
324 _mm512_gf2p8mul_epi8&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>)
325 {
326 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8mulb_v64qi&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
328 }
329 
330 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
331 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
332 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
333 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a421cbd0e131323527a76c3f973f2c1a2">_mm512_mask_gf2p8affineinv_epi64_epi8</link>&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
335 {
336 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
341 }
342 
343 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
344 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
345 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a4befa32adfa84b75a0206e43974bda9b">_mm512_maskz_gf2p8affineinv_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
347 {
348 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;_mm512_setzero_si512&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
351 }
352 
353 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
354 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
355 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae73abc2ea977d0e014dbea821e9f14c2">_mm512_gf2p8affineinv_epi64_epi8</link>&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
356 {
357 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
359 }
360 
361 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
362 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
363 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a6e14615b338215590c8a560392d3913b">_mm512_mask_gf2p8affine_epi64_epi8</link>&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>)
365 {
366 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;(__v64qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>);
368 }
369 
370 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
371 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
372 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3cbe407b6ba7884993e629c0e01d0de2">_mm512_maskz_gf2p8affine_epi64_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>)
374 {
375 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1aa4e0f223a4ce93449ae01ac374dd32d2">__D</link>,&#32;(__v64qi)&#32;_mm512_setzero_si512&#32;(),&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
377 }
378 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
379 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
380 <link linkend="__classes_2lib_2include_2gfniintrin_8h_1a6a0c2d06317596ed80967f05d3788107">_mm512_gf2p8affine_epi64_epi8</link>&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>)
381 {
382 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1ae6a8d32d94e9fe3b08b5fae81807cdf7">__B</link>,&#32;<link linkend="__classes_2lib_2include_2gfniintrin_8h_1a3208bfcdcb440e06677bb31bf03060d6">__C</link>);
384 }
385 <emphasis role="preprocessor">#else</emphasis>
386 <emphasis role="preprocessor">#define&#32;_mm512_mask_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
387 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
388 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(C),&#32;(__v64qi)(__m512i)(D),&#32;(int)(E),&#32;&#32;&#32;&#32;&#32;\</emphasis>
389 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(A),&#32;(__mmask64)(B)))</emphasis>
390 <emphasis role="preprocessor">#define&#32;_mm512_maskz_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
391 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi_mask(&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
392 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(B),&#32;(__v64qi)(__m512i)(C),&#32;(int)(D),&#32;&#32;&#32;&#32;&#32;\</emphasis>
393 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v64qi)(__m512i)&#32;_mm512_setzero_si512&#32;(),&#32;(__mmask64)(A)))</emphasis>
394 <emphasis role="preprocessor">#define&#32;_mm512_gf2p8affineinv_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
395 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineinvqb_v64qi&#32;(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
396 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(A),&#32;(__v64qi)(__m512i)(B),&#32;(int)(C)))</emphasis>
397 <emphasis role="preprocessor">#define&#32;_mm512_mask_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D,&#32;E)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
398 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi_mask((__v64qi)(__m512i)(C),\</emphasis>
399 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(D),&#32;(int)(E),&#32;(__v64qi)(__m512i)(A),&#32;(__mmask64)(B)))</emphasis>
400 <emphasis role="preprocessor">#define&#32;_mm512_maskz_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C,&#32;D)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
401 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi_mask((__v64qi)(__m512i)(B),\</emphasis>
402 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(C),&#32;(int)(D),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
403 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v64qi)(__m512i)&#32;_mm512_setzero_si512&#32;(),&#32;(__mmask64)(A)))</emphasis>
404 <emphasis role="preprocessor">#define&#32;_mm512_gf2p8affine_epi64_epi8(A,&#32;B,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
405 <emphasis role="preprocessor">&#32;&#32;((__m512i)&#32;__builtin_ia32_vgf2p8affineqb_v64qi&#32;((__v64qi)(__m512i)(A),&#32;&#32;&#32;&#32;\</emphasis>
406 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(__v64qi)(__m512i)(B),&#32;(int)(C)))</emphasis>
407 <emphasis role="preprocessor">#endif</emphasis>
408 
409 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_GFNIAVX512FBW__</emphasis>
410 <emphasis role="preprocessor">#undef&#32;__DISABLE_GFNIAVX512FBW__</emphasis>
411 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
412 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__GFNIAVX512FBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
413 
414 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GFNIINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
