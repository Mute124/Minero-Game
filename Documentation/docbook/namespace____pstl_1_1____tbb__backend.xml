<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace____pstl_1_1____tbb__backend" xml:lang="en-US">
<title>__pstl::__tbb_backend Namespace Reference</title>
<indexterm><primary>__pstl::__tbb_backend</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____buffer">__buffer</link></para>

<para>Raw memory buffer with automatic freeing and no exceptions. </para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____func__task">__func_task</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func">__merge_func</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__merge_func_static</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____tbb__backend_1_1____par__trans__red__body">__par_trans_red_body</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____parallel__for__body">__parallel_for_body</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____root__task">__root_task</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____stable__sort__func">__stable_sort_func</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__task</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____pstl_1_1____tbb__backend_1_1____trans__scan__body">__trans_scan_body</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a2ce0aab329490eb18c3aa27835c00cd2">__cancel_execution</link> ()</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Fp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1afc697413a9bdd9d9e8e390827a960735">__parallel_for</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _Fp __f)</para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Value , class _Index , typename _RealBody , typename _Reduction &gt; </para><para>_Value <link linkend="_namespace____pstl_1_1____tbb__backend_1a4a9dd8a02e3599cec8b430574551b661">__parallel_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, const _Value &amp;__identity, const _RealBody &amp;__real_body, const _Reduction &amp;__reduction)</para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____tbb__backend_1afcf54e45b118dd3af37bc3954d883625">__parallel_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _Index __first, _Index __last, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce)</para>
</listitem>
            <listitem><para>template&lt;typename _Index &gt; </para><para>_Index <link linkend="_namespace____pstl_1_1____tbb__backend_1a412bd21d61e578eab6a5afe510c8f07d">__split</link> (_Index __m)</para>
</listitem>
            <listitem><para>template&lt;typename _Index , typename _Tp , typename _Rp , typename _Cp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1ac07922e1fd589396a2fa41616cdf6cc6">__upsweep</link> (_Index __i, _Index __m, _Index __tilesize, _Tp *__r, _Index __lastsize, _Rp __reduce, _Cp __combine)</para>
</listitem>
            <listitem><para>template&lt;typename _Index , typename _Tp , typename _Cp , typename _Sp &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1ac78e1043be34a9e5923c89e5af1eb37e">__downsweep</link> (_Index __i, _Index __m, _Index __tilesize, _Tp *__r, _Index __lastsize, _Tp __initial, _Cp __combine, _Sp __scan)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _Index , typename _Tp , typename _Rp , typename _Cp , typename _Sp , typename _Ap &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1aad41a532e4a5fc9713ff8da06b89f6d1">__parallel_strict_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp , class _Sp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____tbb__backend_1a35e5a2ca33d8474d4f761aefdc3c4b2e">__parallel_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _Index __n, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce, _Sp __scan)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator , typename _Compare , typename _LeafSort &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a967e2aaa88b561469b3205149bb05c23">__parallel_stable_sort</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator __xs, _RandomAccessIterator __xe, _Compare __comp, _LeafSort __leaf_sort, std::size_t __nsort=0)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a973661d74ef06f105eadea08febc282f">__parallel_merge</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , typename _F1 , typename _F2 &gt; </para><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_namespace____pstl_1_1____tbb__backend_1a6de9aba26ebb3d472746a63eca9ba1a9">__parallel_invoke</link> (_ExecutionPolicy &amp;&amp;, _F1 &amp;&amp;__f1, _F2 &amp;&amp;__f2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a2ce0aab329490eb18c3aa27835c00cd2"/><section>
    <title>__cancel_execution()</title>
<indexterm><primary>__cancel_execution</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__cancel_execution</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__cancel_execution ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1ac78e1043be34a9e5923c89e5af1eb37e"/><section>
    <title>__downsweep()</title>
<indexterm><primary>__downsweep</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__downsweep</secondary></indexterm>
<computeroutput>template&lt;typename _Index , typename _Tp , typename _Cp , typename _Sp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__downsweep (_Index __i, _Index __m, _Index __tilesize, _Tp * __r, _Index __lastsize, _Tp __initial, _Cp __combine, _Sp __scan)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_ac78e1043be34a9e5923c89e5af1eb37e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_ac78e1043be34a9e5923c89e5af1eb37e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1afc697413a9bdd9d9e8e390827a960735"/><section>
    <title>__parallel_for()</title>
<indexterm><primary>__parallel_for</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_for</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _Fp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__parallel_for (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, _Fp __f)</computeroutput></para><para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a6de9aba26ebb3d472746a63eca9ba1a9"/><section>
    <title>__parallel_invoke()</title>
<indexterm><primary>__parallel_invoke</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_invoke</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _F1 , typename _F2 &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__parallel_invoke (_ExecutionPolicy &amp;&amp; , _F1 &amp;&amp; __f1, _F2 &amp;&amp; __f2)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a973661d74ef06f105eadea08febc282f"/><section>
    <title>__parallel_merge()</title>
<indexterm><primary>__parallel_merge</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_merge</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator1 , typename _RandomAccessIterator2 , typename _RandomAccessIterator3 , typename _Compare , typename _LeafMerge &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__parallel_merge (_ExecutionPolicy &amp;&amp; , _RandomAccessIterator1 __xs, _RandomAccessIterator1 __xe, _RandomAccessIterator2 __ys, _RandomAccessIterator2 __ye, _RandomAccessIterator3 __zs, _Compare __comp, _LeafMerge __leaf_merge)</computeroutput></para></section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a4a9dd8a02e3599cec8b430574551b661"/><section>
    <title>__parallel_reduce()</title>
<indexterm><primary>__parallel_reduce</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_reduce</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Value , class _Index , typename _RealBody , typename _Reduction &gt; </computeroutput><para><computeroutput>_Value __pstl::__tbb_backend::__parallel_reduce (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, const _Value &amp; __identity, const _RealBody &amp; __real_body, const _Reduction &amp; __reduction)</computeroutput></para><para>

<para>Evaluation of brick f[i,j) for each subrange [i,j) of [first,last) </para>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a967e2aaa88b561469b3205149bb05c23"/><section>
    <title>__parallel_stable_sort()</title>
<indexterm><primary>__parallel_stable_sort</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_stable_sort</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _RandomAccessIterator , typename _Compare , typename _LeafSort &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__parallel_stable_sort (_ExecutionPolicy &amp;&amp; , _RandomAccessIterator __xs, _RandomAccessIterator __xe, _Compare __comp, _LeafSort __leaf_sort, std::size_t __nsort = <computeroutput>0</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_a967e2aaa88b561469b3205149bb05c23_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1aad41a532e4a5fc9713ff8da06b89f6d1"/><section>
    <title>__parallel_strict_scan()</title>
<indexterm><primary>__parallel_strict_scan</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_strict_scan</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , typename _Index , typename _Tp , typename _Rp , typename _Cp , typename _Sp , typename _Ap &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__parallel_strict_scan (_ExecutionPolicy &amp;&amp; , _Index __n, _Tp __initial, _Rp __reduce, _Cp __combine, _Sp __scan, _Ap __apex)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_aad41a532e4a5fc9713ff8da06b89f6d1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1afcf54e45b118dd3af37bc3954d883625"/><section>
    <title>__parallel_transform_reduce()</title>
<indexterm><primary>__parallel_transform_reduce</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_transform_reduce</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp &gt; </computeroutput><para><computeroutput>_Tp __pstl::__tbb_backend::__parallel_transform_reduce (_ExecutionPolicy &amp;&amp; , _Index __first, _Index __last, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_afcf54e45b118dd3af37bc3954d883625_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a35e5a2ca33d8474d4f761aefdc3c4b2e"/><section>
    <title>__parallel_transform_scan()</title>
<indexterm><primary>__parallel_transform_scan</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__parallel_transform_scan</secondary></indexterm>
<computeroutput>template&lt;class _ExecutionPolicy , class _Index , class _Up , class _Tp , class _Cp , class _Rp , class _Sp &gt; </computeroutput><para><computeroutput>_Tp __pstl::__tbb_backend::__parallel_transform_scan (_ExecutionPolicy &amp;&amp; , _Index __n, _Up __u, _Tp __init, _Cp __combine, _Rp __brick_reduce, _Sp __scan)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_a35e5a2ca33d8474d4f761aefdc3c4b2e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1a412bd21d61e578eab6a5afe510c8f07d"/><section>
    <title>__split()</title>
<indexterm><primary>__split</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__split</secondary></indexterm>
<computeroutput>template&lt;typename _Index &gt; </computeroutput><para><computeroutput>_Index __pstl::__tbb_backend::__split (_Index __m)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_a412bd21d61e578eab6a5afe510c8f07d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace____pstl_1_1____tbb__backend_1ac07922e1fd589396a2fa41616cdf6cc6"/><section>
    <title>__upsweep()</title>
<indexterm><primary>__upsweep</primary><secondary>__pstl::__tbb_backend</secondary></indexterm>
<indexterm><primary>__pstl::__tbb_backend</primary><secondary>__upsweep</secondary></indexterm>
<computeroutput>template&lt;typename _Index , typename _Tp , typename _Rp , typename _Cp &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> __pstl::__tbb_backend::__upsweep (_Index __i, _Index __m, _Index __tilesize, _Tp * __r, _Index __lastsize, _Rp __reduce, _Cp __combine)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_ac07922e1fd589396a2fa41616cdf6cc6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace____pstl_1_1____tbb__backend_ac07922e1fd589396a2fa41616cdf6cc6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
