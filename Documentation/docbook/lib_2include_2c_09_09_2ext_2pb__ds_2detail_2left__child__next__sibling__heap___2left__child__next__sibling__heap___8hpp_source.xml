<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2left__child__next__sibling__heap___2left__child__next__sibling__heap___8hpp_source" xml:lang="en-US">
<title>left_child_next_sibling_heap_.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_HPP</emphasis>
43 
44 <emphasis role="comment">/*</emphasis>
45 <emphasis role="comment">&#32;*&#32;Based&#32;on&#32;CLRS.</emphasis>
46 <emphasis role="comment">&#32;*/</emphasis>
47 
48 <emphasis role="preprocessor">#include&#32;&lt;iterator&gt;</emphasis>
49 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/cond_dealtor.hpp&gt;</emphasis>
50 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
51 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp&gt;</emphasis>
52 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp&gt;</emphasis>
53 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp&gt;</emphasis>
54 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LC_NS_HEAP_TRACE_</emphasis>
55 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
56 <emphasis role="preprocessor">#endif</emphasis>
57 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
58 
59 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
60 {
61 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
62 &#32;&#32;{
63 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
64 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
65 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Value_Type,&#32;typename&#32;Cmp_Fn,&#32;typename&#32;Node_Metadata,&#32;\</emphasis>
66 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc,&#32;bool&#32;Single_Link_Roots&gt;</emphasis>
67 
68 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
69 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;left_child_next_sibling_heap&lt;Value_Type,&#32;Cmp_Fn,&#32;Node_Metadata,&#32;\</emphasis>
70 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Alloc,&#32;Single_Link_Roots&gt;</emphasis>
71 <emphasis role="preprocessor">#else</emphasis>
72 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
73 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;template&lt;typename&#32;Value_Type,&#32;typename&#32;Cmp_Fn,&#32;typename&#32;Node_Metadata,&#32;\</emphasis>
74 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc&gt;</emphasis>
75 
76 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;left_child_next_sibling_heap&lt;Value_Type,&#32;Cmp_Fn,&#32;Node_Metadata,&#32;_Alloc&gt;</emphasis>
78 <emphasis role="preprocessor">#endif</emphasis>
79 
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Cmp_Fn,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Node_Metadata,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc
85 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,<emphasis role="keywordtype">bool</emphasis>&#32;Single_Link_Roots&gt;
87 <emphasis role="preprocessor">#else</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
89 <emphasis role="preprocessor">#endif</emphasis>
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>left_child_next_sibling_heap&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;Cmp_Fn
91 &#32;&#32;&#32;&#32;{
92 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>
94 &#32;&#32;&#32;&#32;left_child_next_sibling_heap_node_&lt;Value_Type,&#32;Node_Metadata,&#32;_Alloc&gt;
95 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ad322c249d1dcd273e8b7bbf67e30b58a">node</link>;
96 
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits&lt;_Alloc, node&gt;</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">alloc_traits</link>;
99 
100 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits_1a5c2f6b883ad38d742a04662bd1442365">alloc_traits::allocator_type</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a2374b864a94718b5d5d814053e8e64a8">node_allocator</link>;
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;alloc_traits::pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>;
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;alloc_traits::const_pointer&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>;
105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_Metadata&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ae22f66ec64d9d51589d9b2558f334061">node_metadata</link>;
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;node_pointer,&#32;node_pointer&gt;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5dbc1cc3cd9a11abe3d70d4c0f5f964b">node_pointer_pair</link>;
107 
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1cond__dealtor">cond_dealtor&lt; node, _Alloc&gt;</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1cond__dealtor">cond_dealtor_t</link>;
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
112 &#32;&#32;&#32;&#32;{
113 &#32;&#32;&#32;&#32;&#32;&#32;simple_value&#32;=&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple">is_simple&lt;Value_Type&gt;::value</link>
114 &#32;&#32;&#32;&#32;};
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;integral_constant&lt;int,&#32;simple_value&gt;&#32;&#32;no_throw_copies_t;
117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Value_Type&gt;</link>&#32;__rebind_v;
118 
119 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>;
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::difference_type&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ad9c18c8e2e7a131a13bf6e1a455b12c4">difference_type</link>;
122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0d95e5dc4b850fec44264596c49c2f39">value_type</link>;
123 
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::pointer&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aaab2640ba15f0e3f246af26580ea1147">pointer</link>;
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_pointer&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a534410aebe946680e1a2907701dcfbbb">const_pointer</link>;
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::reference&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ac0e9caa07d2d125d1878a7383442f3f4">reference</link>;
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_v::const_reference&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1adf9db7f9e6843e359d3506c8a2869014">const_reference</link>;
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">left_child_next_sibling_heap_node_point_const_iterator_&lt;node, _Alloc&gt;</link>
130 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a74b692c37af2f4ed2296b0aa4b42888d">point_const_iterator</link>;
131 
132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">point_const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aadc34cd4cb7691010506f2d386dff480">point_iterator</link>;
133 
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">left_child_next_sibling_heap_const_iterator_&lt;node, _Alloc&gt;</link>
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ae516107b09e7b05f766c00f652de6d96">const_iterator</link>;
136 
137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">const_iterator</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aa9b6180070aae87ab0dde439a77083ba">iterator</link>;
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Cmp_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ade1e364f4e8007903b6793ec1257ee8f">cmp_fn</link>;
139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ac5410562024930e6d93b046aef674642">allocator_type</link>;
140 
141 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1af475b75a2016c45889ac8d752dca787c">left_child_next_sibling_heap</link>();
142 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ad12ae6951edc59ee9b683b145b0c1781">left_child_next_sibling_heap</link>(<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;);
143 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ae0027bc69f942e24cd4c3c635069bd5f">left_child_next_sibling_heap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap">left_child_next_sibling_heap</link>&amp;);
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5e80f649636d88dbcbc3b2e534f13599">swap</link>(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;);
147 
148 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a1d00743ecd8e59a10f1c9dc5fe507ca6">~left_child_next_sibling_heap</link>();
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a4d6177960276eca8b5dd332526f42c62">empty</link>()&#32;<emphasis role="keyword">const</emphasis>;
152 
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>
154 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aed2580bc7a670c9d20e77cf15dc26fe6">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>
157 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3660be2039685b496b20c7b2f1457a74">max_size</link>()&#32;<emphasis role="keyword">const</emphasis>;
158 
159 &#32;&#32;&#32;&#32;&#32;&#32;Cmp_Fn&amp;
160 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a1b79993683a786dcc1dfe08aeb3cab53">get_cmp_fn</link>();
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Cmp_Fn&amp;
163 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a60f3a241d3e1b5619f7932a866e6af4b">get_cmp_fn</link>()&#32;<emphasis role="keyword">const</emphasis>;
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">iterator</link>
166 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a81e3add6de4e9b7cfcd60b94620ea0d5">begin</link>();
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">const_iterator</link>
169 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aa21cce7863c99a360259ca2345d5f507">begin</link>()&#32;<emphasis role="keyword">const</emphasis>;
170 
171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">iterator</link>
172 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1adafe1426a35926c4a758fa694cf07db1">end</link>();
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">const_iterator</link>
175 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a6e3af06313858ab732b1805976bc78dc">end</link>()&#32;<emphasis role="keyword">const</emphasis>;
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
178 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3561c4be2f4f93aa0dab1290ffdffa67">clear</link>();
179 
180 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LC_NS_HEAP_TRACE_</emphasis>
181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;trace()&#32;<emphasis role="keyword">const</emphasis>;
183 <emphasis role="preprocessor">#endif</emphasis>
184 
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a4ea4df0ecba6c422340a6f5ffa6d7295">get_new_node_for_insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1adf9db7f9e6843e359d3506c8a2869014">const_reference</link>);
188 
189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
190 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a80dcaa23f15f8a3cd813aa5344576820">make_child_of</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
191 
192 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
193 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1af8e3eeeba74bdf1d40442cc1392e6bf9">value_swap</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap">left_child_next_sibling_heap</link>&amp;);
194 
195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ad17a447c0b6ca5c29f5e0b00027ae63b">parent</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
199 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a4e07078744f37f5a3ae5465641338dd7">swap_with_parent</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
200 
201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
202 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1acc5a3627307690023cb6a0417236edd3">bubble_to_top</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
203 
204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0992b3784ceaf59a23eaf0a144969c0e">actual_erase_node</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
206 
207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
208 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1ad589272f3ff2e1bdd2a647c7cb0bff79">clear_imp</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>);
209 
210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
211 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0957a5df6bb9995cffad998dd78e4617">to_linked_list</link>();
212 
213 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Pred&gt;
214 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
215 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5db6b05816c542a52be37e6fcc2a30c4">prune</link>(Pred);
216 
217 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
219 &#32;&#32;&#32;&#32;&#32;&#32;assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
220 
221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
222 &#32;&#32;&#32;&#32;&#32;&#32;assert_node_consistent(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>,&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
223 
224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>
225 &#32;&#32;&#32;&#32;&#32;&#32;size_under_node(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>);
226 
227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>
228 &#32;&#32;&#32;&#32;&#32;&#32;degree(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>);
229 <emphasis role="preprocessor">#endif</emphasis>
230 
231 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LC_NS_HEAP_TRACE_</emphasis>
232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
233 &#32;&#32;&#32;&#32;&#32;&#32;trace_node(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>,&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>);
234 <emphasis role="preprocessor">#endif</emphasis>
235 
236 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
237 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
239 &#32;&#32;&#32;&#32;&#32;&#32;assert_iterators(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
240 
241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
242 &#32;&#32;&#32;&#32;&#32;&#32;assert_size(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
243 
244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>
245 &#32;&#32;&#32;&#32;&#32;&#32;size_from_node(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>);
246 <emphasis role="preprocessor">#endif</emphasis>
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
249 &#32;&#32;&#32;&#32;&#32;&#32;recursive_copy_node(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>);
250 
251 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
252 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a4ea4df0ecba6c422340a6f5ffa6d7295">get_new_node_for_insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1adf9db7f9e6843e359d3506c8a2869014">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>);
253 
254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>
255 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a4ea4df0ecba6c422340a6f5ffa6d7295">get_new_node_for_insert</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1adf9db7f9e6843e359d3506c8a2869014">const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>);
256 
257 <emphasis role="preprocessor">#ifdef&#32;PB_DS_LC_NS_HEAP_TRACE_</emphasis>
258 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Metadata_&gt;
259 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
260 &#32;&#32;&#32;&#32;&#32;&#32;trace_node_metadata(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;Metadata_&gt;</link>);
261 
262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
263 &#32;&#32;&#32;&#32;&#32;&#32;trace_node_metadata(<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a3588ba8c131fa3b8c8d82712f19969c6">node_const_pointer</link>,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type&lt;null_type&gt;</link>);
264 <emphasis role="preprocessor">#endif</emphasis>
265 
266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a2374b864a94718b5d5d814053e8e64a8">node_allocator</link>&#32;&#32;&#32;&#32;&#32;s_node_allocator;
267 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;no_throw_copies_t&#32;&#32;s_no_throw_copies_ind;
268 
269 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
270 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a5671d99f90fde46bc751b9eee33c8738">node_pointer</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a62963ad13c2304c9bb09e0acfbe4d334">m_p_root</link>;
271 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1a0db9142ac6b4be676ede406cff21139a">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap_1aabfe952bad24b9061854bb48e38f8554">m_size</link>;
272 &#32;&#32;&#32;&#32;};
273 
274 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp&gt;</emphasis>
275 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp&gt;</emphasis>
276 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp&gt;</emphasis>
277 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp&gt;</emphasis>
278 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp&gt;</emphasis>
279 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp&gt;</emphasis>
280 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp&gt;</emphasis>
281 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/left_child_next_sibling_heap_/policy_access_fn_imps.hpp&gt;</emphasis>
282 
283 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
284 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
285 
286 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
287 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
288 
289 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
