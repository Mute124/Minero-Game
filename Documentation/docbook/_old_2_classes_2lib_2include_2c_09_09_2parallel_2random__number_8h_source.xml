<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2parallel_2random__number_8h_source" xml:lang="en-US">
<title>random_number.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/random_number.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Johannes&#32;Singler.</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_RANDOM_NUMBER_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_RANDOM_NUMBER_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;parallel/types.h&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;tr1/random&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
38 
39 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
40 {
42 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_RandomNumber
43 &#32;&#32;{
44 &#32;&#32;<emphasis role="keyword">private</emphasis>:
45 &#32;&#32;&#32;&#32;std::tr1::mt19937&#32;&#32;&#32;_M_mt;
46 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_supremum;
47 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup;
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_supremum_reciprocal;
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup_reciprocal;
50 
51 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assumed&#32;to&#32;be&#32;twice&#32;as&#32;long&#32;as&#32;the&#32;usual&#32;random&#32;number.</emphasis>
52 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__cache;
53 
54 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Bit&#32;results.</emphasis>
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__bits_left;
56 &#32;&#32;&#32;&#32;
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>
58 &#32;&#32;&#32;&#32;__scale_down(<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;__x,
59 #<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a680d9fc5fc8574e507cbe9340f688173">_GLIBCXX_SCALE_DOWN_FPU</link>
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;<emphasis role="comment">/*_M_supremum*/</emphasis>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;_M_supremum_reciprocal)
61 <emphasis role="preprocessor">#else</emphasis>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;_M_supremum,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="comment">/*_M_supremum_reciprocal*/</emphasis>)
63 #endif
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
65 <emphasis role="preprocessor">#if&#32;_GLIBCXX_SCALE_DOWN_FPU</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>(__x&#32;*&#32;_M_supremum_reciprocal);
67 <emphasis role="preprocessor">#else</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(__x&#32;%&#32;_M_supremum);
69 <emphasis role="preprocessor">#endif</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;<emphasis role="keyword">public</emphasis>:
74 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___random_number_1acdf323e8c00b83892d86bf932bf3a966">_RandomNumber</link>()
75 &#32;&#32;&#32;&#32;:&#32;_M_mt(0),&#32;_M_supremum(0x100000000ULL),
76 &#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup(1ULL&#32;&lt;&lt;&#32;<link linkend="_namespacestd">std</link>::numeric_limits&lt;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&gt;::digits),
77 &#32;&#32;&#32;&#32;&#32;&#32;_M_supremum_reciprocal(double(_M_supremum)&#32;/&#32;double(_M_rand_sup)),
78 &#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup_reciprocal(1.0&#32;/&#32;double(_M_rand_sup)),
79 &#32;&#32;&#32;&#32;&#32;&#32;__cache(0),&#32;__bits_left(0)&#32;{&#32;}
80 
85 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___random_number_1ae80e68e8fce17ae590fd4ca1b5ea40d4">_RandomNumber</link>(<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__seed,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;_M_supremum&#32;=&#32;0x100000000ULL)
86 &#32;&#32;&#32;&#32;:&#32;_M_mt(__seed),&#32;_M_supremum(_M_supremum),
87 &#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup(1ULL&#32;&lt;&lt;&#32;<link linkend="_namespacestd">std</link>::numeric_limits&lt;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&gt;::digits),
88 &#32;&#32;&#32;&#32;&#32;&#32;_M_supremum_reciprocal(double(_M_supremum)&#32;/&#32;double(_M_rand_sup)),
89 &#32;&#32;&#32;&#32;&#32;&#32;_M_rand_sup_reciprocal(1.0&#32;/&#32;double(_M_rand_sup)),
90 &#32;&#32;&#32;&#32;&#32;&#32;__cache(0),&#32;__bits_left(0)&#32;{&#32;}
91 
93 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>
94 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___random_number_1ac0da7b514eddc08518d496c93015bb39">operator()</link>()
95 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__scale_down(_M_mt(),&#32;_M_supremum,&#32;_M_supremum_reciprocal);&#32;}
96 
99 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>
100 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___random_number_1a58e1450c9d06b629dde759438bc7d83c">operator()</link>(<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;local_supremum)
101 &#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__scale_down(_M_mt(),&#32;local_supremum,
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>(local_supremum&#32;*&#32;_M_rand_sup_reciprocal));
104 &#32;&#32;&#32;&#32;}
105 
108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
109 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__parallel_1_1___random_number_1a4fd974d8ce4f13ea3c1aad5cb999c55b">__genrand_bits</link>(<emphasis role="keywordtype">int</emphasis>&#32;__bits)
110 &#32;&#32;&#32;&#32;{
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__res&#32;=&#32;__cache&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;__bits)&#32;-&#32;1);
112 &#32;&#32;&#32;&#32;&#32;&#32;__cache&#32;=&#32;__cache&#32;&gt;&gt;&#32;__bits;
113 &#32;&#32;&#32;&#32;&#32;&#32;__bits_left&#32;-=&#32;__bits;
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__bits_left&#32;&lt;&#32;32)
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__cache&#32;|=&#32;((<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>(_M_mt()))&#32;&lt;&lt;&#32;__bits_left);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__bits_left&#32;+=&#32;32;
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__res;
120 &#32;&#32;&#32;&#32;}
121 };
122 
123 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_parallel</emphasis>
124 
125 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_RANDOM_NUMBER_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
