<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__bit" xml:lang="en-US">
<title>GLM_GTX_bit</title>
<indexterm><primary>GLM_GTX_bit</primary></indexterm>
Collaboration diagram for GLM_GTX_bit:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05">glm::highestBitValue</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__gtx__bit_1ga2ff6568089f3a9b67f5c30918855fc6f">glm::lowestBitValue</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__gtx__bit_1gad9bf719d4374c5264e051f18dca0d660">glm::highestBitValue</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__gtx__bit_1ga8cda2459871f574a0aecbe702ac93291">glm::powerOfTwoAbove</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__gtx__bit_1gad26991a3aead0f1c7f55749ee6bbc2c8">glm::powerOfTwoAbove</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__gtx__bit_1ga3de7df63c589325101a2817a56f8e29d">glm::powerOfTwoBelow</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__gtx__bit_1gaa7467f2caf7797c2e60a381622e0e7f7">glm::powerOfTwoBelow</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType <link linkend="_group__gtx__bit_1ga5f65973a5d2ea38c719e6a663149ead9">glm::powerOfTwoNearest</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; <link linkend="_group__gtx__bit_1ga53446682159c70ca9a80e1db89cdb424">glm::powerOfTwoNearest</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp;<link linkend="_classvalue">value</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/bit.hpp&gt; to use the features of this extension.</para>

<para>Allow to perform bit operations on integer values </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__bit_1ga0dcc8fe7c3d3ad60dea409281efa3d05"/><section>
    <title>highestBitValue()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>highestBitValue</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>highestBitValue</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::highestBitValue (genIUType Value)</computeroutput></para>
<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga0dcc8fe7c3d3ad60dea409281efa3d05_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1gad9bf719d4374c5264e051f18dca0d660"/><section>
    <title>highestBitValue()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>highestBitValue</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>highestBitValue</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::highestBitValue (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; value)</computeroutput></para>
<para>Find the highest bit set to 1 in a integer variable and return its value.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_gad9bf719d4374c5264e051f18dca0d660_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1ga2ff6568089f3a9b67f5c30918855fc6f"/><section>
    <title>lowestBitValue()</title>
<indexterm><primary>lowestBitValue</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>lowestBitValue</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::lowestBitValue (genIUType Value)</computeroutput></para>
<para><formalpara><title>See also</title>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga2ff6568089f3a9b67f5c30918855fc6f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1ga8cda2459871f574a0aecbe702ac93291"/><section>
    <title>powerOfTwoAbove()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>powerOfTwoAbove</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoAbove</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::powerOfTwoAbove (genIUType Value)</computeroutput></para>
<para>Return the power of two number which value is just higher the input value. Deprecated, use <link linkend="_namespaceceil_power_of_two">ceilPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga8cda2459871f574a0aecbe702ac93291_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1gad26991a3aead0f1c7f55749ee6bbc2c8"/><section>
    <title>powerOfTwoAbove()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>powerOfTwoAbove</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoAbove</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::powerOfTwoAbove (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; value)</computeroutput></para>
<para>Return the power of two number which value is just higher the input value. Deprecated, use <link linkend="_namespaceceil_power_of_two">ceilPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_gad26991a3aead0f1c7f55749ee6bbc2c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1ga3de7df63c589325101a2817a56f8e29d"/><section>
    <title>powerOfTwoBelow()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>powerOfTwoBelow</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoBelow</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::powerOfTwoBelow (genIUType Value)</computeroutput></para>
<para>Return the power of two number which value is just lower the input value. Deprecated, use <link linkend="_namespacefloor_power_of_two">floorPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga3de7df63c589325101a2817a56f8e29d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1gaa7467f2caf7797c2e60a381622e0e7f7"/><section>
    <title>powerOfTwoBelow()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>powerOfTwoBelow</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoBelow</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::powerOfTwoBelow (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; value)</computeroutput></para>
<para>Return the power of two number which value is just lower the input value. Deprecated, use <link linkend="_namespacefloor_power_of_two">floorPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_gaa7467f2caf7797c2e60a381622e0e7f7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1ga5f65973a5d2ea38c719e6a663149ead9"/><section>
    <title>powerOfTwoNearest()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>powerOfTwoNearest</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoNearest</secondary></indexterm>
<computeroutput>template&lt;typename genIUType &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> genIUType glm::powerOfTwoNearest (genIUType Value)</computeroutput></para>
<para>Return the power of two number which value is the closet to the input value. Deprecated, use <link linkend="_namespaceround_power_of_two">roundPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga5f65973a5d2ea38c719e6a663149ead9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__bit_1ga53446682159c70ca9a80e1db89cdb424"/><section>
    <title>powerOfTwoNearest()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>powerOfTwoNearest</primary><secondary>GLM_GTX_bit</secondary></indexterm>
<indexterm><primary>GLM_GTX_bit</primary><secondary>powerOfTwoNearest</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link> L, typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a8edfb48cdc249a3ee48406bf179023dc">GLM_DEPRECATED</link> <link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; glm::powerOfTwoNearest (<link linkend="_structglm_1_1vec">vec</link>&lt; <link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>, T, Q &gt; const &amp; value)</computeroutput></para>
<para>Return the power of two number which value is the closet to the input value. Deprecated, use <link linkend="_namespaceround_power_of_two">roundPowerOfTwo</link> from GTC_round instead</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__gtc__round">GLM_GTC_round</link> </para>

<para><link linkend="_group__gtx__bit">GLM_GTX_bit</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__bit_ga53446682159c70ca9a80e1db89cdb424_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
