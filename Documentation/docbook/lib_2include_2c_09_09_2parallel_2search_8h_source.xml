<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2parallel_2search_8h_source" xml:lang="en-US">
<title>search.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/search.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
31 <emphasis role="comment">//&#32;Written&#32;by&#32;Felix&#32;Putze.</emphasis>
32 
33 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_PARALLEL_SEARCH_H</emphasis>
34 <emphasis role="preprocessor">#define&#32;_GLIBCXX_PARALLEL_SEARCH_H&#32;1</emphasis>
35 
36 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algobase.h&gt;</emphasis>
37 
38 <emphasis role="preprocessor">#include&#32;&lt;parallel/parallel.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;parallel/equally_split.h&gt;</emphasis>
40 
41 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__parallel">__gnu_parallel</link>
42 {
49 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_RAIter,&#32;<emphasis role="keyword">typename</emphasis>&#32;_DifferenceTp&gt;
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
51 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ab9807ee5cc58530be7b997207e2bf1f3">__calc_borders</link>(_RAIter&#32;__elements,&#32;_DifferenceTp&#32;__length,&#32;
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_DifferenceTp*&#32;__off)
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_DifferenceTp&#32;_DifferenceType;
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;__off[0]&#32;=&#32;-1;
57 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__length&#32;&gt;&#32;1)
58 &#32;&#32;&#32;&#32;__off[1]&#32;=&#32;0;
59 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__k&#32;=&#32;0;
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(_DifferenceType&#32;__j&#32;=&#32;2;&#32;__j&#32;&lt;=&#32;__length;&#32;__j++)
61 &#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__k&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;!(__elements[__k]&#32;==&#32;__elements[__j-1]))
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__k&#32;=&#32;__off[__k];
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__off[__j]&#32;=&#32;++__k;
65 &#32;&#32;&#32;&#32;}
66 &#32;&#32;&#32;&#32;}
67 
68 &#32;&#32;<emphasis role="comment">//&#32;Generic&#32;parallel&#32;find&#32;algorithm&#32;(requires&#32;random&#32;access&#32;iterator).</emphasis>
69 
77 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;__RAIter1,
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;__RAIter2,
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Pred&gt;
80 &#32;&#32;&#32;&#32;__RAIter1
81 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1af1e654f03e48e80a0c73db7ad88e8a86">__search_template</link>(__RAIter1&#32;__begin1,&#32;__RAIter1&#32;__end1,
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__RAIter2&#32;__begin2,&#32;__RAIter2&#32;__end2,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Pred&#32;__pred)
84 &#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::iterator_traits&lt;__RAIter1&gt;&#32;_TraitsType;
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_TraitsType::difference_type&#32;_DifferenceType;
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2compiletime__settings_8h_1a77fb93c9cecec331ccee755972695128">_GLIBCXX_CALL</link>((__end1&#32;-&#32;__begin1)&#32;+&#32;(__end2&#32;-&#32;__begin2));
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__pattern_length&#32;=&#32;__end2&#32;-&#32;__begin2;
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pattern&#32;too&#32;short.</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(__pattern_length&#32;&lt;=&#32;0)
94 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__end1;
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Last&#32;point&#32;to&#32;start&#32;search.</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__input_length&#32;=&#32;(__end1&#32;-&#32;__begin1)&#32;-&#32;__pattern_length;
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Where&#32;is&#32;first&#32;occurrence&#32;of&#32;pattern?&#32;defaults&#32;to&#32;end.</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__result&#32;=&#32;(__end1&#32;-&#32;__begin1);
101 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;*__splitters;
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pattern&#32;too&#32;long.</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__input_length&#32;&lt;&#32;0)
105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__end1;
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structomp__lock__t">omp_lock_t</link>&#32;__result_lock;
108 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ab9c82451011f65593480a3ba21ce46bc">omp_init_lock</link>(&amp;__result_lock);
109 
110 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__num_threads&#32;=&#32;std::max&lt;_DifferenceType&gt;
111 &#32;&#32;&#32;&#32;(1,&#32;std::min&lt;_DifferenceType&gt;(__input_length,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1aa72851b809c2b314bc09580c3512f281">__get_max_threads</link>()));
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;_DifferenceType&#32;__advances[__pattern_length];
115 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ab9807ee5cc58530be7b997207e2bf1f3">__calc_borders</link>(__begin2,&#32;__pattern_length,&#32;__advances);
116 
117 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;parallel&#32;num_threads(__num_threads)</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;{
119 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;omp&#32;single</emphasis>
120 &#32;&#32;&#32;&#32;{
121 &#32;&#32;&#32;&#32;&#32;&#32;__num_threads&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ac42ead04531fd33507e3d3a6f648b200">omp_get_num_threads</link>();
122 &#32;&#32;&#32;&#32;&#32;&#32;__splitters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;_DifferenceType[__num_threads&#32;+&#32;1];
123 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1ac799255921e70b0378d145924d673f9c">__equally_split</link>(__input_length,&#32;__num_threads,&#32;__splitters);
124 &#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link>&#32;__iam&#32;=&#32;<link linkend="__classes_2lib_2include_2omp_8h_1aa03cf372d8266eef024262a68d304e1b">omp_get_thread_num</link>();
127 
128 &#32;&#32;&#32;&#32;_DifferenceType&#32;__start&#32;=&#32;__splitters[__iam],
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__stop&#32;=&#32;__splitters[__iam&#32;+&#32;1];
130 
131 &#32;&#32;&#32;&#32;_DifferenceType&#32;__pos_in_pattern&#32;=&#32;0;
132 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__found_pattern&#32;=&#32;<emphasis role="keyword">false</emphasis>;
133 
134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__start&#32;&lt;=&#32;__stop&#32;&amp;&amp;&#32;!__found_pattern)
135 &#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;new&#32;value&#32;of&#32;result.</emphasis>
137 <emphasis role="preprocessor">#pragma&#32;omp&#32;flush(__result)</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;chance&#32;for&#32;this&#32;thread&#32;to&#32;find&#32;first&#32;occurrence.</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__result&#32;&lt;&#32;__start)
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__pred(__begin1[__start&#32;+&#32;__pos_in_pattern],
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__begin2[__pos_in_pattern]))
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++__pos_in_pattern;
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__pos_in_pattern&#32;==&#32;__pattern_length)
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Found&#32;new&#32;candidate&#32;for&#32;result.</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2omp_8h_1ab7a6a9f1b9a08b10b4770c3389cb8d3c">omp_set_lock</link>(&amp;__result_lock);
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__result&#32;=&#32;std::min(__result,&#32;__start);
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2omp_8h_1a9671d710d3c51bdc9940b81a3e23dcf6">omp_unset_lock</link>(&amp;__result_lock);
151 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__found_pattern&#32;=&#32;<emphasis role="keyword">true</emphasis>;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;safe&#32;jump.</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__start&#32;+=&#32;(__pos_in_pattern&#32;-&#32;__advances[__pos_in_pattern]);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos_in_pattern&#32;=&#32;(__advances[__pos_in_pattern]&#32;&lt;&#32;0
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;0&#32;:&#32;__advances[__pos_in_pattern]);
160 &#32;&#32;&#32;&#32;&#32;&#32;}
161 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//parallel</emphasis>
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2omp_8h_1a7f838ad86590395c9aaaf7eabf80665e">omp_destroy_lock</link>(&amp;__result_lock);
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;__splitters;
166 &#32;&#32;&#32;&#32;&#32;&#32;
167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;iterator&#32;on&#32;found&#32;element.</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__begin1&#32;+&#32;__result);
169 &#32;&#32;&#32;&#32;}
170 }&#32;<emphasis role="comment">//&#32;end&#32;namespace</emphasis>
171 
172 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GLIBCXX_PARALLEL_SEARCH_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
