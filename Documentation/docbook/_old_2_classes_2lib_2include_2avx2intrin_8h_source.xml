<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2avx2intrin_8h_source" xml:lang="en-US">
<title>avx2intrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/avx2intrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2011-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_IMMINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#&#32;error&#32;&quot;Never&#32;use&#32;&lt;avx2intrin.h&gt;&#32;directly;&#32;include&#32;&lt;immintrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_AVX2INTRIN_H_INCLUDED</emphasis>
29 <emphasis role="preprocessor">#define&#32;_AVX2INTRIN_H_INCLUDED</emphasis>
30 
31 <emphasis role="preprocessor">#ifndef&#32;__AVX2__</emphasis>
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx2&quot;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX2__</emphasis>
35 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX2__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
36 
37 <emphasis role="comment">/*&#32;Sum&#32;absolute&#32;8-bit&#32;integer&#32;difference&#32;of&#32;adjacent&#32;groups&#32;of&#32;4</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;byte&#32;integers&#32;in&#32;the&#32;first&#32;2&#32;operands.&#32;&#32;Starting&#32;offsets&#32;within</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;operands&#32;are&#32;determined&#32;by&#32;the&#32;3rd&#32;mask&#32;operand.&#32;&#32;*/</emphasis>
40 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
41 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
42 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
43 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ac139092f30e8322e5d76257b5bac2886">_mm256_mpsadbw_epu8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
44 {
45 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_mpsadbw256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
47 }
48 <emphasis role="preprocessor">#else</emphasis>
49 <emphasis role="preprocessor">#define&#32;_mm256_mpsadbw_epu8(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
50 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_mpsadbw256&#32;((__v32qi)(__m256i)(X),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
51 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)(__m256i)(Y),&#32;(int)(M)))</emphasis>
52 <emphasis role="preprocessor">#endif</emphasis>
53 
54 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
55 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
56 _mm256_abs_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>)
57 {
58 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pabsb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
59 }
60 
61 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
62 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
63 _mm256_abs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>)
64 {
65 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pabsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
66 }
67 
68 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
69 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
70 _mm256_abs_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>)
71 {
72 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pabsd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
73 }
74 
75 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
76 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
77 _mm256_packs_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
78 {
79 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_packssdw256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
80 }
81 
82 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
83 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
84 _mm256_packs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
85 {
86 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_packsswb256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
87 }
88 
89 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
90 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
91 _mm256_packus_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
92 {
93 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_packusdw256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
94 }
95 
96 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
97 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
98 _mm256_packus_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
99 {
100 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_packuswb256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
101 }
102 
103 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
104 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
105 _mm256_add_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
106 {
107 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v32qu)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;+&#32;(__v32qu)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
108 }
109 
110 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
111 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
112 _mm256_add_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
113 {
114 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v16hu)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;+&#32;(__v16hu)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
115 }
116 
117 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
118 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
119 _mm256_add_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
120 {
121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v8su)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;+&#32;(__v8su)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
122 }
123 
124 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
125 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
126 _mm256_add_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
127 {
128 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4du)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;+&#32;(__v4du)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
129 }
130 
131 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
132 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
133 _mm256_adds_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
134 {
135 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_paddsb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
136 }
137 
138 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
139 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
140 _mm256_adds_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
141 {
142 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_paddsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
143 }
144 
145 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
146 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
147 _mm256_adds_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
148 {
149 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_paddusb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
150 }
151 
152 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
153 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
154 _mm256_adds_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
155 {
156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_paddusw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
157 }
158 
159 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
160 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
161 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
162 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ab91acf13e287602169b958e2f6f3b665">_mm256_alignr_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
163 {
164 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_palignr256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>,
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;*&#32;8);
167 }
168 <emphasis role="preprocessor">#else</emphasis>
169 <emphasis role="comment">/*&#32;In&#32;that&#32;case&#32;(__N*8)&#32;will&#32;be&#32;in&#32;vreg,&#32;and&#32;insn&#32;will&#32;not&#32;be&#32;matched.&#32;*/</emphasis>
170 <emphasis role="comment">/*&#32;Use&#32;define&#32;instead&#32;*/</emphasis>
171 <emphasis role="preprocessor">#define&#32;_mm256_alignr_epi8(A,&#32;B,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
172 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_palignr256&#32;((__v4di)(__m256i)(A),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
173 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)(B),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
174 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(N)&#32;*&#32;8))</emphasis>
175 <emphasis role="preprocessor">#endif</emphasis>
176 
177 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
178 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
179 _mm256_and_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
180 {
181 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4du)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;&amp;&#32;(__v4du)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
182 }
183 
184 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
185 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
186 _mm256_andnot_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
187 {
188 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_andnotsi256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
189 }
190 
191 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
192 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
193 _mm256_avg_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
194 {
195 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pavgb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
196 }
197 
198 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
199 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
200 _mm256_avg_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
201 {
202 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pavgw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
203 }
204 
205 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
206 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
207 _mm256_blendv_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
208 {
209 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pblendvb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
212 }
213 
214 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
215 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
216 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
217 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a0ef549bdb477511f50c537eb535e3f35">_mm256_blend_epi16</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
218 {
219 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pblendw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
222 }
223 <emphasis role="preprocessor">#else</emphasis>
224 <emphasis role="preprocessor">#define&#32;_mm256_blend_epi16(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
225 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_pblendw256&#32;((__v16hi)(__m256i)(X),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)(__m256i)(Y),&#32;(int)(M)))</emphasis>
227 <emphasis role="preprocessor">#endif</emphasis>
228 
229 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
230 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
231 _mm256_cmpeq_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
232 {
233 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;==&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
234 }
235 
236 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
237 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
238 _mm256_cmpeq_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
239 {
240 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;==&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
241 }
242 
243 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
244 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
245 _mm256_cmpeq_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
246 {
247 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;==&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
248 }
249 
250 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
251 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
252 _mm256_cmpeq_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
253 {
254 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;==&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
255 }
256 
257 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
258 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
259 _mm256_cmpgt_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
260 {
261 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v32qs)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;&gt;&#32;(__v32qs)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
262 }
263 
264 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
265 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
266 _mm256_cmpgt_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
267 {
268 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;&gt;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
269 }
270 
271 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
272 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
273 _mm256_cmpgt_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
274 {
275 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;&gt;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
276 }
277 
278 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
279 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
280 _mm256_cmpgt_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
281 {
282 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;&gt;&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
283 }
284 
285 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
286 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
287 _mm256_hadd_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
288 {
289 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phaddw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
291 }
292 
293 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
294 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
295 _mm256_hadd_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
296 {
297 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phaddd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
298 }
299 
300 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
301 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
302 _mm256_hadds_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
303 {
304 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phaddsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
306 }
307 
308 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
309 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
310 _mm256_hsub_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
311 {
312 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phsubw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
314 }
315 
316 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
317 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
318 _mm256_hsub_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
319 {
320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phsubd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
321 }
322 
323 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
324 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
325 _mm256_hsubs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
326 {
327 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_phsubsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
329 }
330 
331 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
332 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
333 _mm256_maddubs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
334 {
335 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmaddubsw256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
337 }
338 
339 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
340 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
341 _mm256_madd_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
342 {
343 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaddwd256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
345 }
346 
347 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
348 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
349 _mm256_max_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
350 {
351 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxsb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
352 }
353 
354 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
355 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
356 _mm256_max_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
357 {
358 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
359 }
360 
361 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
362 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
363 _mm256_max_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
364 {
365 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxsd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
366 }
367 
368 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
369 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
370 _mm256_max_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
371 {
372 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxub256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
373 }
374 
375 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
376 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
377 _mm256_max_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
378 {
379 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxuw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
380 }
381 
382 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
383 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
384 _mm256_max_epu32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
385 {
386 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmaxud256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
387 }
388 
389 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
390 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
391 _mm256_min_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
392 {
393 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminsb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
394 }
395 
396 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
397 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
398 _mm256_min_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
399 {
400 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
401 }
402 
403 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
404 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
405 _mm256_min_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
406 {
407 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminsd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
408 }
409 
410 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
411 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
412 _mm256_min_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
413 {
414 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminub256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
415 }
416 
417 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
418 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
419 _mm256_min_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
420 {
421 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminuw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
422 }
423 
424 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
425 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
426 _mm256_min_epu32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
427 {
428 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pminud256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
429 }
430 
431 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>
432 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
433 _mm256_movemask_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>)
434 {
435 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_pmovmskb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>);
436 }
437 
438 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
439 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
440 _mm256_cvtepi8_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
441 {
442 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxbw256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
443 }
444 
445 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
446 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
447 _mm256_cvtepi8_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
448 {
449 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxbd256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
450 }
451 
452 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
453 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
454 _mm256_cvtepi8_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
455 {
456 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxbq256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
457 }
458 
459 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
460 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
461 _mm256_cvtepi16_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
462 {
463 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxwd256&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
464 }
465 
466 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
467 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
468 _mm256_cvtepi16_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
469 {
470 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxwq256&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
471 }
472 
473 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
474 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
475 _mm256_cvtepi32_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
476 {
477 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovsxdq256&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
478 }
479 
480 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
481 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
482 _mm256_cvtepu8_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
483 {
484 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxbw256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
485 }
486 
487 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
488 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
489 _mm256_cvtepu8_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
490 {
491 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxbd256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
492 }
493 
494 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
495 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
496 _mm256_cvtepu8_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
497 {
498 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxbq256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
499 }
500 
501 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
502 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
503 _mm256_cvtepu16_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
504 {
505 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxwd256&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
506 }
507 
508 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
509 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
510 _mm256_cvtepu16_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
511 {
512 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxwq256&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
513 }
514 
515 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
516 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
517 _mm256_cvtepu32_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
518 {
519 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmovzxdq256&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
520 }
521 
522 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
523 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
524 _mm256_mul_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
525 {
526 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmuldq256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
527 }
528 
529 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
530 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
531 _mm256_mulhrs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
532 {
533 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pmulhrsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
535 }
536 
537 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
538 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
539 _mm256_mulhi_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
540 {
541 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmulhuw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
542 }
543 
544 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
545 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
546 _mm256_mulhi_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
547 {
548 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmulhw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
549 }
550 
551 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
552 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
553 _mm256_mullo_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
554 {
555 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v16hu)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;*&#32;(__v16hu)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
556 }
557 
558 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
559 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
560 _mm256_mullo_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
561 {
562 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v8su)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;*&#32;(__v8su)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
563 }
564 
565 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
566 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
567 _mm256_mul_epu32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
568 {
569 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pmuludq256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
570 }
571 
572 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
573 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
574 _mm256_or_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
575 {
576 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4du)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;|&#32;(__v4du)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
577 }
578 
579 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
580 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
581 _mm256_sad_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
582 {
583 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psadbw256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
584 }
585 
586 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
587 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
588 _mm256_shuffle_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
589 {
590 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pshufb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
592 }
593 
594 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
595 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
596 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
597 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a5e618ac01373d00bb23a6de45c2e4516">_mm256_shuffle_epi32</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__mask)
598 {
599 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pshufd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__mask);
600 }
601 
602 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
603 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
604 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a40e06024a8652f3e1787cc359eb70a4b">_mm256_shufflehi_epi16</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__mask)
605 {
606 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pshufhw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__mask);
607 }
608 
609 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
610 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
611 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a0b2a0feeaee32aa07a47a135c5207444">_mm256_shufflelo_epi16</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__mask)
612 {
613 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pshuflw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__mask);
614 }
615 <emphasis role="preprocessor">#else</emphasis>
616 <emphasis role="preprocessor">#define&#32;_mm256_shuffle_epi32(A,&#32;N)&#32;\</emphasis>
617 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_pshufd256&#32;((__v8si)(__m256i)(A),&#32;(int)(N)))</emphasis>
618 <emphasis role="preprocessor">#define&#32;_mm256_shufflehi_epi16(A,&#32;N)&#32;\</emphasis>
619 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_pshufhw256&#32;((__v16hi)(__m256i)(A),&#32;(int)(N)))</emphasis>
620 <emphasis role="preprocessor">#define&#32;_mm256_shufflelo_epi16(A,&#32;N)&#32;\</emphasis>
621 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_pshuflw256&#32;((__v16hi)(__m256i)(A),&#32;(int)(N)))</emphasis>
622 <emphasis role="preprocessor">#endif</emphasis>
623 
624 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
625 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
626 _mm256_sign_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
627 {
628 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psignb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
629 }
630 
631 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
632 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
633 _mm256_sign_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
634 {
635 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psignw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
636 }
637 
638 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
639 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
640 _mm256_sign_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
641 {
642 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psignd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
643 }
644 
645 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
646 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
647 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
648 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a314dd570cf728de4739fed25ded6176c">_mm256_bslli_epi128</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
649 {
650 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pslldqi256&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;*&#32;8);
651 }
652 
653 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
654 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
655 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a19fc55946c5e9413d3c170c089d0155c">_mm256_slli_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
656 {
657 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pslldqi256&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;*&#32;8);
658 }
659 <emphasis role="preprocessor">#else</emphasis>
660 <emphasis role="preprocessor">#define&#32;_mm256_bslli_epi128(A,&#32;N)&#32;\</emphasis>
661 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_pslldqi256&#32;((__m256i)(A),&#32;(int)(N)&#32;*&#32;8))</emphasis>
662 <emphasis role="preprocessor">#define&#32;_mm256_slli_si256(A,&#32;N)&#32;\</emphasis>
663 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_pslldqi256&#32;((__m256i)(A),&#32;(int)(N)&#32;*&#32;8))</emphasis>
664 <emphasis role="preprocessor">#endif</emphasis>
665 
666 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
667 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
668 _mm256_slli_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
669 {
670 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psllwi256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
671 }
672 
673 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
674 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
675 _mm256_sll_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
676 {
677 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psllw256((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
678 }
679 
680 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
681 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
682 _mm256_slli_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
683 {
684 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pslldi256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
685 }
686 
687 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
688 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
689 _mm256_sll_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
690 {
691 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_pslld256((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
692 }
693 
694 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
695 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
696 _mm256_slli_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
697 {
698 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psllqi256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
699 }
700 
701 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
702 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
703 _mm256_sll_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
704 {
705 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psllq256((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
706 }
707 
708 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
709 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
710 _mm256_srai_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
711 {
712 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrawi256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
713 }
714 
715 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
716 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
717 _mm256_sra_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
718 {
719 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psraw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
720 }
721 
722 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
723 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
724 _mm256_srai_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
725 {
726 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psradi256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
727 }
728 
729 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
730 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
731 _mm256_sra_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
732 {
733 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrad256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
734 }
735 
736 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
737 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
738 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
739 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a8736c2335b16618a7e52d4485b74a807">_mm256_bsrli_epi128</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
740 {
741 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrldqi256&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;*&#32;8);
742 }
743 
744 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
745 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
746 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1af10caddcbf4bb2ae4c571636908465b8">_mm256_srli_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
747 {
748 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrldqi256&#32;(<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;*&#32;8);
749 }
750 <emphasis role="preprocessor">#else</emphasis>
751 <emphasis role="preprocessor">#define&#32;_mm256_bsrli_epi128(A,&#32;N)&#32;\</emphasis>
752 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_psrldqi256&#32;((__m256i)(A),&#32;(int)(N)&#32;*&#32;8))</emphasis>
753 <emphasis role="preprocessor">#define&#32;_mm256_srli_si256(A,&#32;N)&#32;\</emphasis>
754 <emphasis role="preprocessor">&#32;&#32;((__m256i)__builtin_ia32_psrldqi256&#32;((__m256i)(A),&#32;(int)(N)&#32;*&#32;8))</emphasis>
755 <emphasis role="preprocessor">#endif</emphasis>
756 
757 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
758 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
759 _mm256_srli_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
760 {
761 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrlwi256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
762 }
763 
764 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
765 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
766 _mm256_srl_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
767 {
768 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrlw256((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
769 }
770 
771 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
772 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
773 _mm256_srli_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
774 {
775 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrldi256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
776 }
777 
778 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
779 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
780 _mm256_srl_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
781 {
782 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrld256((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
783 }
784 
785 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
786 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
787 _mm256_srli_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
788 {
789 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrlqi256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
790 }
791 
792 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
793 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
794 _mm256_srl_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
795 {
796 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psrlq256((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
797 }
798 
799 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
800 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
801 _mm256_sub_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
802 {
803 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v32qu)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;-&#32;(__v32qu)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
804 }
805 
806 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
807 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
808 _mm256_sub_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
809 {
810 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v16hu)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;-&#32;(__v16hu)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
811 }
812 
813 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
814 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
815 _mm256_sub_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
816 {
817 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v8su)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;-&#32;(__v8su)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
818 }
819 
820 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
821 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
822 _mm256_sub_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
823 {
824 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4du)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;-&#32;(__v4du)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
825 }
826 
827 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
828 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
829 _mm256_subs_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
830 {
831 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psubsb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
832 }
833 
834 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
835 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
836 _mm256_subs_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
837 {
838 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psubsw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
839 }
840 
841 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
842 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
843 _mm256_subs_epu8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
844 {
845 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psubusb256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
846 }
847 
848 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
849 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
850 _mm256_subs_epu16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
851 {
852 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_psubusw256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
853 }
854 
855 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
856 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
857 _mm256_unpackhi_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
858 {
859 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpckhbw256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
860 }
861 
862 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
863 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
864 _mm256_unpackhi_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
865 {
866 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpckhwd256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
867 }
868 
869 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
870 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
871 _mm256_unpackhi_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
872 {
873 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpckhdq256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
874 }
875 
876 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
877 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
878 _mm256_unpackhi_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
879 {
880 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpckhqdq256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
881 }
882 
883 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
884 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
885 _mm256_unpacklo_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
886 {
887 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpcklbw256&#32;((__v32qi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v32qi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
888 }
889 
890 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
891 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
892 _mm256_unpacklo_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
893 {
894 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpcklwd256&#32;((__v16hi)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v16hi)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
895 }
896 
897 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
898 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
899 _mm256_unpacklo_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
900 {
901 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpckldq256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
902 }
903 
904 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
905 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
906 _mm256_unpacklo_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
907 {
908 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_punpcklqdq256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
909 }
910 
911 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
912 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
913 _mm256_xor_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>)
914 {
915 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;((__v4du)<link linkend="__classes_2lib_2include_2avx5124fmapsintrin_8h_1ae59ee037f6e8bf1594011f2e30da5f9c">__A</link>&#32;^&#32;(__v4du)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a36e5e72d652e2d030b159aaa3edfeebc">__B</link>);
916 }
917 
918 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
919 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
920 _mm256_stream_load_si256&#32;(__m256i&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
921 {
922 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_movntdqa256&#32;((__v4di&#32;*)&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
923 }
924 
925 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
926 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
927 _mm_broadcastss_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
928 {
929 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_vbroadcastss_ps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
930 }
931 
932 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256
933 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
934 _mm256_broadcastss_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
935 {
936 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vbroadcastss_ps256&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
937 }
938 
939 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
940 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
941 _mm256_broadcastsd_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
942 {
943 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vbroadcastsd_pd256&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
944 }
945 
946 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
947 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
948 _mm256_broadcastsi128_si256&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
949 {
950 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vbroadcastsi256&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
951 }
952 
953 <emphasis role="preprocessor">#define&#32;_mm_broadcastsi128_si256(X)&#32;_mm256_broadcastsi128_si256(X)</emphasis>
954 <emphasis role="preprocessor">#define&#32;_mm_broadcastsd_pd(X)&#32;_mm_movedup_pd(X)</emphasis>
955 
956 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
957 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
958 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
959 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a9721c3d90f5b0bb5e84f539355794018">_mm_blend_epi32</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
960 {
961 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pblendd128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
964 }
965 <emphasis role="preprocessor">#else</emphasis>
966 <emphasis role="preprocessor">#define&#32;_mm_blend_epi32(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
967 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_pblendd128&#32;((__v4si)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
968 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)(Y),&#32;(int)(M)))</emphasis>
969 <emphasis role="preprocessor">#endif</emphasis>
970 
971 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
972 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
973 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
974 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1af0910e8aa0d6bc6777e296f8bb616d5b">_mm256_blend_epi32</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
975 {
976 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pblendd256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,
978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
979 }
980 <emphasis role="preprocessor">#else</emphasis>
981 <emphasis role="preprocessor">#define&#32;_mm256_blend_epi32(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
982 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_pblendd256&#32;((__v8si)(__m256i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
983 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)(Y),&#32;(int)(M)))</emphasis>
984 <emphasis role="preprocessor">#endif</emphasis>
985 
986 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
987 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
988 _mm256_broadcastb_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
989 {
990 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pbroadcastb256&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
991 }
992 
993 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
994 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
995 _mm256_broadcastw_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
996 {
997 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pbroadcastw256&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
998 }
999 
1000 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1001 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1002 _mm256_broadcastd_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1003 {
1004 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pbroadcastd256&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1005 }
1006 
1007 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1008 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1009 _mm256_broadcastq_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1010 {
1011 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_pbroadcastq256&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1012 }
1013 
1014 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1015 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1016 _mm_broadcastb_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1017 {
1018 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pbroadcastb128&#32;((__v16qi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1019 }
1020 
1021 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1022 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1023 _mm_broadcastw_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1024 {
1025 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pbroadcastw128&#32;((__v8hi)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1026 }
1027 
1028 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1029 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1030 _mm_broadcastd_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1031 {
1032 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pbroadcastd128&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1033 }
1034 
1035 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1036 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1037 _mm_broadcastq_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1038 {
1039 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_pbroadcastq128&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1040 }
1041 
1042 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1043 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1044 _mm256_permutevar8x32_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1045 {
1046 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_permvarsi256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1047 }
1048 
1049 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1050 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
1051 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1052 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7618b816b5a31f812847e7aa99645a35">_mm256_permute4x64_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
1053 {
1054 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_permdf256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1055 }
1056 <emphasis role="preprocessor">#else</emphasis>
1057 <emphasis role="preprocessor">#define&#32;_mm256_permute4x64_pd(X,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1058 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_permdf256&#32;((__v4df)(__m256d)(X),&#32;(int)(M)))</emphasis>
1059 <emphasis role="preprocessor">#endif</emphasis>
1060 
1061 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256
1062 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1063 _mm256_permutevar8x32_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1064 {
1065 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_permvarsf256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1066 }
1067 
1068 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1069 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1070 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1071 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a54259d86453e39622e7e4f265a0c257b">_mm256_permute4x64_epi64</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
1072 {
1073 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_permdi256&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1074 }
1075 <emphasis role="preprocessor">#else</emphasis>
1076 <emphasis role="preprocessor">#define&#32;_mm256_permute4x64_epi64(X,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1077 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_permdi256&#32;((__v4di)(__m256i)(X),&#32;(int)(M)))</emphasis>
1078 <emphasis role="preprocessor">#endif</emphasis>
1079 
1080 
1081 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1082 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1083 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1084 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aac90532d0a29c734b1b22960446dc1e0">_mm256_permute2x128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
1085 {
1086 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_permti256&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1087 }
1088 <emphasis role="preprocessor">#else</emphasis>
1089 <emphasis role="preprocessor">#define&#32;_mm256_permute2x128_si256(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1090 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_permti256&#32;((__v4di)(__m256i)(X),&#32;(__v4di)(__m256i)(Y),&#32;(int)(M)))</emphasis>
1091 <emphasis role="preprocessor">#endif</emphasis>
1092 
1093 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1094 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1095 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1096 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1abf4bc82c931362b92072753f7a5eeaa9">_mm256_extracti128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
1097 {
1098 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_extract128i256&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1099 }
1100 <emphasis role="preprocessor">#else</emphasis>
1101 <emphasis role="preprocessor">#define&#32;_mm256_extracti128_si256(X,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1102 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_extract128i256&#32;((__v4di)(__m256i)(X),&#32;(int)(M)))</emphasis>
1103 <emphasis role="preprocessor">#endif</emphasis>
1104 
1105 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1106 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1107 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1108 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a4b094874f4808fbe7d2eda0baf863bff">_mm256_inserti128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>)
1109 {
1110 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_insert128i256&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1111 }
1112 <emphasis role="preprocessor">#else</emphasis>
1113 <emphasis role="preprocessor">#define&#32;_mm256_inserti128_si256(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1114 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_insert128i256&#32;((__v4di)(__m256i)(X),&#32;\</emphasis>
1115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)(Y),&#32;\</emphasis>
1116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(M)))</emphasis>
1117 <emphasis role="preprocessor">#endif</emphasis>
1118 
1119 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1120 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1121 _mm256_maskload_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>&#32;)
1122 {
1123 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_maskloadd256&#32;((<emphasis role="keyword">const</emphasis>&#32;__v8si&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1125 }
1126 
1127 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1128 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1129 _mm256_maskload_epi64&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>&#32;)
1130 {
1131 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_maskloadq256&#32;((<emphasis role="keyword">const</emphasis>&#32;__v4di&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
1132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1133 }
1134 
1135 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1136 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1137 _mm_maskload_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>&#32;)
1138 {
1139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_maskloadd&#32;((<emphasis role="keyword">const</emphasis>&#32;__v4si&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
1140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1141 }
1142 
1143 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1144 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1145 _mm_maskload_epi64&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>&#32;)
1146 {
1147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_maskloadq&#32;((<emphasis role="keyword">const</emphasis>&#32;__v2di&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
1149 }
1150 
1151 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
1152 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1153 _mm256_maskstore_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>&#32;)
1154 {
1155 &#32;&#32;__builtin_ia32_maskstored256&#32;((__v8si&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1156 }
1157 
1158 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
1159 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1160 _mm256_maskstore_epi64&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>&#32;)
1161 {
1162 &#32;&#32;__builtin_ia32_maskstoreq256&#32;((__v4di&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1163 }
1164 
1165 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
1166 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1167 _mm_maskstore_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>&#32;)
1168 {
1169 &#32;&#32;__builtin_ia32_maskstored&#32;((__v4si&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1170 }
1171 
1172 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>
1173 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1174 _mm_maskstore_epi64&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>&#32;)
1175 {
1176 &#32;&#32;__builtin_ia32_maskstoreq&#32;((&#32;__v2di&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1177 }
1178 
1179 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1180 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1181 _mm256_sllv_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1182 {
1183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psllv8si&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1184 }
1185 
1186 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1187 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1188 _mm_sllv_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1189 {
1190 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_psllv4si&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1191 }
1192 
1193 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1194 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1195 _mm256_sllv_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1196 {
1197 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psllv4di&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1198 }
1199 
1200 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1201 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1202 _mm_sllv_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1203 {
1204 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_psllv2di&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1205 }
1206 
1207 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1208 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1209 _mm256_srav_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1210 {
1211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psrav8si&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1212 }
1213 
1214 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1215 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1216 _mm_srav_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1217 {
1218 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_psrav4si&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1219 }
1220 
1221 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1222 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1223 _mm256_srlv_epi32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1224 {
1225 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psrlv8si&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1226 }
1227 
1228 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1229 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1230 _mm_srlv_epi32&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1231 {
1232 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_psrlv4si&#32;((__v4si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1233 }
1234 
1235 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1236 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1237 _mm256_srlv_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1238 {
1239 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_psrlv4di&#32;((__v4di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1240 }
1241 
1242 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1243 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1244 _mm_srlv_epi64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
1245 {
1246 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_psrlv2di&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avx2intrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
1247 }
1248 
1249 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1250 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d
1251 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1252 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a3b0094018d6e769b57bb19c82a3a7186">_mm_i32gather_pd</link>&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1253 {
1254 &#32;&#32;__v2df&#32;__zero&#32;=&#32;_mm_setzero_pd&#32;();
1255 &#32;&#32;__v2df&#32;__mask&#32;=&#32;_mm_cmpeq_pd&#32;(__zero,&#32;__zero);
1256 
1257 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_gathersiv2df&#32;(_mm_undefined_pd&#32;(),
1258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1262 }
1263 
1264 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d
1265 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1266 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a99922fca4ba3af31d808d0a4956bb38e">_mm_mask_i32gather_pd</link>&#32;(__m128d&#32;__src,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128d&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1268 {
1269 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_gathersiv2df&#32;((__v2df)__src,
1270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)__mask,
1273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1274 }
1275 
1276 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
1277 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1278 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a27ec8118efe97d0f9a9f1cc0f0ead6bf">_mm256_i32gather_pd</link>&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1279 {
1280 &#32;&#32;__v4df&#32;__zero&#32;=&#32;_mm256_setzero_pd&#32;();
1281 &#32;&#32;__v4df&#32;__mask&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a811715ab7a590e9f91d87f1ef2f6e125">_mm256_cmp_pd</link>&#32;(__zero,&#32;__zero,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9dac2ea83695373391286f7f38cf3741">_CMP_EQ_OQ</link>);
1282 
1283 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_gathersiv4df&#32;(_mm256_undefined_pd&#32;(),
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1288 }
1289 
1290 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
1291 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1292 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ac541714cc23513416fb02015f790de72">_mm256_mask_i32gather_pd</link>&#32;(__m256d&#32;__src,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;__m256d&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1294 {
1295 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_gathersiv4df&#32;((__v4df)__src,
1296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)__mask,
1299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1300 }
1301 
1302 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d
1303 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1304 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a316a83bf8ac6607cd0a42c99a7cfcb6c">_mm_i64gather_pd</link>&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1305 {
1306 &#32;&#32;__v2df&#32;__src&#32;=&#32;_mm_setzero_pd&#32;();
1307 &#32;&#32;__v2df&#32;__mask&#32;=&#32;_mm_cmpeq_pd&#32;(__src,&#32;__src);
1308 
1309 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_gatherdiv2df&#32;(__src,
1310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1314 }
1315 
1316 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d
1317 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1318 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a62420abb6c02c709376dee74eabec7d5">_mm_mask_i64gather_pd</link>&#32;(__m128d&#32;__src,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128d&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1320 {
1321 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_gatherdiv2df&#32;((__v2df)__src,
1322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)__mask,
1325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1326 }
1327 
1328 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
1329 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1330 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a1255648e793e80259364fb7c4d69be27">_mm256_i64gather_pd</link>&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1331 {
1332 &#32;&#32;__v4df&#32;__src&#32;=&#32;_mm256_setzero_pd&#32;();
1333 &#32;&#32;__v4df&#32;__mask&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a811715ab7a590e9f91d87f1ef2f6e125">_mm256_cmp_pd</link>&#32;(__src,&#32;__src,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9dac2ea83695373391286f7f38cf3741">_CMP_EQ_OQ</link>);
1334 
1335 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_gatherdiv4df&#32;(__src,
1336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1340 }
1341 
1342 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d
1343 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1344 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aec9884db2492c75d6796cc526ce73a56">_mm256_mask_i64gather_pd</link>&#32;(__m256d&#32;__src,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m256d&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1346 {
1347 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_gatherdiv4df&#32;((__v4df)__src,
1348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)__mask,
1351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1352 }
1353 
1354 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1355 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1356 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a389689e9d08f76a66f6818a64814772b">_mm_i32gather_ps</link>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1357 {
1358 &#32;&#32;__v4sf&#32;__src&#32;=&#32;_mm_setzero_ps&#32;();
1359 &#32;&#32;__v4sf&#32;__mask&#32;=&#32;_mm_cmpeq_ps&#32;(__src,&#32;__src);
1360 
1361 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gathersiv4sf&#32;(__src,
1362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1366 }
1367 
1368 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1369 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1370 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a9cd9b03ae8f8fb8ec846c4cc37fd458f">_mm_mask_i32gather_ps</link>&#32;(__m128&#32;__src,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1372 {
1373 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gathersiv4sf&#32;((__v4sf)__src,
1374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)__mask,
1377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1378 }
1379 
1380 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256
1381 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1382 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ab9fbd6e4fe892572462e158798371fcb">_mm256_i32gather_ps</link>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1383 {
1384 &#32;&#32;__v8sf&#32;__src&#32;=&#32;_mm256_setzero_ps&#32;();
1385 &#32;&#32;__v8sf&#32;__mask&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae179cd4d25d9f34ffb4afee275fdb7ff">_mm256_cmp_ps</link>&#32;(__src,&#32;__src,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9dac2ea83695373391286f7f38cf3741">_CMP_EQ_OQ</link>);
1386 
1387 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_gathersiv8sf&#32;(__src,
1388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)__index,
1390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1392 }
1393 
1394 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256
1395 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1396 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a143a790091ef5ec147a115d67798cf31">_mm256_mask_i32gather_ps</link>&#32;(__m256&#32;__src,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m256&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1398 {
1399 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_gathersiv8sf&#32;((__v8sf)__src,
1400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)__index,
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)__mask,
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1404 }
1405 
1406 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1407 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1408 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aeede8f20300f7894638acc358a69b77d">_mm_i64gather_ps</link>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1409 {
1410 &#32;&#32;__v4sf&#32;__src&#32;=&#32;_mm_setzero_ps&#32;();
1411 &#32;&#32;__v4sf&#32;__mask&#32;=&#32;_mm_cmpeq_ps&#32;(__src,&#32;__src);
1412 
1413 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf&#32;(__src,
1414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1418 }
1419 
1420 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1421 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1422 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1af17e5e8dc28434dce44374f8606c67b8">_mm_mask_i64gather_ps</link>&#32;(__m128&#32;__src,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1424 {
1425 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf&#32;((__v4sf)__src,
1426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)__mask,
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1430 }
1431 
1432 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1433 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1434 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ab609131c08bded963755e6e18b19863a">_mm256_i64gather_ps</link>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1435 {
1436 &#32;&#32;__v4sf&#32;__src&#32;=&#32;_mm_setzero_ps&#32;();
1437 &#32;&#32;__v4sf&#32;__mask&#32;=&#32;_mm_cmpeq_ps&#32;(__src,&#32;__src);
1438 
1439 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf256&#32;(__src,
1440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1444 }
1445 
1446 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128
1447 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1448 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ae72a5fd4d16937f66cd54d1efbcd31d0">_mm256_mask_i64gather_ps</link>&#32;(__m128&#32;__src,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m128&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1450 {
1451 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf256&#32;((__v4sf)__src,
1452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)__mask,
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1456 }
1457 
1458 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1459 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1460 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a2c10526c444ad3af84663bef72a34678">_mm_i32gather_epi64</link>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1462 {
1463 &#32;&#32;__v2di&#32;__src&#32;=&#32;__extension__&#32;(__v2di){&#32;0,&#32;0&#32;};
1464 &#32;&#32;__v2di&#32;__mask&#32;=&#32;__extension__&#32;(__v2di){&#32;~0,&#32;~0&#32;};
1465 
1466 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gathersiv2di&#32;(__src,
1467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1471 }
1472 
1473 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1474 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1475 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a8593becafa650195c3a56fc0529f9928">_mm_mask_i32gather_epi64</link>&#32;(__m128i&#32;__src,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;__m128i&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1477 {
1478 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gathersiv2di&#32;((__v2di)__src,
1479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__mask,
1482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1483 }
1484 
1485 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1486 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1487 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aeae2131b9c568c9dc1e69dcee0a20afa">_mm256_i32gather_epi64</link>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1489 {
1490 &#32;&#32;__v4di&#32;__src&#32;=&#32;__extension__&#32;(__v4di){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1491 &#32;&#32;__v4di&#32;__mask&#32;=&#32;__extension__&#32;(__v4di){&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1492 
1493 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gathersiv4di&#32;(__src,
1494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1498 }
1499 
1500 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1501 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1502 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aced02d9798c267fa475014d217dbd06b">_mm256_mask_i32gather_epi64</link>&#32;(__m256i&#32;__src,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;__m256i&#32;__mask,
1504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1505 {
1506 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gathersiv4di&#32;((__v4di)__src,
1507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__mask,
1510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1511 }
1512 
1513 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1514 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1515 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a05dc5b59bcba11e780c3cfa6d6a342e4">_mm_i64gather_epi64</link>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1517 {
1518 &#32;&#32;__v2di&#32;__src&#32;=&#32;__extension__&#32;(__v2di){&#32;0,&#32;0&#32;};
1519 &#32;&#32;__v2di&#32;__mask&#32;=&#32;__extension__&#32;(__v2di){&#32;~0,&#32;~0&#32;};
1520 
1521 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv2di&#32;(__src,
1522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1526 }
1527 
1528 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1529 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1530 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa0ec47b845f8ffe2d93a001b35349eca">_mm_mask_i64gather_epi64</link>&#32;(__m128i&#32;__src,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__index,&#32;__m128i&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1532 {
1533 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv2di&#32;((__v2di)__src,
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__mask,
1537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1538 }
1539 
1540 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1541 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1542 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a0f8b1d5d0e03ed043b28772000056a97">_mm256_i64gather_epi64</link>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1544 {
1545 &#32;&#32;__v4di&#32;__src&#32;=&#32;__extension__&#32;(__v4di){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1546 &#32;&#32;__v4di&#32;__mask&#32;=&#32;__extension__&#32;(__v4di){&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1547 
1548 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gatherdiv4di&#32;(__src,
1549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1553 }
1554 
1555 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1556 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1557 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a9ed5d6eef1293b5c93974ee65d193bde">_mm256_mask_i64gather_epi64</link>&#32;(__m256i&#32;__src,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m256i&#32;__mask,
1559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1560 {
1561 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gatherdiv4di&#32;((__v4di)__src,
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__mask,
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1566 }
1567 
1568 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1569 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1570 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a9582233ea4e7e50d45d1a0bf430c6b8d">_mm_i32gather_epi32</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1571 {
1572 &#32;&#32;__v4si&#32;__src&#32;=&#32;__extension__&#32;(__v4si){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1573 &#32;&#32;__v4si&#32;__mask&#32;=&#32;__extension__&#32;(__v4si){&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1574 
1575 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gathersiv4si&#32;(__src,
1576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1580 }
1581 
1582 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1583 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1584 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a6ca5aaa70dd48304dd1e4c865d54b2c1">_mm_mask_i32gather_epi32</link>&#32;(__m128i&#32;__src,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1586 {
1587 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gathersiv4si&#32;((__v4si)__src,
1588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__index,
1590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__mask,
1591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1592 }
1593 
1594 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1595 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1596 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1ad9c58b586944c116abcef7f20d5b6c47">_mm256_i32gather_epi32</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1597 {
1598 &#32;&#32;__v8si&#32;__src&#32;=&#32;__extension__&#32;(__v8si){&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1599 &#32;&#32;__v8si&#32;__mask&#32;=&#32;__extension__&#32;(__v8si){&#32;~0,&#32;~0,&#32;~0,&#32;~0,&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1600 
1601 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gathersiv8si&#32;(__src,
1602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)__index,
1604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1606 }
1607 
1608 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
1609 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1610 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a49686355831d7443e365c71f7383906f">_mm256_mask_i32gather_epi32</link>&#32;(__m256i&#32;__src,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m256i&#32;__mask,
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1613 {
1614 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_gathersiv8si&#32;((__v8si)__src,
1615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)__index,
1617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)__mask,
1618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1619 }
1620 
1621 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1622 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1623 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa936713086a10571d67ce6ae4bedfd70">_mm_i64gather_epi32</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1624 {
1625 &#32;&#32;__v4si&#32;__src&#32;=&#32;__extension__&#32;(__v4si){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1626 &#32;&#32;__v4si&#32;__mask&#32;=&#32;__extension__&#32;(__v4si){&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1627 
1628 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si&#32;(__src,
1629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1633 }
1634 
1635 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1636 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1637 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1abaaba817a198579774d87fc5d7039f77">_mm_mask_i64gather_epi32</link>&#32;(__m128i&#32;__src,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m128i&#32;__index,
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__mask,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1639 {
1640 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si&#32;((__v4si)__src,
1641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)__index,
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__mask,
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1645 }
1646 
1647 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1648 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1649 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1af4857cdc54b8656b1aea0788bedfe35d">_mm256_i64gather_epi32</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,&#32;__m256i&#32;__index,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1650 {
1651 &#32;&#32;__v4si&#32;__src&#32;=&#32;__extension__&#32;(__v4si){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1652 &#32;&#32;__v4si&#32;__mask&#32;=&#32;__extension__&#32;(__v4si){&#32;~0,&#32;~0,&#32;~0,&#32;~0&#32;};
1653 
1654 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si256&#32;(__src,
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask,
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1659 }
1660 
1661 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
1662 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1663 <link linkend="__classes_2lib_2include_2avx2intrin_8h_1a92e61a6dbba50423d3b6361f611a6ed8">_mm256_mask_i64gather_epi32</link>&#32;(__m128i&#32;__src,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__base,
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m256i&#32;__index,&#32;__m128i&#32;__mask,
1665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__scale)
1666 {
1667 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si256&#32;((__v4si)__src,
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__base,
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)__index,
1670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)__mask,
1671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__scale);
1672 }
1673 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;__OPTIMIZE__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1674 <emphasis role="preprocessor">#define&#32;_mm_i32gather_pd(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1675 <emphasis role="preprocessor">&#32;&#32;(__m128d)&#32;__builtin_ia32_gathersiv2df&#32;((__v2df)&#32;_mm_setzero_pd&#32;(),&#32;&#32;&#32;&#32;\</emphasis>
1676 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1677 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1678 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1679 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cmpeq_pd&#32;(_mm_setzero_pd&#32;(),\</emphasis>
1680 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_pd&#32;()),\</emphasis>
1681 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1682 
1683 <emphasis role="preprocessor">#define&#32;_mm_mask_i32gather_pd(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1684 <emphasis role="preprocessor">&#32;&#32;(__m128d)&#32;__builtin_ia32_gathersiv2df&#32;((__v2df)(__m128d)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1685 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1686 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1687 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)&#32;(MASK),&#32;&#32;\</emphasis>
1688 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1689 
1690 <emphasis role="preprocessor">#define&#32;_mm256_i32gather_pd(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1691 <emphasis role="preprocessor">&#32;&#32;(__m256d)&#32;__builtin_ia32_gathersiv4df&#32;((__v4df)&#32;_mm256_setzero_pd&#32;(),&#32;\</emphasis>
1692 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1693 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1694 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1695 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_cmp_pd&#32;(_mm256_setzero_pd&#32;(),\</emphasis>
1696 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_setzero_pd&#32;(),\</emphasis>
1697 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CMP_EQ_OQ),&#32;&#32;&#32;&#32;\</emphasis>
1698 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1699 
1700 <emphasis role="preprocessor">#define&#32;_mm256_mask_i32gather_pd(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1701 <emphasis role="preprocessor">&#32;&#32;(__m256d)&#32;__builtin_ia32_gathersiv4df&#32;((__v4df)(__m256d)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1702 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1703 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1704 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)&#32;(MASK),&#32;&#32;\</emphasis>
1705 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1706 
1707 <emphasis role="preprocessor">#define&#32;_mm_i64gather_pd(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1708 <emphasis role="preprocessor">&#32;&#32;(__m128d)&#32;__builtin_ia32_gatherdiv2df&#32;((__v2df)&#32;_mm_setzero_pd&#32;(),&#32;&#32;&#32;&#32;\</emphasis>
1709 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1710 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1711 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1712 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cmpeq_pd&#32;(_mm_setzero_pd&#32;(),\</emphasis>
1713 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_pd&#32;()),\</emphasis>
1714 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1715 
1716 <emphasis role="preprocessor">#define&#32;_mm_mask_i64gather_pd(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1717 <emphasis role="preprocessor">&#32;&#32;(__m128d)&#32;__builtin_ia32_gatherdiv2df&#32;((__v2df)(__m128d)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1718 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1719 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1720 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)&#32;(MASK),&#32;&#32;\</emphasis>
1721 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1722 
1723 <emphasis role="preprocessor">#define&#32;_mm256_i64gather_pd(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1724 <emphasis role="preprocessor">&#32;&#32;(__m256d)&#32;__builtin_ia32_gatherdiv4df&#32;((__v4df)&#32;_mm256_setzero_pd&#32;(),&#32;\</emphasis>
1725 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1726 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;\</emphasis>
1727 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1728 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_cmp_pd&#32;(_mm256_setzero_pd&#32;(),\</emphasis>
1729 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_setzero_pd&#32;(),\</emphasis>
1730 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CMP_EQ_OQ),&#32;&#32;&#32;&#32;\</emphasis>
1731 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1732 
1733 <emphasis role="preprocessor">#define&#32;_mm256_mask_i64gather_pd(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1734 <emphasis role="preprocessor">&#32;&#32;(__m256d)&#32;__builtin_ia32_gatherdiv4df&#32;((__v4df)(__m256d)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1735 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(double&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;\</emphasis>
1736 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;\</emphasis>
1737 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)&#32;(MASK),&#32;&#32;\</emphasis>
1738 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1739 
1740 <emphasis role="preprocessor">#define&#32;_mm_i32gather_ps(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1741 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gathersiv4sf&#32;((__v4sf)&#32;_mm_setzero_ps&#32;(),&#32;\</emphasis>
1742 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1743 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1744 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1745 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cmpeq_ps&#32;(_mm_setzero_ps&#32;(),\</emphasis>
1746 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_ps&#32;()),\</emphasis>
1747 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1748 
1749 <emphasis role="preprocessor">#define&#32;_mm_mask_i32gather_ps(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1750 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gathersiv4sf&#32;((__v4sf)(__m128)&#32;(SRC),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1751 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1752 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1753 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)&#32;(MASK),&#32;&#32;&#32;&#32;\</emphasis>
1754 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1755 
1756 <emphasis role="preprocessor">#define&#32;_mm256_i32gather_ps(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1757 <emphasis role="preprocessor">&#32;&#32;(__m256)&#32;__builtin_ia32_gathersiv8sf&#32;((__v8sf)&#32;_mm256_setzero_ps&#32;(),&#32;&#32;\</emphasis>
1758 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1759 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;\</emphasis>
1760 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1761 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_cmp_ps&#32;(_mm256_setzero_ps&#32;(),\</emphasis>
1762 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_setzero_ps&#32;(),\</emphasis>
1763 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CMP_EQ_OQ),&#32;\</emphasis>
1764 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1765 
1766 <emphasis role="preprocessor">#define&#32;_mm256_mask_i32gather_ps(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1767 <emphasis role="preprocessor">&#32;&#32;(__m256)&#32;__builtin_ia32_gathersiv8sf&#32;((__v8sf)(__m256)&#32;(SRC),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1768 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1769 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;\</emphasis>
1770 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)&#32;(MASK),&#32;&#32;&#32;&#32;\</emphasis>
1771 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1772 
1773 <emphasis role="preprocessor">#define&#32;_mm_i64gather_ps(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1774 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf&#32;((__v4sf)&#32;_mm_setzero_pd&#32;(),&#32;\</emphasis>
1775 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1776 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1777 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cmpeq_ps&#32;(_mm_setzero_ps&#32;(),\</emphasis>
1779 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_ps&#32;()),\</emphasis>
1780 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1781 
1782 <emphasis role="preprocessor">#define&#32;_mm_mask_i64gather_ps(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1783 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf&#32;((__v4sf)(__m128)&#32;(SRC),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1784 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1785 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1786 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)&#32;(MASK),&#32;&#32;&#32;&#32;\</emphasis>
1787 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1788 
1789 <emphasis role="preprocessor">#define&#32;_mm256_i64gather_ps(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1790 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf256&#32;((__v4sf)&#32;_mm_setzero_ps&#32;(),&#32;&#32;\</emphasis>
1791 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;\</emphasis>
1792 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;&#32;&#32;\</emphasis>
1793 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1794 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_cmpeq_ps&#32;(_mm_setzero_ps&#32;(),\</emphasis>
1795 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_ps&#32;()),\</emphasis>
1796 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1797 
1798 <emphasis role="preprocessor">#define&#32;_mm256_mask_i64gather_ps(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1799 <emphasis role="preprocessor">&#32;&#32;(__m128)&#32;__builtin_ia32_gatherdiv4sf256&#32;((__v4sf)(__m128)&#32;(SRC),&#32;&#32;\</emphasis>
1800 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float&#32;const&#32;*)&#32;(BASE),&#32;&#32;\</emphasis>
1801 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;&#32;&#32;\</emphasis>
1802 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)&#32;(MASK),&#32;\</emphasis>
1803 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1804 
1805 <emphasis role="preprocessor">#define&#32;_mm_i32gather_epi64(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1806 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gathersiv2di&#32;((__v2di)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
1807 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1808 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1809 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)_mm_set1_epi64x&#32;(-1),&#32;&#32;\</emphasis>
1810 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1811 
1812 <emphasis role="preprocessor">#define&#32;_mm_mask_i32gather_epi64(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1813 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gathersiv2di&#32;((__v2di)(__m128i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1814 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1815 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1816 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(MASK),&#32;&#32;\</emphasis>
1817 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1818 
1819 <emphasis role="preprocessor">#define&#32;_mm256_i32gather_epi64(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1820 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gathersiv4di&#32;((__v4di)&#32;_mm256_setzero_si256&#32;(),&#32;\</emphasis>
1821 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1822 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
1823 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)_mm256_set1_epi64x&#32;(-1),&#32;&#32;\</emphasis>
1824 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1825 
1826 <emphasis role="preprocessor">#define&#32;_mm256_mask_i32gather_epi64(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;\</emphasis>
1827 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gathersiv4di&#32;((__v4di)(__m256i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1828 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1829 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1830 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(MASK),&#32;&#32;\</emphasis>
1831 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1832 
1833 <emphasis role="preprocessor">#define&#32;_mm_i64gather_epi64(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1834 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv2di&#32;((__v2di)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
1835 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1836 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1837 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)_mm_set1_epi64x&#32;(-1),&#32;&#32;\</emphasis>
1838 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1839 
1840 <emphasis role="preprocessor">#define&#32;_mm_mask_i64gather_epi64(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1841 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv2di&#32;((__v2di)(__m128i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1842 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1843 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1844 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(MASK),&#32;&#32;\</emphasis>
1845 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1846 
1847 <emphasis role="preprocessor">#define&#32;_mm256_i64gather_epi64(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1848 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gatherdiv4di&#32;((__v4di)&#32;_mm256_setzero_si256&#32;(),&#32;\</emphasis>
1849 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1850 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
1851 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)_mm256_set1_epi64x&#32;(-1),&#32;&#32;\</emphasis>
1852 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1853 
1854 <emphasis role="preprocessor">#define&#32;_mm256_mask_i64gather_epi64(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;\</emphasis>
1855 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gatherdiv4di&#32;((__v4di)(__m256i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1856 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long&#32;long&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1857 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;\</emphasis>
1858 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(MASK),&#32;&#32;\</emphasis>
1859 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1860 
1861 <emphasis role="preprocessor">#define&#32;_mm_i32gather_epi32(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1862 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gathersiv4si&#32;((__v4si)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
1863 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1864 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1865 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)_mm_set1_epi32&#32;(-1),&#32;&#32;&#32;\</emphasis>
1866 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1867 
1868 <emphasis role="preprocessor">#define&#32;_mm_mask_i32gather_epi32(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1869 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gathersiv4si&#32;((__v4si)(__m128i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1870 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1871 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1872 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(MASK),&#32;&#32;&#32;\</emphasis>
1873 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1874 
1875 <emphasis role="preprocessor">#define&#32;_mm256_i32gather_epi32(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1876 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gathersiv8si&#32;((__v8si)&#32;_mm256_setzero_si256&#32;(),&#32;\</emphasis>
1877 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1878 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;&#32;&#32;\</emphasis>
1879 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)_mm256_set1_epi32&#32;(-1),&#32;&#32;&#32;\</emphasis>
1880 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1881 
1882 <emphasis role="preprocessor">#define&#32;_mm256_mask_i32gather_epi32(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;\</emphasis>
1883 <emphasis role="preprocessor">&#32;&#32;(__m256i)&#32;__builtin_ia32_gathersiv8si&#32;((__v8si)(__m256i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1884 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1885 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)&#32;(INDEX),&#32;&#32;\</emphasis>
1886 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)&#32;(MASK),&#32;&#32;&#32;\</emphasis>
1887 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1888 
1889 <emphasis role="preprocessor">#define&#32;_mm_i64gather_epi32(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1890 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si&#32;((__v4si)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
1891 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1892 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;\</emphasis>
1893 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)_mm_set1_epi32&#32;(-1),&#32;&#32;&#32;\</emphasis>
1894 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1895 
1896 <emphasis role="preprocessor">#define&#32;_mm_mask_i64gather_epi32(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;\</emphasis>
1897 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si&#32;((__v4si)(__m128i)&#32;(SRC),&#32;&#32;&#32;\</emphasis>
1898 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1899 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)&#32;(INDEX),&#32;&#32;\</emphasis>
1900 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(MASK),&#32;&#32;&#32;\</emphasis>
1901 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1902 
1903 <emphasis role="preprocessor">#define&#32;_mm256_i64gather_epi32(BASE,&#32;INDEX,&#32;SCALE)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1904 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si256&#32;((__v4si)&#32;_mm_setzero_si128&#32;(),&#32;\</emphasis>
1905 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1906 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;&#32;&#32;&#32;&#32;\</emphasis>
1907 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)_mm_set1_epi32(-1),&#32;&#32;&#32;&#32;\</emphasis>
1908 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1909 
1910 <emphasis role="preprocessor">#define&#32;_mm256_mask_i64gather_epi32(SRC,&#32;BASE,&#32;INDEX,&#32;MASK,&#32;SCALE)&#32;&#32;\</emphasis>
1911 <emphasis role="preprocessor">&#32;&#32;(__m128i)&#32;__builtin_ia32_gatherdiv4si256&#32;((__v4si)(__m128i)&#32;(SRC),&#32;&#32;&#32;&#32;\</emphasis>
1912 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int&#32;const&#32;*)&#32;(BASE),&#32;&#32;&#32;&#32;\</emphasis>
1913 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)(__m256i)&#32;(INDEX),&#32;&#32;&#32;\</emphasis>
1914 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)&#32;(MASK),&#32;&#32;&#32;&#32;\</emphasis>
1915 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)&#32;(SCALE))</emphasis>
1916 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;__OPTIMIZE__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1917 
1918 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX2__</emphasis>
1919 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX2__</emphasis>
1920 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
1921 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX2__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1922 
1923 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_AVX2INTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
