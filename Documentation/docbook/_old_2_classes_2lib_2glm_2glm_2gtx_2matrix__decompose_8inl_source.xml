<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtx_2matrix__decompose_8inl_source" xml:lang="en-US">
<title>matrix_decompose.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtx/matrix_decompose.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="preprocessor">#include&#32;&quot;../gtc/constants.hpp&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;../gtc/epsilon.hpp&quot;</emphasis>
5 
6 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
7 <emphasis role="keyword">namespace&#32;</emphasis>detail
8 {
10 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;result&#32;=&#32;(a&#32;*&#32;ascl)&#32;+&#32;(b&#32;*&#32;bscl)</emphasis>
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
12 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1_1detail_1a4363abf5c2e8ba2090523a122202fe76">combine</link>(
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;ascl,&#32;T&#32;bscl)
16 &#32;&#32;&#32;&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;*&#32;ascl)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;*&#32;bscl);
18 &#32;&#32;&#32;&#32;}
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1_1detail_1a8e563a75f3346ec61537f1601eb5f8cb">scale</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;T&#32;desiredLength)
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;*&#32;desiredLength&#32;/&#32;<link linkend="_namespacelength">length</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
24 &#32;&#32;&#32;&#32;}
25 }<emphasis role="comment">//namespace&#32;detail</emphasis>
26 
27 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Matrix&#32;decompose</emphasis>
28 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp</emphasis>
29 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decomposes&#32;the&#32;mode&#32;matrix&#32;to&#32;translations,rotation&#32;scale&#32;components</emphasis>
30 
31 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
32 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group__gtx__matrix__decompose_1gac0e342656ba09a9bc97c57182ba73124">decompose</link>(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ModelMatrix,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;Scale,&#32;qua&lt;T,&#32;Q&gt;&#32;&amp;&#32;Orientation,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;Translation,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;Skew,&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;&amp;&#32;Perspective)
33 &#32;&#32;&#32;&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;LocalMatrix(ModelMatrix);
35 
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normalize&#32;the&#32;matrix.</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798">epsilonEqual</link>(LocalMatrix[3][3],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;epsilon&lt;T&gt;()))
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
39 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;++i)
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;++j)
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalMatrix[i][j]&#32;/=&#32;LocalMatrix[3][3];
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;perspectiveMatrix&#32;is&#32;used&#32;to&#32;solve&#32;for&#32;perspective,&#32;but&#32;it&#32;also&#32;provides</emphasis>
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;an&#32;easy&#32;way&#32;to&#32;test&#32;for&#32;singularity&#32;of&#32;the&#32;upper&#32;3x3&#32;component.</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;PerspectiveMatrix(LocalMatrix);
47 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PerspectiveMatrix[i][3]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0);
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PerspectiveMatrix[3][3]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1);
51 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtc__epsilon_1ga7f8df975688289781ee26998c73d6798">epsilonEqual</link>(<link linkend="_group__core__func__matrix_1gad7928795124768e058f99dce270f5c8d">determinant</link>(PerspectiveMatrix),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;epsilon&lt;T&gt;()))
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First,&#32;isolate&#32;perspective.&#32;&#32;This&#32;is&#32;the&#32;messiest.</emphasis>
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__epsilon_1ga5a19d270e1912843d95f476fe2d3882d">epsilonNotEqual</link>(LocalMatrix[0][3],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;epsilon&lt;T&gt;())&#32;||
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__epsilon_1ga5a19d270e1912843d95f476fe2d3882d">epsilonNotEqual</link>(LocalMatrix[1][3],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;epsilon&lt;T&gt;())&#32;||
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtc__epsilon_1ga5a19d270e1912843d95f476fe2d3882d">epsilonNotEqual</link>(LocalMatrix[2][3],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;epsilon&lt;T&gt;()))
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rightHandSide&#32;is&#32;the&#32;right&#32;hand&#32;side&#32;of&#32;the&#32;equation.</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;RightHandSide;
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RightHandSide[0]&#32;=&#32;LocalMatrix[0][3];
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RightHandSide[1]&#32;=&#32;LocalMatrix[1][3];
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RightHandSide[2]&#32;=&#32;LocalMatrix[2][3];
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RightHandSide[3]&#32;=&#32;LocalMatrix[3][3];
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Solve&#32;the&#32;equation&#32;by&#32;inverting&#32;PerspectiveMatrix&#32;and&#32;multiplying</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rightHandSide&#32;by&#32;the&#32;inverse.&#32;&#32;(This&#32;is&#32;the&#32;easiest&#32;way,&#32;not</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;necessarily&#32;the&#32;best.)</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;InversePerspectiveMatrix&#32;=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">glm::inverse</link>(PerspectiveMatrix);<emphasis role="comment">//&#32;&#32;&#32;inverse(PerspectiveMatrix,&#32;inversePerspectiveMatrix);</emphasis>
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;TransposedInversePerspectiveMatrix&#32;=&#32;<link linkend="_group__core__func__matrix_1ga4d251df5957b62996391bccb61cc9974">glm::transpose</link>(InversePerspectiveMatrix);<emphasis role="comment">//&#32;&#32;&#32;transposeMatrix4(inversePerspectiveMatrix,&#32;transposedInversePerspectiveMatrix);</emphasis>
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Perspective&#32;=&#32;TransposedInversePerspectiveMatrix&#32;*&#32;RightHandSide;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;v4MulPointByMatrix(rightHandSide,&#32;transposedInversePerspectiveMatrix,&#32;perspectivePoint);</emphasis>
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;the&#32;perspective&#32;partition</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalMatrix[0][3]&#32;=&#32;LocalMatrix[1][3]&#32;=&#32;LocalMatrix[2][3]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0);
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalMatrix[3][3]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1);
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;perspective.</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Perspective&#32;=&#32;vec&lt;4,&#32;T,&#32;Q&gt;(0,&#32;0,&#32;0,&#32;1);
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;take&#32;care&#32;of&#32;translation&#32;(easy).</emphasis>
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Translation&#32;=&#32;vec&lt;3,&#32;T,&#32;Q&gt;(LocalMatrix[3]);
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LocalMatrix[3]&#32;=&#32;vec&lt;4,&#32;T,&#32;Q&gt;(0,&#32;0,&#32;0,&#32;LocalMatrix[3].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;Row[3],&#32;Pdum3;
93 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;get&#32;scale&#32;and&#32;shear.</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;++i)
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;++j)
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[i][j]&#32;=&#32;LocalMatrix[i][j];
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;X&#32;scale&#32;factor&#32;and&#32;normalize&#32;first&#32;row.</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scale.x&#32;=&#32;<link linkend="_namespacelength">length</link>(Row[0]);<emphasis role="comment">//&#32;v3Length(Row[0]);</emphasis>
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[0]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a8e563a75f3346ec61537f1601eb5f8cb">detail::scale</link>(Row[0],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;XY&#32;shear&#32;factor&#32;and&#32;make&#32;2nd&#32;row&#32;orthogonal&#32;to&#32;1st.</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.z&#32;=&#32;<link linkend="_namespacedot">dot</link>(Row[0],&#32;Row[1]);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[1]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a4363abf5c2e8ba2090523a122202fe76">detail::combine</link>(Row[1],&#32;Row[0],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1),&#32;-Skew.z);
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now,&#32;compute&#32;Y&#32;scale&#32;and&#32;normalize&#32;2nd&#32;row.</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scale.y&#32;=&#32;<link linkend="_namespacelength">length</link>(Row[1]);
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[1]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a8e563a75f3346ec61537f1601eb5f8cb">detail::scale</link>(Row[1],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.z&#32;/=&#32;Scale.y;
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;XZ&#32;and&#32;YZ&#32;shears,&#32;orthogonalize&#32;3rd&#32;row.</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.y&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(Row[0],&#32;Row[2]);
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[2]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a4363abf5c2e8ba2090523a122202fe76">detail::combine</link>(Row[2],&#32;Row[0],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1),&#32;-Skew.y);
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.x&#32;=&#32;<link linkend="_namespaceglm_1a40370edb74dec9048258c063b9c091c9">glm::dot</link>(Row[1],&#32;Row[2]);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[2]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a4363abf5c2e8ba2090523a122202fe76">detail::combine</link>(Row[2],&#32;Row[1],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1),&#32;-Skew.x);
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next,&#32;get&#32;Z&#32;scale&#32;and&#32;normalize&#32;3rd&#32;row.</emphasis>
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scale.z&#32;=&#32;<link linkend="_namespacelength">length</link>(Row[2]);
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[2]&#32;=&#32;<link linkend="_namespaceglm_1_1detail_1a8e563a75f3346ec61537f1601eb5f8cb">detail::scale</link>(Row[2],&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1));
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.y&#32;/=&#32;Scale.z;
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Skew.x&#32;/=&#32;Scale.z;
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;At&#32;this&#32;point,&#32;the&#32;matrix&#32;(in&#32;rows[])&#32;is&#32;orthonormal.</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;a&#32;coordinate&#32;system&#32;flip.&#32;&#32;If&#32;the&#32;determinant</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;is&#32;-1,&#32;then&#32;negate&#32;the&#32;matrix&#32;and&#32;the&#32;scaling&#32;factors.</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pdum3&#32;=&#32;<link linkend="_namespacecross">cross</link>(Row[1],&#32;Row[2]);&#32;<emphasis role="comment">//&#32;v3Cross(row[1],&#32;row[2],&#32;Pdum3);</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespacedot">dot</link>(Row[0],&#32;Pdum3)&#32;&lt;&#32;0)
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespaceglm_1a090a0de2260835bee80e71a702492ed9">length_t</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scale[i]&#32;*=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(-1);
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Row[i]&#32;*=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(-1);
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now,&#32;get&#32;the&#32;rotations&#32;out,&#32;as&#32;described&#32;in&#32;the&#32;gem.</emphasis>
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FIXME&#32;-&#32;Add&#32;the&#32;ability&#32;to&#32;return&#32;either&#32;quaternions&#32;(which&#32;are</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;easier&#32;to&#32;recompose&#32;with)&#32;or&#32;Euler&#32;angles&#32;(rx,&#32;ry,&#32;rz),&#32;which</emphasis>
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;are&#32;easier&#32;for&#32;authors&#32;to&#32;deal&#32;with.&#32;The&#32;latter&#32;will&#32;only&#32;be&#32;useful</emphasis>
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;we&#32;fix&#32;https://bugs.webkit.org/show_bug.cgi?id=23799,&#32;so&#32;I</emphasis>
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;will&#32;leave&#32;the&#32;Euler&#32;angle&#32;code&#32;here&#32;for&#32;now.</emphasis>
145 
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ret.rotateY&#32;=&#32;asin(-Row[0][2]);</emphasis>
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(cos(ret.rotateY)&#32;!=&#32;0)&#32;{</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ret.rotateX&#32;=&#32;atan2(Row[1][2],&#32;Row[2][2]);</emphasis>
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ret.rotateZ&#32;=&#32;atan2(Row[0][1],&#32;Row[0][0]);</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}&#32;else&#32;{</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ret.rotateX&#32;=&#32;atan2(-Row[2][0],&#32;Row[1][1]);</emphasis>
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ret.rotateZ&#32;=&#32;0;</emphasis>
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
154 
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j,&#32;k&#32;=&#32;0;
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>,&#32;trace&#32;=&#32;Row[0].x&#32;+&#32;Row[1].y&#32;+&#32;Row[2].z;
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(trace&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(trace&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1.0));
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation.w&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;root;
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;/&#32;root;
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation.x&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[1].z&#32;-&#32;Row[2].y);
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation.y&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[2].x&#32;-&#32;Row[0].z);
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation.z&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[0].y&#32;-&#32;Row[1].x);
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;End&#32;if&#32;&gt;&#32;0</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Next[3]&#32;=&#32;{1,&#32;2,&#32;0};
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Row[1].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;Row[0].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;i&#32;=&#32;1;
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Row[2].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&#32;Row[i][i])&#32;i&#32;=&#32;2;
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;Next[i];
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;Next[j];
174 
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(Row[i][i]&#32;-&#32;Row[j][j]&#32;-&#32;Row[k][k]&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1.0));
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation[i]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;*&#32;root;
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)&#32;/&#32;root;
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation[j]&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[i][j]&#32;+&#32;Row[j][i]);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation[k]&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[i][k]&#32;+&#32;Row[k][i]);
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Orientation.w&#32;=&#32;<link linkend="_namespaceversion_1ab64fdd4f88cc81edfc86738fbae8bb9a">root</link>&#32;*&#32;(Row[j][k]&#32;-&#32;Row[k][j]);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;End&#32;if&#32;&lt;=&#32;0</emphasis>
183 
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
185 &#32;&#32;&#32;&#32;}
186 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
