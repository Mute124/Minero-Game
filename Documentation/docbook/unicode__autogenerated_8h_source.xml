<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_unicode__autogenerated_8h_source" xml:lang="en-US">
<title>unicode_autogenerated.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/unicode_autogenerated.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//#&#32;This&#32;file&#32;is&#32;a&#32;part&#32;of&#32;toml++&#32;and&#32;is&#32;subject&#32;to&#32;the&#32;the&#32;terms&#32;of&#32;the&#32;MIT&#32;license.</emphasis>
2 <emphasis role="comment">//#&#32;Copyright&#32;(c)&#32;Mark&#32;Gillard&#32;&lt;mark.gillard@outlook.com.au&gt;</emphasis>
3 <emphasis role="comment">//#&#32;See&#32;https://github.com/marzer/tomlplusplus/blob/master/LICENSE&#32;for&#32;the&#32;full&#32;license&#32;text.</emphasis>
4 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;MIT</emphasis>
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_preprocessor_8h">preprocessor.h</link>&quot;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__start_8h">header_start.h</link>&quot;</emphasis>
10 
11 <emphasis role="preprocessor">#if&#32;TOML_GCC&#32;&amp;&amp;&#32;TOML_GCC&#32;&lt;&#32;9</emphasis>
12 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
13 <emphasis role="preprocessor">#pragma&#32;GCC&#32;optimize(&quot;O1&quot;)&#32;</emphasis><emphasis role="comment">//&#32;codegen&#32;bugs</emphasis>
14 <emphasis role="preprocessor">#endif</emphasis>
15 
16 <emphasis role="comment">//&#32;the&#32;functions&#32;in&#32;this&#32;namespace&#32;block&#32;are&#32;automatically&#32;generated&#32;by&#32;a&#32;tool&#32;-&#32;they&#32;are&#32;not&#32;meant&#32;to&#32;be&#32;hand-edited</emphasis>
17 
18 <link linkend="_preprocessor_8h_1ac9e12bb017879603274ac1765b85b872">TOML_IMPL_NAMESPACE_START</link>
19 {
20 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_ascii_horizontal_whitespace(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;==&#32;U<emphasis role="charliteral">&apos;\t&apos;</emphasis>&#32;||&#32;c&#32;==&#32;U<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
24 &#32;&#32;&#32;&#32;}
25 
26 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
27 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_non_ascii_horizontal_whitespace(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
28 &#32;&#32;&#32;&#32;{
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;20&#32;code&#32;units&#32;from&#32;8&#32;ranges&#32;(spanning&#32;a&#32;search&#32;area&#32;of&#32;65120)</emphasis>
30 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;&#32;U<emphasis role="stringliteral">&apos;\xA0&apos;</emphasis>&#32;||&#32;c&#32;&gt;&#32;U<emphasis role="stringliteral">&apos;\uFEFF&apos;</emphasis>)
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
33 
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;child_index_0&#32;=&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0xA0ull)&#32;/&#32;0x3FAull;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((1ull&#32;&lt;&lt;&#32;child_index_0)&#32;&amp;&#32;0x7FFFFFFFFFFFF75Eull)
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;U<emphasis role="stringliteral">&apos;\xA0&apos;</emphasis>&#32;||&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\u3000&apos;</emphasis>&#32;||&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\uFEFF&apos;</emphasis>)
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(child_index_0)
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x05:&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\u1680&apos;</emphasis>&#32;||&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\u180E&apos;</emphasis>;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x07:
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(U<emphasis role="stringliteral">&apos;\u2000&apos;</emphasis>&#32;&lt;=&#32;c&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\u200B&apos;</emphasis>)&#32;||&#32;(U<emphasis role="stringliteral">&apos;\u205F&apos;</emphasis>&#32;&lt;=&#32;c&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\u2060&apos;</emphasis>)&#32;||&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\u202F&apos;</emphasis>;
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<link linkend="_preprocessor_8h_1a43a3ff9d3097bf4e929c9a73bd17b793">TOML_UNREACHABLE</link>;
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a43a3ff9d3097bf4e929c9a73bd17b793">TOML_UNREACHABLE</link>;
48 &#32;&#32;&#32;&#32;}
49 
50 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_ascii_vertical_whitespace(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
52 &#32;&#32;&#32;&#32;{
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;&gt;=&#32;U<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="charliteral">&apos;\r&apos;</emphasis>;
54 &#32;&#32;&#32;&#32;}
55 
56 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_non_ascii_vertical_whitespace(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
58 &#32;&#32;&#32;&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(U<emphasis role="stringliteral">&apos;\u2028&apos;</emphasis>&#32;&lt;=&#32;c&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\u2029&apos;</emphasis>)&#32;||&#32;c&#32;==&#32;U<emphasis role="stringliteral">&apos;\x85&apos;</emphasis>;
60 &#32;&#32;&#32;&#32;}
61 
62 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
63 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_ascii_bare_key_character(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
64 &#32;&#32;&#32;&#32;{
65 <emphasis role="preprocessor">#if&#32;TOML_LANG_UNRELEASED&#32;</emphasis><emphasis role="comment">//&#32;toml/issues/644&#32;(&apos;+&apos;&#32;in&#32;bare&#32;keys)</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_preprocessor_8h_1a1ab9a36ec71d2037e14f1dfb0aa0e03c">TOML_UNLIKELY</link>(c&#32;==&#32;U<emphasis role="charliteral">&apos;+&apos;</emphasis>)
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
68 <emphasis role="preprocessor">#endif</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;64&#32;code&#32;units&#32;from&#32;5&#32;ranges&#32;(spanning&#32;a&#32;search&#32;area&#32;of&#32;78)</emphasis>
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;&#32;U<emphasis role="charliteral">&apos;-&apos;</emphasis>&#32;||&#32;c&#32;&gt;&#32;U<emphasis role="charliteral">&apos;z&apos;</emphasis>)
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0x2Dull)&#32;/&#32;0x40ull)&#32;!=&#32;0ull)
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;((1ull&#32;&lt;&lt;&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0x2Dull))&#32;&amp;&#32;0xFFF43FFFFFF01FF9ull);
76 &#32;&#32;&#32;&#32;}
77 
78 <emphasis role="preprocessor">#if&#32;TOML_LANG_UNRELEASED&#32;</emphasis><emphasis role="comment">//&#32;toml/pull/891&#32;(unicode&#32;bare&#32;keys)</emphasis>
79 
80 &#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a635df435bd9048d34bd5824a31d79d1e">TOML_CONST_GETTER</link>
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_non_ascii_bare_key_character(<emphasis role="keywordtype">char32_t</emphasis>&#32;c)&#32;<emphasis role="keyword">noexcept</emphasis>
82 &#32;&#32;&#32;&#32;{
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;971732&#32;code&#32;units&#32;from&#32;16&#32;ranges&#32;(spanning&#32;a&#32;search&#32;area&#32;of&#32;982862)</emphasis>
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;&#32;U<emphasis role="stringliteral">&apos;\xB2&apos;</emphasis>&#32;||&#32;c&#32;&gt;&#32;U<emphasis role="stringliteral">&apos;\U000EFFFF&apos;</emphasis>)
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;child_index_0&#32;=&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0xB2ull)&#32;/&#32;0x3BFEull;
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((1ull&#32;&lt;&lt;&#32;child_index_0)&#32;&amp;&#32;0xFFFFFFFFFFFFFFE6ull)
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(child_index_0)
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x00:&#32;<emphasis role="comment">//&#32;[0]&#32;00B2&#32;-&#32;3CAF</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;12710&#32;code&#32;units&#32;from&#32;13&#32;ranges&#32;(spanning&#32;a&#32;search&#32;area&#32;of&#32;15358)</emphasis>
96 
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a87bd3a07eee4ded6e9f8a97ac8fba3e8">TOML_ASSUME</link>(c&#32;&gt;=&#32;U<emphasis role="stringliteral">&apos;\xB2&apos;</emphasis>&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\u3CAF&apos;</emphasis>);
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link>&#32;bitmask_table_1[]&#32;=&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFDFFFFFDC83u,&#32;0xFFFFFFFFFFFFFFDFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFEFFFu,
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0x000000000C003FFFu,&#32;0xC000000000006000u,&#32;0xFFFFFFFFFFFFFFFFu,
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0x000000003FFFFFFFu,
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0xFFFFC00000000000u,&#32;0xFFFFFFFFFFFFFFFFu,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0x0000000000003FFFu,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,&#32;0x0000000000000000u,
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000000000000000u,&#32;0xFFFFFFFFFFFFC000u,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3FFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFF8000u,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0xFFFFFFFFFFFFFFFFu,&#32;0x3FFFFFFFFFFFFFFFu,
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitmask_table_1[(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0xB2ull)&#32;/&#32;0x40ull]
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&#32;(0x1ull&#32;&lt;&lt;&#32;((<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab604f73dd823867b43702ae88b4f4445">uint_least64_t</link><emphasis role="keyword">&gt;</emphasis>(c)&#32;-&#32;0xB2ull)&#32;%&#32;0x40ull));
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x03:&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\uD7FF&apos;</emphasis>;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x04:
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(U<emphasis role="stringliteral">&apos;\uF900&apos;</emphasis>&#32;&lt;=&#32;c&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\uFDCF&apos;</emphasis>)&#32;||&#32;(U<emphasis role="stringliteral">&apos;\uFDF0&apos;</emphasis>&#32;&lt;=&#32;c&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;U<emphasis role="stringliteral">&apos;\uFFFD&apos;</emphasis>)&#32;||&#32;U<emphasis role="stringliteral">&apos;\U00010000&apos;</emphasis>&#32;&lt;=&#32;c;
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<link linkend="_preprocessor_8h_1a43a3ff9d3097bf4e929c9a73bd17b793">TOML_UNREACHABLE</link>;
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
169 
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a43a3ff9d3097bf4e929c9a73bd17b793">TOML_UNREACHABLE</link>;
171 &#32;&#32;&#32;&#32;}
172 
173 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TOML_LANG_UNRELEASED</emphasis>
174 }
175 <link linkend="_preprocessor_8h_1abec69dd25f1e4c1dfbdd288441864939">TOML_IMPL_NAMESPACE_END</link>;
176 
177 <emphasis role="preprocessor">#if&#32;TOML_GCC&#32;&amp;&amp;&#32;TOML_GCC&#32;&lt;&#32;9</emphasis>
178 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
179 <emphasis role="preprocessor">#endif</emphasis>
180 
182 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__end_8h">header_end.h</link>&quot;</emphasis>
</programlisting></section>
