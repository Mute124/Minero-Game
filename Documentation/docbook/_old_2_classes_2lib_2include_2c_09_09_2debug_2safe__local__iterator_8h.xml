<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2debug_2safe__local__iterator_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/safe_local_iterator.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/safe_local_iterator.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;debug/safe_unordered_base.h&gt;<?linebreak?>#include &lt;debug/safe_local_iterator.tcc&gt;<?linebreak?></programlisting>Include dependency graph for safe_local_iterator.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2debug_2safe__local__iterator_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class____gnu__debug_1_1___safe__local__iterator">__gnu_debug::_Safe_local_iterator&lt; _Iterator, _Sequence &gt;</link></para>

<para>Safe iterator wrapper. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__debug_1_1___unsafe__type_3_01___safe__local__iterator_3_01___iterator_00_01___sequence_01_4_01_4">__gnu_debug::_Unsafe_type&lt; _Safe_local_iterator&lt; _Iterator, _Sequence &gt; &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__debug">__gnu_debug</link></para>

<para>GNU debug classes for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="__old_2_classes_2lib_2include_2c_09_09_2debug_2safe__local__iterator_8h_1a190b0f574ce22a787a598c3c38761ade">_GLIBCXX_DEBUG_VERIFY_OPERANDS</link>(_Lhs,  _Rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1ada0ed4cd9ec02fd9fed5e674e88a956e">__gnu_debug::__valid_range</link> (const <link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator</link>&lt; _Iterator, _Sequence &gt; &amp;__first, const <link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator</link>&lt; _Iterator, _Sequence &gt; &amp;__last, typename <link linkend="_struct____gnu__debug_1_1___distance__traits">_Distance_traits</link>&lt; _Iterator &gt;::__type &amp;__dist_info)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence &gt; </para><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_namespace____gnu__debug_1a907668921a9d86e8f7e4cc45f42d4ae5">__gnu_debug::__valid_range</link> (const <link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator</link>&lt; _Iterator, _Sequence &gt; &amp;__first, const <link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator</link>&lt; _Iterator, _Sequence &gt; &amp;__last)</para>
</listitem>
            <listitem><para>template&lt;typename _Iterator , typename _Sequence &gt; </para><para>_Iterator <link linkend="_namespace____gnu__debug_1a825dbd2250e66217ef69b4a9fb7228a6">__gnu_debug::__unsafe</link> (const <link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator</link>&lt; _Iterator, _Sequence &gt; &amp;__it)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2include_2c_09_09_2debug_2safe__local__iterator_8h_1a190b0f574ce22a787a598c3c38761ade"/><section>
    <title>_GLIBCXX_DEBUG_VERIFY_OPERANDS</title>
<indexterm><primary>_GLIBCXX_DEBUG_VERIFY_OPERANDS</primary><secondary>safe_local_iterator.h</secondary></indexterm>
<indexterm><primary>safe_local_iterator.h</primary><secondary>_GLIBCXX_DEBUG_VERIFY_OPERANDS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> _GLIBCXX_DEBUG_VERIFY_OPERANDS( _Lhs,  _Rhs)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2macros_8h_1abc21d6cf6063d6d47494b08a8f1ba3be">_GLIBCXX_DEBUG_VERIFY</link>(!_Lhs._M_singular()&#32;&amp;&amp;&#32;!_Rhs._M_singular()&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(_Lhs.base()&#32;==&#32;_Iterator{}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_Rhs.base()&#32;==&#32;_Iterator{}),&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_message(__msg_iter_compare_bad)&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Lhs,&#32;<emphasis role="stringliteral">&quot;lhs&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Rhs,&#32;<emphasis role="stringliteral">&quot;rhs&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;_GLIBCXX_DEBUG_VERIFY(_Lhs._M_can_compare(_Rhs),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_message(__msg_compare_different)&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Lhs,&#32;<emphasis role="stringliteral">&quot;lhs&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Rhs,&#32;<emphasis role="stringliteral">&quot;rhs&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;_GLIBCXX_DEBUG_VERIFY(_Lhs._M_in_same_bucket(_Rhs),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_message(__msg_local_iter_compare_bad)&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Lhs,&#32;<emphasis role="stringliteral">&quot;lhs&quot;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_iterator(_Rhs,&#32;<emphasis role="stringliteral">&quot;rhs&quot;</emphasis>))
</programlisting></section>
</section>
</section>
