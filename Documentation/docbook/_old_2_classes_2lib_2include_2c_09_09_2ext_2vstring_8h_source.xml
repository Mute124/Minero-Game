<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2vstring_8h_source" xml:lang="en-US">
<title>vstring.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/vstring.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Versatile&#32;string&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_VSTRING_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_VSTRING_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
33 
34 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
35 <emphasis role="preprocessor">#include&#32;&lt;initializer_list&gt;</emphasis>
36 <emphasis role="preprocessor">#endif</emphasis>
37 
38 <emphasis role="preprocessor">#include&#32;&lt;ext/vstring_util.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;ext/rc_string_base.h&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;ext/sso_string_base.h&gt;</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;bits/stl_algobase.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;std::min</emphasis>
42 
43 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
44 {
45 _GLIBCXX_BEGIN_NAMESPACE_VERSION
46 
55 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____versa__string">__versa_string</link>
58 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">private</emphasis>&#32;_Base&lt;_CharT,&#32;_Traits,&#32;_Alloc&gt;
59 &#32;&#32;&#32;&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Base&lt;_CharT,&#32;_Traits,&#32;_Alloc&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__vstring_base;&#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__vstring_base::_CharT_alloc_type&#32;&#32;&#32;&#32;_CharT_alloc_type;
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__alloc_traits&lt;_CharT_alloc_type&gt;&#32;_CharT_alloc_traits;
63 
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Types:</emphasis>
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
66 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Traits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type;
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits::char_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_type;
68 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocator_type;
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_type::size_type&#32;&#32;&#32;&#32;&#32;size_type;
70 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_type::difference_type&#32;&#32;&#32;difference_type;
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;value_type&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reference;
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;value_type&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_reference;
73 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_traits::pointer&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">pointer</link>;
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT_alloc_traits::const_pointer&#32;&#32;&#32;const_pointer;
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::__normal_iterator&lt;pointer,&#32;__versa_string&gt;&#32;&#32;iterator;
76 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;__gnu_cxx::__normal_iterator&lt;const_pointer,&#32;__versa_string&gt;
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_iterator;
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::reverse_iterator&lt;const_iterator&gt;&#32;const_reverse_iterator;
79 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::reverse_iterator&lt;iterator&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reverse_iterator;
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Data&#32;Member&#32;(public):</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;&#32;&#32;&#32;npos&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>size_type<emphasis role="keyword">&gt;</emphasis>(-1);
84 
85 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
86 &#32;&#32;&#32;&#32;&#32;&#32;size_type
87 &#32;&#32;&#32;&#32;&#32;&#32;_M_check(size_type&#32;__pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__s)<emphasis role="keyword">&#32;const</emphasis>
88 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
89 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__pos&#32;&gt;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>())
90 &#32;&#32;&#32;&#32;&#32;&#32;std::__throw_out_of_range_fmt(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>(<emphasis role="stringliteral">&quot;%s:&#32;__pos&#32;(which&#32;is&#32;%zu)&#32;&gt;&#32;&quot;</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;this-&gt;size()&#32;(which&#32;is&#32;%zu)&quot;</emphasis>),
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s,&#32;__pos,&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
93 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__pos;
94 &#32;&#32;&#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;_M_check_length(size_type&#32;__n1,&#32;size_type&#32;__n2,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__s)<emphasis role="keyword">&#32;const</emphasis>
98 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
99 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;max_size()&#32;-&#32;(this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;-&#32;__n1)&#32;&lt;&#32;__n2)
100 &#32;&#32;&#32;&#32;&#32;&#32;std::__throw_length_error(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>(__s));
101 &#32;&#32;&#32;&#32;&#32;&#32;}
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NB:&#32;_M_limit&#32;doesn&apos;t&#32;check&#32;for&#32;a&#32;bad&#32;__pos&#32;value.</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;size_type
105 &#32;&#32;&#32;&#32;&#32;&#32;_M_limit(size_type&#32;__pos,&#32;size_type&#32;__off)&#32;<emphasis role="keyword">const</emphasis>&#32;_GLIBCXX_NOEXCEPT
106 &#32;&#32;&#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__testoff&#32;=&#32;&#32;__off&#32;&lt;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;-&#32;__pos;
108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__testoff&#32;?&#32;__off&#32;:&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;-&#32;__pos;
109 &#32;&#32;&#32;&#32;&#32;&#32;}
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;True&#32;if&#32;_Rep&#32;and&#32;source&#32;do&#32;not&#32;overlap.</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;_M_disjunct(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)&#32;<emphasis role="keyword">const</emphasis>&#32;_GLIBCXX_NOEXCEPT
114 &#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(std::less&lt;const&#32;_CharT*&gt;()(__s,&#32;this-&gt;_M_data())
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::less&lt;const&#32;_CharT*&gt;()(this-&gt;_M_data()
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;__s));
118 &#32;&#32;&#32;&#32;&#32;&#32;}
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;the&#32;internal&#32;use&#32;we&#32;have&#32;functions&#32;similar&#32;to&#32;`begin&apos;/`end&apos;</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;they&#32;do&#32;not&#32;call&#32;_M_leak.</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;iterator
123 &#32;&#32;&#32;&#32;&#32;&#32;_M_ibegin()&#32;const&#32;_GLIBCXX_NOEXCEPT
124 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data());&#32;}
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;iterator
127 &#32;&#32;&#32;&#32;&#32;&#32;_M_iend()&#32;const&#32;_GLIBCXX_NOEXCEPT
128 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;this-&gt;_M_length());&#32;}
129 
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Construct/copy/destroy:</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NB:&#32;We&#32;overload&#32;ctors&#32;in&#32;some&#32;cases&#32;instead&#32;of&#32;using&#32;default</emphasis>
133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;arguments,&#32;per&#32;17.4.4.4&#32;para.&#32;2&#32;item&#32;2.</emphasis>
134 
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())&#32;_GLIBCXX_NOEXCEPT
140 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__a)&#32;{&#32;}
141 
142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NB:&#32;per&#32;LWG&#32;issue&#32;42,&#32;semantics&#32;different&#32;from&#32;IS:</emphasis>
147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
148 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__str)&#32;{&#32;}
149 
150 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<link linkend="_class____versa__string">__versa_string</link>&amp;&amp;&#32;__str)&#32;noexcept
160 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__str))&#32;{&#32;}
161 
167 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(std::initializer_list&lt;_CharT&gt;&#32;__l,
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())
169 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__l.<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>(),&#32;__l.<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>(),&#32;__a)&#32;{&#32;}
170 <emphasis role="preprocessor">#endif</emphasis>
171 
178 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos,
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n&#32;=&#32;npos)
180 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__str._M_data()
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;__versa_string::__versa_string&quot;</emphasis>),
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_data()&#32;+&#32;__str._M_limit(__pos,&#32;__n)
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__pos,&#32;_Alloc())&#32;{&#32;}
185 
193 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos,
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n,&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a)
195 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__str._M_data()
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos,
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;__versa_string::__versa_string&quot;</emphasis>),
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_data()&#32;+&#32;__str._M_limit(__pos,&#32;__n)
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__pos,&#32;__a)&#32;{&#32;}
200 
210 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n,
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())
212 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__s,&#32;__s&#32;+&#32;__n,&#32;__a)&#32;{&#32;}
213 
219 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())
220 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__s,&#32;__s&#32;?&#32;__s&#32;+&#32;traits_type::<link linkend="_namespacelength">length</link>(__s)&#32;:
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s&#32;+&#32;npos,&#32;__a)&#32;{&#32;}
222 
229 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(size_type&#32;__n,&#32;_CharT&#32;__c,&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())
230 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;__vstring_base(__n,&#32;__c,&#32;__a)&#32;{&#32;}
231 
238 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class&#32;</emphasis>_InputIterator,
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;std::_RequireInputIter&lt;_InputIterator&gt;&gt;
241 <emphasis role="preprocessor">#else</emphasis>
242 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
243 <emphasis role="preprocessor">#endif</emphasis>
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>(_InputIterator&#32;__beg,&#32;_InputIterator&#32;__end,
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Alloc&amp;&#32;__a&#32;=&#32;_Alloc())
246 &#32;&#32;&#32;&#32;:&#32;__vstring_base(__beg,&#32;__end,&#32;__a)&#32;{&#32;}
247 
251 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">~__versa_string</link>()&#32;_GLIBCXX_NOEXCEPT&#32;{&#32;}&#32;&#32;&#32;
252 
257 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
258 &#32;&#32;&#32;&#32;&#32;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)&#32;
259 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;assign(__str);&#32;}
260 
261 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
269 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
270 &#32;&#32;&#32;&#32;&#32;&#32;operator=(<link linkend="_class____versa__string">__versa_string</link>&amp;&amp;&#32;__str)&#32;<emphasis role="keyword">noexcept</emphasis>
271 &#32;&#32;&#32;&#32;&#32;&#32;{
272 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NB:&#32;DR&#32;1204.</emphasis>
273 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">swap</link>(__str);
274 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
275 &#32;&#32;&#32;&#32;&#32;&#32;}
276 
281 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
282 &#32;&#32;&#32;&#32;&#32;&#32;operator=(std::initializer_list&lt;_CharT&gt;&#32;__l)
283 &#32;&#32;&#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;this-&gt;assign(__l.begin(),&#32;__l.end());
285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
286 &#32;&#32;&#32;&#32;&#32;&#32;}
287 <emphasis role="preprocessor">#endif</emphasis>
288 
293 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
294 &#32;&#32;&#32;&#32;&#32;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)&#32;
295 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;assign(__s);&#32;}
296 
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
305 &#32;&#32;&#32;&#32;&#32;&#32;operator=(_CharT&#32;__c)&#32;
306 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;
307 &#32;&#32;&#32;&#32;this-&gt;assign(1,&#32;__c);&#32;
308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
309 &#32;&#32;&#32;&#32;&#32;&#32;}
310 
311 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterators:</emphasis>
316 &#32;&#32;&#32;&#32;&#32;&#32;iterator
317 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>()&#32;_GLIBCXX_NOEXCEPT
318 &#32;&#32;&#32;&#32;&#32;&#32;{
319 &#32;&#32;&#32;&#32;this-&gt;_M_leak();
320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data());
321 &#32;&#32;&#32;&#32;&#32;&#32;}
322 
327 &#32;&#32;&#32;&#32;&#32;&#32;const_iterator
328 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>()&#32;const&#32;_GLIBCXX_NOEXCEPT
329 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_iterator(this-&gt;_M_data());&#32;}
330 
335 &#32;&#32;&#32;&#32;&#32;&#32;iterator
336 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>()&#32;_GLIBCXX_NOEXCEPT
337 &#32;&#32;&#32;&#32;&#32;&#32;{
338 &#32;&#32;&#32;&#32;this-&gt;_M_leak();
339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
340 &#32;&#32;&#32;&#32;&#32;&#32;}
341 
346 &#32;&#32;&#32;&#32;&#32;&#32;const_iterator
347 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>()&#32;const&#32;_GLIBCXX_NOEXCEPT
348 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_iterator(this-&gt;_M_data()&#32;+&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());&#32;}
349 
355 &#32;&#32;&#32;&#32;&#32;&#32;reverse_iterator
356 &#32;&#32;&#32;&#32;&#32;&#32;rbegin()&#32;_GLIBCXX_NOEXCEPT
357 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator(this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>());&#32;}
358 
364 &#32;&#32;&#32;&#32;&#32;&#32;const_reverse_iterator
365 &#32;&#32;&#32;&#32;&#32;&#32;rbegin()&#32;const&#32;_GLIBCXX_NOEXCEPT
366 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_reverse_iterator(this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>());&#32;}
367 
373 &#32;&#32;&#32;&#32;&#32;&#32;reverse_iterator
374 &#32;&#32;&#32;&#32;&#32;&#32;rend()&#32;_GLIBCXX_NOEXCEPT
375 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;reverse_iterator(this-&gt;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>());&#32;}
376 
382 &#32;&#32;&#32;&#32;&#32;&#32;const_reverse_iterator
383 &#32;&#32;&#32;&#32;&#32;&#32;rend()&#32;const&#32;_GLIBCXX_NOEXCEPT
384 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_reverse_iterator(this-&gt;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>());&#32;}
385 
386 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
391 &#32;&#32;&#32;&#32;&#32;&#32;const_iterator
392 &#32;&#32;&#32;&#32;&#32;&#32;cbegin()&#32;const&#32;noexcept
393 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_iterator(this-&gt;_M_data());&#32;}
394 
399 &#32;&#32;&#32;&#32;&#32;&#32;const_iterator
400 &#32;&#32;&#32;&#32;&#32;&#32;cend()&#32;const&#32;noexcept
401 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_iterator(this-&gt;_M_data()&#32;+&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());&#32;}
402 
408 &#32;&#32;&#32;&#32;&#32;&#32;const_reverse_iterator
409 &#32;&#32;&#32;&#32;&#32;&#32;crbegin()&#32;const&#32;noexcept
410 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_reverse_iterator(this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>());&#32;}
411 
417 &#32;&#32;&#32;&#32;&#32;&#32;const_reverse_iterator
418 &#32;&#32;&#32;&#32;&#32;&#32;crend()&#32;const&#32;noexcept
419 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;const_reverse_iterator(this-&gt;<link linkend="_group__gtx__range_1gaa752bdfcbfda8d0593318c4bf8a7dc6e">begin</link>());&#32;}
420 <emphasis role="preprocessor">#endif</emphasis>
421 
422 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
423 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Capacity:</emphasis>
426 &#32;&#32;&#32;&#32;&#32;&#32;size_type
427 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;const&#32;_GLIBCXX_NOEXCEPT
428 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_length();&#32;}
429 
432 &#32;&#32;&#32;&#32;&#32;&#32;size_type
433 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacelength">length</link>()&#32;const&#32;_GLIBCXX_NOEXCEPT
434 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_length();&#32;}
435 
437 &#32;&#32;&#32;&#32;&#32;&#32;size_type
438 &#32;&#32;&#32;&#32;&#32;&#32;max_size()&#32;const&#32;_GLIBCXX_NOEXCEPT
439 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_max_size();&#32;}
440 
451 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
452 &#32;&#32;&#32;&#32;&#32;&#32;resize(size_type&#32;__n,&#32;_CharT&#32;__c);
453 
464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
465 &#32;&#32;&#32;&#32;&#32;&#32;resize(size_type&#32;__n)
466 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;resize(__n,&#32;_CharT());&#32;}
467 
468 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
471 &#32;&#32;&#32;&#32;&#32;&#32;shrink_to_fit()&#32;noexcept
472 &#32;&#32;&#32;&#32;&#32;&#32;{
473 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(capacity()&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>())
474 &#32;&#32;&#32;&#32;&#32;&#32;{
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a130bf0cd31a0783cd03563f46b46915b">__try</link>
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;reserve(0);&#32;}
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(...)
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
479 &#32;&#32;&#32;&#32;&#32;&#32;}
480 &#32;&#32;&#32;&#32;&#32;&#32;}
481 <emphasis role="preprocessor">#endif</emphasis>
482 
487 &#32;&#32;&#32;&#32;&#32;&#32;size_type
488 &#32;&#32;&#32;&#32;&#32;&#32;capacity()&#32;const&#32;_GLIBCXX_NOEXCEPT
489 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_capacity();&#32;}
490 
508 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
509 &#32;&#32;&#32;&#32;&#32;&#32;reserve(size_type&#32;__res_arg&#32;=&#32;0)
510 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;_M_reserve(__res_arg);&#32;}
511 
515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
516 &#32;&#32;&#32;&#32;&#32;&#32;clear()&#32;_GLIBCXX_NOEXCEPT
517 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;_M_clear();&#32;}
518 
523 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keywordtype">bool</emphasis>
524 &#32;&#32;&#32;&#32;&#32;&#32;empty()&#32;const&#32;_GLIBCXX_NOEXCEPT
525 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;==&#32;0;&#32;}
526 
527 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Element&#32;access:</emphasis>
538 &#32;&#32;&#32;&#32;&#32;&#32;const_reference
539 &#32;&#32;&#32;&#32;&#32;&#32;operator[]&#32;(size_type&#32;__pos)&#32;<emphasis role="keyword">const</emphasis>&#32;_GLIBCXX_NOEXCEPT
540 &#32;&#32;&#32;&#32;&#32;&#32;{
541 &#32;&#32;&#32;&#32;__glibcxx_assert(__pos&#32;&lt;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
542 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data()[__pos];
543 &#32;&#32;&#32;&#32;&#32;&#32;}
544 
555 &#32;&#32;&#32;&#32;&#32;&#32;reference
556 &#32;&#32;&#32;&#32;&#32;&#32;operator[](size_type&#32;__pos)&#32;_GLIBCXX_NOEXCEPT
557 &#32;&#32;&#32;&#32;&#32;&#32;{
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Allow&#32;pos&#32;==&#32;size()&#32;both&#32;in&#32;C++98&#32;mode,&#32;as&#32;v3&#32;extension,</emphasis>
559 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;in&#32;C++11&#32;mode.</emphasis>
560 &#32;&#32;&#32;&#32;__glibcxx_assert(__pos&#32;&lt;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;pedantic&#32;mode&#32;be&#32;strict&#32;in&#32;C++98&#32;mode.</emphasis>
562 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__cplusplus&#32;&gt;=&#32;201103L
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;__pos&#32;&lt;&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
564 &#32;&#32;&#32;&#32;this-&gt;_M_leak();
565 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data()[__pos];
566 &#32;&#32;&#32;&#32;&#32;&#32;}
567 
578 &#32;&#32;&#32;&#32;&#32;&#32;const_reference
579 &#32;&#32;&#32;&#32;&#32;&#32;at(size_type&#32;__n)<emphasis role="keyword">&#32;const</emphasis>
580 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
581 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;&gt;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>())
582 &#32;&#32;&#32;&#32;&#32;&#32;std::__throw_out_of_range_fmt(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>(<emphasis role="stringliteral">&quot;__versa_string::at:&#32;__n&#32;&quot;</emphasis>
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;(which&#32;is&#32;%zu)&#32;&gt;=&#32;this-&gt;size()&#32;&quot;</emphasis>
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;(which&#32;is&#32;%zu)&quot;</emphasis>),
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__n,&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
586 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data()[__n];
587 &#32;&#32;&#32;&#32;&#32;&#32;}
588 
600 &#32;&#32;&#32;&#32;&#32;&#32;reference
601 &#32;&#32;&#32;&#32;&#32;&#32;at(size_type&#32;__n)
602 &#32;&#32;&#32;&#32;&#32;&#32;{
603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__n&#32;&gt;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>())
604 &#32;&#32;&#32;&#32;&#32;&#32;std::__throw_out_of_range_fmt(<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>(<emphasis role="stringliteral">&quot;__versa_string::at:&#32;__n&#32;&quot;</emphasis>
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;(which&#32;is&#32;%zu)&#32;&gt;=&#32;this-&gt;size()&#32;&quot;</emphasis>
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;(which&#32;is&#32;%zu)&quot;</emphasis>),
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__n,&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>());
608 &#32;&#32;&#32;&#32;this-&gt;_M_leak();
609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data()[__n];
610 &#32;&#32;&#32;&#32;&#32;&#32;}
611 
612 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
617 &#32;&#32;&#32;&#32;&#32;&#32;reference
618 &#32;&#32;&#32;&#32;&#32;&#32;front()&#32;noexcept
619 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;operator[](0);&#32;}
620 
625 &#32;&#32;&#32;&#32;&#32;&#32;const_reference
626 &#32;&#32;&#32;&#32;&#32;&#32;front()&#32;const&#32;noexcept
627 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;operator[](0);&#32;}
628 
633 &#32;&#32;&#32;&#32;&#32;&#32;reference
634 &#32;&#32;&#32;&#32;&#32;&#32;back()&#32;noexcept
635 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;operator[](this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;-&#32;1);&#32;}
636 
641 &#32;&#32;&#32;&#32;&#32;&#32;const_reference
642 &#32;&#32;&#32;&#32;&#32;&#32;back()&#32;const&#32;noexcept
643 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;operator[](this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;-&#32;1);&#32;}
644 <emphasis role="preprocessor">#endif</emphasis>
645 
646 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Modifiers:</emphasis>
652 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
653 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a61711bc909f8dc76d8b3deccc1440f46">operator+=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
654 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;append(__str);&#32;}
655 
661 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
662 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a61711bc909f8dc76d8b3deccc1440f46">operator+=</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
663 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;append(__s);&#32;}
664 
670 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
671 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a61711bc909f8dc76d8b3deccc1440f46">operator+=</link>(_CharT&#32;__c)
672 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;
673 &#32;&#32;&#32;&#32;this-&gt;push_back(__c);
674 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
675 &#32;&#32;&#32;&#32;&#32;&#32;}
676 
677 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
683 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
684 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a61711bc909f8dc76d8b3deccc1440f46">operator+=</link>(std::initializer_list&lt;_CharT&gt;&#32;__l)
685 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;append(__l.begin(),&#32;__l.end());&#32;}
686 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
687 
693 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
694 &#32;&#32;&#32;&#32;&#32;&#32;append(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
695 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_append(__str._M_data(),&#32;__str.size());&#32;}
696 
710 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
711 &#32;&#32;&#32;&#32;&#32;&#32;append(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)
712 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_append(__str._M_data()
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::append&quot;</emphasis>),
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_limit(__pos,&#32;__n));&#32;}
715 
722 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
723 &#32;&#32;&#32;&#32;&#32;&#32;append(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
724 &#32;&#32;&#32;&#32;&#32;&#32;{
725 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a91cfe307287e81114000d301d59830e0">__glibcxx_requires_string_len</link>(__s,&#32;__n);
726 &#32;&#32;&#32;&#32;_M_check_length(size_type(0),&#32;__n,&#32;<emphasis role="stringliteral">&quot;__versa_string::append&quot;</emphasis>);
727 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_append(__s,&#32;__n);
728 &#32;&#32;&#32;&#32;&#32;&#32;}
729 
735 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
736 &#32;&#32;&#32;&#32;&#32;&#32;append(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
737 &#32;&#32;&#32;&#32;&#32;&#32;{
738 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
739 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__n&#32;=&#32;traits_type::length(__s);
740 &#32;&#32;&#32;&#32;_M_check_length(size_type(0),&#32;__n,&#32;<emphasis role="stringliteral">&quot;__versa_string::append&quot;</emphasis>);
741 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_append(__s,&#32;__n);
742 &#32;&#32;&#32;&#32;&#32;&#32;}
743 
752 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
753 &#32;&#32;&#32;&#32;&#32;&#32;append(size_type&#32;__n,&#32;_CharT&#32;__c)
754 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;size_type(0),&#32;__n,&#32;__c);&#32;}
755 
756 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
762 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
763 &#32;&#32;&#32;&#32;&#32;&#32;append(std::initializer_list&lt;_CharT&gt;&#32;__l)
764 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;append(__l.begin(),&#32;__l.end());&#32;}
765 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
766 
775 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
776 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class&#32;</emphasis>_InputIterator,
777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;std::_RequireInputIter&lt;_InputIterator&gt;&gt;
778 <emphasis role="preprocessor">#else</emphasis>
779 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
780 <emphasis role="preprocessor">#endif</emphasis>
781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;append(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last)
783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(_M_iend(),&#32;_M_iend(),&#32;__first,&#32;__last);&#32;}
784 
789 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
790 &#32;&#32;&#32;&#32;&#32;&#32;push_back(_CharT&#32;__c)
791 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;
792 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__size&#32;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>();
793 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__size&#32;+&#32;1&#32;&gt;&#32;this-&gt;capacity()&#32;||&#32;this-&gt;_M_is_shared())
794 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;_M_mutate(__size,&#32;size_type(0),&#32;0,&#32;size_type(1));
795 &#32;&#32;&#32;&#32;traits_type::assign(this-&gt;_M_data()[__size],&#32;__c);
796 &#32;&#32;&#32;&#32;this-&gt;_M_set_length(__size&#32;+&#32;1);
797 &#32;&#32;&#32;&#32;&#32;&#32;}
798 
804 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
805 &#32;&#32;&#32;&#32;&#32;&#32;assign(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
806 &#32;&#32;&#32;&#32;&#32;&#32;{
807 &#32;&#32;&#32;&#32;this-&gt;_M_assign(__str);
808 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
809 &#32;&#32;&#32;&#32;&#32;&#32;}
810 
811 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
820 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
821 &#32;&#32;&#32;&#32;&#32;&#32;assign(<link linkend="_class____versa__string">__versa_string</link>&amp;&amp;&#32;__str)&#32;<emphasis role="keyword">noexcept</emphasis>
822 &#32;&#32;&#32;&#32;&#32;&#32;{
823 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">swap</link>(__str);
824 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
825 &#32;&#32;&#32;&#32;&#32;&#32;}
826 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
827 
841 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
842 &#32;&#32;&#32;&#32;&#32;&#32;assign(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)
843 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace(size_type(0),&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;__str._M_data()
844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::assign&quot;</emphasis>),
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_limit(__pos,&#32;__n));&#32;}
846 
858 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
859 &#32;&#32;&#32;&#32;&#32;&#32;assign(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
860 &#32;&#32;&#32;&#32;&#32;&#32;{
861 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a91cfe307287e81114000d301d59830e0">__glibcxx_requires_string_len</link>(__s,&#32;__n);
862 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace(size_type(0),&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;__s,&#32;__n);
863 &#32;&#32;&#32;&#32;&#32;&#32;}
864 
874 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
875 &#32;&#32;&#32;&#32;&#32;&#32;assign(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
876 &#32;&#32;&#32;&#32;&#32;&#32;{
877 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
878 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace(size_type(0),&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;__s,
879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type::length(__s));
880 &#32;&#32;&#32;&#32;&#32;&#32;}
881 
891 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
892 &#32;&#32;&#32;&#32;&#32;&#32;assign(size_type&#32;__n,&#32;_CharT&#32;__c)
893 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(size_type(0),&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>(),&#32;__n,&#32;__c);&#32;}
894 
904 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
905 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class&#32;</emphasis>_InputIterator,
906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;std::_RequireInputIter&lt;_InputIterator&gt;&gt;
907 <emphasis role="preprocessor">#else</emphasis>
908 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
909 <emphasis role="preprocessor">#endif</emphasis>
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assign(_InputIterator&#32;__first,&#32;_InputIterator&#32;__last)
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(_M_ibegin(),&#32;_M_iend(),&#32;__first,&#32;__last);&#32;}
913 
914 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
920 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
921 &#32;&#32;&#32;&#32;&#32;&#32;assign(std::initializer_list&lt;_CharT&gt;&#32;__l)
922 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;assign(__l.begin(),&#32;__l.end());&#32;}
923 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
924 
925 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
941 &#32;&#32;&#32;&#32;&#32;&#32;iterator
942 &#32;&#32;&#32;&#32;&#32;&#32;insert(const_iterator&#32;__p,&#32;size_type&#32;__n,&#32;_CharT&#32;__c)
943 &#32;&#32;&#32;&#32;&#32;&#32;{
944 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__p&#32;&gt;=&#32;_M_ibegin()&#32;&amp;&amp;&#32;__p&#32;&lt;=&#32;_M_iend());
945 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__pos&#32;=&#32;__p&#32;-&#32;_M_ibegin();
946 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__p,&#32;__p,&#32;__n,&#32;__c);
947 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;__pos);&#32;
948 &#32;&#32;&#32;&#32;&#32;&#32;}
949 <emphasis role="preprocessor">#else</emphasis>
963 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
964 &#32;&#32;&#32;&#32;&#32;&#32;insert(iterator&#32;__p,&#32;size_type&#32;__n,&#32;_CharT&#32;__c)
965 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__p,&#32;__p,&#32;__n,&#32;__c);&#32;&#32;}
966 <emphasis role="preprocessor">#endif</emphasis>
967 
968 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
983 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class&#32;</emphasis>_InputIterator,
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;std::_RequireInputIter&lt;_InputIterator&gt;&gt;
985 &#32;&#32;&#32;&#32;iterator
986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;insert(const_iterator&#32;__p,&#32;_InputIterator&#32;__beg,&#32;_InputIterator&#32;__end)
987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
988 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__p&#32;&gt;=&#32;_M_ibegin()&#32;&amp;&amp;&#32;__p&#32;&lt;=&#32;_M_iend());
989 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__pos&#32;=&#32;__p&#32;-&#32;_M_ibegin();
990 &#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__p,&#32;__p,&#32;__beg,&#32;__end);
991 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;__pos);
992 &#32;&#32;&#32;&#32;}
993 <emphasis role="preprocessor">#else</emphasis>
1006 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;insert(iterator&#32;__p,&#32;_InputIterator&#32;__beg,&#32;_InputIterator&#32;__end)
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__p,&#32;__p,&#32;__beg,&#32;__end);&#32;}
1010 <emphasis role="preprocessor">#endif</emphasis>
1011 
1012 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1021 &#32;&#32;&#32;&#32;&#32;&#32;iterator
1022 &#32;&#32;&#32;&#32;&#32;&#32;insert(const_iterator&#32;__p,&#32;std::initializer_list&lt;_CharT&gt;&#32;__l)
1023 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;insert(__p,&#32;__l.begin(),&#32;__l.end());&#32;}
1024 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
1025 
1038 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1039 &#32;&#32;&#32;&#32;&#32;&#32;insert(size_type&#32;__pos1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
1040 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos1,&#32;size_type(0),
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_data(),&#32;__str.size());&#32;}
1042 
1061 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1062 &#32;&#32;&#32;&#32;&#32;&#32;insert(size_type&#32;__pos1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__pos2,&#32;size_type&#32;__n)
1064 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos1,&#32;size_type(0),&#32;__str._M_data()
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos2,&#32;<emphasis role="stringliteral">&quot;__versa_string::insert&quot;</emphasis>),
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_limit(__pos2,&#32;__n));&#32;}
1067 
1084 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1085 &#32;&#32;&#32;&#32;&#32;&#32;insert(size_type&#32;__pos,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
1086 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos,&#32;size_type(0),&#32;__s,&#32;__n);&#32;}
1087 
1103 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1104 &#32;&#32;&#32;&#32;&#32;&#32;insert(size_type&#32;__pos,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
1105 &#32;&#32;&#32;&#32;&#32;&#32;{
1106 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos,&#32;size_type(0),&#32;__s,
1108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traits_type::length(__s));
1109 &#32;&#32;&#32;&#32;&#32;&#32;}
1110 
1127 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1128 &#32;&#32;&#32;&#32;&#32;&#32;insert(size_type&#32;__pos,&#32;size_type&#32;__n,&#32;_CharT&#32;__c)
1129 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(_M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::insert&quot;</emphasis>),
1130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type(0),&#32;__n,&#32;__c);&#32;}
1131 
1145 &#32;&#32;&#32;&#32;&#32;&#32;iterator
1146 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1147 &#32;&#32;&#32;&#32;&#32;&#32;insert(const_iterator&#32;__p,&#32;_CharT&#32;__c)
1148 <emphasis role="preprocessor">#else</emphasis>
1149 &#32;&#32;&#32;&#32;&#32;&#32;insert(iterator&#32;__p,&#32;_CharT&#32;__c)&#32;&#32;
1150 <emphasis role="preprocessor">#endif</emphasis>
1151 &#32;&#32;&#32;&#32;&#32;&#32;{
1152 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__p&#32;&gt;=&#32;_M_ibegin()&#32;&amp;&amp;&#32;__p&#32;&lt;=&#32;_M_iend());
1153 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__pos&#32;=&#32;__p&#32;-&#32;_M_ibegin();
1154 &#32;&#32;&#32;&#32;_M_replace_aux(__pos,&#32;size_type(0),&#32;size_type(1),&#32;__c);
1155 &#32;&#32;&#32;&#32;this-&gt;_M_set_leaked();
1156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;__pos);
1157 &#32;&#32;&#32;&#32;&#32;&#32;}
1158 
1174 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1175 &#32;&#32;&#32;&#32;&#32;&#32;erase(size_type&#32;__pos&#32;=&#32;0,&#32;size_type&#32;__n&#32;=&#32;npos)
1176 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;
1177 &#32;&#32;&#32;&#32;this-&gt;_M_erase(_M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::erase&quot;</emphasis>),
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_limit(__pos,&#32;__n));
1179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1180 &#32;&#32;&#32;&#32;&#32;&#32;}
1181 
1190 &#32;&#32;&#32;&#32;&#32;&#32;iterator
1191 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1192 &#32;&#32;&#32;&#32;&#32;&#32;erase(const_iterator&#32;__position)
1193 <emphasis role="preprocessor">#else</emphasis>
1194 &#32;&#32;&#32;&#32;&#32;&#32;erase(iterator&#32;__position)&#32;&#32;&#32;&#32;
1195 <emphasis role="preprocessor">#endif</emphasis>
1196 &#32;&#32;&#32;&#32;&#32;&#32;{
1197 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__position&#32;&gt;=&#32;_M_ibegin()
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__position&#32;&lt;&#32;_M_iend());
1199 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__pos&#32;=&#32;__position&#32;-&#32;_M_ibegin();
1200 &#32;&#32;&#32;&#32;this-&gt;_M_erase(__pos,&#32;size_type(1));
1201 &#32;&#32;&#32;&#32;this-&gt;_M_set_leaked();
1202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;__pos);
1203 &#32;&#32;&#32;&#32;&#32;&#32;}
1204 
1215 &#32;&#32;&#32;&#32;&#32;&#32;iterator
1216 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1217 &#32;&#32;&#32;&#32;&#32;&#32;erase(const_iterator&#32;__first,&#32;const_iterator&#32;__last)
1218 <emphasis role="preprocessor">#else</emphasis>
1219 &#32;&#32;&#32;&#32;&#32;&#32;erase(iterator&#32;__first,&#32;iterator&#32;__last)
1220 <emphasis role="preprocessor">#endif</emphasis>
1221 &#32;&#32;&#32;&#32;&#32;&#32;{
1222 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(__first&#32;&gt;=&#32;_M_ibegin()&#32;&amp;&amp;&#32;__first&#32;&lt;=&#32;__last
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__last&#32;&lt;=&#32;_M_iend());
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__pos&#32;=&#32;__first&#32;-&#32;_M_ibegin();
1225 &#32;&#32;&#32;&#32;this-&gt;_M_erase(__pos,&#32;__last&#32;-&#32;__first);
1226 &#32;&#32;&#32;&#32;this-&gt;_M_set_leaked();
1227 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;iterator(this-&gt;_M_data()&#32;+&#32;__pos);
1228 &#32;&#32;&#32;&#32;&#32;&#32;}
1229 
1230 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1237 &#32;&#32;&#32;&#32;&#32;&#32;pop_back()
1238 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;_M_erase(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()-1,&#32;1);&#32;}
1239 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
1240 
1258 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1259 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(size_type&#32;__pos,&#32;size_type&#32;__n,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
1260 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos,&#32;__n,&#32;__str._M_data(),&#32;__str.size());&#32;}
1261 
1281 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1282 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(size_type&#32;__pos1,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__pos2,&#32;size_type&#32;__n2)
1284 &#32;&#32;&#32;&#32;&#32;&#32;{
1285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos1,&#32;__n1,&#32;__str._M_data()
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;__str._M_check(__pos2,
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;__versa_string::replace&quot;</emphasis>),
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__str._M_limit(__pos2,&#32;__n2));
1289 &#32;&#32;&#32;&#32;&#32;&#32;}
1290 
1309 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1310 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(size_type&#32;__pos,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,
1311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n2)
1312 &#32;&#32;&#32;&#32;&#32;&#32;{
1313 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a91cfe307287e81114000d301d59830e0">__glibcxx_requires_string_len</link>(__s,&#32;__n2);
1314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace(_M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::replace&quot;</emphasis>),
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_limit(__pos,&#32;__n1),&#32;__s,&#32;__n2);
1316 &#32;&#32;&#32;&#32;&#32;&#32;}
1317 
1333 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(size_type&#32;__pos,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
1335 &#32;&#32;&#32;&#32;&#32;&#32;{
1336 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1337 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(__pos,&#32;__n1,&#32;__s,&#32;traits_type::length(__s));
1338 &#32;&#32;&#32;&#32;&#32;&#32;}
1339 
1357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1358 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(size_type&#32;__pos,&#32;size_type&#32;__n1,&#32;size_type&#32;__n2,&#32;_CharT&#32;__c)
1359 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(_M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::replace&quot;</emphasis>),
1360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_limit(__pos,&#32;__n1),&#32;__n2,&#32;__c);&#32;}
1361 
1375 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1376 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1377 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
1379 <emphasis role="preprocessor">#else</emphasis>
1380 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)
1381 <emphasis role="preprocessor">#endif</emphasis>
1382 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__i2,&#32;__str._M_data(),&#32;__str.size());&#32;}
1383 
1398 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1399 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1400 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
1402 <emphasis role="preprocessor">#else</emphasis>
1403 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n)
1404 <emphasis role="preprocessor">#endif</emphasis>
1405 &#32;&#32;&#32;&#32;&#32;&#32;{
1406 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__s,&#32;__n);
1409 &#32;&#32;&#32;&#32;&#32;&#32;}
1410 
1424 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1425 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1426 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)
1427 <emphasis role="preprocessor">#else</emphasis>
1428 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)&#32;&#32;
1429 <emphasis role="preprocessor">#endif</emphasis>
1430 &#32;&#32;&#32;&#32;&#32;&#32;{
1431 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1432 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__i2,&#32;__s,&#32;traits_type::length(__s));
1433 &#32;&#32;&#32;&#32;&#32;&#32;}
1434 
1449 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1450 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1451 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,&#32;size_type&#32;__n,
1452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__c)
1453 <emphasis role="preprocessor">#else</emphasis>
1454 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,&#32;size_type&#32;__n,&#32;_CharT&#32;__c)
1455 <emphasis role="preprocessor">#endif</emphasis>
1456 &#32;&#32;&#32;&#32;&#32;&#32;{
1457 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1459 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__n,&#32;__c);
1460 &#32;&#32;&#32;&#32;&#32;&#32;}
1461 
1476 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1477 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class&#32;</emphasis>_InputIterator,
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;std::_RequireInputIter&lt;_InputIterator&gt;&gt;
1479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator&#32;__k1,&#32;_InputIterator&#32;__k2)
1482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1483 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1485 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1486 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_replace_dispatch(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__i2,&#32;__k1,&#32;__k2,
1487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::__false_type());
1488 &#32;&#32;&#32;&#32;}
1489 <emphasis role="preprocessor">#else</emphasis>
1490 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
1491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,
1493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator&#32;__k1,&#32;_InputIterator&#32;__k2)
1494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1495 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1497 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1498 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::__is_integer&lt;_InputIterator&gt;::__type&#32;_Integral;
1499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_replace_dispatch(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__i2,&#32;__k1,&#32;__k2,&#32;_Integral());
1500 &#32;&#32;&#32;&#32;}
1501 <emphasis role="preprocessor">#endif</emphasis>
1502 
1503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Specializations&#32;for&#32;the&#32;common&#32;case&#32;of&#32;pointer&#32;and&#32;iterator:</emphasis>
1504 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;useful&#32;to&#32;avoid&#32;the&#32;overhead&#32;of&#32;temporary&#32;buffering&#32;in&#32;_M_replace.</emphasis>
1505 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1506 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1507 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT*&#32;__k1,&#32;_CharT*&#32;__k2)
1509 <emphasis role="preprocessor">#else</emphasis>
1510 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,
1511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT*&#32;__k1,&#32;_CharT*&#32;__k2)
1512 <emphasis role="preprocessor">#endif</emphasis>
1513 &#32;&#32;&#32;&#32;&#32;&#32;{
1514 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1516 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1517 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,
1518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__k1,&#32;__k2&#32;-&#32;__k1);
1519 &#32;&#32;&#32;&#32;&#32;&#32;}
1520 
1521 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1522 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1523 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k2)
1525 <emphasis role="preprocessor">#else</emphasis>
1526 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,
1527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__k2)
1528 <emphasis role="preprocessor">#endif</emphasis>
1529 &#32;&#32;&#32;&#32;&#32;&#32;{
1530 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1532 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1533 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__k1,&#32;__k2&#32;-&#32;__k1);
1535 &#32;&#32;&#32;&#32;&#32;&#32;}
1536 
1537 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1538 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1539 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator&#32;__k1,&#32;iterator&#32;__k2)
1541 <emphasis role="preprocessor">#else</emphasis>
1542 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator&#32;__k1,&#32;iterator&#32;__k2)
1544 <emphasis role="preprocessor">#endif</emphasis>
1545 &#32;&#32;&#32;&#32;&#32;&#32;{
1546 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1548 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__k1.base(),&#32;__k2&#32;-&#32;__k1);
1551 &#32;&#32;&#32;&#32;&#32;&#32;}
1552 
1553 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1554 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1555 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_iterator&#32;__k1,&#32;const_iterator&#32;__k2)
1557 <emphasis role="preprocessor">#else</emphasis>
1558 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;iterator&#32;__i2,
1559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_iterator&#32;__k1,&#32;const_iterator&#32;__k2)
1560 <emphasis role="preprocessor">#endif</emphasis>
1561 &#32;&#32;&#32;&#32;&#32;&#32;{
1562 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a6f2ef543506606e8ea3dbf0c52e61c5d">_GLIBCXX_DEBUG_PEDASSERT</link>(_M_ibegin()&#32;&lt;=&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;&lt;=&#32;__i2
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__i2&#32;&lt;=&#32;_M_iend());
1564 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1aae1d39211742988183a3967dad069af6">__glibcxx_requires_valid_range</link>(__k1,&#32;__k2);
1565 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__k1.base(),&#32;__k2&#32;-&#32;__k1);
1567 &#32;&#32;&#32;&#32;&#32;&#32;}
1568 &#32;&#32;&#32;&#32;&#32;&#32;
1569 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
1583 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1584 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::initializer_list&lt;_CharT&gt;&#32;__l)
1586 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1ac844ba281c4c66f83f6aebc21498fc97">replace</link>(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__i2,&#32;__l.begin(),&#32;__l.end());&#32;}
1587 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
1588 
1589 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
1590 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_Integer&gt;
1591 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1592 &#32;&#32;&#32;&#32;_M_replace_dispatch(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Integer&#32;__n,&#32;_Integer&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>,&#32;std::__true_type)
1594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_replace_aux(<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>&#32;-&#32;_M_ibegin(),&#32;__i2&#32;-&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;__n,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
1595 
1596 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&#32;_InputIterator&gt;
1597 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1598 &#32;&#32;&#32;&#32;_M_replace_dispatch(const_iterator&#32;<link linkend="__classes_2lib_2include_2mmintrin_8h_1a4e638bfa96fc52e781092793588e7d41">__i1</link>,&#32;const_iterator&#32;__i2,
1599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_InputIterator&#32;__k1,&#32;_InputIterator&#32;__k2,
1600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::__false_type);
1601 
1602 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1603 &#32;&#32;&#32;&#32;&#32;&#32;_M_replace_aux(size_type&#32;__pos1,&#32;size_type&#32;__n1,&#32;size_type&#32;__n2,
1604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__c);
1605 
1606 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1607 &#32;&#32;&#32;&#32;&#32;&#32;_M_replace(size_type&#32;__pos,&#32;size_type&#32;__len1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,
1608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__len2);
1609 
1610 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;
1611 &#32;&#32;&#32;&#32;&#32;&#32;_M_append(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__n);
1612 
1613 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
1614 
1627 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1628 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a4e3366cc5ea1e47fac759952b877ed0d">copy</link>(_CharT*&#32;__s,&#32;size_type&#32;__n,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;<emphasis role="keyword">const</emphasis>;
1629 
1637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
1638 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">swap</link>(<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__s)&#32;_GLIBCXX_NOEXCEPT
1639 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;_M_swap(__s);&#32;}
1640 
1641 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;String&#32;operations:</emphasis>
1648 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*
1649 &#32;&#32;&#32;&#32;&#32;&#32;c_str()&#32;const&#32;_GLIBCXX_NOEXCEPT
1650 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data();&#32;}
1651 
1658 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*
1659 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>()&#32;const&#32;_GLIBCXX_NOEXCEPT
1660 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;_M_data();&#32;}
1661 
1665 &#32;&#32;&#32;&#32;&#32;&#32;allocator_type
1666 &#32;&#32;&#32;&#32;&#32;&#32;get_allocator()&#32;const&#32;_GLIBCXX_NOEXCEPT
1667 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;allocator_type(this-&gt;_M_get_allocator());&#32;}
1668 
1681 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1682 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
1683 
1694 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1695 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const
1696 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT
1697 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1698 
1709 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1710 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;0)<emphasis role="keyword">&#32;const</emphasis>
1711 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
1712 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1713 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(__s,&#32;__pos,&#32;traits_type::length(__s));
1714 &#32;&#32;&#32;&#32;&#32;&#32;}
1715 
1726 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1727 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const&#32;_GLIBCXX_NOEXCEPT;
1728 
1739 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1740 &#32;&#32;&#32;&#32;&#32;&#32;rfind(const&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;const
1741 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT
1742 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;rfind(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1743 
1756 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1757 &#32;&#32;&#32;&#32;&#32;&#32;rfind(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
1758 
1769 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1770 &#32;&#32;&#32;&#32;&#32;&#32;rfind(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;npos)<emphasis role="keyword">&#32;const</emphasis>
1771 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
1772 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1773 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;rfind(__s,&#32;__pos,&#32;traits_type::length(__s));
1774 &#32;&#32;&#32;&#32;&#32;&#32;}
1775 
1786 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1787 &#32;&#32;&#32;&#32;&#32;&#32;rfind(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;<emphasis role="keyword">const</emphasis>&#32;_GLIBCXX_NOEXCEPT;
1788 
1799 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1800 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const
1801 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT
1802 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1803 
1816 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1817 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
1818 
1829 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1830 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;0)<emphasis role="keyword">&#32;const</emphasis>
1831 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
1832 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1833 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(__s,&#32;__pos,&#32;traits_type::length(__s));
1834 &#32;&#32;&#32;&#32;&#32;&#32;}
1835 
1848 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1849 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1af918ddff6ab7ea6140872b65660e9b16">find_first_of</link>(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const&#32;_GLIBCXX_NOEXCEPT
1850 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>(__c,&#32;__pos);&#32;}
1851 
1863 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1864 &#32;&#32;&#32;&#32;&#32;&#32;find_last_of(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;<emphasis role="keyword">const</emphasis>
1865 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT
1866 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_last_of(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1867 
1880 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1881 &#32;&#32;&#32;&#32;&#32;&#32;find_last_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
1882 
1893 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1894 &#32;&#32;&#32;&#32;&#32;&#32;find_last_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;npos)<emphasis role="keyword">&#32;const</emphasis>
1895 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
1896 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1897 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_last_of(__s,&#32;__pos,&#32;traits_type::length(__s));
1898 &#32;&#32;&#32;&#32;&#32;&#32;}
1899 
1912 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1913 &#32;&#32;&#32;&#32;&#32;&#32;find_last_of(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;<emphasis role="keyword">const</emphasis>&#32;_GLIBCXX_NOEXCEPT
1914 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;rfind(__c,&#32;__pos);&#32;}
1915 
1926 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1927 &#32;&#32;&#32;&#32;&#32;&#32;find_first_not_of(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const
1928 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT
1929 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_first_not_of(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1930 
1943 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1944 &#32;&#32;&#32;&#32;&#32;&#32;find_first_not_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,
1945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
1946 
1957 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1958 &#32;&#32;&#32;&#32;&#32;&#32;find_first_not_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;0)<emphasis role="keyword">&#32;const</emphasis>
1959 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
1960 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
1961 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_first_not_of(__s,&#32;__pos,&#32;traits_type::length(__s));
1962 &#32;&#32;&#32;&#32;&#32;&#32;}
1963 
1974 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1975 &#32;&#32;&#32;&#32;&#32;&#32;find_first_not_of(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;0)&#32;const
1976 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT;
1977 
1989 &#32;&#32;&#32;&#32;&#32;&#32;size_type
1990 &#32;&#32;&#32;&#32;&#32;&#32;find_last_not_of(const&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,
1991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;const&#32;_GLIBCXX_NOEXCEPT
1992 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_last_not_of(__str.data(),&#32;__pos,&#32;__str.size());&#32;}
1993 
2006 &#32;&#32;&#32;&#32;&#32;&#32;size_type
2007 &#32;&#32;&#32;&#32;&#32;&#32;find_last_not_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos,
2008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n)&#32;<emphasis role="keyword">const</emphasis>;
2020 &#32;&#32;&#32;&#32;&#32;&#32;size_type
2021 &#32;&#32;&#32;&#32;&#32;&#32;find_last_not_of(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;size_type&#32;__pos&#32;=&#32;npos)<emphasis role="keyword">&#32;const</emphasis>
2022 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
2023 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2debug_8h_1a1cbaa8fb8f312c4e1a134758fff21231">__glibcxx_requires_string</link>(__s);
2024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;find_last_not_of(__s,&#32;__pos,&#32;traits_type::length(__s));
2025 &#32;&#32;&#32;&#32;&#32;&#32;}
2026 
2037 &#32;&#32;&#32;&#32;&#32;&#32;size_type
2038 &#32;&#32;&#32;&#32;&#32;&#32;find_last_not_of(_CharT&#32;__c,&#32;size_type&#32;__pos&#32;=&#32;npos)&#32;<emphasis role="keyword">const</emphasis>
2039 &#32;&#32;&#32;&#32;_GLIBCXX_NOEXCEPT;
2040 
2053 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string</link>
2054 &#32;&#32;&#32;&#32;&#32;&#32;substr(size_type&#32;__pos&#32;=&#32;0,&#32;size_type&#32;__n&#32;=&#32;npos)<emphasis role="keyword">&#32;const</emphasis>
2055 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
2056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>(*<emphasis role="keyword">this</emphasis>,&#32;_M_check(__pos,&#32;<emphasis role="stringliteral">&quot;__versa_string::substr&quot;</emphasis>),
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__n);
2058 &#32;&#32;&#32;&#32;&#32;&#32;}
2059 
2074 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2075 &#32;&#32;&#32;&#32;&#32;&#32;compare(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)<emphasis role="keyword">&#32;const</emphasis>
2076 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
2077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;_M_compare(__str))
2078 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2079 
2080 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__size&#32;=&#32;this-&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>();
2081 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__osize&#32;=&#32;__str.size();
2082 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;__len&#32;=&#32;std::min(__size,&#32;__osize);
2083 
2084 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__r&#32;=&#32;traits_type::compare(this-&gt;_M_data(),&#32;__str.data(),&#32;__len);
2085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__r)
2086 &#32;&#32;&#32;&#32;&#32;&#32;__r&#32;=&#32;this-&gt;_S_compare(__size,&#32;__osize);
2087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__r;
2088 &#32;&#32;&#32;&#32;&#32;&#32;}
2089 
2109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2110 &#32;&#32;&#32;&#32;&#32;&#32;compare(size_type&#32;__pos,&#32;size_type&#32;__n,
2111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str)&#32;<emphasis role="keyword">const</emphasis>;
2112 
2136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2137 &#32;&#32;&#32;&#32;&#32;&#32;compare(size_type&#32;__pos1,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&amp;&#32;__str,
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__pos2,&#32;size_type&#32;__n2)&#32;<emphasis role="keyword">const</emphasis>;
2139 
2155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2156 &#32;&#32;&#32;&#32;&#32;&#32;compare(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)&#32;<emphasis role="keyword">const</emphasis>;
2157 
2158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
2159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;5&#32;String::compare&#32;specification&#32;questionable</emphasis>
2179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2180 &#32;&#32;&#32;&#32;&#32;&#32;compare(size_type&#32;__pos,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s)&#32;<emphasis role="keyword">const</emphasis>;
2181 
2206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>
2207 &#32;&#32;&#32;&#32;&#32;&#32;compare(size_type&#32;__pos,&#32;size_type&#32;__n1,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,
2208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size_type&#32;__n2)&#32;<emphasis role="keyword">const</emphasis>;
2209 &#32;&#32;&#32;&#32;};
2210 
2211 &#32;&#32;<emphasis role="comment">//&#32;operator+</emphasis>
2218 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2220 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2221 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs);
2223 
2230 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2232 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2233 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs);
2235 
2242 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2244 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2245 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(_CharT&#32;__lhs,
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs);
2247 
2254 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2256 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2257 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs);
2259 
2266 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2268 &#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2269 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__rhs);
2271 
2272 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
2273 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2275 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2276 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__lhs,
2277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2278 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__lhs.append(__rhs));&#32;}
2279 
2280 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2282 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2283 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__rhs)
2285 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__rhs.insert(0,&#32;__lhs));&#32;}
2286 
2287 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2289 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2290 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__lhs,
2291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__rhs)
2292 &#32;&#32;&#32;&#32;{
2293 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;__size&#32;=&#32;__lhs.size()&#32;+&#32;__rhs.size();
2294 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__cond&#32;=&#32;(__size&#32;&gt;&#32;__lhs.capacity()
2295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__size&#32;&lt;=&#32;__rhs.capacity());
2296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__cond&#32;?&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__rhs.insert(0,&#32;__lhs))
2297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_namespacestd">std</link>::<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">move</link>(__lhs.append(__rhs));
2298 &#32;&#32;&#32;&#32;}
2299 
2300 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2302 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2303 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__rhs)
2305 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__rhs.insert(0,&#32;__lhs));&#32;}
2306 
2307 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2309 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2310 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(_CharT&#32;__lhs,
2311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__rhs)
2312 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__rhs.insert(0,&#32;1,&#32;__lhs));&#32;}
2313 
2314 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2316 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2317 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__lhs,
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2319 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__lhs.append(__rhs));&#32;}
2320 
2321 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2323 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>
2324 &#32;&#32;&#32;&#32;<link linkend="_namespace_catch_1a074287bb202b5f53de64b5b63c16b23c">operator+</link>(<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&amp;&#32;__lhs,
2325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__rhs)
2326 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link>(__lhs.append(1,&#32;__rhs));&#32;}
2327 <emphasis role="preprocessor">#endif</emphasis>
2328 
2329 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;==</emphasis>
2336 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2338 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2339 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2341 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;==&#32;0;&#32;}
2342 
2343 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,
2344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2345 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__enable_if&lt;std::__is_char&lt;_CharT&gt;::__value,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;::__type
2346 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&lt;_CharT,&#32;std::char_traits&lt;_CharT&gt;,
2347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::allocator&lt;_CharT&gt;,&#32;_Base&gt;&amp;&#32;__lhs,
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string</link>&lt;_CharT,&#32;std::char_traits&lt;_CharT&gt;,
2349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::allocator&lt;_CharT&gt;,&#32;_Base&gt;&amp;&#32;__rhs)
2350 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__lhs.size()&#32;==&#32;__rhs.size()
2351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!std::char_traits&lt;_CharT&gt;::compare(__lhs.data(),&#32;__rhs.data(),
2352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__lhs.size()));&#32;}
2353 
2360 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2362 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2363 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2365 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__rhs.compare(__lhs)&#32;==&#32;0;&#32;}
2366 
2373 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2375 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2376 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2378 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;==&#32;0;&#32;}
2379 
2380 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;!=</emphasis>
2387 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2389 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2390 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2392 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(__lhs&#32;==&#32;__rhs);&#32;}
2393 
2400 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2402 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2403 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2405 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(__lhs&#32;==&#32;__rhs);&#32;}
2406 
2413 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2415 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2416 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aa9fe6e8e15f1b1b242d291e7703f1b8d">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2418 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(__lhs&#32;==&#32;__rhs);&#32;}
2419 
2420 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;&lt;</emphasis>
2427 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2429 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2430 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1_1detail_1a09169efff3bd1771fff29bd92cea19e0">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2432 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&lt;&#32;0;&#32;}
2433 
2440 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2442 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2443 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1_1detail_1a09169efff3bd1771fff29bd92cea19e0">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2445 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&lt;&#32;0;&#32;}
2446 
2453 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2455 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2456 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1_1detail_1a09169efff3bd1771fff29bd92cea19e0">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2458 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__rhs.compare(__lhs)&#32;&gt;&#32;0;&#32;}
2459 
2460 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;&gt;</emphasis>
2467 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2469 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2470 &#32;&#32;&#32;&#32;operator&gt;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2472 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&gt;&#32;0;&#32;}
2473 
2480 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2482 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2483 &#32;&#32;&#32;&#32;operator&gt;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2485 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&gt;&#32;0;&#32;}
2486 
2493 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2495 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2496 &#32;&#32;&#32;&#32;operator&gt;(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2498 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__rhs.compare(__lhs)&#32;&lt;&#32;0;&#32;}
2499 
2500 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;&lt;=</emphasis>
2507 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2509 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2510 &#32;&#32;&#32;&#32;operator&lt;=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2512 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&lt;=&#32;0;&#32;}
2513 
2520 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2522 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2523 &#32;&#32;&#32;&#32;operator&lt;=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2525 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&lt;=&#32;0;&#32;}
2526 
2533 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2535 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2536 &#32;&#32;&#32;&#32;operator&lt;=(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2538 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__rhs.compare(__lhs)&#32;&gt;=&#32;0;&#32;}
2539 
2540 &#32;&#32;<emphasis role="comment">//&#32;operator&#32;&gt;=</emphasis>
2547 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2549 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2550 &#32;&#32;&#32;&#32;operator&gt;=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2552 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&gt;=&#32;0;&#32;}
2553 
2560 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2562 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2563 &#32;&#32;&#32;&#32;operator&gt;=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__rhs)
2565 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__lhs.compare(__rhs)&#32;&gt;=&#32;0;&#32;}
2566 
2573 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2575 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
2576 &#32;&#32;&#32;&#32;operator&gt;=(<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__lhs,
2577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2578 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__rhs.compare(__lhs)&#32;&lt;=&#32;0;&#32;}
2579 
2587 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2589 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
2590 &#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">swap</link>(<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__lhs,
2591 &#32;&#32;&#32;&#32;&#32;<link linkend="_class____versa__string">__versa_string&lt;_CharT, _Traits, _Alloc, _Base&gt;</link>&amp;&#32;__rhs)
2592 &#32;&#32;&#32;&#32;{&#32;__lhs.swap(__rhs);&#32;}
2593 
2594 _GLIBCXX_END_NAMESPACE_VERSION
2595 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
2596 
2597 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
2598 {
2599 _GLIBCXX_BEGIN_NAMESPACE_VERSION
2600 
2613 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2615 &#32;&#32;&#32;&#32;basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;
2616 &#32;&#32;&#32;&#32;operator&gt;&gt;(basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__is,
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gnu_cxx::__versa_string&lt;_CharT,&#32;_Traits,
2618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Alloc,&#32;_Base&gt;&amp;&#32;__str);
2619 
2629 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2631 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;
2632 &#32;&#32;&#32;&#32;<link linkend="_forward__declarations_8h_1ade7e3bc03b39cb3b5684a4c302832e3c">operator&lt;&lt;</link>(basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__os,
2633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,
2634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Base&gt;&amp;&#32;__str)
2635 &#32;&#32;&#32;&#32;{
2636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
2637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;586.&#32;string&#32;inserter&#32;not&#32;a&#32;formatted&#32;function</emphasis>
2638 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__ostream_insert(__os,&#32;__str.data(),&#32;__str.size());
2639 &#32;&#32;&#32;&#32;}
2640 
2655 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2657 &#32;&#32;&#32;&#32;basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;
2658 &#32;&#32;&#32;&#32;getline(basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__is,
2659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gnu_cxx::__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,&#32;_Base&gt;&amp;&#32;__str,
2660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CharT&#32;__delim);
2661 
2675 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,
2676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Base&gt;
2677 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;
2678 &#32;&#32;&#32;&#32;getline(basic_istream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__is,
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__gnu_cxx::__versa_string&lt;_CharT,&#32;_Traits,&#32;_Alloc,&#32;_Base&gt;&amp;&#32;__str)
2680 &#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;getline(__is,&#32;__str,&#32;__is.widen(<emphasis role="charliteral">&apos;\n&apos;</emphasis>));&#32;}&#32;&#32;&#32;&#32;&#32;&#32;
2681 
2682 _GLIBCXX_END_NAMESPACE_VERSION
2683 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
2684 
2685 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
2686 
2687 <emphasis role="preprocessor">#include&#32;&lt;ext/string_conversions.h&gt;</emphasis>
2688 
2689 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
2690 {
2691 _GLIBCXX_BEGIN_NAMESPACE_VERSION
2692 
2693 <emphasis role="preprocessor">#if&#32;_GLIBCXX_USE_C99_STDLIB</emphasis>
2694 &#32;&#32;<emphasis role="comment">//&#32;21.4&#32;Numeric&#32;Conversions&#32;[string.conversions].</emphasis>
2695 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
2696 &#32;&#32;<link linkend="_namespacelest_1aa8f139b4d4ae346e4caa755ec5af3798">stoi</link>(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2697 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa&lt;long,&#32;int&gt;(&amp;std::strtol,&#32;<emphasis role="stringliteral">&quot;stoi&quot;</emphasis>,&#32;__str.c_str(),
2698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2699 
2700 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2701 &#32;&#32;stol(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2702 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtol,&#32;<emphasis role="stringliteral">&quot;stol&quot;</emphasis>,&#32;__str.c_str(),
2703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2704 
2705 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2706 &#32;&#32;stoul(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2707 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtoul,&#32;<emphasis role="stringliteral">&quot;stoul&quot;</emphasis>,&#32;__str.c_str(),
2708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2709 
2710 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2711 &#32;&#32;stoll(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2712 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtoll,&#32;<emphasis role="stringliteral">&quot;stoll&quot;</emphasis>,&#32;__str.c_str(),
2713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2714 
2715 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2716 &#32;&#32;stoull(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2717 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtoull,&#32;<emphasis role="stringliteral">&quot;stoull&quot;</emphasis>,&#32;__str.c_str(),
2718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2719 
2720 &#32;&#32;<emphasis role="comment">//&#32;NB:&#32;strtof&#32;vs&#32;strtod.</emphasis>
2721 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
2722 &#32;&#32;stof(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2723 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtof,&#32;<emphasis role="stringliteral">&quot;stof&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2724 
2725 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
2726 &#32;&#32;stod(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2727 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtod,&#32;<emphasis role="stringliteral">&quot;stod&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2728 
2729 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
2730 &#32;&#32;stold(<emphasis role="keyword">const</emphasis>&#32;__vstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2731 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::strtold,&#32;<emphasis role="stringliteral">&quot;stold&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2732 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_USE_C99_STDLIB</emphasis>
2733 
2734 <emphasis role="preprocessor">#if&#32;_GLIBCXX_USE_C99_STDIO</emphasis>
2735 &#32;&#32;<emphasis role="comment">//&#32;NB:&#32;(v)snprintf&#32;vs&#32;sprintf.</emphasis>
2736 
2737 &#32;&#32;<emphasis role="comment">//&#32;DR&#32;1261.</emphasis>
2738 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2739 &#32;&#32;to_string(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2740 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>),
2741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%d&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2742 
2743 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2744 &#32;&#32;to_string(<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2745 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,
2746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>),
2747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%u&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2748 
2749 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2750 &#32;&#32;to_string(<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2751 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,
2752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>),
2753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%ld&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2754 
2755 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2756 &#32;&#32;to_string(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2757 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,
2758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%lu&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2760 
2761 
2762 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2763 &#32;&#32;to_string(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2764 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,
2765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%lld&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2767 
2768 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2769 &#32;&#32;to_string(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2770 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,
2771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%llu&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2773 
2774 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2775 &#32;&#32;to_string(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2776 &#32;&#32;{
2777 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;float&gt;::__max_exponent10&#32;+&#32;20;
2778 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,&#32;__n,
2779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%f&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2780 &#32;&#32;}
2781 
2782 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2783 &#32;&#32;to_string(<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2784 &#32;&#32;{
2785 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;double&gt;::__max_exponent10&#32;+&#32;20;
2786 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,&#32;__n,
2787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%f&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2788 &#32;&#32;}
2789 
2790 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__vstring
2791 &#32;&#32;to_string(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2792 &#32;&#32;{
2793 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;long&#32;double&gt;::__max_exponent10&#32;+&#32;20;
2794 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__vstring&gt;(&amp;std::vsnprintf,&#32;__n,
2795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;%Lf&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2796 &#32;&#32;}
2797 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_USE_C99_STDIO</emphasis>
2798 
2799 <emphasis role="preprocessor">#if&#32;defined(_GLIBCXX_USE_WCHAR_T)&#32;&amp;&amp;&#32;_GLIBCXX_USE_C99_WCHAR</emphasis>
2800 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;
2801 &#32;&#32;<link linkend="_namespacelest_1aa8f139b4d4ae346e4caa755ec5af3798">stoi</link>(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2802 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa&lt;long,&#32;int&gt;(&amp;std::wcstol,&#32;<emphasis role="stringliteral">&quot;stoi&quot;</emphasis>,&#32;__str.c_str(),
2803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2804 
2805 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;
2806 &#32;&#32;stol(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2807 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstol,&#32;<emphasis role="stringliteral">&quot;stol&quot;</emphasis>,&#32;__str.c_str(),
2808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2809 
2810 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2811 &#32;&#32;stoul(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2812 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstoul,&#32;<emphasis role="stringliteral">&quot;stoul&quot;</emphasis>,&#32;__str.c_str(),
2813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2814 
2815 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2816 &#32;&#32;stoll(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2817 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstoll,&#32;<emphasis role="stringliteral">&quot;stoll&quot;</emphasis>,&#32;__str.c_str(),
2818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2819 
2820 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>
2821 &#32;&#32;stoull(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__base&#32;=&#32;10)
2822 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstoull,&#32;<emphasis role="stringliteral">&quot;stoull&quot;</emphasis>,&#32;__str.c_str(),
2823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__idx,&#32;__base);&#32;}
2824 
2825 &#32;&#32;<emphasis role="comment">//&#32;NB:&#32;wcstof&#32;vs&#32;wcstod.</emphasis>
2826 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>
2827 &#32;&#32;stof(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2828 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstof,&#32;<emphasis role="stringliteral">&quot;stof&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2829 
2830 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
2831 &#32;&#32;stod(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2832 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstod,&#32;<emphasis role="stringliteral">&quot;stod&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2833 
2834 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>
2835 &#32;&#32;stold(<emphasis role="keyword">const</emphasis>&#32;__wvstring&amp;&#32;__str,&#32;std::size_t*&#32;__idx&#32;=&#32;0)
2836 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__stoa(&amp;std::wcstold,&#32;<emphasis role="stringliteral">&quot;stold&quot;</emphasis>,&#32;__str.c_str(),&#32;__idx);&#32;}
2837 
2838 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_HAVE_BROKEN_VSWPRINTF</emphasis>
2839 &#32;&#32;<emphasis role="comment">//&#32;DR&#32;1261.</emphasis>
2840 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2841 &#32;&#32;to_wstring(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2842 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>),
2844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%d&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2845 
2846 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2847 &#32;&#32;to_wstring(<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2848 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>),
2850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%u&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2851 
2852 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2853 &#32;&#32;to_wstring(<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2854 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>),
2856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%ld&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2857 
2858 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2859 &#32;&#32;to_wstring(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2860 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%lu&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2863 
2864 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2865 &#32;&#32;to_wstring(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2866 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%lld&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2869 
2870 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2871 &#32;&#32;to_wstring(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2872 &#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,
2873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>),
2874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%llu&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);&#32;}
2875 
2876 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2877 &#32;&#32;to_wstring(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2878 &#32;&#32;{
2879 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;float&gt;::__max_exponent10&#32;+&#32;20;
2880 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,&#32;__n,
2881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%f&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2882 &#32;&#32;}
2883 
2884 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2885 &#32;&#32;to_wstring(<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2886 &#32;&#32;{
2887 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;double&gt;::__max_exponent10&#32;+&#32;20;
2888 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,&#32;__n,
2889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%f&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2890 &#32;&#32;}
2891 
2892 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__wvstring
2893 &#32;&#32;to_wstring(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>)
2894 &#32;&#32;{
2895 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__n&#32;=&#32;__numeric_traits&lt;long&#32;double&gt;::__max_exponent10&#32;+&#32;20;
2896 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__gnu_cxx::__to_xstring&lt;__wvstring&gt;(&amp;std::vswprintf,&#32;__n,
2897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;%Lf&quot;</emphasis>,&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>);
2898 &#32;&#32;}
2899 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_HAVE_BROKEN_VSWPRINTF</emphasis>
2900 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_GLIBCXX_USE_WCHAR_T&#32;&amp;&amp;&#32;_GLIBCXX_USE_C99_WCHAR</emphasis>
2901 
2902 _GLIBCXX_END_NAMESPACE_VERSION
2903 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
2904 
2905 <emphasis role="preprocessor">#endif</emphasis>
2906 
2907 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
2908 
2909 <emphasis role="preprocessor">#include&#32;&lt;bits/functional_hash.h&gt;</emphasis>
2910 
2911 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
2912 {
2913 _GLIBCXX_BEGIN_NAMESPACE_VERSION
2914 
2916 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
2917 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespace____gnu__cxx">__gnu_cxx</link>::__vstring&gt;
2918 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;__hash_base&lt;size_t,&#32;__gnu_cxx::__vstring&gt;
2919 &#32;&#32;&#32;&#32;{
2920 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
2921 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::__vstring&amp;&#32;__s)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
2922 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::_Hash_impl::hash(__s.data(),&#32;__s.length());&#32;}
2923 &#32;&#32;&#32;&#32;};
2924 
2926 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
2927 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespace____gnu__cxx">__gnu_cxx</link>::__wvstring&gt;
2928 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;__hash_base&lt;size_t,&#32;__gnu_cxx::__wvstring&gt;
2929 &#32;&#32;&#32;&#32;{
2930 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
2931 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::__wvstring&amp;&#32;__s)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
2932 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::_Hash_impl::hash(__s.data(),
2933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s.length()&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">wchar_t</emphasis>));&#32;}
2934 &#32;&#32;&#32;&#32;};
2935 
2937 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
2938 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespace____gnu__cxx">__gnu_cxx</link>::__u16vstring&gt;
2939 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;__hash_base&lt;size_t,&#32;__gnu_cxx::__u16vstring&gt;
2940 &#32;&#32;&#32;&#32;{
2941 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
2942 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::__u16vstring&amp;&#32;__s)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
2943 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::_Hash_impl::hash(__s.data(),
2944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s.length()&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char16_t</emphasis>));&#32;}
2945 &#32;&#32;&#32;&#32;};
2946 
2948 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
2949 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash&lt;<link linkend="_namespace____gnu__cxx">__gnu_cxx</link>::__u32vstring&gt;
2950 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;__hash_base&lt;size_t,&#32;__gnu_cxx::__u32vstring&gt;
2951 &#32;&#32;&#32;&#32;{
2952 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
2953 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::__u32vstring&amp;&#32;__s)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
2954 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::_Hash_impl::hash(__s.data(),
2955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__s.length()&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char32_t</emphasis>));&#32;}
2956 &#32;&#32;&#32;&#32;};
2957 
2958 _GLIBCXX_END_NAMESPACE_VERSION
2959 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
2960 
2961 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
2962 
2963 <emphasis role="preprocessor">#include&#32;&lt;ext/vstring.tcc&gt;</emphasis>
2964 
2965 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_VSTRING_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
