<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065" xml:lang="en-US">
<title>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt; Struct Template Reference</title>
<indexterm><primary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</primary></indexterm>
<para>

<para>Split by sampling. </para>
 
</para>
<para>
<computeroutput>#include &lt;multiway_mergesort.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32">operator()</link> (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; *__sd, _Compare &amp;__comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32">operator()</link> (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; *__sd, _Compare &amp;__comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32">operator()</link> (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; *__sd, _Compare &amp;__comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename _RAIter, typename _Compare, typename _SortingPlacesIterator&gt;<?linebreak?>struct __gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</title></simplesect>

<para>Split by sampling. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32"/><section>
    <title>operator()()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare , typename _SortingPlacesIterator &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently">__gnu_parallel::_SplitConsistently</link>&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>, _RAIter, _Compare, _SortingPlacesIterator &gt;::operator() (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; * __sd, _Compare &amp; __comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_a9bce2d3f03bdc60e1de14c2b79544a32_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32"/><section>
    <title>operator()()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare , typename _SortingPlacesIterator &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently">__gnu_parallel::_SplitConsistently</link>&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>, _RAIter, _Compare, _SortingPlacesIterator &gt;::operator() (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; * __sd, _Compare &amp; __comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_a9bce2d3f03bdc60e1de14c2b79544a32_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_1a9bce2d3f03bdc60e1de14c2b79544a32"/><section>
    <title>operator()()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator()</primary><secondary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare , typename _SortingPlacesIterator &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_struct____gnu__parallel_1_1___split_consistently">__gnu_parallel::_SplitConsistently</link>&lt; <link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>, _RAIter, _Compare, _SortingPlacesIterator &gt;::operator() (const <link linkend="_namespace____gnu__parallel_1a05e502e51bfc3233671730f74a44dc6a">_ThreadIndex</link> __iam, <link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">_PMWMSSortingData</link>&lt; _RAIter &gt; * __sd, _Compare &amp; __comp, const typename std::iterator_traits&lt; _RAIter &gt;::difference_type __num_samples) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065_a9bce2d3f03bdc60e1de14c2b79544a32_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__mergesort_8h">multiway_mergesort.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2multiway__mergesort_8h">multiway_mergesort.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__mergesort_8h">multiway_mergesort.h</link></section>
</section>
