<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2rc__binomial__heap___2insert__fn__imps_8hpp_source" xml:lang="en-US">
<title>insert_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
44 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::point_iterator
45 PB_DS_CLASS_C_DEC::
46 push(const_reference&#32;r_val)
47 {
48 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
49 
50 &#32;&#32;make_0_exposed();
51 
52 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
53 
54 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;base_type::get_new_node_for_insert(r_val);
55 
56 &#32;&#32;p_nd-&gt;m_p_l_child&#32;=&#32;p_nd-&gt;m_p_prev_or_parent&#32;=&#32;0;
57 &#32;&#32;p_nd-&gt;m_metadata&#32;=&#32;0;
58 
59 &#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(base_type::m_p_max&#32;==&#32;0&#32;||&#32;Cmp_Fn::operator()(base_type::m_p_max-&gt;m_value,&#32;r_val))
60 &#32;&#32;&#32;&#32;base_type::m_p_max&#32;=&#32;p_nd;
61 
62 &#32;&#32;p_nd-&gt;m_p_next_sibling&#32;=&#32;base_type::m_p_root;
63 
64 &#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(base_type::m_p_root&#32;!=&#32;0)
65 &#32;&#32;&#32;&#32;base_type::m_p_root-&gt;m_p_prev_or_parent&#32;=&#32;p_nd;
66 
67 &#32;&#32;base_type::m_p_root&#32;=&#32;p_nd;
68 
69 &#32;&#32;<link linkend="__classes_2lib_2include_2pconfigintrin_8h_1aaca4765a01b6f3cd5edb899a1159f303">if</link>&#32;(p_nd-&gt;m_p_next_sibling&#32;!=&#32;0&amp;&amp;&#32;&#32;p_nd-&gt;m_p_next_sibling-&gt;m_metadata&#32;==&#32;0)
70 &#32;&#32;&#32;&#32;m_rc.push(p_nd);
71 
72 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
73 
74 &#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;point_iterator(p_nd);
75 }
76 
77 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
78 <emphasis role="keywordtype">void</emphasis>
79 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
80 modify(point_iterator&#32;it,&#32;const_reference&#32;r_new_val)
81 {
82 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
83 
84 &#32;&#32;make_binomial_heap();
85 
86 &#32;&#32;base_type::modify(it,&#32;r_new_val);
87 
88 &#32;&#32;base_type::find_max();
89 
90 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
91 }
92 
93 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
94 inline&#32;typename&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::node_pointer
95 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
96 link_with_next_sibling(node_pointer&#32;p_nd)
97 {
98 &#32;&#32;node_pointer&#32;p_next&#32;=&#32;p_nd-&gt;m_p_next_sibling;
99 
100 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_next&#32;!=&#32;0);
101 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_next-&gt;m_p_prev_or_parent&#32;==&#32;p_nd);
102 
103 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cmp_Fn::operator()(p_nd-&gt;m_value,&#32;p_next-&gt;m_value))
104 &#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;p_next-&gt;m_p_prev_or_parent&#32;=&#32;p_nd-&gt;m_p_prev_or_parent;
106 
107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_next-&gt;m_p_prev_or_parent&#32;==&#32;0)
108 &#32;&#32;&#32;&#32;base_type::m_p_root&#32;=&#32;p_next;
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
110 &#32;&#32;&#32;&#32;p_next-&gt;m_p_prev_or_parent-&gt;m_p_next_sibling&#32;=&#32;p_next;
111 
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_max&#32;==&#32;p_nd)
113 &#32;&#32;&#32;&#32;base_type::m_p_max&#32;=&#32;p_next;
114 
115 &#32;&#32;&#32;&#32;&#32;&#32;base_type::make_child_of(p_nd,&#32;p_next);
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;++p_next-&gt;m_metadata;
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p_next;
120 &#32;&#32;&#32;&#32;}
121 
122 &#32;&#32;p_nd-&gt;m_p_next_sibling&#32;=&#32;p_next-&gt;m_p_next_sibling;
123 
124 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_nd-&gt;m_p_next_sibling&#32;!=&#32;0)
125 &#32;&#32;&#32;&#32;p_nd-&gt;m_p_next_sibling-&gt;m_p_prev_or_parent&#32;=&#32;p_nd;
126 
127 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base_type::m_p_max&#32;==&#32;p_next)
128 &#32;&#32;&#32;&#32;base_type::m_p_max&#32;=&#32;p_nd;
129 
130 &#32;&#32;base_type::make_child_of(p_next,&#32;p_nd);
131 
132 &#32;&#32;++p_nd-&gt;m_metadata;
133 
134 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p_nd;
135 }
136 
137 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
138 <emphasis role="keywordtype">void</emphasis>
139 PB_DS_CLASS_C_DEC::
140 make_0_exposed()
141 {
142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_rc.empty())
143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
144 
145 &#32;&#32;node_pointer&#32;p_nd&#32;=&#32;m_rc.top();
146 
147 &#32;&#32;m_rc.pop();
148 
149 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_nd-&gt;m_p_next_sibling&#32;!=&#32;0);
150 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(p_nd-&gt;m_metadata&#32;==&#32;p_nd-&gt;m_p_next_sibling-&gt;m_metadata);
151 
152 &#32;&#32;node_pointer&#32;p_res&#32;=&#32;link_with_next_sibling(p_nd);
153 
154 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p_res-&gt;m_p_next_sibling&#32;!=&#32;0&amp;&amp;&#32;&#32;p_res-&gt;m_metadata&#32;==&#32;p_res-&gt;m_p_next_sibling-&gt;m_metadata)
155 &#32;&#32;&#32;&#32;m_rc.push(p_res);
156 }
157 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
