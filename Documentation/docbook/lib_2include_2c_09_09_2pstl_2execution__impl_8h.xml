<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2pstl_2execution__impl_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/execution_impl.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/pstl/execution_impl.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;iterator&gt;<?linebreak?>#include &lt;type_traits&gt;<?linebreak?>#include &quot;execution_defs.h&quot;<?linebreak?></programlisting>Include dependency graph for execution_impl.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2pstl_2execution__impl_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2include_2c_09_09_2pstl_2execution__impl_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator">__pstl::__internal::__is_random_access_iterator&lt; _IteratorType, _OtherIteratorTypes &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator_3_01___iterator_type_01_4">__pstl::__internal::__is_random_access_iterator&lt; _IteratorType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits&lt; _Policy &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01sequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; sequenced_policy &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01unsequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; unsequenced_policy &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__policy_01_4">__pstl::__internal::__policy_traits&lt; parallel_policy &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____prefer__unsequenced__tag">__pstl::__internal::__prefer_unsequenced_tag&lt; policy, _IteratorTypes &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____pstl_1_1____internal_1_1____prefer__parallel__tag">__pstl::__internal::__prefer_parallel_tag&lt; policy, _IteratorTypes &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____pstl">__pstl</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____pstl_1_1____internal">__pstl::__internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename _Tp &gt; </para><para>std::false_type <link linkend="_namespace____pstl_1_1____internal_1a3c2cbbe7383471b9eee17763a807b703">__pstl::__internal::__lazy_and</link> (_Tp, std::false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Tp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1ab6cd19e3eb297893962c80882b1e7f78">__pstl::__internal::__lazy_and</link> (_Tp __a, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Tp &gt; </para><para>std::true_type <link linkend="_namespace____pstl_1_1____internal_1aa4e87f24d82bdaef2aa34e5a55cb6b40">__pstl::__internal::__lazy_or</link> (_Tp, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;typename _Tp &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1ad994dc0fe84a65285d33a6bfd5de2c87">__pstl::__internal::__lazy_or</link> (_Tp __a, std::false_type)</para>
</listitem>
            <listitem><para>template&lt;typename _ExecutionPolicy , typename... _IteratorTypes&gt; </para><para>auto <link linkend="_namespace____pstl_1_1____internal_1aba53c2e534557bf2c817808fb3b3c269">__pstl::__internal::__is_vectorization_preferred</link> (_ExecutionPolicy &amp;&amp;__exec) -&gt; decltype(<link linkend="_namespace____pstl_1_1____internal_1a3c2cbbe7383471b9eee17763a807b703">__internal::__lazy_and</link>(__exec.__allow_vector(), typename <link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator">__internal::__is_random_access_iterator</link>&lt; _IteratorTypes... &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>()))</para>
</listitem>
            <listitem><para>template&lt;typename _ExecutionPolicy , typename... _IteratorTypes&gt; </para><para>auto <link linkend="_namespace____pstl_1_1____internal_1a96278219a9b5139e6060c4a24235841c">__pstl::__internal::__is_parallelization_preferred</link> (_ExecutionPolicy &amp;&amp;__exec) -&gt; decltype(<link linkend="_namespace____pstl_1_1____internal_1a3c2cbbe7383471b9eee17763a807b703">__internal::__lazy_and</link>(__exec.__allow_parallel(), typename <link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator">__internal::__is_random_access_iterator</link>&lt; _IteratorTypes... &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link>()))</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
