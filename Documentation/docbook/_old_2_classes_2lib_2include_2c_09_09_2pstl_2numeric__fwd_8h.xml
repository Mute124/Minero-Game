<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2pstl_2numeric__fwd_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/numeric_fwd.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/pstl/numeric_fwd.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;type_traits&gt;<?linebreak?>#include &lt;utility&gt;<?linebreak?></programlisting>Include dependency graph for numeric_fwd.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2pstl_2numeric__fwd_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2include_2c_09_09_2pstl_2numeric__fwd_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____pstl">__pstl</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace____pstl_1_1____internal">__pstl::__internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation1 , class _BinaryOperation2 &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1acd4482d348cefeae69173c5b0ba19c22">__pstl::__internal::__brick_transform_reduce</link> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation1 , class _BinaryOperation2 &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1aa7ba25d524027030ef5b1c5deecc2314">__pstl::__internal::__brick_transform_reduce</link> (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator1 , class _ForwardIterator2 , class _Tp , class _BinaryOperation1 , class _BinaryOperation2 , class _IsVector &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1adc9b1a1468736ba57bfa4bbbc56a0440">__pstl::__internal::__pattern_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _RandomAccessIterator1 , class _RandomAccessIterator2 , class _Tp , class _BinaryOperation1 , class _BinaryOperation2 , class _IsVector &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1adafb3c27c7136034f666734ae902ff04">__pstl::__internal::__pattern_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator1, _RandomAccessIterator1, _RandomAccessIterator2, _Tp, _BinaryOperation1, _BinaryOperation2, _IsVector __is_vector, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _Tp , class _UnaryOperation , class _BinaryOperation &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1a38086abd3dd81cdae417ac4cce2c240b">__pstl::__internal::__brick_transform_reduce</link> (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _Tp , class _BinaryOperation , class _UnaryOperation &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1a12bc8c9b6562120eb8791b6862c72098">__pstl::__internal::__brick_transform_reduce</link> (_ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _Tp , class _BinaryOperation , class _UnaryOperation , class _IsVector &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1add18cbb980aea037c337adc3b0bb155f">__pstl::__internal::__pattern_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _Tp , class _BinaryOperation , class _UnaryOperation , class _IsVector &gt; </para><para>_Tp <link linkend="_namespace____pstl_1_1____internal_1afcebd939332b7acb17ecdb4debdf8e36">__pstl::__internal::__pattern_transform_reduce</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator, _ForwardIterator, _Tp, _BinaryOperation, _UnaryOperation, _IsVector, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _OutputIterator , class _UnaryOperation , class _Tp , class _BinaryOperation &gt; </para><para>std::pair&lt; _OutputIterator, _Tp &gt; <link linkend="_namespace____pstl_1_1____internal_1a6ceb558910155d72c76e56455e8acba7">__pstl::__internal::__brick_transform_scan</link> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _OutputIterator , class _UnaryOperation , class _Tp , class _BinaryOperation &gt; </para><para>std::pair&lt; _OutputIterator, _Tp &gt; <link linkend="_namespace____pstl_1_1____internal_1aca47af7abcd5194728e4926e3f4756f6">__pstl::__internal::__brick_transform_scan</link> (_ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _OutputIterator , class _UnaryOperation , class _Tp , class _BinaryOperation , class _Inclusive , class _IsVector &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a8b1fafa95881c18c8c209a63b817198d">__pstl::__internal::__pattern_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator, _ForwardIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _RandomAccessIterator , class _OutputIterator , class _UnaryOperation , class _Tp , class _BinaryOperation , class _Inclusive , class _IsVector &gt; </para><para>std::enable_if&lt;!std::is_floating_point&lt; _Tp &gt;<link linkend="_classvalue">::value</link>, _OutputIterator &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_namespace____pstl_1_1____internal_1af0c85b4392a0bb4de013e30fdf4426b4">__pstl::__internal::__pattern_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _RandomAccessIterator , class _OutputIterator , class _UnaryOperation , class _Tp , class _BinaryOperation , class _Inclusive , class _IsVector &gt; </para><para>std::enable_if&lt; std::is_floating_point&lt; _Tp &gt;<link linkend="_classvalue">::value</link>, _OutputIterator &gt;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">::type</link> <link linkend="_namespace____pstl_1_1____internal_1a4132256b7a2d3aa5c5320835f2579b4e">__pstl::__internal::__pattern_transform_scan</link> (_ExecutionPolicy &amp;&amp;, _RandomAccessIterator, _RandomAccessIterator, _OutputIterator, _UnaryOperation, _Tp, _BinaryOperation, _Inclusive, _IsVector, std::true_type)</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _OutputIterator , class _BinaryOperation &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a90a33e151b2c88ee9555294dfff168ae">__pstl::__internal::__brick_adjacent_difference</link> (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ForwardIterator , class _OutputIterator , class _BinaryOperation &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a75730095b096b996c384c480c53dbe75">__pstl::__internal::__brick_adjacent_difference</link> (_ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, std::true_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _OutputIterator , class _BinaryOperation , class _IsVector &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1a06ab524ac584392677a2d3002e998d89">__pstl::__internal::__pattern_adjacent_difference</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::false_type) noexcept</para>
</listitem>
            <listitem><para>template&lt;class _ExecutionPolicy , class _ForwardIterator , class _OutputIterator , class _BinaryOperation , class _IsVector &gt; </para><para>_OutputIterator <link linkend="_namespace____pstl_1_1____internal_1ae558b85f130d52a8711c7ca1982e7664">__pstl::__internal::__pattern_adjacent_difference</link> (_ExecutionPolicy &amp;&amp;, _ForwardIterator, _ForwardIterator, _OutputIterator, _BinaryOperation, _IsVector, std::true_type)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
