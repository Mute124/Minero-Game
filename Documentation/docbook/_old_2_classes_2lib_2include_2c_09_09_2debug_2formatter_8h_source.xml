<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2debug_2formatter_8h_source" xml:lang="en-US">
<title>formatter.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/debug/formatter.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Debug-mode&#32;error&#32;formatting&#32;implementation&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2003-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_DEBUG_FORMATTER_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_GLIBCXX_DEBUG_FORMATTER_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
33 
34 <emphasis role="preprocessor">#if&#32;__cpp_rtti</emphasis>
35 <emphasis role="preprocessor">#&#32;include&#32;&lt;typeinfo&gt;</emphasis>
36 <emphasis role="preprocessor">#&#32;define&#32;_GLIBCXX_TYPEID(_Type)&#32;&amp;typeid(_Type)</emphasis>
37 <emphasis role="preprocessor">#else</emphasis>
38 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>
39 {
40 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>type_info;
41 }
42 <emphasis role="preprocessor">#&#32;define&#32;_GLIBCXX_TYPEID(_Type)&#32;0</emphasis>
43 <emphasis role="preprocessor">#endif</emphasis>
44 
45 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
46 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>
47 {
48 _GLIBCXX_BEGIN_NAMESPACE_VERSION
49 
50 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
51 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>__normal_iterator;
52 
53 _GLIBCXX_END_NAMESPACE_VERSION
54 }
55 
56 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>
57 {
58 _GLIBCXX_BEGIN_NAMESPACE_VERSION
59 
60 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
61 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>reverse_iterator;
62 
63 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
64 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>move_iterator;
65 
66 _GLIBCXX_END_NAMESPACE_VERSION
67 }
68 <emphasis role="preprocessor">#endif</emphasis>
69 
70 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__debug">__gnu_debug</link>
71 {
72 &#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::type_info;
73 
74 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
75 &#32;&#32;&#32;&#32;_GLIBCXX_CONSTEXPR
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace____gnu__debug_1af91a5c348f44c548f12858c65f5de6de">__check_singular</link>(_Iterator&#32;<emphasis role="keyword">const</emphasis>&amp;);
77 
78 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Safe_sequence_base;
79 
80 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Category&gt;
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Safe_iterator;
82 
83 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Safe_local_iterator;
85 
86 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Safe_sequence;
88 
89 &#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3">_Debug_msg_id</link>
90 &#32;&#32;{
91 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;General&#32;checks</emphasis>
92 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa35c44d6fbfe5a3fb8195fe467f89f0e">__msg_valid_range</link>,
93 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a330088cd0da507c2a5eb246dd4f939aa">__msg_insert_singular</link>,
94 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aca784aecc1ebe1b553db494291c801e7">__msg_insert_different</link>,
95 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a1f58a0d3afd852760700bd8e440f872d">__msg_erase_bad</link>,
96 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a1c84ac4f82799217e19c973923c2d07f">__msg_erase_different</link>,
97 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a138a18ddf8bd80116333a025c90c1270">__msg_subscript_oob</link>,
98 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3af29aceea970bb1d19f8356221d4847f7">__msg_empty</link>,
99 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ae25a9a2a1c98076a654876a5caa7ad11">__msg_unpartitioned</link>,
100 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a3ed87c49ed8ddac5d5b893e272eb1d9d">__msg_unpartitioned_pred</link>,
101 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a15f030147aa14c2f27d011bd270e2379">__msg_unsorted</link>,
102 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa52d461d9ed7e8ae5df8a32e31ae95f9">__msg_unsorted_pred</link>,
103 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3af5173654ef48612946393baebe0da5d1">__msg_not_heap</link>,
104 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3af3b56573aa9d00d235b50d81d1c55c9b">__msg_not_heap_pred</link>,
105 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::bitset&#32;checks</emphasis>
106 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ab6a873b892735e393334c2d854510e20">__msg_bad_bitset_write</link>,
107 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa8cf17cfb63bae26202ab42def65af4a">__msg_bad_bitset_read</link>,
108 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a2012ce8e8810f86d6cf450bfd34a6382">__msg_bad_bitset_flip</link>,
109 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::list&#32;checks</emphasis>
110 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3af891e004f5f93e64b3e4795ef774bded">__msg_self_splice</link>,
111 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aee4cc005d2da21f697952fe441604a0e">__msg_splice_alloc</link>,
112 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ae9e46656e7192a1b4975ad58dc2e5c65">__msg_splice_bad</link>,
113 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a09f24ffa803e4bb16be5921a2f673959">__msg_splice_other</link>,
114 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3abc26ecf5d918f0c0d774618dfe3bc57a">__msg_splice_overlap</link>,
115 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;iterator&#32;checks</emphasis>
116 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a1830abbf7091b2cea1fd12b704dae8e4">__msg_init_singular</link>,
117 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ab36653416c99ac987a9a1b65a44e086a">__msg_init_copy_singular</link>,
118 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aced19637a4b5997b67de04678475bf4f">__msg_init_const_singular</link>,
119 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ab497e4ecc78f9352d54013317523ef0b">__msg_copy_singular</link>,
120 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a96da60345178d10f27431c4c2fed1ad8">__msg_bad_deref</link>,
121 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a23cb8dacb530f6e6d3535a0d7c370d10">__msg_bad_inc</link>,
122 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a7f0d6ef257b8e2b8219df1cc6dcd8178">__msg_bad_dec</link>,
123 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a8afc98714277e023cbb9e559c16b6aae">__msg_iter_subscript_oob</link>,
124 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a544f5f23dd909ccc44a41beabdd92eb6">__msg_advance_oob</link>,
125 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3abbf0c6aedc5be341338701bab5eac165">__msg_retreat_oob</link>,
126 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a592213a668eb4bd857f46fa682046a00">__msg_iter_compare_bad</link>,
127 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3add9139c0fac619e7db1539b742acdf4a">__msg_compare_different</link>,
128 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa81e4ba1b96cd29f49375abc97782ecb">__msg_iter_order_bad</link>,
129 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a5715c91f48cf85e1630bdcddf20da579">__msg_order_different</link>,
130 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a4c2adf4a57d6bb6dbb38a0c91b339a7c">__msg_distance_bad</link>,
131 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a91cc33291bde5808e39d9bd779a94852">__msg_distance_different</link>,
132 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;istream_iterator</emphasis>
133 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3af2bae262cc1601d7fd3c5743eded23bc">__msg_deref_istream</link>,
134 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3acf558490fef87f03bff36c559f5c5802">__msg_inc_istream</link>,
135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ostream_iterator</emphasis>
136 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aea59c41f740471d4a9e8f68bce42e2c4">__msg_output_ostream</link>,
137 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;istreambuf_iterator</emphasis>
138 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ad42a6da58d519d18e15c627e8342890e">__msg_deref_istreambuf</link>,
139 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa9a3105290003b2d92e6b340c8fa489a">__msg_inc_istreambuf</link>,
140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;forward_list</emphasis>
141 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3abc30fb15c690d94380147c03188623ee">__msg_insert_after_end</link>,
142 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a520e04f269e1b36f81e2b2445961faac">__msg_erase_after_bad</link>,
143 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ab3a95bdedf38380a378c8a2f98f4fce7">__msg_valid_range2</link>,
144 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unordered&#32;container&#32;local&#32;iterators</emphasis>
145 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a5fdf1e259036002148b9b841d83d4ccd">__msg_local_iter_compare_bad</link>,
146 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ab524dd48747bbaadc55e1d01da316cf5">__msg_non_empty_range</link>,
147 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;self&#32;move&#32;assign&#32;(no&#32;longer&#32;used)</emphasis>
148 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3ad86dad762e3ed527b41c5015ab4af81d">__msg_self_move_assign</link>,
149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unordered&#32;container&#32;buckets</emphasis>
150 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a2108b9dfa14498d58ecc23732ca3f994">__msg_bucket_index_oob</link>,
151 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a7689079a3cd9fd8dd45d6b1c06b8c0a9">__msg_valid_load_factor</link>,
152 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;others</emphasis>
153 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3a0c2544fad7652d3cf4e9a5b048f973aa">__msg_equal_allocs</link>,
154 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa71acf011c37c86d88f45eab8eae9759">__msg_insert_range_from_self</link>,
155 &#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3aa92bae2910f0a523bd812529bbf520d1">__msg_irreflexive_ordering</link>
156 &#32;&#32;};
157 
158 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>_Error_formatter
159 &#32;&#32;{
160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Tags&#32;denoting&#32;the&#32;type&#32;of&#32;parameter&#32;for&#32;construction</emphasis>
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Is_iterator&#32;{&#32;};
162 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Is_iterator_value_type&#32;{&#32;};
163 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Is_sequence&#32;{&#32;};
164 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Is_instance&#32;{&#32;};
165 
166 &#32;&#32;<emphasis role="keyword">public</emphasis>:
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01">_Constness</link>
169 &#32;&#32;&#32;&#32;{
170 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01a72491e2baecfbd3d50e40f2f5050fb00">__unknown_constness</link>,
171 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ae2ff074f7cd7a8488cae7abf80d727b0">__const_iterator</link>,
172 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ab51aa915b6354ce5cd601e38e5943950">__mutable_iterator</link>,
173 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ab5b0703fb96e3caf5ab6e90046841ca3">__last_constness</link>
174 &#32;&#32;&#32;&#32;};
175 
176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;state&#32;of&#32;the&#32;iterator&#32;(fine-grained),&#32;if&#32;we&#32;know&#32;it.</emphasis>
177 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117">_Iterator_state</link>
178 &#32;&#32;&#32;&#32;{
179 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae56dc7aeed51ed7a35d0ebf58dbb8152">__unknown_state</link>,
180 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>,&#32;&#32;&#32;<emphasis role="comment">//&#32;singular,&#32;may&#32;still&#32;be&#32;attached&#32;to&#32;a&#32;sequence</emphasis>
181 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117abd4d340767676db3039bff451de7eef1">__begin</link>,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dereferenceable,&#32;and&#32;at&#32;the&#32;beginning</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ad8991520d41f1cf3db0b12b429b9243f">__middle</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dereferenceable,&#32;not&#32;at&#32;the&#32;beginning</emphasis>
183 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a74b830cfa42f02f23c22ef71b30e17ac">__end</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;past-the-end,&#32;may&#32;be&#32;at&#32;beginning&#32;if&#32;sequence&#32;empty</emphasis>
184 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a03393ed21e934bb4b4cb52e8282750a4">__before_begin</link>,&#32;&#32;&#32;<emphasis role="comment">//&#32;before&#32;begin</emphasis>
185 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae07f75af43256c31762109912eb945e5">__rbegin</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dereferenceable,&#32;and&#32;at&#32;the&#32;reverse-beginning</emphasis>
186 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ab389e8d8e64b59597b031816fe78bae9">__rmiddle</link>,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reverse-dereferenceable,&#32;not&#32;at&#32;the&#32;reverse-beginning</emphasis>
187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a3ba4832848fc5399172a983da4195ab0">__rend</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reverse-past-the-end</emphasis>
188 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a2c5f2e379bcadd2c01770b471508b255">__last_state</link>
189 &#32;&#32;&#32;&#32;};
190 
191 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;parameter&#32;that&#32;may&#32;be&#32;referenced&#32;by&#32;an&#32;error&#32;message</emphasis>
192 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Parameter
193 &#32;&#32;&#32;&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;{
196 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a0b8777f5db9bb96ea3f0522acc9f5ffc">__unused_param</link>,
197 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>,
198 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4adee2719da3676cabb127c04f8bab16c3">__sequence</link>,
199 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a44de50b402652434bdf547986bb7f401">__integer</link>,
200 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a5ec9ee86f77cb8bed9ed17278234a94c">__string</link>,
201 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ad5868d20dd5c468888a707bba31ce1fd">__instance</link>,
202 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a660752e79cf850b9075087e0e391beba">__iterator_value_type</link>
203 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>;
204 
205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Named
206 &#32;&#32;&#32;&#32;&#32;&#32;{
207 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___named_1a4473d7da5ad40bb31ac81f9ca90bda56">_M_name</link>;
208 &#32;&#32;&#32;&#32;&#32;&#32;};
209 
210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Type&#32;:&#32;_Named
211 &#32;&#32;&#32;&#32;&#32;&#32;{
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;type_info*&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type_1a216bc0150678193ed7e409d70ec98eb2">_M_type</link>;
213 &#32;&#32;&#32;&#32;&#32;&#32;};
214 
215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Instance&#32;:&#32;_Type
216 &#32;&#32;&#32;&#32;&#32;&#32;{
217 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___instance_1a5654112356704d31aaf7688aade3c801">_M_address</link>;
218 &#32;&#32;&#32;&#32;&#32;&#32;};
219 
220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union</emphasis>
221 &#32;&#32;&#32;&#32;&#32;&#32;{
222 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__iterator</emphasis>
223 &#32;&#32;&#32;&#32;struct&#32;:&#32;_Instance
224 &#32;&#32;&#32;&#32;{
225 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01">_Constness</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a13db570ca526e53dd3570019b7c5c031">_M_constness</link>;
226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117">_Iterator_state</link>&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a1dee609bd6156b740c32d57ab421d4bd">_M_state</link>;
227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a8535072d153b811ad6b004a6e128627a">_M_sequence</link>;
228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;type_info*&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1af0ec4556202a3793421068375db34583">_M_seq_type</link>;
229 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1aa06fffec3ff0779fa91c3d8e33093a21">_M_iterator</link>;
230 
231 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__sequence</emphasis>
232 &#32;&#32;&#32;&#32;_Instance&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a8535072d153b811ad6b004a6e128627a">_M_sequence</link>;
233 
234 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__integer</emphasis>
235 &#32;&#32;&#32;&#32;struct&#32;:&#32;_Named
236 &#32;&#32;&#32;&#32;{
237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1af15daa9d9935a5fc2b11ad0c7baf83b3">_M_value</link>;
238 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a30a54cbac75d62b58474d18f8aba6179">_M_integer</link>;
239 
240 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__string</emphasis>
241 &#32;&#32;&#32;&#32;struct&#32;:&#32;_Named
242 &#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1af15daa9d9935a5fc2b11ad0c7baf83b3">_M_value</link>;
244 &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a8481140c97a6644556c08bde04d05cfd">_M_string</link>;
245 
246 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__instance</emphasis>
247 &#32;&#32;&#32;&#32;_Instance&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1afbeae7fc03398ba4192b983d8aba496f">_M_instance</link>;
248 
249 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;_M_kind&#32;==&#32;__iterator_value_type</emphasis>
250 &#32;&#32;&#32;&#32;_Type&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a1e40b81361360357d4155d91dd51637b">_M_iterator_value_type</link>;
251 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>;
252 
253 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>()&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a0b8777f5db9bb96ea3f0522acc9f5ffc">__unused_param</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()&#32;{&#32;}
254 
255 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a614d98427048442d6a351423947e74b9">_Parameter</link>(<emphasis role="keywordtype">long</emphasis>&#32;__value,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name)
256 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a44de50b402652434bdf547986bb7f401">__integer</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
257 &#32;&#32;&#32;&#32;&#32;&#32;{
258 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_integer._M_name&#32;=&#32;__name;
259 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_integer._M_value&#32;=&#32;__value;
260 &#32;&#32;&#32;&#32;&#32;&#32;}
261 
262 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1af897a4751ca77cf2fdb73fc23c7cb220">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__value,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name)
263 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a5ec9ee86f77cb8bed9ed17278234a94c">__string</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
264 &#32;&#32;&#32;&#32;&#32;&#32;{
265 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_string._M_name&#32;=&#32;__name;
266 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_string._M_value&#32;=&#32;__value;
267 &#32;&#32;&#32;&#32;&#32;&#32;}
268 
269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Category&gt;
270 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1aa64852ff073f23bd84c990ba107889f2">_Parameter</link>(<link linkend="_class____gnu__debug_1_1___safe__iterator">_Safe_iterator&lt;_Iterator, _Sequence, _Category&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
272 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>),&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
273 &#32;&#32;&#32;&#32;{
274 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_name&#32;=&#32;__name;
275 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_address&#32;=&#32;std::__addressof(__it);
276 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Iterator);
277 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_constness&#32;=
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__it.<link linkend="_class____gnu__debug_1_1___safe__iterator_1aebecd16df3b101fbb55d205714f5f74c">_S_constant</link>()&#32;?&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ae2ff074f7cd7a8488cae7abf80d727b0">__const_iterator</link>&#32;:&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ab51aa915b6354ce5cd601e38e5943950">__mutable_iterator</link>;
279 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_sequence&#32;=&#32;__it.<link linkend="_class____gnu__debug_1_1___safe__iterator_1a11704a65f7bb3df9b8cf2e63745d8d66">_M_get_sequence</link>();
280 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_seq_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Sequence);
281 
282 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1aefb17f520b7e88212cf86e552d440858">_M_singular</link>())
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>;
284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__iterator_1ae2340dafeccff234ffc0138e2aa23230">_M_is_before_begin</link>())
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a03393ed21e934bb4b4cb52e8282750a4">__before_begin</link>;
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__iterator_1ac5c54eb2babadef8f12760583730dd85">_M_is_end</link>())
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a74b830cfa42f02f23c22ef71b30e17ac">__end</link>;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__iterator_1a8b74400462adbb5068c2df54871d10cb">_M_is_begin</link>())
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117abd4d340767676db3039bff451de7eef1">__begin</link>;
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ad8991520d41f1cf3db0b12b429b9243f">__middle</link>;
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
295 &#32;&#32;&#32;&#32;}
296 
297 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
298 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1aadddf54482d205dd13a9b594626e1c50">_Parameter</link>(<link linkend="_class____gnu__debug_1_1___safe__local__iterator">_Safe_local_iterator&lt;_Iterator, _Sequence&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
300 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>),&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
301 &#32;&#32;&#32;&#32;{
302 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_name&#32;=&#32;__name;
303 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_address&#32;=&#32;std::__addressof(__it);
304 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Iterator);
305 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_constness&#32;=
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__it.<link linkend="_class____gnu__debug_1_1___safe__local__iterator_1a65378aa3baca9f98cbc4bf7e0049a8c8">_S_constant</link>()&#32;?&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ae2ff074f7cd7a8488cae7abf80d727b0">__const_iterator</link>&#32;:&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ab51aa915b6354ce5cd601e38e5943950">__mutable_iterator</link>;
307 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_sequence&#32;=&#32;__it.<link linkend="_class____gnu__debug_1_1___safe__local__iterator_1ab50969fa0dcf622a1dd07ee969bbeb67">_M_get_sequence</link>();
308 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_seq_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Sequence);
309 
310 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__iterator__base_1aefb17f520b7e88212cf86e552d440858">_M_singular</link>())
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>;
312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__local__iterator_1a10fc12a7ddc4e7d5a554ad0194b0cd90">_M_is_end</link>())
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a74b830cfa42f02f23c22ef71b30e17ac">__end</link>;
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__it.<link linkend="_class____gnu__debug_1_1___safe__local__iterator_1aec66d198e8316a67bd61262fb635d63a">_M_is_begin</link>())
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117abd4d340767676db3039bff451de7eef1">__begin</link>;
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ad8991520d41f1cf3db0b12b429b9243f">__middle</link>;
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
321 &#32;&#32;&#32;&#32;}
322 
323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Type&gt;
324 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a760cfd6c6ec9747b175d7aadd7e0e9c0">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type">_Type</link>*&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
325 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_name&#32;=&#32;__name;
328 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_address&#32;=&#32;std::__addressof(__it);
329 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);
330 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_constness&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ae2ff074f7cd7a8488cae7abf80d727b0">__const_iterator</link>;
331 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;__it&#32;?&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae56dc7aeed51ed7a35d0ebf58dbb8152">__unknown_state</link>&#32;:&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>;
332 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_sequence&#32;=&#32;0;
333 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_seq_type&#32;=&#32;0;
334 &#32;&#32;&#32;&#32;}
335 
336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Type&gt;
337 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ae4aafc551b0f9b57e7d127947885530e">_Parameter</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type">_Type</link>*&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
338 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
339 &#32;&#32;&#32;&#32;{
340 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_name&#32;=&#32;__name;
341 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_address&#32;=&#32;std::__addressof(__it);
342 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);
343 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_constness&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01ab51aa915b6354ce5cd601e38e5943950">__mutable_iterator</link>;
344 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=&#32;__it&#32;?&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae56dc7aeed51ed7a35d0ebf58dbb8152">__unknown_state</link>&#32;:&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>;
345 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_sequence&#32;=&#32;0;
346 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_seq_type&#32;=&#32;0;
347 &#32;&#32;&#32;&#32;}
348 
349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
350 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a36a6bb8318c27d0d543a414c7d8fb6cd">_Parameter</link>(_Iterator&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
351 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ab35dfda0d2719e781bc5dece24f4eb21">__iterator</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
352 &#32;&#32;&#32;&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_name&#32;=&#32;__name;
354 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_address&#32;=&#32;std::__addressof(__it);
355 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);
356 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_constness&#32;=&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a1180f06ca044daa7d7d332ba70e66d01a72491e2baecfbd3d50e40f2f5050fb00">__unknown_constness</link>;
357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state&#32;=
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace____gnu__debug_1af91a5c348f44c548f12858c65f5de6de">__gnu_debug::__check_singular</link>(__it)&#32;?&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ac40599219665f2a62e3301bb4745d5d7">__singular</link>&#32;:&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae56dc7aeed51ed7a35d0ebf58dbb8152">__unknown_state</link>;
359 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_sequence&#32;=&#32;0;
360 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_seq_type&#32;=&#32;0;
361 &#32;&#32;&#32;&#32;}
362 
363 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
364 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;following&#32;constructors&#32;are&#32;only&#32;defined&#32;in&#32;C++11&#32;to&#32;take</emphasis>
365 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;advantage&#32;of&#32;the&#32;constructor&#32;delegation&#32;feature.</emphasis>
366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Container&gt;
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(
368 &#32;&#32;&#32;&#32;&#32;&#32;__gnu_cxx::__normal_iterator&lt;_Iterator,&#32;_Container&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
369 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
370 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__it.base(),&#32;__name,&#32;_Is_iterator{})
371 &#32;&#32;&#32;&#32;{&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>.<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1aa06fffec3ff0779fa91c3d8e33093a21">_M_iterator</link>._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);&#32;}
372 
373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
374 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(std::reverse_iterator&lt;_Iterator&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
376 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(__it.base(),&#32;__name,&#32;_Is_iterator{})
377 &#32;&#32;&#32;&#32;{
378 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);
379 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;_S_reverse_state(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state);
381 &#32;&#32;&#32;&#32;}
382 
383 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Category&gt;
384 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(std::reverse_iterator&lt;_Safe_iterator&lt;_Iterator,&#32;_Sequence,
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Category&gt;&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
387 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(__it.base(),&#32;__name,&#32;_Is_iterator{})
388 &#32;&#32;&#32;&#32;{
389 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(std::reverse_iterator&lt;_Iterator&gt;);
391 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;_S_reverse_state(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_state);
393 &#32;&#32;&#32;&#32;}
394 
395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
396 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(std::move_iterator&lt;_Iterator&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
398 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(__it.base(),&#32;__name,&#32;_Is_iterator{})
399 &#32;&#32;&#32;&#32;{&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(__it);&#32;}
400 
401 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Sequence,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Category&gt;
402 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(std::move_iterator&lt;_Safe_iterator&lt;_Iterator,&#32;_Sequence,
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Category&gt;&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;__it,
404 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_iterator)
405 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a471fec4942c8336a71e8d818b79be6d2">_Parameter</link>(__it.base(),&#32;__name,&#32;_Is_iterator{})
406 &#32;&#32;&#32;&#32;&#32;&#32;{
407 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator._M_type
408 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(std::move_iterator&lt;_Iterator&gt;);
409 &#32;&#32;&#32;&#32;&#32;&#32;}
410 
411 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
412 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117">_Iterator_state</link>
413 &#32;&#32;&#32;&#32;&#32;&#32;_S_reverse_state(<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117">_Iterator_state</link>&#32;__state)
414 &#32;&#32;&#32;&#32;&#32;&#32;{
415 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(__state)
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117abd4d340767676db3039bff451de7eef1">__begin</link>:
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a3ba4832848fc5399172a983da4195ab0">__rend</link>;
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ad8991520d41f1cf3db0b12b429b9243f">__middle</link>:
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ab389e8d8e64b59597b031816fe78bae9">__rmiddle</link>;
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117a74b830cfa42f02f23c22ef71b30e17ac">__end</link>:
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a8f479e42fdef4e240489dddab7da6117ae07f75af43256c31762109912eb945e5">__rbegin</link>;
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__state;
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
426 &#32;&#32;&#32;&#32;&#32;&#32;}
427 
428 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
429 <emphasis role="preprocessor">#endif</emphasis>
430 
431 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
432 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1aaba902b81cceda21ca244a659f00c81c">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___safe__sequence">_Safe_sequence&lt;_Sequence&gt;</link>&amp;&#32;__seq,
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_sequence)
434 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4adee2719da3676cabb127c04f8bab16c3">__sequence</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
435 &#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_name&#32;=&#32;__name;
437 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_address&#32;=
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>_Sequence*<emphasis role="keyword">&gt;</emphasis>(std::__addressof(__seq));
439 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Sequence);
440 &#32;&#32;&#32;&#32;}
441 
442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
443 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab82ea570f4996e89455ffc916538927a">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;_Sequence&amp;&#32;__seq,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_sequence)
444 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4adee2719da3676cabb127c04f8bab16c3">__sequence</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
445 &#32;&#32;&#32;&#32;{
446 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_name&#32;=&#32;__name;
447 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_address&#32;=&#32;std::__addressof(__seq);
448 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_sequence._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(_Sequence);
449 &#32;&#32;&#32;&#32;}
450 
451 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
452 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a8c6af5fb72e6d6679c8ce13ae3e55947">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;_Iterator&amp;&#32;__it,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Is_iterator_value_type)
454 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4a660752e79cf850b9075087e0e391beba">__iterator_value_type</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
455 &#32;&#32;&#32;&#32;{
456 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator_value_type._M_name&#32;=&#32;__name;
457 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_iterator_value_type._M_type&#32;=
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;_Iterator&gt;::value_type);
459 &#32;&#32;&#32;&#32;}
460 
461 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Type&gt;
462 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a0190c87454ef65371d21e145dbd7e1e6">_Parameter</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type">_Type</link>&amp;&#32;__inst,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;_Is_instance)
463 &#32;&#32;&#32;&#32;:&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a6702cac387ffb142bdcdb9fe25e0ea39">_M_kind</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1a9d246188be3559a2869f751b8ff39fa4ad5868d20dd5c468888a707bba31ce1fd">__instance</link>),&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>()
464 &#32;&#32;&#32;&#32;{
465 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_instance._M_name&#32;=&#32;__name;
466 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_instance._M_address&#32;=&#32;&amp;__inst;
467 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1ab9f6ef3aff54eb8d4ddb630bf61dec2a">_M_variant</link>._M_instance._M_type&#32;=&#32;<link linkend="_lib_2include_2c_09_09_2debug_2formatter_8h_1a4ab78491656a7902188a3af96fb0801e">_GLIBCXX_TYPEID</link>(<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type">_Type</link>);
468 &#32;&#32;&#32;&#32;}
469 
470 <emphasis role="preprocessor">#if&#32;!_GLIBCXX_INLINE_VERSION</emphasis>
471 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
472 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1abf0aefd76a07ba738c8fa7c39704d98e">_M_print_field</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>*&#32;__formatter,
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name)&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
474 
475 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
476 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1afa7b857f1039a7585b43776bcbc3a8ce">_M_print_description</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>*&#32;__formatter)
477 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
478 <emphasis role="preprocessor">#endif</emphasis>
479 &#32;&#32;&#32;&#32;};
480 
481 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
482 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
483 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a7b197a6913998803392bc026a284943e">_M_iterator</link>(<emphasis role="keyword">const</emphasis>&#32;_Iterator&amp;&#32;__it,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
484 &#32;&#32;&#32;&#32;&#32;&#32;{
485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;std::size_t(__max_parameters))
486 &#32;&#32;&#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__it,&#32;__name,
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Is_iterator());
488 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
489 &#32;&#32;&#32;&#32;&#32;&#32;}
490 
491 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Iterator&gt;
492 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
493 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1ad6320a27d088ec838bdcd0e3c04efbe9">_M_iterator_value_type</link>(<emphasis role="keyword">const</emphasis>&#32;_Iterator&amp;&#32;__it,
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
495 &#32;&#32;&#32;&#32;&#32;&#32;{
496 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;__max_parameters)
497 &#32;&#32;&#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__it,&#32;__name,&#32;_Is_iterator_value_type());
499 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
500 &#32;&#32;&#32;&#32;&#32;&#32;}
501 
502 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
503 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1acb4a3696b0d06bbb2a068792f4c2073a">_M_integer</link>(<emphasis role="keywordtype">long</emphasis>&#32;__value,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
504 &#32;&#32;&#32;&#32;{
505 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;__max_parameters)
506 &#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__value,&#32;__name);
507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
508 &#32;&#32;&#32;&#32;}
509 
510 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
511 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a57dd1573017dd67b52431d44bea4b074">_M_string</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__value,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
512 &#32;&#32;&#32;&#32;{
513 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;__max_parameters)
514 &#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__value,&#32;__name);
515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
516 &#32;&#32;&#32;&#32;}
517 
518 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Sequence&gt;
519 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
520 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a3a55d71f0ce6edcf705b8a90d858efc3">_M_sequence</link>(<emphasis role="keyword">const</emphasis>&#32;_Sequence&amp;&#32;__seq,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
521 &#32;&#32;&#32;&#32;&#32;&#32;{
522 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;__max_parameters)
523 &#32;&#32;&#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__seq,&#32;__name,
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Is_sequence());
525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
526 &#32;&#32;&#32;&#32;&#32;&#32;}
527 
528 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Type&gt;
529 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
530 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a27a5246876e114bf919b275a19af234a">_M_instance</link>(<emphasis role="keyword">const</emphasis>&#32;_Type&amp;&#32;__inst,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name&#32;=&#32;0)
531 &#32;&#32;&#32;&#32;&#32;&#32;{
532 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_num_parameters&#32;&lt;&#32;__max_parameters)
533 &#32;&#32;&#32;&#32;&#32;&#32;_M_parameters[_M_num_parameters++]&#32;=&#32;<link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">_Parameter</link>(__inst,&#32;__name,
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Is_instance());
535 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
536 &#32;&#32;&#32;&#32;&#32;&#32;}
537 
538 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
539 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a72ae69c08748151d860d133f508c5a93">_M_message</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__text)
540 &#32;&#32;&#32;&#32;{&#32;_M_text&#32;=&#32;__text;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
541 
542 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Kept&#32;const&#32;qualifier&#32;for&#32;backward&#32;compatibility,&#32;to&#32;keep&#32;the&#32;same</emphasis>
543 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;exported&#32;symbol.</emphasis>
544 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&amp;
545 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1aade166b28f179eb5664b71cab4c87796">_M_message</link>(<link linkend="_namespace____gnu__debug_1aeb7af2ed24147dfab032febcea3f4fb3">_Debug_msg_id</link>&#32;__id)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordflow">throw</emphasis>&#32;();
546 
547 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1acfcd3fa89932cf2891467b72a60eaeb2">_GLIBCXX_NORETURN</link>&#32;<emphasis role="keywordtype">void</emphasis>
548 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a675ee707603c96a05a971379bfd370af">_M_error</link>()&#32;<emphasis role="keyword">const</emphasis>;
549 
550 <emphasis role="preprocessor">#if&#32;!_GLIBCXX_INLINE_VERSION</emphasis>
551 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
552 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
553 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a5b1e35dd027be3aaacaf7e519d71103a">_M_format_word</link>(<emphasis role="keywordtype">char</emphasis>*,&#32;<emphasis role="keywordtype">int</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;_Tp)
554 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordflow">throw</emphasis>&#32;()&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
555 
556 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
557 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a3f4b069b9194d6504bbde9146a5e6b39">_M_print_word</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__word)&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
558 
559 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
560 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a0598c1f7007be14be140f90d797c3296">_M_print_string</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__string)&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
561 <emphasis role="preprocessor">#endif</emphasis>
562 
563 &#32;&#32;<emphasis role="keyword">private</emphasis>:
564 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line,
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__function)
566 &#32;&#32;&#32;&#32;:&#32;_M_file(__file),&#32;_M_line(__line),&#32;_M_num_parameters(0),&#32;_M_text(0)
567 &#32;&#32;&#32;&#32;,&#32;_M_function(__function)
568 &#32;&#32;&#32;&#32;{&#32;}
569 
570 <emphasis role="preprocessor">#if&#32;!_GLIBCXX_INLINE_VERSION</emphasis>
571 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
572 &#32;&#32;&#32;&#32;_M_get_max_length()&#32;<emphasis role="keyword">const</emphasis>&#32;throw&#32;()&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a3974823b6483d7c91a0f93c24c66d625">_GLIBCXX_DEPRECATED</link>;
573 <emphasis role="preprocessor">#endif</emphasis>
574 
575 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;{&#32;__max_parameters&#32;=&#32;9&#32;};
576 
577 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;_M_file;
578 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;_M_line;
579 &#32;&#32;&#32;&#32;_Parameter&#32;&#32;&#32;&#32;&#32;&#32;_M_parameters[__max_parameters];
580 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;_M_num_parameters;
581 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;_M_text;
582 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;&#32;&#32;_M_function;
583 
584 &#32;&#32;<emphasis role="keyword">public</emphasis>:
585 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;_Error_formatter&amp;
586 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__debug_1_1___error__formatter_1a25c0c7e0d91e72958140c51abfad7d63">_S_at</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__function)
587 &#32;&#32;&#32;&#32;{
588 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class____gnu__debug_1_1___error__formatter">_Error_formatter</link>&#32;__formatter(__file,&#32;__line,&#32;__function);
589 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__formatter;
590 &#32;&#32;&#32;&#32;}
591 &#32;&#32;};
592 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_debug</emphasis>
593 
594 <emphasis role="preprocessor">#undef&#32;_GLIBCXX_TYPEID</emphasis>
595 
596 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
