<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40" xml:lang="en-US">
<title>Encoder and Decoder for &lt;a href=&quot;https://github.com/BurntSushi/toml-test&quot; &gt;toml-test&lt;/a&gt;</title>
<indexterm><primary>Encoder and Decoder for &lt;a href=&quot;https://github.com/BurntSushi/toml-test&quot; &gt;toml-test&lt;/a&gt;</primary></indexterm>

<para><anchor xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40_1autotoc_md144"/> <blockquote>
<para>&#8205;ℹ&amp;#xFE0F; <emphasis>The contents of this directory relate to testing with the <link xlink:href="https://github.com/BurntSushi/toml-test">toml-test</link> suite, <emphasis role="bold">not</emphasis> anything to do with running the library&apos;s unit-tests. For information about running the unit-tests see <link linkend="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430">CONTRIBUTING</link>.</emphasis></para>

<para>ℹ&amp;#xFE0F; <emphasis>All command snippets in this document assume the working directory is the toml++ repository root.</emphasis> </para>
</blockquote><?linebreak?></para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40_1autotoc_md145">
<title>Prequisites</title>

<para>For this document to make sense, you will need to:</para>

<para><orderedlist>
<listitem>
<para>Follow the installation instructions from the <link xlink:href="https://github.com/BurntSushi/toml-test">toml-test</link> README to compile the <computeroutput>toml-test</computeroutput> runner</para>
</listitem><listitem>
<para>Add <computeroutput>toml-test</computeroutput> as an alias or have it on the system PATH</para>
</listitem><listitem>
<para><emphasis role="bold">Linux only:</emphasis> Install <computeroutput>ninja</computeroutput> and <computeroutput>meson</computeroutput>:</para>
</listitem></orderedlist>
</para>

<para><literallayout><computeroutput>sudo&#32;apt&#32;update&#32;&amp;&amp;&#32;sudo&#32;apt&#32;install&#32;-y&#32;python3&#32;python3-pip&#32;ninja-build
sudo&#32;pip3&#32;install&#32;meson
</computeroutput></literallayout></para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40_1autotoc_md146">
<title>Building and Testing the Encoder and Decoder</title>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40_1autotoc_md147">
<title>Windows with Visual Studio</title>

<para>Open <computeroutput>toml++.sln</computeroutput> and build the two projects in the <computeroutput>toml-test</computeroutput> solution folder. They&apos;ll be compiled in some target-specific subfolder under <computeroutput>/bin</computeroutput> in the repo root. Then run <computeroutput>toml-test</computeroutput> against them:</para>

<para><literallayout><computeroutput>toml-test&#32;./bin/win64_vc143_Release_Application/tt_decoder.exe
toml-test&#32;./bin/win64_vc143_Release_Application/tt_encoder.exe&#32;--encoder
</computeroutput></literallayout></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40_1autotoc_md148">
<title>Linux (and WSL)</title>

<para><literallayout><computeroutput>#&#32;create&#32;the&#32;meson&#32;build&#32;target&#32;folder&#32;(first&#32;time&#32;only)
meson&#32;build_tt&#32;--buildtype=release&#32;-Dbuild_tt=true&#32;-Dgenerate_cmake_config=false

#&#32;build&#32;and&#32;run
cd&#32;build_tt
ninja&#32;&amp;&amp;&#32;toml-test&#32;./toml-test/tt_decoder&#32;&amp;&amp;&#32;toml-test&#32;./toml-test/tt_encoder&#32;--encoder
</computeroutput></literallayout></para>

<para><blockquote>
<para>&#8205;ℹ&amp;#xFE0F; Pass <computeroutput>-Duse_vendored_libs=false</computeroutput> to meson if you wish to use the system-installed version of nlohmann/json rather than the vendored one. </para>
</blockquote></para>
</section>
</section>
</section>
