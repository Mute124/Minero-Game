<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2bits_2gslice_8h_source" xml:lang="en-US">
<title>gslice.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/bits/gslice.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;The&#32;template&#32;and&#32;inlines&#32;for&#32;the&#32;-*-&#32;C++&#32;-*-&#32;gslice&#32;class.</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;1997-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//&#32;Written&#32;by&#32;Gabriel&#32;Dos&#32;Reis&#32;&lt;Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr&gt;</emphasis>
31 
32 <emphasis role="preprocessor">#ifndef&#32;_GSLICE_H</emphasis>
33 <emphasis role="preprocessor">#define&#32;_GSLICE_H&#32;1</emphasis>
34 
35 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
36 
37 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
38 {
39 _GLIBCXX_BEGIN_NAMESPACE_VERSION
40 
64 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>gslice
65 &#32;&#32;{
66 &#32;&#32;<emphasis role="keyword">public</emphasis>:
68 &#32;&#32;&#32;&#32;gslice();
69 
80 &#32;&#32;&#32;&#32;gslice(<emphasis role="keywordtype">size_t</emphasis>&#32;__o,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__l,&#32;
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__s);
82 
83 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;XXX:&#32;the&#32;IS&#32;says&#32;the&#32;copy-ctor&#32;and&#32;copy-assignment&#32;operators&#32;are</emphasis>
84 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;synthesized&#32;by&#32;the&#32;compiler&#32;but&#32;they&#32;are&#32;just&#32;unsuitable</emphasis>
85 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;for&#32;a&#32;ref-counted&#32;semantic</emphasis>
87 &#32;&#32;&#32;&#32;gslice(<emphasis role="keyword">const</emphasis>&#32;gslice&amp;);
88 
90 &#32;&#32;&#32;&#32;~gslice();
91 
92 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;XXX:&#32;See&#32;the&#32;note&#32;above.</emphasis>
94 &#32;&#32;&#32;&#32;gslice&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;gslice&amp;);
95 
97 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>()&#32;<emphasis role="keyword">const</emphasis>;
98 
100 &#32;&#32;&#32;&#32;valarray&lt;size_t&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>()&#32;<emphasis role="keyword">const</emphasis>;
101 &#32;&#32;&#32;&#32;
103 &#32;&#32;&#32;&#32;valarray&lt;size_t&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>()&#32;<emphasis role="keyword">const</emphasis>;
104 
105 &#32;&#32;<emphasis role="keyword">private</emphasis>:
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Indexer
107 &#32;&#32;&#32;&#32;{
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_M_count;
109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;_M_start;
110 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;size_t&gt;&#32;_M_size;
111 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;size_t&gt;&#32;_M_stride;
112 &#32;&#32;&#32;&#32;&#32;&#32;valarray&lt;size_t&gt;&#32;_M_index;&#32;<emphasis role="comment">//&#32;Linear&#32;array&#32;of&#32;referenced&#32;indices</emphasis>
113 
114 &#32;&#32;&#32;&#32;&#32;&#32;_Indexer()
115 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;_M_count(1),&#32;_M_start(0),&#32;_M_size(),&#32;_M_stride(),&#32;_M_index()&#32;{}
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;_Indexer(<emphasis role="keywordtype">size_t</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;);
119 
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;_M_increment_use()
122 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;++_M_count;&#32;}
123 &#32;&#32;&#32;&#32;&#32;&#32;
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
125 &#32;&#32;&#32;&#32;&#32;&#32;_M_decrement_use()
126 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;--_M_count;&#32;}
127 &#32;&#32;&#32;&#32;};
128 
129 &#32;&#32;&#32;&#32;_Indexer*&#32;_M_index;
130 
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>valarray;
132 &#32;&#32;};
133 
134 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>
135 &#32;&#32;gslice::start()<emphasis role="keyword">&#32;const</emphasis>
136 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index&#32;?&#32;_M_index-&gt;_M_start&#32;:&#32;0;&#32;}
137 
138 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;size_t&gt;
139 &#32;&#32;gslice::size()<emphasis role="keyword">&#32;const</emphasis>
140 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index&#32;?&#32;_M_index-&gt;_M_size&#32;:&#32;valarray&lt;size_t&gt;();&#32;}
141 
142 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;valarray&lt;size_t&gt;
143 &#32;&#32;gslice::stride()<emphasis role="keyword">&#32;const</emphasis>
144 <emphasis role="keyword">&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_M_index&#32;?&#32;_M_index-&gt;_M_stride&#32;:&#32;valarray&lt;size_t&gt;();&#32;}
145 
146 &#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
147 &#32;&#32;<emphasis role="comment">//&#32;543.&#32;valarray&#32;slice&#32;default&#32;constructor</emphasis>
148 &#32;&#32;<emphasis role="keyword">inline</emphasis>
149 &#32;&#32;gslice::gslice()
150 &#32;&#32;:&#32;_M_index(new&#32;gslice::_Indexer())&#32;{}
151 
152 &#32;&#32;<emphasis role="keyword">inline</emphasis>
153 &#32;&#32;gslice::gslice(<emphasis role="keywordtype">size_t</emphasis>&#32;__o,&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__l,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;valarray&lt;size_t&gt;&amp;&#32;__s)
155 &#32;&#32;:&#32;_M_index(new&#32;gslice::_Indexer(__o,&#32;__l,&#32;__s))&#32;{}
156 
157 &#32;&#32;<emphasis role="keyword">inline</emphasis>
158 &#32;&#32;gslice::gslice(<emphasis role="keyword">const</emphasis>&#32;gslice&amp;&#32;__g)
159 &#32;&#32;:&#32;_M_index(__g._M_index)
160 &#32;&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_index)&#32;_M_index-&gt;_M_increment_use();&#32;}
161 
162 &#32;&#32;<emphasis role="keyword">inline</emphasis>
163 &#32;&#32;gslice::~gslice()
164 &#32;&#32;{
165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_index&#32;&amp;&amp;&#32;_M_index-&gt;_M_decrement_use()&#32;==&#32;0)
166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_M_index;
167 &#32;&#32;}
168 
169 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;gslice&amp;
170 &#32;&#32;gslice::operator=(<emphasis role="keyword">const</emphasis>&#32;gslice&amp;&#32;__g)
171 &#32;&#32;{
172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__g._M_index)
173 &#32;&#32;&#32;&#32;&#32;&#32;__g._M_index-&gt;_M_increment_use();
174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_M_index&#32;&amp;&amp;&#32;_M_index-&gt;_M_decrement_use()&#32;==&#32;0)
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_M_index;
176 &#32;&#32;&#32;&#32;_M_index&#32;=&#32;__g._M_index;
177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
178 &#32;&#32;}
179 
181 
182 _GLIBCXX_END_NAMESPACE_VERSION
183 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
184 
185 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_GSLICE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
