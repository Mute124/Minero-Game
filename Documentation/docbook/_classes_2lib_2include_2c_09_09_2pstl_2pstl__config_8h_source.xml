<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2pstl_2pstl__config_8h_source" xml:lang="en-US">
<title>pstl_config.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/pstl/pstl_config.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 <emphasis role="comment">//===--&#32;pstl_config.h&#32;-----------------------------------------------------===//</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
5 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
6 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
9 
10 <emphasis role="preprocessor">#ifndef&#32;_PSTL_CONFIG_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;_PSTL_CONFIG_H</emphasis>
12 
13 <emphasis role="comment">//&#32;The&#32;version&#32;is&#32;XYYZ,&#32;where&#32;X&#32;is&#32;major,&#32;YY&#32;is&#32;minor,&#32;and&#32;Z&#32;is&#32;patch&#32;(i.e.&#32;X.YY.Z)</emphasis>
14 <emphasis role="preprocessor">#define&#32;_PSTL_VERSION&#32;12000</emphasis>
15 <emphasis role="preprocessor">#define&#32;_PSTL_VERSION_MAJOR&#32;(_PSTL_VERSION&#32;/&#32;1000)</emphasis>
16 <emphasis role="preprocessor">#define&#32;_PSTL_VERSION_MINOR&#32;((_PSTL_VERSION&#32;%&#32;1000)&#32;/&#32;10)</emphasis>
17 <emphasis role="preprocessor">#define&#32;_PSTL_VERSION_PATCH&#32;(_PSTL_VERSION&#32;%&#32;10)</emphasis>
18 
19 <emphasis role="preprocessor">#if&#32;!defined(_PSTL_PAR_BACKEND_SERIAL)&#32;&amp;&amp;&#32;!defined(_PSTL_PAR_BACKEND_TBB)</emphasis>
20 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;error&#32;&quot;A&#32;parallel&#32;backend&#32;must&#32;be&#32;specified&quot;</emphasis>
21 <emphasis role="preprocessor">#endif</emphasis>
22 
23 <emphasis role="comment">//&#32;Check&#32;the&#32;user-defined&#32;macro&#32;for&#32;warnings</emphasis>
24 <emphasis role="preprocessor">#if&#32;defined(PSTL_USAGE_WARNINGS)</emphasis>
25 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;undef&#32;_PSTL_USAGE_WARNINGS</emphasis>
26 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_USAGE_WARNINGS&#32;PSTL_USAGE_WARNINGS</emphasis>
27 <emphasis role="comment">//&#32;Check&#32;the&#32;internal&#32;macro&#32;for&#32;warnings</emphasis>
28 <emphasis role="preprocessor">#elif&#32;!defined(_PSTL_USAGE_WARNINGS)</emphasis>
29 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_USAGE_WARNINGS&#32;0</emphasis>
30 <emphasis role="preprocessor">#endif</emphasis>
31 
32 <emphasis role="comment">//&#32;Portability&#32;&quot;#pragma&quot;&#32;definition</emphasis>
33 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
34 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA(x)&#32;__pragma(x)</emphasis>
35 <emphasis role="preprocessor">#else</emphasis>
36 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA(x)&#32;_Pragma(#&#32;&#32;&#32;&#32;x)</emphasis>
37 <emphasis role="preprocessor">#endif</emphasis>
38 
39 <emphasis role="preprocessor">#define&#32;_PSTL_STRING_AUX(x)&#32;#x</emphasis>
40 <emphasis role="preprocessor">#define&#32;_PSTL_STRING(x)&#32;_PSTL_STRING_AUX(x)</emphasis>
41 <emphasis role="preprocessor">#define&#32;_PSTL_STRING_CONCAT(x,&#32;y)&#32;x&#32;#y</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;_PSTL_HIDE_FROM_ABI_PER_TU</emphasis>
44 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_HIDE_FROM_ABI_PUSH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
45 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Pragma(&quot;clang&#32;attribute&#32;push(__attribute__((internal_linkage)),&#32;apply_to=any(function,record))&quot;)</emphasis>
46 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_HIDE_FROM_ABI_POP&#32;_Pragma(&quot;clang&#32;attribute&#32;pop&quot;)</emphasis>
47 <emphasis role="preprocessor">#else</emphasis>
48 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_HIDE_FROM_ABI_PUSH&#32;</emphasis><emphasis role="comment">/*&#32;nothing&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
49 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_HIDE_FROM_ABI_POP&#32;&#32;</emphasis><emphasis role="comment">/*&#32;nothing&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
50 <emphasis role="preprocessor">#endif</emphasis>
51 
52 <emphasis role="comment">//&#32;note&#32;that&#32;when&#32;ICC&#32;or&#32;Clang&#32;is&#32;in&#32;use,&#32;_PSTL_GCC_VERSION&#32;might&#32;not&#32;fully&#32;match</emphasis>
53 <emphasis role="comment">//&#32;the&#32;actual&#32;GCC&#32;version&#32;on&#32;the&#32;system.</emphasis>
54 <emphasis role="preprocessor">#define&#32;_PSTL_GCC_VERSION&#32;(__GNUC__&#32;*&#32;10000&#32;+&#32;__GNUC_MINOR__&#32;*&#32;100&#32;+&#32;__GNUC_PATCHLEVEL__)</emphasis>
55 
56 <emphasis role="preprocessor">#if&#32;__clang__</emphasis>
57 <emphasis role="comment">//&#32;according&#32;to&#32;clang&#32;documentation,&#32;version&#32;can&#32;be&#32;vendor&#32;specific</emphasis>
58 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_CLANG_VERSION&#32;(__clang_major__&#32;*&#32;10000&#32;+&#32;__clang_minor__&#32;*&#32;100&#32;+&#32;__clang_patchlevel__)</emphasis>
59 <emphasis role="preprocessor">#endif</emphasis>
60 
61 <emphasis role="comment">//&#32;Enable&#32;SIMD&#32;for&#32;compilers&#32;that&#32;support&#32;OpenMP&#32;4.0</emphasis>
62 <emphasis role="preprocessor">#if&#32;(_OPENMP&#32;&gt;=&#32;201307)&#32;||&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1600)&#32;||&#32;(!defined(__INTEL_COMPILER)&#32;&amp;&amp;&#32;_PSTL_GCC_VERSION&#32;&gt;=&#32;40900)&#32;||&#32;\</emphasis>
63 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;defined(__clang__)</emphasis>
64 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD&#32;_PSTL_PRAGMA(omp&#32;simd)</emphasis>
65 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_DECLARE_SIMD&#32;_PSTL_PRAGMA(omp&#32;declare&#32;simd)</emphasis>
66 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_REDUCTION(PRM)&#32;_PSTL_PRAGMA(omp&#32;simd&#32;reduction(PRM))</emphasis>
67 <emphasis role="preprocessor">#elif&#32;!defined(_MSC_VER)&#32;</emphasis><emphasis role="comment">//#pragma&#32;simd</emphasis>
68 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD&#32;_PSTL_PRAGMA(simd)</emphasis>
69 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_DECLARE_SIMD</emphasis>
70 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_REDUCTION(PRM)&#32;_PSTL_PRAGMA(simd&#32;reduction(PRM))</emphasis>
71 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//no&#32;simd</emphasis>
72 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD</emphasis>
73 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_DECLARE_SIMD</emphasis>
74 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_REDUCTION(PRM)</emphasis>
75 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//Enable&#32;SIMD</emphasis>
76 
77 <emphasis role="preprocessor">#if&#32;(__INTEL_COMPILER)</emphasis>
78 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_FORCEINLINE&#32;_PSTL_PRAGMA(forceinline)</emphasis>
79 <emphasis role="preprocessor">#else</emphasis>
80 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_FORCEINLINE</emphasis>
81 <emphasis role="preprocessor">#endif</emphasis>
82 
83 <emphasis role="preprocessor">#if&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1900)</emphasis>
84 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_SCAN(PRM)&#32;_PSTL_PRAGMA(omp&#32;simd&#32;reduction(inscan,&#32;PRM))</emphasis>
85 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(PRM)&#32;_PSTL_PRAGMA(omp&#32;scan&#32;inclusive(PRM))</emphasis>
86 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(PRM)&#32;_PSTL_PRAGMA(omp&#32;scan&#32;exclusive(PRM))</emphasis>
87 <emphasis role="preprocessor">#else</emphasis>
88 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_SCAN(PRM)</emphasis>
89 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(PRM)</emphasis>
90 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(PRM)</emphasis>
91 <emphasis role="preprocessor">#endif</emphasis>
92 
93 <emphasis role="comment">//&#32;Should&#32;be&#32;defined&#32;to&#32;1&#32;for&#32;environments&#32;with&#32;a&#32;vendor&#32;implementation&#32;of&#32;C++17&#32;execution&#32;policies</emphasis>
94 <emphasis role="preprocessor">#define&#32;_PSTL_CPP17_EXECUTION_POLICIES_PRESENT&#32;(_MSC_VER&#32;&gt;=&#32;1912)</emphasis>
95 
96 <emphasis role="preprocessor">#define&#32;_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
97 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(_MSC_VER&#32;&gt;=&#32;1900&#32;||&#32;__cplusplus&#32;&gt;=&#32;201300L&#32;||&#32;__cpp_lib_robust_nonmodifying_seq_ops&#32;==&#32;201304)</emphasis>
98 <emphasis role="preprocessor">#define&#32;_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
99 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(_MSC_VER&#32;&gt;=&#32;1900&#32;||&#32;__cplusplus&#32;&gt;=&#32;201402L&#32;||&#32;__cpp_lib_make_reverse_iterator&#32;==&#32;201402)</emphasis>
100 <emphasis role="preprocessor">#define&#32;_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT&#32;(_MSC_VER&#32;&gt;=&#32;1900&#32;||&#32;__cplusplus&#32;&gt;=&#32;201402L)</emphasis>
101 <emphasis role="preprocessor">#define&#32;_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(!__INTEL_COMPILER&#32;||&#32;__INTEL_COMPILER&#32;&gt;=&#32;1700)&#32;&amp;&amp;&#32;(_MSC_FULL_VER&#32;&gt;=&#32;190023918&#32;||&#32;__cplusplus&#32;&gt;=&#32;201402L)</emphasis>
103 
104 <emphasis role="preprocessor">#define&#32;_PSTL_EARLYEXIT_PRESENT&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1800)</emphasis>
105 <emphasis role="preprocessor">#define&#32;_PSTL_MONOTONIC_PRESENT&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1800)</emphasis>
106 
107 <emphasis role="preprocessor">#if&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1900&#32;||&#32;!defined(__INTEL_COMPILER)&#32;&amp;&amp;&#32;_PSTL_GCC_VERSION&#32;&gt;=&#32;40900&#32;||&#32;_OPENMP&#32;&gt;=&#32;201307)</emphasis>
108 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_UDR_PRESENT&#32;1</emphasis>
109 <emphasis role="preprocessor">#else</emphasis>
110 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_UDR_PRESENT&#32;0</emphasis>
111 <emphasis role="preprocessor">#endif</emphasis>
112 
113 <emphasis role="preprocessor">#define&#32;_PSTL_UDS_PRESENT&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1900&#32;&amp;&amp;&#32;__INTEL_COMPILER_BUILD_DATE&#32;&gt;=&#32;20180626)</emphasis>
114 
115 <emphasis role="preprocessor">#if&#32;_PSTL_EARLYEXIT_PRESENT</emphasis>
116 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_EARLYEXIT&#32;_PSTL_PRAGMA(omp&#32;simd&#32;early_exit)</emphasis>
117 <emphasis role="preprocessor">#else</emphasis>
118 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_EARLYEXIT</emphasis>
119 <emphasis role="preprocessor">#endif</emphasis>
120 
121 <emphasis role="preprocessor">#if&#32;_PSTL_MONOTONIC_PRESENT</emphasis>
122 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(PRM)&#32;_PSTL_PRAGMA(omp&#32;ordered&#32;simd&#32;monotonic(PRM))</emphasis>
123 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(PRM1,&#32;PRM2)&#32;_PSTL_PRAGMA(omp&#32;ordered&#32;simd&#32;monotonic(PRM1,&#32;PRM2))</emphasis>
124 <emphasis role="preprocessor">#else</emphasis>
125 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(PRM)</emphasis>
126 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(PRM1,&#32;PRM2)</emphasis>
127 <emphasis role="preprocessor">#endif</emphasis>
128 
129 <emphasis role="comment">//&#32;Declaration&#32;of&#32;reduction&#32;functor,&#32;where</emphasis>
130 <emphasis role="comment">//&#32;NAME&#32;-&#32;the&#32;name&#32;of&#32;the&#32;functor</emphasis>
131 <emphasis role="comment">//&#32;OP&#32;-&#32;type&#32;of&#32;the&#32;callable&#32;object&#32;with&#32;the&#32;reduction&#32;operation</emphasis>
132 <emphasis role="comment">//&#32;omp_in&#32;-&#32;refers&#32;to&#32;the&#32;local&#32;partial&#32;result</emphasis>
133 <emphasis role="comment">//&#32;omp_out&#32;-&#32;refers&#32;to&#32;the&#32;final&#32;value&#32;of&#32;the&#32;combiner&#32;operator</emphasis>
134 <emphasis role="comment">//&#32;omp_priv&#32;-&#32;refers&#32;to&#32;the&#32;private&#32;copy&#32;of&#32;the&#32;initial&#32;value</emphasis>
135 <emphasis role="comment">//&#32;omp_orig&#32;-&#32;refers&#32;to&#32;the&#32;original&#32;variable&#32;to&#32;be&#32;reduced</emphasis>
136 <emphasis role="preprocessor">#define&#32;_PSTL_PRAGMA_DECLARE_REDUCTION(NAME,&#32;OP)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
137 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;_PSTL_PRAGMA(omp&#32;declare&#32;reduction(NAME:OP&#32;:&#32;omp_out(omp_in))&#32;initializer(omp_priv&#32;=&#32;omp_orig))</emphasis>
138 
139 <emphasis role="preprocessor">#if&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1600)</emphasis>
140 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_VECTOR_UNALIGNED&#32;_PSTL_PRAGMA(vector&#32;unaligned)</emphasis>
141 <emphasis role="preprocessor">#else</emphasis>
142 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_VECTOR_UNALIGNED</emphasis>
143 <emphasis role="preprocessor">#endif</emphasis>
144 
145 <emphasis role="comment">//&#32;Check&#32;the&#32;user-defined&#32;macro&#32;to&#32;use&#32;non-temporal&#32;stores</emphasis>
146 <emphasis role="preprocessor">#if&#32;defined(PSTL_USE_NONTEMPORAL_STORES)&#32;&amp;&amp;&#32;(__INTEL_COMPILER&#32;&gt;=&#32;1600)</emphasis>
147 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED&#32;_PSTL_PRAGMA(vector&#32;nontemporal)</emphasis>
148 <emphasis role="preprocessor">#else</emphasis>
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED</emphasis>
150 <emphasis role="preprocessor">#endif</emphasis>
151 
152 <emphasis role="preprocessor">#if&#32;_MSC_VER&#32;||&#32;__INTEL_COMPILER&#32;</emphasis><emphasis role="comment">//the&#32;preprocessors&#32;don&apos;t&#32;type&#32;a&#32;message&#32;location</emphasis>
153 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_LOCATION&#32;__FILE__&#32;&quot;:&quot;&#32;_PSTL_STRING(__LINE__)&#32;&quot;:&#32;[Parallel&#32;STL&#32;message]:&#32;&quot;</emphasis>
154 <emphasis role="preprocessor">#else</emphasis>
155 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_LOCATION&#32;&quot;&#32;[Parallel&#32;STL&#32;message]:&#32;&quot;</emphasis>
156 <emphasis role="preprocessor">#endif</emphasis>
157 
158 <emphasis role="preprocessor">#define&#32;_PSTL_PRAGMA_MESSAGE_IMPL(x)&#32;_PSTL_PRAGMA(message(_PSTL_STRING_CONCAT(_PSTL_PRAGMA_LOCATION,&#32;x)))</emphasis>
159 
160 <emphasis role="preprocessor">#if&#32;_PSTL_USAGE_WARNINGS</emphasis>
161 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_MESSAGE(x)&#32;_PSTL_PRAGMA_MESSAGE_IMPL(x)</emphasis>
162 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_MESSAGE_POLICIES(x)&#32;_PSTL_PRAGMA_MESSAGE_IMPL(x)</emphasis>
163 <emphasis role="preprocessor">#else</emphasis>
164 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_MESSAGE(x)</emphasis>
165 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_PSTL_PRAGMA_MESSAGE_POLICIES(x)</emphasis>
166 <emphasis role="preprocessor">#endif</emphasis>
167 
168 <emphasis role="comment">//&#32;broken&#32;macros</emphasis>
169 <emphasis role="preprocessor">#define&#32;_PSTL_CPP11_STD_ROTATE_BROKEN&#32;((__GLIBCXX__&#32;&amp;&amp;&#32;__GLIBCXX__&#32;&lt;&#32;20150716)&#32;||&#32;(_MSC_VER&#32;&amp;&amp;&#32;_MSC_VER&#32;&lt;&#32;1800))</emphasis>
170 
171 <emphasis role="preprocessor">#define&#32;_PSTL_ICC_18_OMP_SIMD_BROKEN&#32;(__INTEL_COMPILER&#32;==&#32;1800)</emphasis>
172 
173 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_PSTL_CONFIG_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
