<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2raylib_2src_2text_8c" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/lib/raylib/src/text.c File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/raylib/src/text.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;raylib.h&quot;<?linebreak?>#include &quot;config.h&quot;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;stdarg.h&gt;<?linebreak?>#include &lt;ctype.h&gt;<?linebreak?>#include &quot;utils.h&quot;<?linebreak?>#include &quot;external/stb_rect_pack.h&quot;<?linebreak?>#include &quot;external/stb_truetype.h&quot;<?linebreak?></programlisting>Include dependency graph for text.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a0791e69f0dcd58efa795dd50eb8c6cd0">STB_RECT_PACK_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1adb252cc9576591994fdf2f89baddc630">STBTT_STATIC</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1afaa2f2d0d9d6726cfae6da070e736347">STB_TRUETYPE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a57f856fcad55cb79b60a2125e0c0eb51">MAX_TEXT_BUFFER_LENGTH</link>&#160;&#160;&#160;1024</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1aec8472dadb8a58d8e40f0aed52e5d51c">MAX_TEXT_UNICODE_CHARS</link>&#160;&#160;&#160;512</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a85dd79b9f0d4eda8105f287e662c8f6e">TEXTSPLIT_MAX_TEXT_BUFFER_LENGTH</link>&#160;&#160;&#160;1024</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a96be0ef979be3fc7b15e66e9998a2678">TEXTSPLIT_MAX_SUBSTRINGS_COUNT</link>&#160;&#160;&#160;128</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1ab53403b709717305a8d0a8e692a70de6">BIT_CHECK</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>) &amp; (1<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link> &lt;&lt; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a257e9ac41a56598e87ecd32f46e78395">DEFAULT_TTF_FONTSIZE</link>&#160;&#160;&#160;32</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1aaed5ddfe18a4f0b52534c6de9c0956af">DEFAULT_TTF_NUMCHARS</link>&#160;&#160;&#160;95</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1acc7230b502da6ab03552b233a9722416">DEFAULT_FIRST_CHAR</link>&#160;&#160;&#160;32</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a5b769e391cd935d795ce1cf44c2315d4">COLOR_EQUAL</link>(col1,  col2)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col1.r</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col2.r</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col1.g</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col2.g</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col1.b</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col2.b</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col1.a</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col2.a</link>))</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1ae788350fc4de6f598f85cb98beeba5b5">MAX_FONTCHARS</link>&#160;&#160;&#160;256</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a3748006eb91df1f5fc68bd195f528002">SDF_CHAR_PADDING</link>&#160;&#160;&#160;4</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1afef877a3b6489220d13fd7c5548e3801">SDF_ON_EDGE_VALUE</link>&#160;&#160;&#160;128</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a1b5e48b4c5ce96efb8808988783a5f28">SDF_PIXEL_DIST_SCALE</link>&#160;&#160;&#160;64.0f</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a8112e7a8aade3f9132206c49b9c8da1f">BITMAP_ALPHA_THRESHOLD</link>&#160;&#160;&#160;80</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a08390593a08abc1965dc352f415a1f90">TEXT_CHARACTER_NOTFOUND</link>&#160;&#160;&#160;63</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1a5e697f58a5d806a740bba344b63fe5b6">UNORDERED_CHARSET</link></para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1ae7d1ecc7432b1a99c91be68177bafccd">MAX_TEXTFORMAT_BUFFERS</link>&#160;&#160;&#160;4</para>
</listitem>
            <listitem><para>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> <link linkend="_lib_2raylib_2src_2text_8c_1ad4d796b98c583d49e83adabd74a63bf6">MAX_BUFFER_SIZE</link>&#160;&#160;&#160;256</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a8484fb93b071180266b4e0a4c23fc296">LoadFontDefault</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a24ffb11e46b52a9706555b02ccbc19da">UnloadFontDefault</link> (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="_lib_2raylib_2src_2text_8c_1ab0c27a81dd37c596295654a82e201137">GetFontDefault</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="_lib_2raylib_2src_2text_8c_1a3af0b11c77b23684cd8c95127b39929c">LoadFont</link> (const char *fileName)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="_lib_2raylib_2src_2text_8c_1ace56777465bba6fe79619d4a82accc79">LoadFontEx</link> (const char *fileName, int fontSize, int *fontChars, int charsCount)</para>
</listitem>
            <listitem><para><link linkend="_struct_font">Font</link> <link linkend="_lib_2raylib_2src_2text_8c_1a56705d5b2c3d2c7c9bbeda302142d948">LoadFontFromImage</link> (<link linkend="_struct_image">Image</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>, <link linkend="_struct_color">Color</link> key, int firstChar)</para>
</listitem>
            <listitem><para><link linkend="_struct_char_info">CharInfo</link> * <link linkend="_lib_2raylib_2src_2text_8c_1ac4e5cca734efa6ff74a3de541f4a7b2c">LoadFontData</link> (const char *fileName, int fontSize, int *fontChars, int charsCount, int <link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_image">Image</link> <link linkend="_lib_2raylib_2src_2text_8c_1a1a78736feb9157aaaf6532d59a3e6ea1">GenImageFontAtlas</link> (const <link linkend="_struct_char_info">CharInfo</link> *chars, <link linkend="_struct_rectangle">Rectangle</link> **charRecs, int charsCount, int fontSize, int padding, int packMethod)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1abaf732c815ab45f012072256766574a4">UnloadFont</link> (<link linkend="_struct_font">Font</link> font)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a7ced13adb512f945c159aa3a7aa6175e">DrawFPS</link> (int posX, int posY)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1ab75e0f9fe436edf4a3aa5abed4df28ca">DrawText</link> (const char *text, int posX, int posY, int fontSize, <link linkend="_struct_color">Color</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a77d92bb1b8f3ae92c9d17c66ded5694a">DrawTextCodepoint</link> (<link linkend="_struct_font">Font</link> font, int codepoint, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, float scale, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1afa48e7e0974c35abf9b50f04e62ed9e7">DrawTextEx</link> (<link linkend="_struct_font">Font</link> font, const char *text, <link linkend="_struct_vector2">Vector2</link> <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a1d812c7918ebecdeadcef593aa1ef63e">DrawTextRec</link> (<link linkend="_struct_font">Font</link> font, const char *text, <link linkend="_struct_rectangle">Rectangle</link> rec, float fontSize, float spacing, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> wordWrap, <link linkend="_struct_color">Color</link> tint)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1aeac476138b141373d327d8b2dfa39ff9">DrawTextRecEx</link> (<link linkend="_struct_font">Font</link> font, const char *text, <link linkend="_struct_rectangle">Rectangle</link> rec, float fontSize, float spacing, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> wordWrap, <link linkend="_struct_color">Color</link> tint, int selectStart, int selectLength, <link linkend="_struct_color">Color</link> selectTint, <link linkend="_struct_color">Color</link> selectBackTint)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1a34469970dc39e965e5aab01140e2932f">MeasureText</link> (const char *text, int fontSize)</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2">Vector2</link> <link linkend="_lib_2raylib_2src_2text_8c_1a4ea62af28450b68a1c99c00a1fc562ca">MeasureTextEx</link> (<link linkend="_struct_font">Font</link> font, const char *text, float fontSize, float spacing)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1a37c1bca5f2d858bf4f0a75788cf537e0">GetGlyphIndex</link> (<link linkend="_struct_font">Font</link> font, int codepoint)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1a2744f3dbfac87e50e85dad25eaacc4b0">TextCopy</link> (char *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a92034251bfd455d524a9b5610cddba00">dst</link>, const char *<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_lib_2raylib_2src_2text_8c_1a27de470afa89a9b701b0167644998d60">TextIsEqual</link> (const char *text1, const char *text2)</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_lib_2raylib_2src_2text_8c_1a5ac8f1891934193dc88fd85f493c3a41">TextLength</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1ac3c593fd4b408dcf52d20d693e8976fc">TextFormat</link> (const char *text,...)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1aac6306c12128752bb0a04a9f2e0b399c">TextSubtext</link> (const char *text, int <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3c8469415bbc83dd1341af15c67f1cef">length</link>)</para>
</listitem>
            <listitem><para>char * <link linkend="_lib_2raylib_2src_2text_8c_1a735836f8830f42ab79ba223c90968df8">TextReplace</link> (char *text, const char *replace, const char *by)</para>
</listitem>
            <listitem><para>char * <link linkend="_lib_2raylib_2src_2text_8c_1a942e58dc390f0fc698844ba73533c05d">TextInsert</link> (const char *text, const char *insert, int <link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1a929ab4dbd523239258ed5f5b05e819e6">TextJoin</link> (const char **textList, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>, const char *delimiter)</para>
</listitem>
            <listitem><para>const char ** <link linkend="_lib_2raylib_2src_2text_8c_1a0020744de71c89efe5ef9739827ffdc5">TextSplit</link> (const char *text, char delimiter, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_lib_2raylib_2src_2text_8c_1a30b12f937ee26c5ff847d62250dc2d2c">TextAppend</link> (char *text, const char *append, int *<link linkend="_main_8cpp_1a76777b356ab2a080225682528119c4fe">position</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1afd90fa13a2612689a6e0d9429ac4d33f">TextFindIndex</link> (const char *text, const char *<link linkend="_toml_8hpp_1a334e40fb57f310a5de10f332f1914bf4">find</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1af9331ca6d77de0c76831f3318b6a12a5">TextToUpper</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1a5ce035033f9eedfa204df83389dd9254">TextToLower</link> (const char *text)</para>
</listitem>
            <listitem><para>const char * <link linkend="_lib_2raylib_2src_2text_8c_1a7882a03c379e5641064258f7d9a2fb23">TextToPascal</link> (const char *text)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1a43640b85ae37b909b4cee50d40d9d534">TextToInteger</link> (const char *text)</para>
</listitem>
            <listitem><para>char * <link linkend="_lib_2raylib_2src_2text_8c_1ac70f582bdd67b210a1280fcc3a1addeb">TextToUtf8</link> (int *codepoints, int <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3c8469415bbc83dd1341af15c67f1cef">length</link>)</para>
</listitem>
            <listitem><para>int * <link linkend="_lib_2raylib_2src_2text_8c_1a5b99070b52872d55538dd6f06ac13d5e">GetCodepoints</link> (const char *text, int *<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1acff5ce90eb415f943628d84ee1db210a">GetCodepointsCount</link> (const char *text)</para>
</listitem>
            <listitem><para>int <link linkend="_lib_2raylib_2src_2text_8c_1ab46ca91757f17dfaf87858d1bdaadb35">GetNextCodepoint</link> (const char *text, int *bytesProcessed)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link> const char * <link linkend="_lib_2raylib_2src_2text_8c_1a769e4a6539d0498afea34a7bce8796aa">CodepointToUtf8</link> (int codepoint, int *byteLength)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ab53403b709717305a8d0a8e692a70de6"/><section>
    <title>BIT_CHECK</title>
<indexterm><primary>BIT_CHECK</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>BIT_CHECK</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> BIT_CHECK( <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,  <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>) &amp; (1<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link> &lt;&lt; (<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)))</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a8112e7a8aade3f9132206c49b9c8da1f"/><section>
    <title>BITMAP_ALPHA_THRESHOLD</title>
<indexterm><primary>BITMAP_ALPHA_THRESHOLD</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>BITMAP_ALPHA_THRESHOLD</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> BITMAP_ALPHA_THRESHOLD&#160;&#160;&#160;80</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a5b769e391cd935d795ce1cf44c2315d4"/><section>
    <title>COLOR_EQUAL</title>
<indexterm><primary>COLOR_EQUAL</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>COLOR_EQUAL</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> COLOR_EQUAL( col1,  col2)&#160;&#160;&#160;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col1.r</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">col2.r</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col1.g</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">col2.g</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col1.b</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">col2.b</link>)&amp;&amp;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col1.a</link> == <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">col2.a</link>))</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1acc7230b502da6ab03552b233a9722416"/><section>
    <title>DEFAULT_FIRST_CHAR</title>
<indexterm><primary>DEFAULT_FIRST_CHAR</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DEFAULT_FIRST_CHAR</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> DEFAULT_FIRST_CHAR&#160;&#160;&#160;32</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a257e9ac41a56598e87ecd32f46e78395"/><section>
    <title>DEFAULT_TTF_FONTSIZE</title>
<indexterm><primary>DEFAULT_TTF_FONTSIZE</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DEFAULT_TTF_FONTSIZE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> DEFAULT_TTF_FONTSIZE&#160;&#160;&#160;32</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1aaed5ddfe18a4f0b52534c6de9c0956af"/><section>
    <title>DEFAULT_TTF_NUMCHARS</title>
<indexterm><primary>DEFAULT_TTF_NUMCHARS</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DEFAULT_TTF_NUMCHARS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> DEFAULT_TTF_NUMCHARS&#160;&#160;&#160;95</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ad4d796b98c583d49e83adabd74a63bf6"/><section>
    <title>MAX_BUFFER_SIZE</title>
<indexterm><primary>MAX_BUFFER_SIZE</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MAX_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_BUFFER_SIZE&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ae788350fc4de6f598f85cb98beeba5b5"/><section>
    <title>MAX_FONTCHARS</title>
<indexterm><primary>MAX_FONTCHARS</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MAX_FONTCHARS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_FONTCHARS&#160;&#160;&#160;256</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a57f856fcad55cb79b60a2125e0c0eb51"/><section>
    <title>MAX_TEXT_BUFFER_LENGTH</title>
<indexterm><primary>MAX_TEXT_BUFFER_LENGTH</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MAX_TEXT_BUFFER_LENGTH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_TEXT_BUFFER_LENGTH&#160;&#160;&#160;1024</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1aec8472dadb8a58d8e40f0aed52e5d51c"/><section>
    <title>MAX_TEXT_UNICODE_CHARS</title>
<indexterm><primary>MAX_TEXT_UNICODE_CHARS</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MAX_TEXT_UNICODE_CHARS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_TEXT_UNICODE_CHARS&#160;&#160;&#160;512</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ae7d1ecc7432b1a99c91be68177bafccd"/><section>
    <title>MAX_TEXTFORMAT_BUFFERS</title>
<indexterm><primary>MAX_TEXTFORMAT_BUFFERS</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MAX_TEXTFORMAT_BUFFERS</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> MAX_TEXTFORMAT_BUFFERS&#160;&#160;&#160;4</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a3748006eb91df1f5fc68bd195f528002"/><section>
    <title>SDF_CHAR_PADDING</title>
<indexterm><primary>SDF_CHAR_PADDING</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>SDF_CHAR_PADDING</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SDF_CHAR_PADDING&#160;&#160;&#160;4</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1afef877a3b6489220d13fd7c5548e3801"/><section>
    <title>SDF_ON_EDGE_VALUE</title>
<indexterm><primary>SDF_ON_EDGE_VALUE</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>SDF_ON_EDGE_VALUE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SDF_ON_EDGE_VALUE&#160;&#160;&#160;128</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a1b5e48b4c5ce96efb8808988783a5f28"/><section>
    <title>SDF_PIXEL_DIST_SCALE</title>
<indexterm><primary>SDF_PIXEL_DIST_SCALE</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>SDF_PIXEL_DIST_SCALE</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> SDF_PIXEL_DIST_SCALE&#160;&#160;&#160;64.0f</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a0791e69f0dcd58efa795dd50eb8c6cd0"/><section>
    <title>STB_RECT_PACK_IMPLEMENTATION</title>
<indexterm><primary>STB_RECT_PACK_IMPLEMENTATION</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>STB_RECT_PACK_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STB_RECT_PACK_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1afaa2f2d0d9d6726cfae6da070e736347"/><section>
    <title>STB_TRUETYPE_IMPLEMENTATION</title>
<indexterm><primary>STB_TRUETYPE_IMPLEMENTATION</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>STB_TRUETYPE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STB_TRUETYPE_IMPLEMENTATION</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1adb252cc9576591994fdf2f89baddc630"/><section>
    <title>STBTT_STATIC</title>
<indexterm><primary>STBTT_STATIC</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>STBTT_STATIC</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> STBTT_STATIC</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a08390593a08abc1965dc352f415a1f90"/><section>
    <title>TEXT_CHARACTER_NOTFOUND</title>
<indexterm><primary>TEXT_CHARACTER_NOTFOUND</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TEXT_CHARACTER_NOTFOUND</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TEXT_CHARACTER_NOTFOUND&#160;&#160;&#160;63</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a96be0ef979be3fc7b15e66e9998a2678"/><section>
    <title>TEXTSPLIT_MAX_SUBSTRINGS_COUNT</title>
<indexterm><primary>TEXTSPLIT_MAX_SUBSTRINGS_COUNT</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TEXTSPLIT_MAX_SUBSTRINGS_COUNT</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TEXTSPLIT_MAX_SUBSTRINGS_COUNT&#160;&#160;&#160;128</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a85dd79b9f0d4eda8105f287e662c8f6e"/><section>
    <title>TEXTSPLIT_MAX_TEXT_BUFFER_LENGTH</title>
<indexterm><primary>TEXTSPLIT_MAX_TEXT_BUFFER_LENGTH</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TEXTSPLIT_MAX_TEXT_BUFFER_LENGTH</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> TEXTSPLIT_MAX_TEXT_BUFFER_LENGTH&#160;&#160;&#160;1024</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a5e697f58a5d806a740bba344b63fe5b6"/><section>
    <title>UNORDERED_CHARSET</title>
<indexterm><primary>UNORDERED_CHARSET</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>UNORDERED_CHARSET</secondary></indexterm>
<para><computeroutput>#<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a1b7950c88593de42a92cc8558f5488f6">define</link> UNORDERED_CHARSET</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a769e4a6539d0498afea34a7bce8796aa"/><section>
    <title>CodepointToUtf8()</title>
<indexterm><primary>CodepointToUtf8</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>CodepointToUtf8</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2external_2rl__gputex_8h_1a9e7a90ce1dc00f769afb0be0a6c7ade7">RLAPI</link> const char * CodepointToUtf8 (int codepoint, int * byteLength)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a7ced13adb512f945c159aa3a7aa6175e"/><section>
    <title>DrawFPS()</title>
<indexterm><primary>DrawFPS</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawFPS</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawFPS (int posX, int posY)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a7ced13adb512f945c159aa3a7aa6175e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ab75e0f9fe436edf4a3aa5abed4df28ca"/><section>
    <title>DrawText()</title>
<indexterm><primary>DrawText</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawText</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawText (const char * text, int posX, int posY, int fontSize, <link linkend="_struct_color">Color</link> color)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_ab75e0f9fe436edf4a3aa5abed4df28ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a77d92bb1b8f3ae92c9d17c66ded5694a"/><section>
    <title>DrawTextCodepoint()</title>
<indexterm><primary>DrawTextCodepoint</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawTextCodepoint</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextCodepoint (<link linkend="_struct_font">Font</link> font, int codepoint, <link linkend="_struct_vector2">Vector2</link> position, float scale, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a77d92bb1b8f3ae92c9d17c66ded5694a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1afa48e7e0974c35abf9b50f04e62ed9e7"/><section>
    <title>DrawTextEx()</title>
<indexterm><primary>DrawTextEx</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawTextEx</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextEx (<link linkend="_struct_font">Font</link> font, const char * text, <link linkend="_struct_vector2">Vector2</link> position, float fontSize, float spacing, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_afa48e7e0974c35abf9b50f04e62ed9e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a1d812c7918ebecdeadcef593aa1ef63e"/><section>
    <title>DrawTextRec()</title>
<indexterm><primary>DrawTextRec</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawTextRec</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextRec (<link linkend="_struct_font">Font</link> font, const char * text, <link linkend="_struct_rectangle">Rectangle</link> rec, float fontSize, float spacing, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> wordWrap, <link linkend="_struct_color">Color</link> tint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a1d812c7918ebecdeadcef593aa1ef63e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1aeac476138b141373d327d8b2dfa39ff9"/><section>
    <title>DrawTextRecEx()</title>
<indexterm><primary>DrawTextRecEx</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>DrawTextRecEx</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> DrawTextRecEx (<link linkend="_struct_font">Font</link> font, const char * text, <link linkend="_struct_rectangle">Rectangle</link> rec, float fontSize, float spacing, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> wordWrap, <link linkend="_struct_color">Color</link> tint, int selectStart, int selectLength, <link linkend="_struct_color">Color</link> selectTint, <link linkend="_struct_color">Color</link> selectBackTint)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_aeac476138b141373d327d8b2dfa39ff9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a1a78736feb9157aaaf6532d59a3e6ea1"/><section>
    <title>GenImageFontAtlas()</title>
<indexterm><primary>GenImageFontAtlas</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GenImageFontAtlas</secondary></indexterm>
<para><computeroutput><link linkend="_struct_image">Image</link> GenImageFontAtlas (const <link linkend="_struct_char_info">CharInfo</link> * chars, <link linkend="_struct_rectangle">Rectangle</link> ** charRecs, int charsCount, int fontSize, int padding, int packMethod)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a1a78736feb9157aaaf6532d59a3e6ea1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a5b99070b52872d55538dd6f06ac13d5e"/><section>
    <title>GetCodepoints()</title>
<indexterm><primary>GetCodepoints</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GetCodepoints</secondary></indexterm>
<para><computeroutput>int * GetCodepoints (const char * text, int * count)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a5b99070b52872d55538dd6f06ac13d5e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1acff5ce90eb415f943628d84ee1db210a"/><section>
    <title>GetCodepointsCount()</title>
<indexterm><primary>GetCodepointsCount</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GetCodepointsCount</secondary></indexterm>
<para><computeroutput>int GetCodepointsCount (const char * text)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_acff5ce90eb415f943628d84ee1db210a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ab0c27a81dd37c596295654a82e201137"/><section>
    <title>GetFontDefault()</title>
<indexterm><primary>GetFontDefault</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GetFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> GetFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a37c1bca5f2d858bf4f0a75788cf537e0"/><section>
    <title>GetGlyphIndex()</title>
<indexterm><primary>GetGlyphIndex</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GetGlyphIndex</secondary></indexterm>
<para><computeroutput>int GetGlyphIndex (<link linkend="_struct_font">Font</link> font, int codepoint)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ab46ca91757f17dfaf87858d1bdaadb35"/><section>
    <title>GetNextCodepoint()</title>
<indexterm><primary>GetNextCodepoint</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>GetNextCodepoint</secondary></indexterm>
<para><computeroutput>int GetNextCodepoint (const char * text, int * bytesProcessed)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a3af0b11c77b23684cd8c95127b39929c"/><section>
    <title>LoadFont()</title>
<indexterm><primary>LoadFont</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>LoadFont</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFont (const char * fileName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a3af0b11c77b23684cd8c95127b39929c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ac4e5cca734efa6ff74a3de541f4a7b2c"/><section>
    <title>LoadFontData()</title>
<indexterm><primary>LoadFontData</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>LoadFontData</secondary></indexterm>
<para><computeroutput><link linkend="_struct_char_info">CharInfo</link> * LoadFontData (const char * fileName, int fontSize, int * fontChars, int charsCount, int type)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_ac4e5cca734efa6ff74a3de541f4a7b2c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a8484fb93b071180266b4e0a4c23fc296"/><section>
    <title>LoadFontDefault()</title>
<indexterm><primary>LoadFontDefault</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>LoadFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> LoadFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )<computeroutput>[extern]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a8484fb93b071180266b4e0a4c23fc296_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ace56777465bba6fe79619d4a82accc79"/><section>
    <title>LoadFontEx()</title>
<indexterm><primary>LoadFontEx</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>LoadFontEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFontEx (const char * fileName, int fontSize, int * fontChars, int charsCount)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_ace56777465bba6fe79619d4a82accc79_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a56705d5b2c3d2c7c9bbeda302142d948"/><section>
    <title>LoadFontFromImage()</title>
<indexterm><primary>LoadFontFromImage</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>LoadFontFromImage</secondary></indexterm>
<para><computeroutput><link linkend="_struct_font">Font</link> LoadFontFromImage (<link linkend="_struct_image">Image</link> image, <link linkend="_struct_color">Color</link> key, int firstChar)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a56705d5b2c3d2c7c9bbeda302142d948_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a34469970dc39e965e5aab01140e2932f"/><section>
    <title>MeasureText()</title>
<indexterm><primary>MeasureText</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MeasureText</secondary></indexterm>
<para><computeroutput>int MeasureText (const char * text, int fontSize)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a34469970dc39e965e5aab01140e2932f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a4ea62af28450b68a1c99c00a1fc562ca"/><section>
    <title>MeasureTextEx()</title>
<indexterm><primary>MeasureTextEx</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>MeasureTextEx</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2">Vector2</link> MeasureTextEx (<link linkend="_struct_font">Font</link> font, const char * text, float fontSize, float spacing)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a4ea62af28450b68a1c99c00a1fc562ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a30b12f937ee26c5ff847d62250dc2d2c"/><section>
    <title>TextAppend()</title>
<indexterm><primary>TextAppend</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextAppend</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> TextAppend (char * text, const char * append, int * position)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a30b12f937ee26c5ff847d62250dc2d2c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a2744f3dbfac87e50e85dad25eaacc4b0"/><section>
    <title>TextCopy()</title>
<indexterm><primary>TextCopy</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextCopy</secondary></indexterm>
<para><computeroutput>int TextCopy (char * dst, const char * src)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1afd90fa13a2612689a6e0d9429ac4d33f"/><section>
    <title>TextFindIndex()</title>
<indexterm><primary>TextFindIndex</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextFindIndex</secondary></indexterm>
<para><computeroutput>int TextFindIndex (const char * text, const char * find)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_afd90fa13a2612689a6e0d9429ac4d33f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ac3c593fd4b408dcf52d20d693e8976fc"/><section>
    <title>TextFormat()</title>
<indexterm><primary>TextFormat</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextFormat</secondary></indexterm>
<para><computeroutput>const char * TextFormat (const char * text,  ...)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a942e58dc390f0fc698844ba73533c05d"/><section>
    <title>TextInsert()</title>
<indexterm><primary>TextInsert</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextInsert</secondary></indexterm>
<para><computeroutput>char * TextInsert (const char * text, const char * insert, int position)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a942e58dc390f0fc698844ba73533c05d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a27de470afa89a9b701b0167644998d60"/><section>
    <title>TextIsEqual()</title>
<indexterm><primary>TextIsEqual</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextIsEqual</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> TextIsEqual (const char * text1, const char * text2)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a929ab4dbd523239258ed5f5b05e819e6"/><section>
    <title>TextJoin()</title>
<indexterm><primary>TextJoin</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextJoin</secondary></indexterm>
<para><computeroutput>const char * TextJoin (const char ** textList, int count, const char * delimiter)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a929ab4dbd523239258ed5f5b05e819e6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a5ac8f1891934193dc88fd85f493c3a41"/><section>
    <title>TextLength()</title>
<indexterm><primary>TextLength</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextLength</secondary></indexterm>
<para><computeroutput>unsigned int TextLength (const char * text)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a735836f8830f42ab79ba223c90968df8"/><section>
    <title>TextReplace()</title>
<indexterm><primary>TextReplace</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextReplace</secondary></indexterm>
<para><computeroutput>char * TextReplace (char * text, const char * replace, const char * by)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a735836f8830f42ab79ba223c90968df8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a0020744de71c89efe5ef9739827ffdc5"/><section>
    <title>TextSplit()</title>
<indexterm><primary>TextSplit</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextSplit</secondary></indexterm>
<para><computeroutput>const char ** TextSplit (const char * text, char delimiter, int * count)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1aac6306c12128752bb0a04a9f2e0b399c"/><section>
    <title>TextSubtext()</title>
<indexterm><primary>TextSubtext</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextSubtext</secondary></indexterm>
<para><computeroutput>const char * TextSubtext (const char * text, int position, int length)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_aac6306c12128752bb0a04a9f2e0b399c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a43640b85ae37b909b4cee50d40d9d534"/><section>
    <title>TextToInteger()</title>
<indexterm><primary>TextToInteger</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextToInteger</secondary></indexterm>
<para><computeroutput>int TextToInteger (const char * text)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a5ce035033f9eedfa204df83389dd9254"/><section>
    <title>TextToLower()</title>
<indexterm><primary>TextToLower</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextToLower</secondary></indexterm>
<para><computeroutput>const char * TextToLower (const char * text)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a7882a03c379e5641064258f7d9a2fb23"/><section>
    <title>TextToPascal()</title>
<indexterm><primary>TextToPascal</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextToPascal</secondary></indexterm>
<para><computeroutput>const char * TextToPascal (const char * text)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1af9331ca6d77de0c76831f3318b6a12a5"/><section>
    <title>TextToUpper()</title>
<indexterm><primary>TextToUpper</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextToUpper</secondary></indexterm>
<para><computeroutput>const char * TextToUpper (const char * text)</computeroutput></para></section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1ac70f582bdd67b210a1280fcc3a1addeb"/><section>
    <title>TextToUtf8()</title>
<indexterm><primary>TextToUtf8</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>TextToUtf8</secondary></indexterm>
<para><computeroutput>char * TextToUtf8 (int * codepoints, int length)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_ac70f582bdd67b210a1280fcc3a1addeb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1abaf732c815ab45f012072256766574a4"/><section>
    <title>UnloadFont()</title>
<indexterm><primary>UnloadFont</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>UnloadFont</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadFont (<link linkend="_struct_font">Font</link> font)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_abaf732c815ab45f012072256766574a4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_lib_2raylib_2src_2text_8c_1a24ffb11e46b52a9706555b02ccbc19da"/><section>
    <title>UnloadFontDefault()</title>
<indexterm><primary>UnloadFontDefault</primary><secondary>text.c</secondary></indexterm>
<indexterm><primary>text.c</primary><secondary>UnloadFontDefault</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> UnloadFontDefault (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )<computeroutput>[extern]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lib_2raylib_2src_2text_8c_a24ffb11e46b52a9706555b02ccbc19da_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
