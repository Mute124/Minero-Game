<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2deps_2mingw_2xinput_8h_source" xml:lang="en-US">
<title>xinput.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/raylib/src/external/glfw/deps/mingw/xinput.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;*&#32;The&#32;Wine&#32;project&#32;-&#32;Xinput&#32;Joystick&#32;Library</emphasis>
3 <emphasis role="comment">&#32;*&#32;Copyright&#32;2008&#32;Andrew&#32;Fenn</emphasis>
4 <emphasis role="comment">&#32;*</emphasis>
5 <emphasis role="comment">&#32;*&#32;This&#32;library&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or</emphasis>
6 <emphasis role="comment">&#32;*&#32;modify&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;Lesser&#32;General&#32;Public</emphasis>
7 <emphasis role="comment">&#32;*&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either</emphasis>
8 <emphasis role="comment">&#32;*&#32;version&#32;2.1&#32;of&#32;the&#32;License,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment">&#32;*</emphasis>
10 <emphasis role="comment">&#32;*&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;*&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;*&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
13 <emphasis role="comment">&#32;*&#32;Lesser&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment">&#32;*</emphasis>
15 <emphasis role="comment">&#32;*&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;Lesser&#32;General&#32;Public</emphasis>
16 <emphasis role="comment">&#32;*&#32;License&#32;along&#32;with&#32;this&#32;library;&#32;if&#32;not,&#32;write&#32;to&#32;the&#32;Free&#32;Software</emphasis>
17 <emphasis role="comment">&#32;*&#32;Foundation,&#32;Inc.,&#32;51&#32;Franklin&#32;St,&#32;Fifth&#32;Floor,&#32;Boston,&#32;MA&#32;02110-1301,&#32;USA</emphasis>
18 <emphasis role="comment">&#32;*/</emphasis>
19 
20 <emphasis role="preprocessor">#ifndef&#32;__WINE_XINPUT_H</emphasis>
21 <emphasis role="preprocessor">#define&#32;__WINE_XINPUT_H</emphasis>
22 
23 <emphasis role="preprocessor">#include&#32;&lt;windef.h&gt;</emphasis>
24 
25 <emphasis role="comment">/*</emphasis>
26 <emphasis role="comment">&#32;*&#32;Bitmasks&#32;for&#32;the&#32;joysticks&#32;buttons,&#32;determines&#32;what&#32;has</emphasis>
27 <emphasis role="comment">&#32;*&#32;been&#32;pressed&#32;on&#32;the&#32;joystick,&#32;these&#32;need&#32;to&#32;be&#32;mapped</emphasis>
28 <emphasis role="comment">&#32;*&#32;to&#32;whatever&#32;device&#32;you&apos;re&#32;using&#32;instead&#32;of&#32;an&#32;xbox&#32;360</emphasis>
29 <emphasis role="comment">&#32;*&#32;joystick</emphasis>
30 <emphasis role="comment">&#32;*/</emphasis>
31 
32 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_DPAD_UP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
33 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_DPAD_DOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0002</emphasis>
34 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_DPAD_LEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0004</emphasis>
35 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_DPAD_RIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0008</emphasis>
36 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_START&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0010</emphasis>
37 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_BACK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0020</emphasis>
38 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_LEFT_THUMB&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0040</emphasis>
39 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_RIGHT_THUMB&#32;&#32;&#32;&#32;&#32;&#32;0x0080</emphasis>
40 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_LEFT_SHOULDER&#32;&#32;&#32;&#32;0x0100</emphasis>
41 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_RIGHT_SHOULDER&#32;&#32;&#32;0x0200</emphasis>
42 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_A&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1000</emphasis>
43 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x2000</emphasis>
44 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_X&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x4000</emphasis>
45 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_Y&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8000</emphasis>
46 
47 <emphasis role="comment">/*</emphasis>
48 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;flags&#32;used&#32;to&#32;determine&#32;if&#32;the&#32;user&#32;is&#32;pushing</emphasis>
49 <emphasis role="comment">&#32;*&#32;down&#32;on&#32;a&#32;button,&#32;not&#32;holding&#32;a&#32;button,&#32;etc</emphasis>
50 <emphasis role="comment">&#32;*/</emphasis>
51 
52 <emphasis role="preprocessor">#define&#32;XINPUT_KEYSTROKE_KEYDOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
53 <emphasis role="preprocessor">#define&#32;XINPUT_KEYSTROKE_KEYUP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0002</emphasis>
54 <emphasis role="preprocessor">#define&#32;XINPUT_KEYSTROKE_REPEAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0004</emphasis>
55 
56 <emphasis role="comment">/*</emphasis>
57 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;codes&#32;which&#32;are&#32;returned&#32;by&#32;XInputGetKeystroke</emphasis>
58 <emphasis role="comment">&#32;*/</emphasis>
59 
60 <emphasis role="preprocessor">#define&#32;VK_PAD_A&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5800</emphasis>
61 <emphasis role="preprocessor">#define&#32;VK_PAD_B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5801</emphasis>
62 <emphasis role="preprocessor">#define&#32;VK_PAD_X&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5802</emphasis>
63 <emphasis role="preprocessor">#define&#32;VK_PAD_Y&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5803</emphasis>
64 <emphasis role="preprocessor">#define&#32;VK_PAD_RSHOULDER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5804</emphasis>
65 <emphasis role="preprocessor">#define&#32;VK_PAD_LSHOULDER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5805</emphasis>
66 <emphasis role="preprocessor">#define&#32;VK_PAD_LTRIGGER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5806</emphasis>
67 <emphasis role="preprocessor">#define&#32;VK_PAD_RTRIGGER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5807</emphasis>
68 <emphasis role="preprocessor">#define&#32;VK_PAD_DPAD_UP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5810</emphasis>
69 <emphasis role="preprocessor">#define&#32;VK_PAD_DPAD_DOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5811</emphasis>
70 <emphasis role="preprocessor">#define&#32;VK_PAD_DPAD_LEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5812</emphasis>
71 <emphasis role="preprocessor">#define&#32;VK_PAD_DPAD_RIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5813</emphasis>
72 <emphasis role="preprocessor">#define&#32;VK_PAD_START&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5814</emphasis>
73 <emphasis role="preprocessor">#define&#32;VK_PAD_BACK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5815</emphasis>
74 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_PRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5816</emphasis>
75 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_PRESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5817</emphasis>
76 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_UP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5820</emphasis>
77 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_DOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5821</emphasis>
78 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_RIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5822</emphasis>
79 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_LEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5823</emphasis>
80 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_UPLEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5824</emphasis>
81 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_UPRIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5825</emphasis>
82 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_DOWNRIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5826</emphasis>
83 <emphasis role="preprocessor">#define&#32;VK_PAD_LTHUMB_DOWNLEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5827</emphasis>
84 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_UP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5830</emphasis>
85 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_DOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5831</emphasis>
86 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_RIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5832</emphasis>
87 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_LEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5833</emphasis>
88 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_UPLEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5834</emphasis>
89 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_UPRIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5835</emphasis>
90 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_DOWNRIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5836</emphasis>
91 <emphasis role="preprocessor">#define&#32;VK_PAD_RTHUMB_DOWNLEFT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5837</emphasis>
92 
93 <emphasis role="comment">/*</emphasis>
94 <emphasis role="comment">&#32;*&#32;Deadzones&#32;are&#32;for&#32;analogue&#32;joystick&#32;controls&#32;on&#32;the&#32;joypad</emphasis>
95 <emphasis role="comment">&#32;*&#32;which&#32;determine&#32;when&#32;input&#32;should&#32;be&#32;assumed&#32;to&#32;be&#32;in&#32;the</emphasis>
96 <emphasis role="comment">&#32;*&#32;middle&#32;of&#32;the&#32;pad.&#32;This&#32;is&#32;a&#32;threshold&#32;to&#32;stop&#32;a&#32;joypad</emphasis>
97 <emphasis role="comment">&#32;*&#32;controlling&#32;the&#32;game&#32;when&#32;the&#32;player&#32;isn&apos;t&#32;touching&#32;the</emphasis>
98 <emphasis role="comment">&#32;*&#32;controls.</emphasis>
99 <emphasis role="comment">&#32;*/</emphasis>
100 
101 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE&#32;&#32;7849</emphasis>
102 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_RIGHT_THUMB_DEADZONE&#32;8689</emphasis>
103 <emphasis role="preprocessor">#define&#32;XINPUT_GAMEPAD_TRIGGER_THRESHOLD&#32;&#32;&#32;&#32;30</emphasis>
104 
105 
106 <emphasis role="comment">/*</emphasis>
107 <emphasis role="comment">&#32;*&#32;Defines&#32;what&#32;type&#32;of&#32;abilities&#32;the&#32;type&#32;of&#32;joystick&#32;has</emphasis>
108 <emphasis role="comment">&#32;*&#32;DEVTYPE_GAMEPAD&#32;is&#32;available&#32;for&#32;all&#32;joysticks,&#32;however</emphasis>
109 <emphasis role="comment">&#32;*&#32;there&#32;may&#32;be&#32;more&#32;specific&#32;identifiers&#32;for&#32;other&#32;joysticks</emphasis>
110 <emphasis role="comment">&#32;*&#32;which&#32;are&#32;being&#32;used.</emphasis>
111 <emphasis role="comment">&#32;*/</emphasis>
112 
113 <emphasis role="preprocessor">#define&#32;XINPUT_DEVTYPE_GAMEPAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
114 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_GAMEPAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
115 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_WHEEL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x02</emphasis>
116 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_ARCADE_STICK&#32;&#32;0x03</emphasis>
117 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_FLIGHT_SICK&#32;&#32;&#32;0x04</emphasis>
118 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_DANCE_PAD&#32;&#32;&#32;&#32;&#32;0x05</emphasis>
119 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_GUITAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x06</emphasis>
120 <emphasis role="preprocessor">#define&#32;XINPUT_DEVSUBTYPE_DRUM_KIT&#32;&#32;&#32;&#32;&#32;&#32;0x08</emphasis>
121 
122 <emphasis role="comment">/*</emphasis>
123 <emphasis role="comment">&#32;*&#32;These&#32;are&#32;used&#32;with&#32;the&#32;XInputGetCapabilities&#32;function&#32;to</emphasis>
124 <emphasis role="comment">&#32;*&#32;determine&#32;the&#32;abilities&#32;to&#32;the&#32;joystick&#32;which&#32;has&#32;been</emphasis>
125 <emphasis role="comment">&#32;*&#32;plugged&#32;in.</emphasis>
126 <emphasis role="comment">&#32;*/</emphasis>
127 
128 <emphasis role="preprocessor">#define&#32;XINPUT_CAPS_VOICE_SUPPORTED&#32;&#32;&#32;&#32;&#32;0x0004</emphasis>
129 <emphasis role="preprocessor">#define&#32;XINPUT_FLAG_GAMEPAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00000001</emphasis>
130 
131 <emphasis role="comment">/*</emphasis>
132 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;status&#32;of&#32;the&#32;battery&#32;if&#32;one&#32;is&#32;used&#32;in&#32;the</emphasis>
133 <emphasis role="comment">&#32;*&#32;attached&#32;joystick.&#32;The&#32;first&#32;two&#32;define&#32;if&#32;the&#32;joystick</emphasis>
134 <emphasis role="comment">&#32;*&#32;supports&#32;a&#32;battery.&#32;Disconnected&#32;means&#32;that&#32;the&#32;joystick</emphasis>
135 <emphasis role="comment">&#32;*&#32;isn&apos;t&#32;connected.&#32;Wired&#32;shows&#32;that&#32;the&#32;joystick&#32;is&#32;a&#32;wired</emphasis>
136 <emphasis role="comment">&#32;*&#32;joystick.</emphasis>
137 <emphasis role="comment">&#32;*/</emphasis>
138 
139 <emphasis role="preprocessor">#define&#32;BATTERY_DEVTYPE_GAMEPAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
140 <emphasis role="preprocessor">#define&#32;BATTERY_DEVTYPE_HEADSET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
141 <emphasis role="preprocessor">#define&#32;BATTERY_TYPE_DISCONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
142 <emphasis role="preprocessor">#define&#32;BATTERY_TYPE_WIRED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
143 <emphasis role="preprocessor">#define&#32;BATTERY_TYPE_ALKALINE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x02</emphasis>
144 <emphasis role="preprocessor">#define&#32;BATTERY_TYPE_NIMH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x03</emphasis>
145 <emphasis role="preprocessor">#define&#32;BATTERY_TYPE_UNKNOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFF</emphasis>
146 <emphasis role="preprocessor">#define&#32;BATTERY_LEVEL_EMPTY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00</emphasis>
147 <emphasis role="preprocessor">#define&#32;BATTERY_LEVEL_LOW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x01</emphasis>
148 <emphasis role="preprocessor">#define&#32;BATTERY_LEVEL_MEDIUM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x02</emphasis>
149 <emphasis role="preprocessor">#define&#32;BATTERY_LEVEL_FULL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x03</emphasis>
150 
151 <emphasis role="comment">/*</emphasis>
152 <emphasis role="comment">&#32;*&#32;How&#32;many&#32;joysticks&#32;can&#32;be&#32;used&#32;with&#32;this&#32;library.&#32;Games&#32;that</emphasis>
153 <emphasis role="comment">&#32;*&#32;use&#32;the&#32;xinput&#32;library&#32;will&#32;not&#32;go&#32;over&#32;this&#32;number.</emphasis>
154 <emphasis role="comment">&#32;*/</emphasis>
155 
156 <emphasis role="preprocessor">#define&#32;XUSER_MAX_COUNT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;4</emphasis>
157 <emphasis role="preprocessor">#define&#32;XUSER_INDEX_ANY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x000000FF</emphasis>
158 
159 <emphasis role="comment">/*</emphasis>
160 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;structure&#32;of&#32;an&#32;xbox&#32;360&#32;joystick.</emphasis>
161 <emphasis role="comment">&#32;*/</emphasis>
162 
163 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d">_XINPUT_GAMEPAD</link>&#32;{
164 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>;
165 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a50480b9dd5f9d0f5db9d47358c66b0da">bLeftTrigger</link>;
166 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a065347fca7403ff5c399b21af5a0e1f3">bRightTrigger</link>;
167 &#32;&#32;&#32;&#32;SHORT&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1acab2d1e1bda5277f4cbd9abdf6b82066">sThumbLX</link>;
168 &#32;&#32;&#32;&#32;SHORT&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1ad0c91ee8c26e828438bacb475f9c5ec3">sThumbLY</link>;
169 &#32;&#32;&#32;&#32;SHORT&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1ae6c4c141613af0574fc86a40fdf14405">sThumbRX</link>;
170 &#32;&#32;&#32;&#32;SHORT&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a89660a58eda7e822d44abbe1af7aea3b">sThumbRY</link>;
171 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a0e062156ccca45e440e5c04a710bad4f">XINPUT_GAMEPAD</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a5bb9ebcd3ebd2fa55a3cada866e3d62b">PXINPUT_GAMEPAD</link>;
172 
173 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e">_XINPUT_STATE</link>&#32;{
174 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1ab2439a9094e92032ce57a3692e4c2e5e">dwPacketNumber</link>;
175 &#32;&#32;&#32;&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d">XINPUT_GAMEPAD</link>&#32;<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>;
176 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a0627b327913f1bc398ae904fc980e74c">XINPUT_STATE</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a68243e992246e393085eac246cbb8060">PXINPUT_STATE</link>;
177 
178 <emphasis role="comment">/*</emphasis>
179 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;structure&#32;of&#32;how&#32;much&#32;vibration&#32;is&#32;set&#32;on&#32;both&#32;the</emphasis>
180 <emphasis role="comment">&#32;*&#32;right&#32;and&#32;left&#32;motors&#32;in&#32;a&#32;joystick.&#32;If&#32;you&apos;re&#32;not&#32;using&#32;a&#32;360</emphasis>
181 <emphasis role="comment">&#32;*&#32;joystick&#32;you&#32;will&#32;have&#32;to&#32;map&#32;these&#32;to&#32;your&#32;device.</emphasis>
182 <emphasis role="comment">&#32;*/</emphasis>
183 
184 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n">_XINPUT_VIBRATION</link>&#32;{
185 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n_1a6ce4ae9b5c5ac18dc476f7e5098e0661">wLeftMotorSpeed</link>;
186 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n_1a0e06981a411d51f7b107863f8d92bfcb">wRightMotorSpeed</link>;
187 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a073488a7b804766fea0cf4885bd18d83">XINPUT_VIBRATION</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a2148fc98a293302b07133590e81f8625">PXINPUT_VIBRATION</link>;
188 
189 <emphasis role="comment">/*</emphasis>
190 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;structure&#32;for&#32;what&#32;kind&#32;of&#32;abilities&#32;the&#32;joystick&#32;has</emphasis>
191 <emphasis role="comment">&#32;*&#32;such&#32;abilities&#32;are&#32;things&#32;such&#32;as&#32;if&#32;the&#32;joystick&#32;has&#32;the&#32;ability</emphasis>
192 <emphasis role="comment">&#32;*&#32;to&#32;send&#32;and&#32;receive&#32;audio,&#32;if&#32;the&#32;joystick&#32;is&#32;in&#32;fact&#32;a&#32;driving</emphasis>
193 <emphasis role="comment">&#32;*&#32;wheel&#32;or&#32;perhaps&#32;if&#32;the&#32;joystick&#32;is&#32;some&#32;kind&#32;of&#32;dance&#32;pad&#32;or</emphasis>
194 <emphasis role="comment">&#32;*&#32;guitar.</emphasis>
195 <emphasis role="comment">&#32;*/</emphasis>
196 
197 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s">_XINPUT_CAPABILITIES</link>&#32;{
198 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s_1aebd4bc7d89a584060bae91095e701710">Type</link>;
199 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s_1ab686f41df1cb509eebda27f84c76faa1">SubType</link>;
200 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s_1af3e5697dec6976b9fe19832528461b54">Flags</link>;
201 &#32;&#32;&#32;&#32;<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d">XINPUT_GAMEPAD</link>&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s_1a616f63856159601b68de30f107c810f5">Gamepad</link>;
202 &#32;&#32;&#32;&#32;<link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n">XINPUT_VIBRATION</link>&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s_1a0202876df8a4467d284266e725b8256d">Vibration</link>;
203 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1acf54f59fb9d30352c7016615d997ee42">XINPUT_CAPABILITIES</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a038db0a553c6d00134bb98570b3f5407">PXINPUT_CAPABILITIES</link>;
204 
205 <emphasis role="comment">/*</emphasis>
206 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;structure&#32;for&#32;a&#32;joystick&#32;input&#32;event&#32;which&#32;is</emphasis>
207 <emphasis role="comment">&#32;*&#32;retrieved&#32;using&#32;the&#32;function&#32;XInputGetKeystroke</emphasis>
208 <emphasis role="comment">&#32;*/</emphasis>
209 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e">_XINPUT_KEYSTROKE</link>&#32;{
210 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e_1ab47bde7950a6d99b87f8cfe896b60c82">VirtualKey</link>;
211 &#32;&#32;&#32;&#32;WCHAR&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e_1aaa16bd0ba9849fc4be79f3d5ebc01e25">Unicode</link>;
212 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e_1a3bd348da2bd2ce5d16f70b9ae5cbcd7b">Flags</link>;
213 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e_1ae749b05e8fa58ef8699ad857f631f161">UserIndex</link>;
214 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e_1a432d7fc2814d61ae3d210eb1254c4589">HidCode</link>;
215 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1af13635c21248b8d2ca36fcba46aba2cb">XINPUT_KEYSTROKE</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a16d44cd5cf4529d07197119bee990be7">PXINPUT_KEYSTROKE</link>;
216 
217 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct___x_i_n_p_u_t___b_a_t_t_e_r_y___i_n_f_o_r_m_a_t_i_o_n">_XINPUT_BATTERY_INFORMATION</link>
218 {
219 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___b_a_t_t_e_r_y___i_n_f_o_r_m_a_t_i_o_n_1a4b2dca8424bb237f4f4c68a93d4225ca">BatteryType</link>;
220 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_struct___x_i_n_p_u_t___b_a_t_t_e_r_y___i_n_f_o_r_m_a_t_i_o_n_1a2fed4d1573d0b38752d32b0d3666259d">BatteryLevel</link>;
221 }&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a72505c641a06433296303395d4c78a9b">XINPUT_BATTERY_INFORMATION</link>,&#32;*<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1ab6dc7da9d6f9a2bbd454b380fa2ad817">PXINPUT_BATTERY_INFORMATION</link>;
222 
223 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
224 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
225 <emphasis role="preprocessor">#endif</emphasis>
226 
227 <emphasis role="keywordtype">void</emphasis>&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a63f633c86e82b56ebb4c4a0fd82fa707">XInputEnable</link>(WINBOOL);
228 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a170e8f60fba3d7f62aed3ed46acd289a">XInputSetState</link>(DWORD,&#32;<link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n">XINPUT_VIBRATION</link>*);
229 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1a3ae78a5ed579475a7cce56af08fb4b51">XInputGetState</link>(DWORD,&#32;<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e">XINPUT_STATE</link>*);
230 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a6de0b5b609da653ae0b99bb2017daafc">XInputGetKeystroke</link>(DWORD,&#32;DWORD,&#32;<link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e">PXINPUT_KEYSTROKE</link>);
231 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__platform_8h_1af9394dae29c2b796b68e4746e8a30064">XInputGetCapabilities</link>(DWORD,&#32;DWORD,&#32;<link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s">XINPUT_CAPABILITIES</link>*);
232 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a8750720de5beb6df800c800353abc7a5">XInputGetDSoundAudioDeviceGuids</link>(DWORD,&#32;GUID*,&#32;GUID*);
233 DWORD&#32;WINAPI&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2mingw_2xinput_8h_1a7ecfd0b841b0312e63b6bd6490f91a4f">XInputGetBatteryInformation</link>(DWORD,&#32;BYTE,&#32;<link linkend="_struct___x_i_n_p_u_t___b_a_t_t_e_r_y___i_n_f_o_r_m_a_t_i_o_n">XINPUT_BATTERY_INFORMATION</link>*);
234 
235 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
236 }
237 <emphasis role="preprocessor">#endif</emphasis>
238 
239 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__WINE_XINPUT_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
