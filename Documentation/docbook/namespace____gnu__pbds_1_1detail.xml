<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace____gnu__pbds_1_1detail" xml:lang="en-US">
<title>__gnu_pbds::detail Namespace Reference</title>
<indexterm><primary>__gnu_pbds::detail</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert">__static_assert</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert_3_01true_01_4">__static_assert&lt; true &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert__dumclass">__static_assert_dumclass</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__const__it__">bin_search_tree_const_it_</link></para>

<para>Const iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__const__node__it__">bin_search_tree_const_node_it_</link></para>

<para>Const node iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__it__">bin_search_tree_it_</link></para>

<para>Iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__node__it__">bin_search_tree_node_it_</link></para>

<para>Node iterator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1bin__search__tree__traits">bin_search_tree_traits</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1bin__search__tree__traits_3_01_key_00_01null__type_00_01_cmp___49ad61e3916baca090a936f717e6da25">bin_search_tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, Node, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">binary_heap_const_iterator_</link></para>

<para>Const point-type iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link></para>

<para>Const point-type iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap">binomial_heap</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base">binomial_heap_base</link></para>

<para>Base class for binomial heap. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy">branch_policy</link></para>

<para>Primary template, base class for branch structure policies. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_3_01_node___c_itr_00_01_node___c_itr_00_01___alloc_01_4">branch_policy&lt; Node_CItr, Node_CItr, _Alloc &gt;</link></para>

<para>Specialization for const iterators. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1cond__dealtor">cond_dealtor</link></para>

<para>Conditional dey destructor, cc_hash. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch">container_base_dispatch</link></para>

<para>Dispatch mechanism, primary template for associative types. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al37861ffb0528b90cab369d8b8960163c">container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, binary_heap_tag, null_type &gt;</link></para>

<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al19c216fe3a86010e73492807b4354cfa">container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, binomial_heap_tag, null_type &gt;</link></para>

<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap">binomial_heap</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___alc29b69f8068aa2441994f87aebbb3279">container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, pairing_heap_tag, null_type &gt;</link></para>

<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1pairing__heap">pairing_heap</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___alf98c308f678ad23dcebe3688d3927a3d">container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, rc_binomial_heap_tag, null_type &gt;</link></para>

<para>Specialization for rc_binary_heap. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al953aead33394a76b1192f354b74b6676">container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, thin_heap_tag, null_type &gt;</link></para>

<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1thin__heap">thin_heap</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0c752f7a6a0630d25cc5d2b6e76c497aa">container_base_dispatch&lt; Key, Mapped, _Alloc, cc_hash_tag, Policy_Tl &gt;</link></para>

<para>Specialization colision-chaining hash map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_039aeaebdf9e76fd54f1f510fe3ce8c82">container_base_dispatch&lt; Key, Mapped, _Alloc, gp_hash_tag, Policy_Tl &gt;</link></para>

<para>Specialization general-probe hash map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_01589d62579bd19ab70472fda7714567c">container_base_dispatch&lt; Key, Mapped, _Alloc, list_update_tag, Policy_Tl &gt;</link></para>

<para>Specialization for list-update map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0ff23436d829fea3451deed72617ea958">container_base_dispatch&lt; Key, Mapped, _Alloc, ov_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization ordered-vector tree map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0df9e72aaa3ae6262ab36aa6ae0a0fdff">container_base_dispatch&lt; Key, Mapped, _Alloc, pat_trie_tag, Policy_Tl &gt;</link></para>

<para>Specialization for PATRICIA trie map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_05cb6d4796a494537901eb4b008e59a67">container_base_dispatch&lt; Key, Mapped, _Alloc, rb_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization for R-B tree map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0ac163f881c6e7b815b35febcc9434b88">container_base_dispatch&lt; Key, Mapped, _Alloc, splay_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization splay tree map. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo86b341bcb1e6df4cdbc8f2aa018eab0e">container_base_dispatch&lt; Key, null_type, _Alloc, cc_hash_tag, Policy_Tl &gt;</link></para>

<para>Specialization colision-chaining hash set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo4b80034740337ccfa0b06f47a9bcbcee">container_base_dispatch&lt; Key, null_type, _Alloc, gp_hash_tag, Policy_Tl &gt;</link></para>

<para>Specialization general-probe hash set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo4fcd243a5c57ee5b9b3e68f910a01f94">container_base_dispatch&lt; Key, null_type, _Alloc, list_update_tag, Policy_Tl &gt;</link></para>

<para>Specialization for list-update set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo12def814d176af14fee3c1966fb721cb">container_base_dispatch&lt; Key, null_type, _Alloc, ov_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization ordered-vector tree set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___alloba4932bd6cb51c8a5c1665e03c380a02">container_base_dispatch&lt; Key, null_type, _Alloc, pat_trie_tag, Policy_Tl &gt;</link></para>

<para>Specialization for PATRICIA trie set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allod8211a08e2f3440aa0b1da1b634b4458">container_base_dispatch&lt; Key, null_type, _Alloc, rb_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization for R-B tree set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo3904b579c8b740d90bafd5850b8839f6">container_base_dispatch&lt; Key, null_type, _Alloc, splay_tree_tag, Policy_Tl &gt;</link></para>

<para>Specialization splay tree set. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__comb__hash__fn">default_comb_hash_fn</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__comb__hash__fn">default_comb_hash_fn</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn">default_eq_fn</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn">default_eq_fn</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__hash__fn">default_hash_fn</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__hash__fn">default_hash_fn</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn">default_probe_fn</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn">default_probe_fn</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy">default_resize_policy</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy">default_resize_policy</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link></para>

<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits_3_01____dtrie__string_01_4">default_trie_access_traits&lt; __dtrie_string &gt;</link></para>

<para>Partial specialization, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1default__update__policy">default_update_policy</link></para>

<para>Default update policy. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1dumnode__const__iterator">dumnode_const_iterator</link></para>

<para>Constant node iterator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp">entry_cmp</link></para>

<para>Entry compare, primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp_3_01___v_tp_00_01_cmp___fn_00_01___alloc_00_01false_01_4">entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, false &gt;</link></para>

<para>Specialization, false. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp_3_01___v_tp_00_01_cmp___fn_00_01___alloc_00_01true_01_4">entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, true &gt;</link></para>

<para>Specialization, true. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred">entry_pred</link></para>

<para>Entry predicate primary class template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred_3_01___v_tp_00_01_pred_00_01___alloc_00_01false_01_4">entry_pred&lt; _VTp, Pred, _Alloc, false &gt;</link></para>

<para>Specialization, false. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred_3_01___v_tp_00_01_pred_00_01___alloc_00_01true_01_4">entry_pred&lt; _VTp, Pred, _Alloc, true &gt;</link></para>

<para>Specialization, true. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1eq__by__less">eq_by_less</link></para>

<para>Equivalence function. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn">hash_eq_fn</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4">hash_eq_fn&lt; Key, Eq_Fn, _Alloc, false &gt;</link></para>

<para>Specialization 1 - The client requests that hash values not be stored. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4">hash_eq_fn&lt; Key, Eq_Fn, _Alloc, true &gt;</link></para>

<para>Specialization 2 - The client requests that hash values be stored. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base">hash_load_check_resize_trigger_size_base</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base_3_01_size___type_00_01false_01_4">hash_load_check_resize_trigger_size_base&lt; Size_Type, false &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base_3_01_size___type_00_01true_01_4">hash_load_check_resize_trigger_size_base&lt; Size_Type, true &gt;</link></para>

<para>Specializations. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__pointer">is_const_pointer</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__reference">is_const_reference</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1is__pair">is_pair</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple">is_simple</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap">left_child_next_sibling_heap</link></para>

<para>Base class for a basic heap. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">left_child_next_sibling_heap_const_iterator_</link></para>

<para>Const point-type iterator. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__">left_child_next_sibling_heap_node_</link></para>

<para>Node. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node___3_01___value_00_01null__type_00_01___alloc_01_4">left_child_next_sibling_heap_node_&lt; _Value, null_type, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">left_child_next_sibling_heap_node_point_const_iterator_</link></para>

<para>Const point-type iterator. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">lu_counter_metadata</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base">lu_counter_policy_base</link></para>

<para>Base class for list-update counter policy. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1lu__map__entry__metadata__base">lu_map_entry_metadata_base</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1lu__map__entry__metadata__base_3_01null__type_01_4">lu_map_entry_metadata_base&lt; null_type &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1mask__based__range__hashing">mask_based_range_hashing</link></para>

<para>Range hashing policy. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type">maybe_null_type</link></para>

<para>Base class for conditionally defining a static data member. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type_3_01_key_00_01null__type_00_01___alloc_00_01_store___hash_01_4">maybe_null_type&lt; Key, null_type, _Alloc, Store_Hash &gt;</link></para>

<para>Specialization that defines a static data member of type <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1mod__based__range__hashing">mod_based_range_hashing</link></para>

<para>Mod based range hashing. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">no_throw_copies</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_3_01_key_00_01null__type_01_4">no_throw_copies&lt; Key, null_type &gt;</link></para>

<para>Specialization. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it__">ov_tree_node_const_it_</link></para>

<para>Const node reference. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it__">ov_tree_node_it_</link></para>

<para>Node reference. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1pairing__heap">pairing_heap</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base">pat_trie_base</link></para>

<para>Base type for PATRICIA trees. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___b_i_n___t_r_e_e___n_a_m_e">PB_DS_BIN_TREE_NAME</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___c_c___h_a_s_h___n_a_m_e">PB_DS_CC_HASH_NAME</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e">PB_DS_GP_HASH_NAME</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e">PB_DS_LU_NAME</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e">PB_DS_OV_TREE_NAME</link></para>

<para>Ordered-vector tree associative-container. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___p_a_t___t_r_i_e___n_a_m_e">PB_DS_PAT_TRIE_NAME</link></para>

<para>PATRICIA trie. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___r_b___t_r_e_e___n_a_m_e">PB_DS_RB_TREE_NAME</link></para>

<para>Red-Black tree. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___s___t_r_e_e___n_a_m_e">PB_DS_S_TREE_NAME</link></para>

<para>Splay tree. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1probe__fn__base">probe_fn_base</link></para>

<para>Probe functor base. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn">ranged_hash_fn</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_comb___hash___fn_00_01false_01_4">ranged_hash_fn&lt; Key, Hash_Fn, _Alloc, Comb_Hash_Fn, false &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_comb___hash___fn_00_01true_01_4">ranged_hash_fn&lt; Key, Hash_Fn, _Alloc, Comb_Hash_Fn, true &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01null__type_00_01___alloc_00_01_comb___hash___fn_00_01false_01_4">ranged_hash_fn&lt; Key, null_type, _Alloc, Comb_Hash_Fn, false &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01null__type_00_01___alloc_00_01_comb___hash___fn_00_01true_01_4">ranged_hash_fn&lt; Key, null_type, _Alloc, Comb_Hash_Fn, true &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn">ranged_probe_fn</link></para>

<para>Primary template. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_cc5f8c4f004b12eafc2f870bb2b345e11">ranged_probe_fn&lt; Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, false &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_c234843087a0b873cc0910104278cc54f">ranged_probe_fn&lt; Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, true &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01null__type_00_01___alloc_00_01_c26e19c6c0e9846f8683c6652cec3830a">ranged_probe_fn&lt; Key, null_type, _Alloc, Comb_Probe_Fn, null_type, false &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node__">rb_tree_node_</link></para>

<para>Node for Red-Black trees. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4">rb_tree_node_&lt; Value_Type, null_type, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1rc">rc</link></para>

<para>Redundant binary counter. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1rc__binomial__heap">rc_binomial_heap</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link></para>

<para>Consistent API for accessing allocator-related types. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1resize__policy">resize_policy</link></para>

<para>Resize policy for binary heap. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">select_value_type</link></para>

<para>Choose value_type to be a key/value pair or just a key. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_3_01_key_00_01null__type_01_4">select_value_type&lt; Key, null_type &gt;</link></para>

<para>Specialization for sets where the key is the value_type. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node__">splay_tree_node_</link></para>

<para>Node for splay tree. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4">splay_tree_node_&lt; Value_Type, null_type, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">stored_data</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data_3_01___tv_00_01___th_00_01false_01_4">stored_data&lt; _Tv, _Th, false &gt;</link></para>

<para>Specialization for representation of stored data of just value type. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash">stored_hash</link></para>

<para>Stored hash. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value">stored_value</link></para>

<para>Stored value. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits">synth_access_traits</link></para>

<para>Synthetic element access traits. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1thin__heap">thin_heap</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper">tree_metadata_helper</link></para>

<para>Tree metadata helper. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper_3_01_node___update_00_01false_01_4">tree_metadata_helper&lt; Node_Update, false &gt;</link></para>

<para>Specialization, false. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper_3_01_node___update_00_01true_01_4">tree_metadata_helper&lt; Node_Update, true &gt;</link></para>

<para>Specialization, true. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__node__metadata__dispatch">tree_node_metadata_dispatch</link></para>

<para>Tree node metadata dispatch. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits">tree_traits</link></para>

<para>Tree traits class, primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___7573835b518f91503254b61ac23808ce">tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, ov_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___f22a7942096bb47f6a7111700874e1f6">tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, rb_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___26b21387ed160cceb1091d3889e53d96">tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, splay_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_node753c935fd9711897c9ea34c1189d6642">tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, ov_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_node626532b8a769e9bba6ca4c3095dac6a1">tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, rb_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_nodeb5a8487663e07918b7e743b42f3518f6">tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, splay_tree_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper">trie_metadata_helper</link></para>

<para>Trie metadata helper. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper_3_01_node___update_00_01false_01_4">trie_metadata_helper&lt; Node_Update, false &gt;</link></para>

<para>Specialization, false. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper_3_01_node___update_00_01true_01_4">trie_metadata_helper&lt; Node_Update, true &gt;</link></para>

<para>Specialization, true. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__node__metadata__dispatch">trie_node_metadata_dispatch</link></para>

<para>Trie node metadata dispatch. </para>
</listitem>
            <listitem><para>class <link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">trie_policy_base</link></para>

<para>Base class for trie policies. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits">trie_traits</link></para>

<para>Trie traits class, primary template. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits_3_01_key_00_01_mapped_00_01___a_traits_00_01_node_17394f8c64929197e3ad992a397a083a">trie_traits&lt; Key, Mapped, _ATraits, Node_Update, pat_trie_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits_3_01_key_00_01null__type_00_01___a_traits_00_01_noa6336b7950021ab828e2dade00ad8cfd">trie_traits&lt; Key, null_type, _ATraits, Node_Update, pat_trie_tag, _Alloc &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">type_to_type</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">types_traits</link></para>

<para>Traits for abstract types. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef std::tr1::integral_constant&lt; int, 1 &gt; <link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link></para>
</listitem>
            <listitem><para>typedef std::tr1::integral_constant&lt; int, 0 &gt; <link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866">default_store_hash</link> = false
 }</para>

<para>Enumeration for default behavior of stored hash data. </para>
</listitem>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630">num_distinct_rank_bounds</link> = 48
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866">default_store_hash</link> = false
 }</para>

<para>Enumeration for default behavior of stored hash data. </para>
</listitem>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630">num_distinct_rank_bounds</link> = 48
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866">default_store_hash</link> = false
 }</para>

<para>Enumeration for default behavior of stored hash data. </para>
</listitem>
            <listitem><para>enum { <link linkend="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630">num_distinct_rank_bounds</link> = 48
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55"/><section>
    <title>false_type</title>
<indexterm><primary>false_type</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>false_type</secondary></indexterm>
<para><computeroutput>typedef std::tr1::integral_constant&lt; int, 0 &gt; <link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">__gnu_pbds::detail::false_type</link></computeroutput></para></section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1"/><section>
    <title>true_type</title>
<indexterm><primary>true_type</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>true_type</secondary></indexterm>
<para><computeroutput>typedef std::tr1::integral_constant&lt; int, 1 &gt; <link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">__gnu_pbds::detail::true_type</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><para>

<para>Enumeration for default behavior of stored hash data. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>default_store_hash</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>default_store_hash</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866"/>default_store_hash</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>num_distinct_rank_bounds</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>num_distinct_rank_bounds</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630"/>num_distinct_rank_bounds</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1ae4c97053333bc659715c63bf39dc833b"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><para>

<para>Enumeration for default behavior of stored hash data. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>default_store_hash</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>default_store_hash</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866"/>default_store_hash</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a46e4db662857001d0791f5d75e6a2b7f"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>num_distinct_rank_bounds</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>num_distinct_rank_bounds</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630"/>num_distinct_rank_bounds</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1af318c02108f3ec461fea87bdf6667afb"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><para>

<para>Enumeration for default behavior of stored hash data. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>default_store_hash</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>default_store_hash</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a8a0ec0e94222f6b7f579d83c73c3b821afad0cb803f5bf7b313cfc6e3c689b866"/>default_store_hash</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a88bcb9b810048afb18bf7fdece695278"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>num_distinct_rank_bounds</primary><secondary>__gnu_pbds::detail</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail</primary><secondary>num_distinct_rank_bounds</secondary></indexterm>
<anchor xml:id="_namespace____gnu__pbds_1_1detail_1a75fb9f6cb19d78aef283f055a8230d36a3e332c792291a8b732dbc4f861f12630"/>num_distinct_rank_bounds</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
</section>
