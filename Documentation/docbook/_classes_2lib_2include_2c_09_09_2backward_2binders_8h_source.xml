<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2backward_2binders_8h_source" xml:lang="en-US">
<title>binders.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/backward/binders.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Functor&#32;implementations&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2001-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">/*</emphasis>
26 <emphasis role="comment">&#32;*</emphasis>
27 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;1994</emphasis>
28 <emphasis role="comment">&#32;*&#32;Hewlett-Packard&#32;Company</emphasis>
29 <emphasis role="comment">&#32;*</emphasis>
30 <emphasis role="comment">&#32;*&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;distribute&#32;and&#32;sell&#32;this&#32;software</emphasis>
31 <emphasis role="comment">&#32;*&#32;and&#32;its&#32;documentation&#32;for&#32;any&#32;purpose&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,</emphasis>
32 <emphasis role="comment">&#32;*&#32;provided&#32;that&#32;the&#32;above&#32;copyright&#32;notice&#32;appear&#32;in&#32;all&#32;copies&#32;and</emphasis>
33 <emphasis role="comment">&#32;*&#32;that&#32;both&#32;that&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;appear</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;supporting&#32;documentation.&#32;&#32;Hewlett-Packard&#32;Company&#32;makes&#32;no</emphasis>
35 <emphasis role="comment">&#32;*&#32;representations&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
36 <emphasis role="comment">&#32;*&#32;purpose.&#32;&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied&#32;warranty.</emphasis>
37 <emphasis role="comment">&#32;*</emphasis>
38 <emphasis role="comment">&#32;*</emphasis>
39 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;1996-1998</emphasis>
40 <emphasis role="comment">&#32;*&#32;Silicon&#32;Graphics&#32;Computer&#32;Systems,&#32;Inc.</emphasis>
41 <emphasis role="comment">&#32;*</emphasis>
42 <emphasis role="comment">&#32;*&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;distribute&#32;and&#32;sell&#32;this&#32;software</emphasis>
43 <emphasis role="comment">&#32;*&#32;and&#32;its&#32;documentation&#32;for&#32;any&#32;purpose&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,</emphasis>
44 <emphasis role="comment">&#32;*&#32;provided&#32;that&#32;the&#32;above&#32;copyright&#32;notice&#32;appear&#32;in&#32;all&#32;copies&#32;and</emphasis>
45 <emphasis role="comment">&#32;*&#32;that&#32;both&#32;that&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;appear</emphasis>
46 <emphasis role="comment">&#32;*&#32;in&#32;supporting&#32;documentation.&#32;&#32;Silicon&#32;Graphics&#32;makes&#32;no</emphasis>
47 <emphasis role="comment">&#32;*&#32;representations&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
48 <emphasis role="comment">&#32;*&#32;purpose.&#32;&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied&#32;warranty.</emphasis>
49 <emphasis role="comment">&#32;*/</emphasis>
50 
56 <emphasis role="preprocessor">#ifndef&#32;_BACKWARD_BINDERS_H</emphasis>
57 <emphasis role="preprocessor">#define&#32;_BACKWARD_BINDERS_H&#32;1</emphasis>
58 
59 <emphasis role="comment">//&#32;Suppress&#32;deprecated&#32;warning&#32;for&#32;this&#32;file.</emphasis>
60 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;push</emphasis>
61 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;ignored&#32;&quot;-Wdeprecated-declarations&quot;</emphasis>
62 
63 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
64 {
65 _GLIBCXX_BEGIN_NAMESPACE_VERSION
66 
67 &#32;&#32;<emphasis role="comment">//&#32;20.3.6&#32;binders</emphasis>
106 
107 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Operation&gt;
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>binder1st
109 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;unary_function&lt;typename&#32;_Operation::second_argument_type,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Operation::result_type&gt;
111 &#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
113 &#32;&#32;&#32;&#32;&#32;&#32;_Operation&#32;op;
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::first_argument_type&#32;<link linkend="_classvalue">value</link>;
115 
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
117 &#32;&#32;&#32;&#32;&#32;&#32;binder1st(<emphasis role="keyword">const</emphasis>&#32;_Operation&amp;&#32;__x,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::first_argument_type&amp;&#32;__y)
119 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;op(__x),&#32;<link linkend="_classvalue">value</link>(__y)&#32;{&#32;}
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::result_type
122 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::second_argument_type&amp;&#32;__x)<emphasis role="keyword">&#32;const</emphasis>
123 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;op(<link linkend="_classvalue">value</link>,&#32;__x);&#32;}
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;109.&#32;&#32;Missing&#32;binders&#32;for&#32;non-const&#32;sequence&#32;elements</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::result_type
128 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">typename</emphasis>&#32;_Operation::second_argument_type&amp;&#32;__x)<emphasis role="keyword">&#32;const</emphasis>
129 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;op(<link linkend="_classvalue">value</link>,&#32;__x);&#32;}
130 &#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a227f63a23a506856d08dcd7ea5fa8085">_GLIBCXX11_DEPRECATED_SUGGEST</link>(<emphasis role="stringliteral">&quot;std::bind&quot;</emphasis>);
131 
133 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Operation,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
134 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a227f63a23a506856d08dcd7ea5fa8085">_GLIBCXX11_DEPRECATED_SUGGEST</link>(<emphasis role="stringliteral">&quot;std::bind&quot;</emphasis>)
135 &#32;&#32;&#32;&#32;inline&#32;binder1st&lt;_Operation&gt;
136 &#32;&#32;&#32;&#32;bind1st(const&#32;_Operation&amp;&#32;__fn,&#32;const&#32;_Tp&amp;&#32;__x)
137 &#32;&#32;&#32;&#32;{
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::first_argument_type&#32;_Arg1_type;
139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;binder1st&lt;_Operation&gt;(__fn,&#32;_Arg1_type(__x));
140 &#32;&#32;&#32;&#32;}
141 
143 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Operation&gt;
144 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>binder2nd
145 &#32;&#32;&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;unary_function&lt;typename&#32;_Operation::first_argument_type,
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Operation::result_type&gt;
147 &#32;&#32;&#32;&#32;{
148 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
149 &#32;&#32;&#32;&#32;&#32;&#32;_Operation&#32;op;
150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::second_argument_type&#32;<link linkend="_classvalue">value</link>;
151 
152 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
153 &#32;&#32;&#32;&#32;&#32;&#32;binder2nd(<emphasis role="keyword">const</emphasis>&#32;_Operation&amp;&#32;__x,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::second_argument_type&amp;&#32;__y)
155 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;op(__x),&#32;<link linkend="_classvalue">value</link>(__y)&#32;{&#32;}
156 
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::result_type
158 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::first_argument_type&amp;&#32;__x)<emphasis role="keyword">&#32;const</emphasis>
159 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;op(__x,&#32;<link linkend="_classvalue">value</link>);&#32;}
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;_GLIBCXX_RESOLVE_LIB_DEFECTS</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;109.&#32;&#32;Missing&#32;binders&#32;for&#32;non-const&#32;sequence&#32;elements</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::result_type
164 &#32;&#32;&#32;&#32;&#32;&#32;operator()(<emphasis role="keyword">typename</emphasis>&#32;_Operation::first_argument_type&amp;&#32;__x)<emphasis role="keyword">&#32;const</emphasis>
165 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;op(__x,&#32;<link linkend="_classvalue">value</link>);&#32;}
166 &#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a227f63a23a506856d08dcd7ea5fa8085">_GLIBCXX11_DEPRECATED_SUGGEST</link>(<emphasis role="stringliteral">&quot;std::bind&quot;</emphasis>);
167 
169 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_Operation,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
170 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a227f63a23a506856d08dcd7ea5fa8085">_GLIBCXX11_DEPRECATED_SUGGEST</link>(<emphasis role="stringliteral">&quot;std::bind&quot;</emphasis>)
171 &#32;&#32;&#32;&#32;inline&#32;binder2nd&lt;_Operation&gt;
172 &#32;&#32;&#32;&#32;bind2nd(const&#32;_Operation&amp;&#32;__fn,&#32;const&#32;_Tp&amp;&#32;__x)
173 &#32;&#32;&#32;&#32;{
174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Operation::second_argument_type&#32;_Arg2_type;
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;binder2nd&lt;_Operation&gt;(__fn,&#32;_Arg2_type(__x));
176 &#32;&#32;&#32;&#32;}&#32;
179 _GLIBCXX_END_NAMESPACE_VERSION
180 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
181 
182 <emphasis role="preprocessor">#pragma&#32;GCC&#32;diagnostic&#32;pop</emphasis>
183 
184 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_BACKWARD_BINDERS_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
