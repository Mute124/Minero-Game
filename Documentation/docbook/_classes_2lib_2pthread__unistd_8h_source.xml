<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2pthread__unistd_8h_source" xml:lang="en-US">
<title>pthread_unistd.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/pthread_unistd.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;Copyright&#32;(c)&#32;2011-2016&#32;&#32;mingw-w64&#32;project</emphasis>
3 <emphasis role="comment"></emphasis>
4 <emphasis role="comment">&#32;&#32;&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a</emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;copy&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;to&#32;deal&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;rights&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;and/or&#32;sell&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the</emphasis>
9 <emphasis role="comment">&#32;&#32;&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
10 <emphasis role="comment"></emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
13 <emphasis role="comment"></emphasis>
14 <emphasis role="comment">&#32;&#32;&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
18 <emphasis role="comment">&#32;&#32;&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING</emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
21 <emphasis role="comment">*/</emphasis>
22 
23 <emphasis role="preprocessor">#ifndef&#32;WIN_PTHREADS_UNISTD_H</emphasis>
24 <emphasis role="preprocessor">#define&#32;WIN_PTHREADS_UNISTD_H</emphasis>
25 
26 <emphasis role="comment">/*&#32;Set&#32;defines&#32;described&#32;by&#32;the&#32;POSIX&#32;Threads&#32;Extension&#32;(1003.1c-1995)&#32;*/</emphasis>
27 <emphasis role="comment">/*&#32;_SC_THREADS</emphasis>
28 <emphasis role="comment">&#32;&#32;Basic&#32;support&#32;for&#32;POSIX&#32;threads&#32;is&#32;available.&#32;The&#32;functions</emphasis>
29 <emphasis role="comment"></emphasis>
30 <emphasis role="comment">&#32;&#32;pthread_atfork(),</emphasis>
31 <emphasis role="comment">&#32;&#32;pthread_attr_destroy(),</emphasis>
32 <emphasis role="comment">&#32;&#32;pthread_attr_getdetachstate(),</emphasis>
33 <emphasis role="comment">&#32;&#32;pthread_attr_getschedparam(),</emphasis>
34 <emphasis role="comment">&#32;&#32;pthread_attr_init(),</emphasis>
35 <emphasis role="comment">&#32;&#32;pthread_attr_setdetachstate(),</emphasis>
36 <emphasis role="comment">&#32;&#32;pthread_attr_setschedparam(),</emphasis>
37 <emphasis role="comment">&#32;&#32;pthread_cancel(),</emphasis>
38 <emphasis role="comment">&#32;&#32;pthread_cleanup_push(),</emphasis>
39 <emphasis role="comment">&#32;&#32;pthread_cleanup_pop(),</emphasis>
40 <emphasis role="comment">&#32;&#32;pthread_cond_broadcast(),</emphasis>
41 <emphasis role="comment">&#32;&#32;pthread_cond_destroy(),</emphasis>
42 <emphasis role="comment">&#32;&#32;pthread_cond_init(),</emphasis>
43 <emphasis role="comment">&#32;&#32;pthread_cond_signal(),</emphasis>
44 <emphasis role="comment">&#32;&#32;pthread_cond_timedwait(),</emphasis>
45 <emphasis role="comment">&#32;&#32;pthread_cond_wait(),</emphasis>
46 <emphasis role="comment">&#32;&#32;pthread_condattr_destroy(),</emphasis>
47 <emphasis role="comment">&#32;&#32;pthread_condattr_init(),</emphasis>
48 <emphasis role="comment">&#32;&#32;pthread_create(),</emphasis>
49 <emphasis role="comment">&#32;&#32;pthread_detach(),</emphasis>
50 <emphasis role="comment">&#32;&#32;pthread_equal(),</emphasis>
51 <emphasis role="comment">&#32;&#32;pthread_exit(),</emphasis>
52 <emphasis role="comment">&#32;&#32;pthread_getspecific(),</emphasis>
53 <emphasis role="comment">&#32;&#32;pthread_join(,</emphasis>
54 <emphasis role="comment">&#32;&#32;pthread_key_create(),</emphasis>
55 <emphasis role="comment">&#32;&#32;pthread_key_delete(),</emphasis>
56 <emphasis role="comment">&#32;&#32;pthread_mutex_destroy(),</emphasis>
57 <emphasis role="comment">&#32;&#32;pthread_mutex_init(),</emphasis>
58 <emphasis role="comment">&#32;&#32;pthread_mutex_lock(),</emphasis>
59 <emphasis role="comment">&#32;&#32;pthread_mutex_trylock(),</emphasis>
60 <emphasis role="comment">&#32;&#32;pthread_mutex_unlock(),</emphasis>
61 <emphasis role="comment">&#32;&#32;pthread_mutexattr_destroy(),</emphasis>
62 <emphasis role="comment">&#32;&#32;pthread_mutexattr_init(),</emphasis>
63 <emphasis role="comment">&#32;&#32;pthread_once(),</emphasis>
64 <emphasis role="comment">&#32;&#32;pthread_rwlock_destroy(),</emphasis>
65 <emphasis role="comment">&#32;&#32;pthread_rwlock_init(),</emphasis>
66 <emphasis role="comment">&#32;&#32;pthread_rwlock_rdlock(),</emphasis>
67 <emphasis role="comment">&#32;&#32;pthread_rwlock_tryrdlock(),</emphasis>
68 <emphasis role="comment">&#32;&#32;pthread_rwlock_trywrlock(),</emphasis>
69 <emphasis role="comment">&#32;&#32;pthread_rwlock_unlock(),</emphasis>
70 <emphasis role="comment">&#32;&#32;pthread_rwlock_wrlock(),</emphasis>
71 <emphasis role="comment">&#32;&#32;pthread_rwlockattr_destroy(),</emphasis>
72 <emphasis role="comment">&#32;&#32;pthread_rwlockattr_init(),</emphasis>
73 <emphasis role="comment">&#32;&#32;pthread_self(),</emphasis>
74 <emphasis role="comment">&#32;&#32;pthread_setcancelstate(),</emphasis>
75 <emphasis role="comment">&#32;&#32;pthread_setcanceltype(),</emphasis>
76 <emphasis role="comment">&#32;&#32;pthread_setspecific(),</emphasis>
77 <emphasis role="comment">&#32;&#32;pthread_testcancel()</emphasis>
78 <emphasis role="comment"></emphasis>
79 <emphasis role="comment">&#32;&#32;are&#32;present.&#32;*/</emphasis>
80 <emphasis role="preprocessor">#undef&#32;_POSIX_THREADS</emphasis>
81 <emphasis role="preprocessor">#define&#32;_POSIX_THREADS&#32;200112L</emphasis>
82 
83 <emphasis role="comment">/*&#32;_SC_READER_WRITER_LOCKS</emphasis>
84 <emphasis role="comment">&#32;&#32;This&#32;option&#32;implies&#32;the&#32;_POSIX_THREADS&#32;option.&#32;Conversely,&#32;under</emphasis>
85 <emphasis role="comment">&#32;&#32;POSIX&#32;1003.1-2001&#32;the&#32;_POSIX_THREADS&#32;option&#32;implies&#32;this&#32;option.</emphasis>
86 <emphasis role="comment"></emphasis>
87 <emphasis role="comment">&#32;&#32;The&#32;functions</emphasis>
88 <emphasis role="comment">&#32;&#32;pthread_rwlock_destroy(),</emphasis>
89 <emphasis role="comment">&#32;&#32;pthread_rwlock_init(),</emphasis>
90 <emphasis role="comment">&#32;&#32;pthread_rwlock_rdlock(),</emphasis>
91 <emphasis role="comment">&#32;&#32;pthread_rwlock_tryrdlock(),</emphasis>
92 <emphasis role="comment">&#32;&#32;pthread_rwlock_trywrlock(),</emphasis>
93 <emphasis role="comment">&#32;&#32;pthread_rwlock_unlock(),</emphasis>
94 <emphasis role="comment">&#32;&#32;pthread_rwlock_wrlock(),</emphasis>
95 <emphasis role="comment">&#32;&#32;pthread_rwlockattr_destroy(),</emphasis>
96 <emphasis role="comment">&#32;&#32;pthread_rwlockattr_init()</emphasis>
97 <emphasis role="comment"></emphasis>
98 <emphasis role="comment">&#32;&#32;are&#32;present.</emphasis>
99 <emphasis role="comment">*/</emphasis>
100 <emphasis role="preprocessor">#undef&#32;_POSIX_READER_WRITER_LOCKS</emphasis>
101 <emphasis role="preprocessor">#define&#32;_POSIX_READER_WRITER_LOCKS&#32;200112L</emphasis>
102 
103 <emphasis role="comment">/*&#32;_SC_SPIN_LOCKS</emphasis>
104 <emphasis role="comment">&#32;&#32;This&#32;option&#32;implies&#32;the&#32;_POSIX_THREADS&#32;and&#32;_POSIX_THREAD_SAFE_FUNCTIONS</emphasis>
105 <emphasis role="comment">&#32;&#32;options.&#32;The&#32;functions</emphasis>
106 <emphasis role="comment"></emphasis>
107 <emphasis role="comment">&#32;&#32;pthread_spin_destroy(),</emphasis>
108 <emphasis role="comment">&#32;&#32;pthread_spin_init(),</emphasis>
109 <emphasis role="comment">&#32;&#32;pthread_spin_lock(),</emphasis>
110 <emphasis role="comment">&#32;&#32;pthread_spin_trylock(),</emphasis>
111 <emphasis role="comment">&#32;&#32;pthread_spin_unlock()</emphasis>
112 <emphasis role="comment"></emphasis>
113 <emphasis role="comment">&#32;&#32;are&#32;present.&#32;*/</emphasis>
114 <emphasis role="preprocessor">#undef&#32;_POSIX_SPIN_LOCKS</emphasis>
115 <emphasis role="preprocessor">#define&#32;_POSIX_SPIN_LOCKS&#32;200112L</emphasis>
116 
117 <emphasis role="comment">/*&#32;_SC_BARRIERS</emphasis>
118 <emphasis role="comment">&#32;&#32;This&#32;option&#32;implies&#32;the&#32;_POSIX_THREADS&#32;and&#32;_POSIX_THREAD_SAFE_FUNCTIONS</emphasis>
119 <emphasis role="comment">&#32;&#32;options.&#32;The&#32;functions</emphasis>
120 <emphasis role="comment"></emphasis>
121 <emphasis role="comment">&#32;&#32;pthread_barrier_destroy(),</emphasis>
122 <emphasis role="comment">&#32;&#32;pthread_barrier_init(),</emphasis>
123 <emphasis role="comment">&#32;&#32;pthread_barrier_wait(),</emphasis>
124 <emphasis role="comment">&#32;&#32;pthread_barrierattr_destroy(),</emphasis>
125 <emphasis role="comment">&#32;&#32;pthread_barrierattr_init()</emphasis>
126 <emphasis role="comment"></emphasis>
127 <emphasis role="comment">&#32;&#32;are&#32;present.</emphasis>
128 <emphasis role="comment">*/</emphasis>
129 <emphasis role="preprocessor">#undef&#32;_POSIX_BARRIERS</emphasis>
130 <emphasis role="preprocessor">#define&#32;_POSIX_BARRIERS&#32;200112L</emphasis>
131 
132 <emphasis role="comment">/*&#32;_SC_TIMEOUTS</emphasis>
133 <emphasis role="comment">&#32;&#32;The&#32;functions</emphasis>
134 <emphasis role="comment"></emphasis>
135 <emphasis role="comment">&#32;&#32;mq_timedreceive(),&#32;-&#32;not&#32;supported</emphasis>
136 <emphasis role="comment">&#32;&#32;mq_timedsend(),&#32;-&#32;not&#32;supported</emphasis>
137 <emphasis role="comment">&#32;&#32;posix_trace_timedgetnext_event(),&#32;-&#32;not&#32;supported</emphasis>
138 <emphasis role="comment">&#32;&#32;pthread_mutex_timedlock(),</emphasis>
139 <emphasis role="comment">&#32;&#32;pthread_rwlock_timedrdlock(),</emphasis>
140 <emphasis role="comment">&#32;&#32;pthread_rwlock_timedwrlock(),</emphasis>
141 <emphasis role="comment">&#32;&#32;sem_timedwait(),</emphasis>
142 <emphasis role="comment"></emphasis>
143 <emphasis role="comment">&#32;&#32;are&#32;present.&#32;*/</emphasis>
144 <emphasis role="preprocessor">#undef&#32;_POSIX_TIMEOUTS</emphasis>
145 <emphasis role="preprocessor">#define&#32;_POSIX_TIMEOUTS&#32;200112L</emphasis>
146 
147 <emphasis role="comment">/*&#32;_SC_TIMERS&#32;-&#32;not&#32;supported</emphasis>
148 <emphasis role="comment">&#32;&#32;The&#32;functions</emphasis>
149 <emphasis role="comment"></emphasis>
150 <emphasis role="comment">&#32;&#32;clock_getres(),</emphasis>
151 <emphasis role="comment">&#32;&#32;clock_gettime(),</emphasis>
152 <emphasis role="comment">&#32;&#32;clock_settime(),</emphasis>
153 <emphasis role="comment">&#32;&#32;nanosleep(),</emphasis>
154 <emphasis role="comment">&#32;&#32;timer_create(),</emphasis>
155 <emphasis role="comment">&#32;&#32;timer_delete(),</emphasis>
156 <emphasis role="comment">&#32;&#32;timer_gettime(),</emphasis>
157 <emphasis role="comment">&#32;&#32;timer_getoverrun(),</emphasis>
158 <emphasis role="comment">&#32;&#32;timer_settime()</emphasis>
159 <emphasis role="comment"></emphasis>
160 <emphasis role="comment">&#32;&#32;are&#32;present.&#32;&#32;*/</emphasis>
161 <emphasis role="comment">/*&#32;#undef&#32;_POSIX_TIMERS&#32;*/</emphasis>
162 
163 <emphasis role="comment">/*&#32;_SC_CLOCK_SELECTION</emphasis>
164 <emphasis role="comment">&#32;&#32;&#32;This&#32;option&#32;implies&#32;the&#32;_POSIX_TIMERS&#32;option.&#32;The&#32;functions</emphasis>
165 <emphasis role="comment"></emphasis>
166 <emphasis role="comment">&#32;&#32;&#32;pthread_condattr_getclock(),</emphasis>
167 <emphasis role="comment">&#32;&#32;&#32;pthread_condattr_setclock(),</emphasis>
168 <emphasis role="comment">&#32;&#32;&#32;clock_nanosleep()</emphasis>
169 <emphasis role="comment"></emphasis>
170 <emphasis role="comment">&#32;&#32;&#32;are&#32;present.</emphasis>
171 <emphasis role="comment">*/</emphasis>
172 <emphasis role="preprocessor">#undef&#32;_POSIX_CLOCK_SELECTION</emphasis>
173 <emphasis role="preprocessor">#define&#32;_POSIX_CLOCK_SELECTION&#32;200112</emphasis>
174 
175 <emphasis role="comment">/*&#32;_SC_SEMAPHORES</emphasis>
176 <emphasis role="comment">&#32;&#32;The&#32;include&#32;file&#32;&lt;semaphore.h&gt;&#32;is&#32;present.&#32;The&#32;functions</emphasis>
177 <emphasis role="comment"></emphasis>
178 <emphasis role="comment">&#32;&#32;sem_close(),</emphasis>
179 <emphasis role="comment">&#32;&#32;sem_destroy(),</emphasis>
180 <emphasis role="comment">&#32;&#32;sem_getvalue(),</emphasis>
181 <emphasis role="comment">&#32;&#32;sem_init(),</emphasis>
182 <emphasis role="comment">&#32;&#32;sem_open(),</emphasis>
183 <emphasis role="comment">&#32;&#32;sem_post(),</emphasis>
184 <emphasis role="comment">&#32;&#32;sem_trywait(),</emphasis>
185 <emphasis role="comment">&#32;&#32;sem_unlink(),</emphasis>
186 <emphasis role="comment">&#32;&#32;sem_wait()</emphasis>
187 <emphasis role="comment"></emphasis>
188 <emphasis role="comment">&#32;&#32;are&#32;present.&#32;*/</emphasis>
189 <emphasis role="preprocessor">#undef&#32;_POSIX_SEMAPHORES</emphasis>
190 <emphasis role="preprocessor">#define&#32;_POSIX_SEMAPHORES&#32;200112</emphasis>
191 
192 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;WIN_PTHREADS_UNISTD_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
