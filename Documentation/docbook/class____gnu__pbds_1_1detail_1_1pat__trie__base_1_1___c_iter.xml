<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter" xml:lang="en-US">
<title>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary></indexterm>
<para>

<para>Const iterator. </para>
 
</para>
<para>
<computeroutput>#include &lt;pat_trie_base.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9">type_traits</link></para>
</listitem>
            <listitem><para>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9">iterator_category</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066">difference_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442">value_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd">pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999">reference</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6">leaf_const_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Head &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be">head_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Inode &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f">inode_pointer</link></para>
</listitem>
            <listitem><para>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8">inode_iterator</link></para>
</listitem>
            <listitem><para>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9">type_traits</link></para>
</listitem>
            <listitem><para>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9">iterator_category</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066">difference_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442">value_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd">pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999">reference</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6">leaf_const_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Head &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be">head_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Inode &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f">inode_pointer</link></para>
</listitem>
            <listitem><para>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8">inode_iterator</link></para>
</listitem>
            <listitem><para>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link></para>
</listitem>
            <listitem><para>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9">type_traits</link></para>
</listitem>
            <listitem><para>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9">iterator_category</link></para>
</listitem>
            <listitem><para>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066">difference_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442">value_type</link></para>
</listitem>
            <listitem><para>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd">pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999">reference</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link></para>
</listitem>
            <listitem><para>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Node &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Leaf &gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6">leaf_const_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Head &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be">head_pointer</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>, Inode &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f">inode_pointer</link></para>
</listitem>
            <listitem><para>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8">inode_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1">_CIter</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd=0)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da">_CIter</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701">operator=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc">operator=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf">operator--</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1">_CIter</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd=0)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da">_CIter</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701">operator=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc">operator=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf">operator--</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1">_CIter</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd=0)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da">_CIter</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701">operator=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc">operator=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf">operator-&gt;</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05">operator*</link> () const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c">operator==</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba">operator==</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b">operator!=</link> (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700">operator!=</link> (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf">operator--</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b">operator--</link> (int)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a054eba43f11628a1b551e46b5a6ff428">m_p_nd</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68">inc</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e">dec</link> (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12">get_larger_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64">get_smaller_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf">leftmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782">rightmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12">get_larger_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64">get_smaller_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf">leftmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782">rightmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12">get_larger_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64">get_smaller_sibling</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf">leftmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
            <listitem><para>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782">rightmost_descendant</link> (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Node, typename Leaf, typename Head, typename Inode, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt;<?linebreak?>class __gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</title></simplesect>

<para>Const iterator. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1"/><section>
    <title>_Alloc<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_Alloc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_Alloc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_Alloc</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1"/><section>
    <title>_Alloc<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_Alloc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_Alloc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_Alloc</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1"/><section>
    <title>_Alloc<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_Alloc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_Alloc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c">allocator_type</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_Alloc</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c"/><section>
    <title>allocator_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c"/><section>
    <title>allocator_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6e0e1d832a7e56026a8a4e7ace04666c"/><section>
    <title>allocator_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>allocator_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>allocator_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::allocator_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::allocator_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce"/><section>
    <title>const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce"/><section>
    <title>const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce"/><section>
    <title>const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608"/><section>
    <title>const_reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608"/><section>
    <title>const_reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608"/><section>
    <title>const_reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>const_reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>const_reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::const_reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::const_reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066"/><section>
    <title>difference_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066"/><section>
    <title>difference_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab9ef93101f767b7aa265f56fde0b7066"/><section>
    <title>difference_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>difference_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>difference_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef allocator_type::difference_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::difference_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be"/><section>
    <title>head_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>head_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>head_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Head&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::head_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be"/><section>
    <title>head_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>head_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>head_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Head&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::head_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a168a9142435e88444e2f00a2cfbc32be"/><section>
    <title>head_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>head_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>head_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Head&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::head_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8"/><section>
    <title>inode_iterator<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>inode_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8"/><section>
    <title>inode_iterator<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>inode_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aabd05d3de62678dc6f42fcf4b74bfef8"/><section>
    <title>inode_iterator<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>inode_iterator</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_iterator</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Inode::iterator <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_iterator</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f"/><section>
    <title>inode_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>inode_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Inode&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f"/><section>
    <title>inode_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>inode_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Inode&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ad04df9912234e575abe0d69c3d43501f"/><section>
    <title>inode_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>inode_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inode_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Inode&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inode_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9"/><section>
    <title>iterator_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9"/><section>
    <title>iterator_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac375a29fde23b788bc8f03686ce2f1d9"/><section>
    <title>iterator_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>iterator_category</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>iterator_category</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef std::bidirectional_iterator_tag <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::iterator_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6"/><section>
    <title>leaf_const_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>leaf_const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6"/><section>
    <title>leaf_const_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>leaf_const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a8b7429204cdff8269b5d76bffdee6ae6"/><section>
    <title>leaf_const_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>leaf_const_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_const_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">::const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_const_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd"/><section>
    <title>leaf_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>leaf_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd"/><section>
    <title>leaf_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>leaf_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd"/><section>
    <title>leaf_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>leaf_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leaf_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Leaf&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leaf_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8"/><section>
    <title>node_pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::node_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8"/><section>
    <title>node_pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::node_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8"/><section>
    <title>node_pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>node_pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>node_pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits</link>&lt;<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a0a621450b4e9ed6ac6338b93001082b1">_Alloc</link>,Node&gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::node_pointer</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd"/><section>
    <title>pointer<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd"/><section>
    <title>pointer<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aab9b3003d6228e5964c8f285fc2fa0dd"/><section>
    <title>pointer<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>pointer</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>pointer</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::pointer <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aca2093d4756bde9a55b94e9ff8d9c623">::pointer</link></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999"/><section>
    <title>reference<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999"/><section>
    <title>reference<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1e1d271463015511ac1394e260ff999"/><section>
    <title>reference<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>reference</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>reference</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::reference <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::reference</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9"/><section>
    <title>type_traits<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>type_traits</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>type_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::type_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9"/><section>
    <title>type_traits<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>type_traits</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>type_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::type_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa9afaf0fea43231d675d5b80d83911d9"/><section>
    <title>type_traits<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>type_traits</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>type_traits</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef Node::type_traits <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::type_traits</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442"/><section>
    <title>value_type<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442"/><section>
    <title>value_type<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::value_type</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a77b3ec1f3a06b2e3e1fd5ce7ac674442"/><section>
    <title>value_type<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>value_type</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>typedef type_traits::value_type <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1"/><section>
    <title>_CIter()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da"/><section>
    <title>_CIter()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1"/><section>
    <title>_CIter()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da"/><section>
    <title>_CIter()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ab6d53ff1f8f0715f9c472d1ed915bae1"/><section>
    <title>_CIter()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a92e911446d2ad5e32aee9a5bffb684da"/><section>
    <title>_CIter()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>_CIter</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>_CIter</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::_CIter (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c"/><section>
    <title>dec()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_adae72f5d4a74a94579c6ab2f8b2d073c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_adae72f5d4a74a94579c6ab2f8b2d073c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c"/><section>
    <title>dec()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_adae72f5d4a74a94579c6ab2f8b2d073c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1adae72f5d4a74a94579c6ab2f8b2d073c"/><section>
    <title>dec()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_adae72f5d4a74a94579c6ab2f8b2d073c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e"/><section>
    <title>dec()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a64d1a1ffb3459ac2032ba2c6d7ba7a1e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e"/><section>
    <title>dec()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a64d1a1ffb3459ac2032ba2c6d7ba7a1e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a64d1a1ffb3459ac2032ba2c6d7ba7a1e"/><section>
    <title>dec()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>dec</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>dec</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::dec (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a64d1a1ffb3459ac2032ba2c6d7ba7a1e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12"/><section>
    <title>get_larger_sibling()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_larger_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_larger_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_larger_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a18e287a9b4b2f80dd07e4aae13c79e12_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12"/><section>
    <title>get_larger_sibling()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_larger_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_larger_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_larger_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a18e287a9b4b2f80dd07e4aae13c79e12"/><section>
    <title>get_larger_sibling()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_larger_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_larger_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_larger_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64"/><section>
    <title>get_smaller_sibling()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>get_smaller_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_smaller_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_smaller_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a1c8fa591bd26018d57cc8c810baeeb64_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64"/><section>
    <title>get_smaller_sibling()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>get_smaller_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_smaller_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_smaller_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1c8fa591bd26018d57cc8c810baeeb64"/><section>
    <title>get_smaller_sibling()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>get_smaller_sibling</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>get_smaller_sibling</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::get_smaller_sibling (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe"/><section>
    <title>inc()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a91d7717e4d234180deae64d342c7febe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a91d7717e4d234180deae64d342c7febe_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe"/><section>
    <title>inc()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a91d7717e4d234180deae64d342c7febe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a91d7717e4d234180deae64d342c7febe"/><section>
    <title>inc()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a91d7717e4d234180deae64d342c7febe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68"/><section>
    <title>inc()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a7176d2c272f2de10757aa58a93a3ba68_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68"/><section>
    <title>inc()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a7176d2c272f2de10757aa58a93a3ba68_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7176d2c272f2de10757aa58a93a3ba68"/><section>
    <title>inc()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>inc</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>inc</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::inc (<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link> )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a7176d2c272f2de10757aa58a93a3ba68_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf"/><section>
    <title>leftmost_descendant()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>leftmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leftmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leftmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_aa257c415d10160f5e739fe97eb854eaf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_aa257c415d10160f5e739fe97eb854eaf_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf"/><section>
    <title>leftmost_descendant()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>leftmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leftmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leftmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_aa257c415d10160f5e739fe97eb854eaf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1aa257c415d10160f5e739fe97eb854eaf"/><section>
    <title>leftmost_descendant()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>leftmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>leftmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::leftmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_aa257c415d10160f5e739fe97eb854eaf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b"/><section>
    <title>operator!=()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b"/><section>
    <title>operator!=()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a436e33dbdfc237495797566f385c713b"/><section>
    <title>operator!=()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700"/><section>
    <title>operator!=()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700"/><section>
    <title>operator!=()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af15d62a5815eaac36ba507ec68660700"/><section>
    <title>operator!=()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator!=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator!= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a61885bade0615a4d77414e6b7c7f8e05"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1acda96d06fe1a3f4fc5b34e08693b8608">const_reference</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9"/><section>
    <title>operator++()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_af0276b9b5a0f9892ee8d342db30f61f9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_af0276b9b5a0f9892ee8d342db30f61f9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9"/><section>
    <title>operator++()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_af0276b9b5a0f9892ee8d342db30f61f9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1af0276b9b5a0f9892ee8d342db30f61f9"/><section>
    <title>operator++()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_af0276b9b5a0f9892ee8d342db30f61f9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f"/><section>
    <title>operator++()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a28db0169799a30eef465dcf244a4fa1f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f"/><section>
    <title>operator++()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a28db0169799a30eef465dcf244a4fa1f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a28db0169799a30eef465dcf244a4fa1f"/><section>
    <title>operator++()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a28db0169799a30eef465dcf244a4fa1f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf"/><section>
    <title>operator--()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_abbebfe8ec2b6f97727d7043e6c160baf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_abbebfe8ec2b6f97727d7043e6c160baf_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf"/><section>
    <title>operator--()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_abbebfe8ec2b6f97727d7043e6c160baf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abbebfe8ec2b6f97727d7043e6c160baf"/><section>
    <title>operator--()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_abbebfe8ec2b6f97727d7043e6c160baf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b"/><section>
    <title>operator--()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a95dabe56646e7948efacc9c4d8fd567b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b"/><section>
    <title>operator--()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a95dabe56646e7948efacc9c4d8fd567b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a95dabe56646e7948efacc9c4d8fd567b"/><section>
    <title>operator--()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_a95dabe56646e7948efacc9c4d8fd567b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf"/><section>
    <title>operator-&gt;()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf"/><section>
    <title>operator-&gt;()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a1628438090fdaa1a32cd87ae9134cddf"/><section>
    <title>operator-&gt;()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-&gt;</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator-&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a825b35882c47577367c128581ce0a3ce">const_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator-&gt; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701"/><section>
    <title>operator=()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701"/><section>
    <title>operator=()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ae00c0143f17f6655a37f69cd966db701"/><section>
    <title>operator=()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc"/><section>
    <title>operator=()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc"/><section>
    <title>operator=()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1abc161d005c92a56458aee10311dae3fc"/><section>
    <title>operator=()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link> &amp; <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator= (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c"/><section>
    <title>operator==()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c"/><section>
    <title>operator==()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a7de25e5ee88de9b777a92fdb3062095c"/><section>
    <title>operator==()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba"/><section>
    <title>operator==()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba"/><section>
    <title>operator==()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a3ae47252c89d3c92d4b0110db586f6ba"/><section>
    <title>operator==()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::operator== (const <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp_1af382c2d1decc31b3836e0b2b34c57982">PB_DS_CONST_ODIR_IT_C_DEC</link> &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782"/><section>
    <title>rightmost_descendant()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>rightmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>rightmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::rightmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_ac1beb35e1420d4e70c4db7716d923782_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_ac1beb35e1420d4e70c4db7716d923782_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782"/><section>
    <title>rightmost_descendant()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>rightmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>rightmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::rightmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_ac1beb35e1420d4e70c4db7716d923782_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac1beb35e1420d4e70c4db7716d923782"/><section>
    <title>rightmost_descendant()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>rightmost_descendant</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>rightmost_descendant</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput>static <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1ac5e4a0801789d6c49989c7386ce4d6dd">leaf_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::rightmost_descendant (<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> p_nd)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_ac1beb35e1420d4e70c4db7716d923782_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a054eba43f11628a1b551e46b5a6ff428"/><section>
    <title>m_p_nd</title>
<indexterm><primary>m_p_nd</primary><secondary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</primary><secondary>m_p_nd</secondary></indexterm>
<computeroutput>template&lt;typename Node , typename Leaf , typename Head , typename Inode , <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Is_Forward_Iterator&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter_1a6ff98b8534596f079c622085c2bc88a8">node_pointer</link> <link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter</link>&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;::m_p_nd</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/pat_trie_/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2pat__trie___2pat__trie__base_8hpp">pat_trie_base.hpp</link></section>
</section>
