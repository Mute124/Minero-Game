<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2parallel_2tags_8h" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/tags.h File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/tags.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;omp.h&gt;<?linebreak?>#include &lt;parallel/types.h&gt;<?linebreak?></programlisting>Include dependency graph for tags.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_classes_2lib_2include_2c_09_09_2parallel_2tags_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link></para>

<para>Forces sequential execution at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1parallel__tag">__gnu_parallel::parallel_tag</link></para>

<para>Recommends parallel execution at compile time, optionally using a user-specified number of threads. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1default__parallel__tag">__gnu_parallel::default_parallel_tag</link></para>

<para>Recommends parallel execution using the default parallel algorithm. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1balanced__tag">__gnu_parallel::balanced_tag</link></para>

<para>Recommends parallel execution using dynamic load-balancing at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1unbalanced__tag">__gnu_parallel::unbalanced_tag</link></para>

<para>Recommends parallel execution using static load-balancing at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1omp__loop__tag">__gnu_parallel::omp_loop_tag</link></para>

<para>Recommends parallel execution using OpenMP dynamic load-balancing at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1omp__loop__static__tag">__gnu_parallel::omp_loop_static_tag</link></para>

<para>Recommends parallel execution using OpenMP static load-balancing at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1find__tag">__gnu_parallel::find_tag</link></para>

<para>Base class for for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> variants. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link></para>

<para>Forces parallel merging with exact splitting, at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1sampling__tag">__gnu_parallel::sampling_tag</link></para>

<para>Forces parallel merging with exact splitting, at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1multiway__mergesort__tag">__gnu_parallel::multiway_mergesort_tag</link></para>

<para>Forces parallel sorting using multiway mergesort at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1multiway__mergesort__exact__tag">__gnu_parallel::multiway_mergesort_exact_tag</link></para>

<para>Forces parallel sorting using multiway mergesort with exact splitting at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1multiway__mergesort__sampling__tag">__gnu_parallel::multiway_mergesort_sampling_tag</link></para>

<para>Forces parallel sorting using multiway mergesort with splitting by sampling at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1quicksort__tag">__gnu_parallel::quicksort_tag</link></para>

<para>Forces parallel sorting using unbalanced quicksort at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1balanced__quicksort__tag">__gnu_parallel::balanced_quicksort_tag</link></para>

<para>Forces parallel sorting using balanced quicksort at compile time. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1growing__blocks__tag">__gnu_parallel::growing_blocks_tag</link></para>

<para>Selects the growing block size variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1constant__size__blocks__tag">__gnu_parallel::constant_size_blocks_tag</link></para>

<para>Selects the constant block size variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link>. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct____gnu__parallel_1_1equal__split__tag">__gnu_parallel::equal_split_tag</link></para>

<para>Selects the equal splitting variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace____gnu__parallel">__gnu_parallel</link></para>

<para>GNU parallel code for public use. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
