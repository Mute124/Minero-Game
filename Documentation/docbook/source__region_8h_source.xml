<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_source__region_8h_source" xml:lang="en-US">
<title>source_region.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/source_region.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//#&#32;This&#32;file&#32;is&#32;a&#32;part&#32;of&#32;toml++&#32;and&#32;is&#32;subject&#32;to&#32;the&#32;the&#32;terms&#32;of&#32;the&#32;MIT&#32;license.</emphasis>
2 <emphasis role="comment">//#&#32;Copyright&#32;(c)&#32;Mark&#32;Gillard&#32;&lt;mark.gillard@outlook.com.au&gt;</emphasis>
3 <emphasis role="comment">//#&#32;See&#32;https://github.com/marzer/tomlplusplus/blob/master/LICENSE&#32;for&#32;the&#32;full&#32;license&#32;text.</emphasis>
4 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;MIT</emphasis>
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_std__optional_8h">std_optional.h</link>&quot;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_std__string_8h">std_string.h</link>&quot;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_forward__declarations_8h">forward_declarations.h</link>&quot;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_print__to__stream_8h">print_to_stream.h</link>&quot;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__start_8h">header_start.h</link>&quot;</emphasis>
12 
13 <link linkend="_source__region_8h_1a24e5c42f7e94b0b0f3212744874731e6">TOML_NAMESPACE_START</link>
14 {
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>source_index&#32;=&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>;
17 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_source__region_8h_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link>&#32;=&#32;std::shared_ptr&lt;const&#32;std::string&gt;;
20 
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_preprocessor_8h_1a0d667de514e1435f8cfba9b403dd6665">TOML_TRIVIAL_ABI</link>&#32;<link linkend="_structsource__position">source_position</link>
43 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source_index&#32;<link linkend="_structsource__position_1a4b07caf7db950b97a6f09be1572ba15d">line</link>;
47 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source_index&#32;<link linkend="_structsource__position_1a5e87746bbf1a06bcf8b6ba7f566730b9">column</link>;
51 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1abb452686968e48b67397da5f97445f5b">bool</link>()&#32;const&#32;noexcept
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;line&#32;&gt;&#32;source_index{}&#32;<emphasis role="comment">//</emphasis>
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;column&#32;&gt;&#32;source_index{};
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
59 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1a5f01f89fd02f2cd6b1e8fb7760c3a5d7">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lhs.line&#32;==&#32;rhs.line&#32;<emphasis role="comment">//</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;lhs.column&#32;==&#32;rhs.column;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
67 
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1a2112294fcdbb8df8b14ded867b99ef24">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(lhs&#32;==&#32;rhs);
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;pack(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;pos)&#32;<emphasis role="keyword">noexcept</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(pos.line)&#32;&lt;&lt;&#32;32&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(pos.column);
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
83 
85 
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1a844dfdf3b73149879070142eeb69712b">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pack(lhs)&#32;&lt;&#32;pack(rhs);
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
93 
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1ac0c0e656e17c7fd26cef0170cdd41bc9">operator&lt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pack(lhs)&#32;&lt;=&#32;pack(rhs);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
100 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1a68a1326c76ec10ce456a66bd64b7cf93">operator&gt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pack(lhs)&#32;&gt;&#32;pack(rhs);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
107 
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_preprocessor_8h_1a930d63cd08b8db4f5d7be9f8ef861c17">TOML_PURE_GETTER</link>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structsource__position_1a1b19b7e0e6f3d5d7e8f7682b7dcf2b31">operator&gt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)&#32;<emphasis role="keyword">noexcept</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pack(lhs)&#32;&gt;=&#32;pack(rhs);
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
114 
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;std::ostream&amp;&#32;<link linkend="_structsource__position_1adff6ba2a042bbaa4be4eaf88c4b58062">operator&lt;&lt;</link>(std::ostream&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__position">source_position</link>&amp;&#32;rhs)
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::print_to_stream(lhs,&#32;rhs);
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lhs;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
138 &#32;&#32;&#32;&#32;};
139 
166 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structsource__region">source_region</link>
167 &#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsource__position">source_position</link>&#32;<link linkend="_structsource__region_1af660193700792e7b770f11af7182b440">begin</link>;
170 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structsource__position">source_position</link>&#32;<link linkend="_structsource__region_1a38f9736793a9849af4edd1326be7efdf">end</link>;
173 
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a9162c7aeefc4d78442fc504b0893be89">source_path_ptr</link>&#32;<link linkend="_structsource__region_1a0154e7dd187c9eb456c236d98a6a5451">path</link>;
178 
179 <emphasis role="preprocessor">#if&#32;TOML_ENABLE_WINDOWS_COMPAT</emphasis>
180 
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_toml_8hpp_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link>
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optional&lt;std::wstring&gt;&#32;<link linkend="_structsource__region_1a3d8e8e28645ba3d917605622e452047e">wide_path</link>()<emphasis role="keyword">&#32;const</emphasis>
188 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_classpath">path</link>&#32;||&#32;<link linkend="_classpath">path</link>-&gt;<link linkend="_classpath_1acab74ce9c17856e48dfaa538d69d5d00">empty</link>())
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{};
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{&#32;impl::widen(*<link linkend="_classpath">path</link>)&#32;};
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
193 
194 <emphasis role="preprocessor">#endif</emphasis>
195 
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;std::ostream&amp;&#32;<link linkend="_structsource__region_1a0c599ab0b1f64a1ba95a0a90b95888fa">operator&lt;&lt;</link>(std::ostream&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structsource__region">source_region</link>&amp;&#32;rhs)
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impl::print_to_stream(lhs,&#32;rhs);
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lhs;
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
219 &#32;&#32;&#32;&#32;};
220 }
221 <link linkend="_source__region_8h_1afa65688cac47ce86021fef8d739f9fd8">TOML_NAMESPACE_END</link>;
222 
223 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_header__end_8h">header_end.h</link>&quot;</emphasis>
</programlisting></section>
