<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtx_2rotate__normalized__axis_8inl_source" xml:lang="en-US">
<title>rotate_normalized_axis.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtx/rotate_normalized_axis.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
6 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__rotate__normalized__axis_1gafbbff0c6bcc5deb8036cfef4c6fcdd8e">rotateNormalizedAxis</link>
7 &#32;&#32;&#32;&#32;(
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>,
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>
11 &#32;&#32;&#32;&#32;)
12 &#32;&#32;&#32;&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>;
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;c&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;s&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
16 
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
18 
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;temp((<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;c)&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>);
20 
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;Rotate;
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[0][0]&#32;=&#32;c&#32;+&#32;temp[0]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[0];
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[0][1]&#32;=&#32;0&#32;+&#32;temp[0]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[1]&#32;+&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[2];
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[0][2]&#32;=&#32;0&#32;+&#32;temp[0]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[2]&#32;-&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[1];
25 
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[1][0]&#32;=&#32;0&#32;+&#32;temp[1]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[0]&#32;-&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[2];
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[1][1]&#32;=&#32;c&#32;+&#32;temp[1]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[1];
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[1][2]&#32;=&#32;0&#32;+&#32;temp[1]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[2]&#32;+&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[0];
29 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[2][0]&#32;=&#32;0&#32;+&#32;temp[2]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[0]&#32;+&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[1];
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[2][1]&#32;=&#32;0&#32;+&#32;temp[2]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[1]&#32;-&#32;s&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[0];
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rotate[2][2]&#32;=&#32;c&#32;+&#32;temp[2]&#32;*&#32;<link linkend="_group__ext__quaternion__trigonometric_1gac2b65b953ea72827e172fc39035964a7">axis</link>[2];
33 
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;Result;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0]&#32;=&#32;m[0]&#32;*&#32;Rotate[0][0]&#32;+&#32;m[1]&#32;*&#32;Rotate[0][1]&#32;+&#32;m[2]&#32;*&#32;Rotate[0][2];
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1]&#32;=&#32;m[0]&#32;*&#32;Rotate[1][0]&#32;+&#32;m[1]&#32;*&#32;Rotate[1][1]&#32;+&#32;m[2]&#32;*&#32;Rotate[1][2];
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2]&#32;=&#32;m[0]&#32;*&#32;Rotate[2][0]&#32;+&#32;m[1]&#32;*&#32;Rotate[2][1]&#32;+&#32;m[2]&#32;*&#32;Rotate[2][2];
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[3]&#32;=&#32;m[3];
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
40 &#32;&#32;&#32;&#32;}
41 
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
43 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__rotate__normalized__axis_1gafbbff0c6bcc5deb8036cfef4c6fcdd8e">rotateNormalizedAxis</link>
44 &#32;&#32;&#32;&#32;(
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>,
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>
48 &#32;&#32;&#32;&#32;)
49 &#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;Tmp(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
51 
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;AngleRad(<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&#32;Sin&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>(AngleRad&#32;*&#32;T(0.5));
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;qua&lt;T,&#32;Q&gt;(<link linkend="__classes_2lib_2include_2tgmath_8h_1ad5430427f9814a92459a8880f4a11bd6">cos</link>(AngleRad&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5)),&#32;Tmp.x&#32;*&#32;Sin,&#32;Tmp.y&#32;*&#32;Sin,&#32;Tmp.z&#32;*&#32;Sin);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;gtc::quaternion::cross(q,&#32;tquat&lt;T,&#32;Q&gt;(cos(AngleRad&#32;*&#32;T(0.5)),&#32;Tmp.x&#32;*&#32;fSin,&#32;Tmp.y&#32;*&#32;fSin,&#32;Tmp.z&#32;*&#32;fSin));</emphasis>
57 &#32;&#32;&#32;&#32;}
58 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
