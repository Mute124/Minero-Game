<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2tbmintrin_8h_source" xml:lang="en-US">
<title>tbmintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/tbmintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2010-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#ifndef&#32;_X86GPRINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#&#32;error&#32;&quot;Never&#32;use&#32;&lt;tbmintrin.h&gt;&#32;directly;&#32;include&#32;&lt;x86gprintrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_TBMINTRIN_H_INCLUDED</emphasis>
29 <emphasis role="preprocessor">#define&#32;_TBMINTRIN_H_INCLUDED</emphasis>
30 
31 <emphasis role="preprocessor">#ifndef&#32;__TBM__</emphasis>
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;tbm&quot;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;__DISABLE_TBM__</emphasis>
35 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__TBM__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
36 
37 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
38 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
39 <link linkend="__classes_2lib_2include_2tbmintrin_8h_1aa317e779a38895c6668187abfe79e915">__bextri_u32</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>)
40 {
41 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_bextri_u32&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>);
42 }
43 <emphasis role="preprocessor">#else</emphasis>
44 <emphasis role="preprocessor">#define&#32;__bextri_u32(X,&#32;I)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
45 <emphasis role="preprocessor">&#32;&#32;((unsigned&#32;int)__builtin_ia32_bextri_u32&#32;((unsigned&#32;int)(X),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
46 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(unsigned&#32;int)(I)))</emphasis>
47 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*__OPTIMIZE__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
48 
49 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
50 __blcfill_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
51 {
52 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
53 }
54 
55 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
56 __blci_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
57 {
58 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;~(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
59 }
60 
61 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
62 __blcic_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
63 {
64 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
65 }
66 
67 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
68 __blcmsk_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
69 {
70 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;^&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
71 }
72 
73 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
74 __blcs_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
75 {
76 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
77 }
78 
79 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
80 __blsfill_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
81 {
82 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
83 }
84 
85 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
86 __blsic_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
87 {
88 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
89 }
90 
91 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
92 __t1mskc_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
93 {
94 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
95 }
96 
97 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
98 __tzmsk_u32&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
99 {
100 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
101 }
102 
103 
104 
105 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
106 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
107 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
108 __bextri_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>)
109 {
110 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_bextri_u64&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>);
111 }
112 <emphasis role="preprocessor">#else</emphasis>
113 <emphasis role="preprocessor">#define&#32;__bextri_u64(X,&#32;I)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
114 <emphasis role="preprocessor">&#32;&#32;((unsigned&#32;long&#32;long)__builtin_ia32_bextri_u64&#32;((unsigned&#32;long&#32;long)(X),&#32;\</emphasis>
115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(unsigned&#32;long&#32;long)(I)))</emphasis>
116 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*__OPTIMIZE__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
117 
118 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
119 __blcfill_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
120 {
121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
122 }
123 
124 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
125 __blci_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
126 {
127 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;~(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
128 }
129 
130 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
131 __blcic_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
132 {
133 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
134 }
135 
136 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
137 __blcmsk_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
138 {
139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;^&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
140 }
141 
142 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
143 __blcs_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
144 {
145 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
146 }
147 
148 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
149 __blsfill_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
150 {
151 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
152 }
153 
154 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
155 __blsic_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
156 {
157 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
158 }
159 
160 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
161 __t1mskc_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
162 {
163 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;|&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;+&#32;1);
164 }
165 
166 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
167 __tzmsk_u64&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
168 {
169 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;~__X&#32;&amp;&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>&#32;-&#32;1);
170 }
171 
172 
173 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__x86_64__&#32;&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
174 
175 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_TBM__</emphasis>
176 <emphasis role="preprocessor">#undef&#32;__DISABLE_TBM__</emphasis>
177 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
178 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_TBM__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
179 
180 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_TBMINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
