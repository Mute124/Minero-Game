<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structparse__key__buffer" xml:lang="en-US">
<title>parse_key_buffer Struct Reference</title>
<indexterm><primary>parse_key_buffer</primary></indexterm>
<para>
<computeroutput>#include &lt;toml.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structparse__key__buffer_1a528e6021b3353f7dc508065b15d408d3">clear</link> () noexcept</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structparse__key__buffer_1a5be5a39fb6e88bd73f36c983d822dbfb">push_back</link> (std::string_view segment, <link linkend="_structsource__position">source_position</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, <link linkend="_structsource__position">source_position</link> e)</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view <link linkend="_structparse__key__buffer_1af3712cbb6f15492dfd9e9b28ac83f3ed">operator[]</link> (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> i) const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view <link linkend="_structparse__key__buffer_1a471983ccaa14c3e702f8d111cc27b6a9">back</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structparse__key__buffer_1a781aed86aafbdd7e125db15ef7425030">empty</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_structparse__key__buffer_1a0b6efc243f6498c089430873c5258ce0">size</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structparse__key__buffer_1a528e6021b3353f7dc508065b15d408d3">clear</link> () noexcept</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_structparse__key__buffer_1a5be5a39fb6e88bd73f36c983d822dbfb">push_back</link> (std::string_view segment, <link linkend="_structsource__position">source_position</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>, <link linkend="_structsource__position">source_position</link> e)</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view <link linkend="_structparse__key__buffer_1af3712cbb6f15492dfd9e9b28ac83f3ed">operator[]</link> (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> i) const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view <link linkend="_structparse__key__buffer_1a471983ccaa14c3e702f8d111cc27b6a9">back</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_structparse__key__buffer_1a781aed86aafbdd7e125db15ef7425030">empty</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="_structparse__key__buffer_1a0b6efc243f6498c089430873c5258ce0">size</link> () const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_structparse__key__buffer_1ac139f8d1dab75e1c34ea088ad1d66af4">buffer</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::pair&lt; <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> &gt; &gt; <link linkend="_structparse__key__buffer_1aa642b64dad04183aee16c24991de45f3">segments</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_structsource__position">source_position</link> &gt; <link linkend="_structparse__key__buffer_1ad92b5a087bd073a11f647bcb25e111d7">starts</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_structsource__position">source_position</link> &gt; <link linkend="_structparse__key__buffer_1a2ad820379b61e423674be863bfda21ca">ends</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structparse__key__buffer_1a471983ccaa14c3e702f8d111cc27b6a9"/><section>
    <title>back()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>back</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>back</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view parse_key_buffer::back ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a471983ccaa14c3e702f8d111cc27b6a9"/><section>
    <title>back()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>back</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>back</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view parse_key_buffer::back ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a528e6021b3353f7dc508065b15d408d3"/><section>
    <title>clear()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>clear</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>clear</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> parse_key_buffer::clear ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a528e6021b3353f7dc508065b15d408d3"/><section>
    <title>clear()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>clear</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>clear</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> parse_key_buffer::clear ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a781aed86aafbdd7e125db15ef7425030"/><section>
    <title>empty()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>empty</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>empty</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_key_buffer::empty ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a781aed86aafbdd7e125db15ef7425030"/><section>
    <title>empty()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>empty</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>empty</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> parse_key_buffer::empty ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1af3712cbb6f15492dfd9e9b28ac83f3ed"/><section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view parse_key_buffer::operator[] (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> i) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1af3712cbb6f15492dfd9e9b28ac83f3ed"/><section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> std::string_view parse_key_buffer::operator[] (<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> i) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a5be5a39fb6e88bd73f36c983d822dbfb"/><section>
    <title>push_back()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>push_back</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>push_back</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> parse_key_buffer::push_back (std::string_view segment, <link linkend="_structsource__position">source_position</link> b, <link linkend="_structsource__position">source_position</link> e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a5be5a39fb6e88bd73f36c983d822dbfb"/><section>
    <title>push_back()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>push_back</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>push_back</secondary></indexterm>
<para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> parse_key_buffer::push_back (std::string_view segment, <link linkend="_structsource__position">source_position</link> b, <link linkend="_structsource__position">source_position</link> e)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a0b6efc243f6498c089430873c5258ce0"/><section>
    <title>size()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>size</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> parse_key_buffer::size ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a0b6efc243f6498c089430873c5258ce0"/><section>
    <title>size()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>size</secondary></indexterm>
<para><computeroutput><link linkend="_toml_8hpp_1ab8168e9569e1eb2294b344fbb81983b5">TOML_PURE_INLINE_GETTER</link> <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> parse_key_buffer::size ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structparse__key__buffer_1ac139f8d1dab75e1c34ea088ad1d66af4"/><section>
    <title>buffer</title>
<indexterm><primary>buffer</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>buffer</secondary></indexterm>
<para><computeroutput>std::string parse_key_buffer::buffer</computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1a2ad820379b61e423674be863bfda21ca"/><section>
    <title>ends</title>
<indexterm><primary>ends</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>ends</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_structsource__position">source_position</link> &gt; parse_key_buffer::ends</computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1aa642b64dad04183aee16c24991de45f3"/><section>
    <title>segments</title>
<indexterm><primary>segments</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>segments</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::pair&lt; <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> &gt; &gt; parse_key_buffer::segments</computeroutput></para></section>
<anchor xml:id="_structparse__key__buffer_1ad92b5a087bd073a11f647bcb25e111d7"/><section>
    <title>starts</title>
<indexterm><primary>starts</primary><secondary>parse_key_buffer</secondary></indexterm>
<indexterm><primary>parse_key_buffer</primary><secondary>starts</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_structsource__position">source_position</link> &gt; parse_key_buffer::starts</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/include/toml++/impl/<link linkend="_parser_8inl">parser.inl</link>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/ConfigMan/lib/tomlplusplus-3.3.0/tomlplusplus-3.3.0/<link linkend="_toml_8hpp">toml.hpp</link></section>
</section>
