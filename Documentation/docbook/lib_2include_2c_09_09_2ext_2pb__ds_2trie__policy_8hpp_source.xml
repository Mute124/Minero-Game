<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp_source" xml:lang="en-US">
<title>trie_policy.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/trie_policy.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_TRIE_POLICY_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_TRIE_POLICY_HPP</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/type_utils.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/trie_policy/trie_policy_base.hpp&gt;</emphasis>
48 
49 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
50 {
51 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
52 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;String,&#32;typename&#32;String::value_type&#32;Min_E_Val,&#32;\</emphasis>
53 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;String::value_type&#32;Max_E_Val,&#32;bool&#32;Reverse,&#32;\</emphasis>
54 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_Alloc&gt;</emphasis>
55 
56 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
57 <emphasis role="preprocessor">&#32;&#32;trie_string_access_traits&lt;String,&#32;Min_E_Val,Max_E_Val,Reverse,_Alloc&gt;</emphasis>
58 
69 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;String&#32;=&#32;std::string,
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;String::value_type&#32;Min_E_Val&#32;=&#32;detail::__numeric_traits&lt;typename&#32;String::value_type&gt;::__min,
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;String::value_type&#32;Max_E_Val&#32;=&#32;detail::__numeric_traits&lt;typename&#32;String::value_type&gt;::__max,
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Reverse&#32;=&#32;<emphasis role="keyword">false</emphasis>,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&#32;=&#32;std::allocator&lt;char&gt;&#32;&gt;
74 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>trie_string_access_traits
75 &#32;&#32;{
76 &#32;&#32;<emphasis role="keyword">public</emphasis>:
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link>;
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;String&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a84589a8c52cf1725670e2e708bd01df5">key_type</link>;
79 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">detail::rebind_traits&lt;_Alloc, key_type&gt;::const_reference</link>
80 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>;
81 
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a9aea7a41515ba31a0f484ee717437f30a39e902e678e6b621a6688060d201745d">reverse</link>&#32;=&#32;Reverse
85 &#32;&#32;&#32;&#32;&#32;&#32;};
86 
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;detail::__conditional_type&lt;Reverse,&#32;\
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;String::const_reverse_iterator,&#32;\
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;String::const_iterator&gt;::__type&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>;
91 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;std::iterator_traits&lt;const_iterator&gt;::value_type&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link>;
94 
95 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;{
97 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d">min_e_val</link>&#32;=&#32;Min_E_Val,
98 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4">max_e_val</link>&#32;=&#32;Max_E_Val,
99 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link>&#32;=&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8acd0e9df2b17ead689c336569022680c4">max_e_val</link>&#32;-&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a2ed703b35b41eaf8ed65da23fd55534d">min_e_val</link>&#32;+&#32;1
100 &#32;&#32;&#32;&#32;&#32;&#32;};
101 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a7434fb9bffea707379887e6bd44806e0">PB_DS_STATIC_ASSERT</link>(min_max_size,&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a32ace434106c275cb01dfc6088dd07f8a494308ca816b5904b41b373a54da6fb9">max_size</link>&#32;&gt;=&#32;2);
102 
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
106 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aefd9bfc1a93d8f7af7415a0e89dde520">begin</link>(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>);
107 
110 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
111 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1aaaeae63ba3506a5ee543caeddf3519d7">end</link>(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>);
112 
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ab4df22cf7293dd0e2dad9c0e8c725972">size_type</link>
115 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1828974e834eb6c010828914216e20a3">e_pos</link>(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1a1fb66f19b741835bbd52b2b5610f6ca1">e_type</link>&#32;e);
116 
117 &#32;&#32;<emphasis role="keyword">private</emphasis>:
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
119 &#32;&#32;&#32;&#32;begin_imp(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">detail::false_type</link>);
120 
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
122 &#32;&#32;&#32;&#32;begin_imp(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">detail::true_type</link>);
123 
124 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
125 &#32;&#32;&#32;&#32;end_imp(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">detail::false_type</link>);
126 
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1af9f8c64df40330a9458f27d681758dc1">const_iterator</link>
128 &#32;&#32;&#32;&#32;end_imp(<link linkend="_struct____gnu__pbds_1_1trie__string__access__traits_1ae1f416deae8bb825d487977b4a41ab98">key_const_reference</link>,&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">detail::true_type</link>);
129 
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;detail::integral_constant&lt;int,&#32;Reverse&gt;&#32;s_rev_ind;
131 &#32;&#32;};
132 
133 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp&gt;</emphasis>
134 
135 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
136 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
137 
138 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_T_DEC&#32;\</emphasis>
139 <emphasis role="preprocessor">&#32;&#32;template&lt;typename&#32;Node_CItr,typename&#32;Node_Itr,&#32;\</emphasis>
140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;typename&#32;_ATraits,&#32;typename&#32;_Alloc&gt;</emphasis>
141 
142 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
143 <emphasis role="preprocessor">&#32;&#32;trie_prefix_search_node_update&lt;Node_CItr,&#32;Node_Itr,&#32;\</emphasis>
144 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ATraits,_Alloc&gt;</emphasis>
145 
146 <emphasis role="preprocessor">#define&#32;PB_DS_TRIE_POLICY_BASE&#32;\</emphasis>
147 <emphasis role="preprocessor">&#32;&#32;detail::trie_policy_base&lt;Node_CItr,Node_Itr,_ATraits,&#32;_Alloc&gt;</emphasis>
148 
151 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Node_CItr,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Node_Itr,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_ATraits,
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
155 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>trie_prefix_search_node_update&#32;:&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp_1a63373f41144a049b88756d9f55f51ef0">PB_DS_TRIE_POLICY_BASE</link>
156 &#32;&#32;{
157 &#32;&#32;<emphasis role="keyword">private</emphasis>:
158 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp_1a63373f41144a049b88756d9f55f51ef0">PB_DS_TRIE_POLICY_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type;
159 
160 &#32;&#32;<emphasis role="keyword">public</emphasis>:
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::key_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a61fc8be63d99b0887b173c85430f96fd">key_type</link>;
162 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::key_const_reference&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>;
163 
165 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_ATraits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link>;
166 
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>;
169 
171 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9daab8bbfe3a02a6241b4e0a7354d3f9">allocator_type</link>;
172 
174 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;allocator_type::size_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1acb7ab4835031bde4cbf2787c341b7cb7">size_type</link>;
175 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a47093967b6064d35915777f07576157f">metadata_type</link>;
176 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_Itr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>;
177 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_CItr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link>;
178 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;node_iterator::value_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>;
179 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;node_const_iterator::value_type&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>;
180 
183 &#32;&#32;&#32;&#32;std::pair&lt;const_iterator,&#32;const_iterator&gt;
184 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a91e91a0ac22aea1bd6a4aa4c37a8ce5c">prefix_range</link>(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
185 
188 &#32;&#32;&#32;&#32;std::pair&lt;iterator,&#32;iterator&gt;
189 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad133aec8fe29ff582d70bb7ce61ed082">prefix_range</link>(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a58be60728d60b9ef81d50df4f2314d3f">key_const_reference</link>);
190 
193 &#32;&#32;&#32;&#32;std::pair&lt;const_iterator,&#32;const_iterator&gt;
194 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a3297f6800fa89dcc9ac957b0696d37b6">prefix_range</link>(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>)&#32;<emphasis role="keyword">const</emphasis>;
195 
198 &#32;&#32;&#32;&#32;std::pair&lt;iterator,&#32;iterator&gt;
199 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ac6a73a33ea356d0cdd121675602660e5">prefix_range</link>(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>);
200 
201 &#32;&#32;<emphasis role="keyword">protected</emphasis>:
203 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
204 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8366820208119a5e4179d91d09d8ea9b">operator()</link>(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>&#32;node_it,&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link>&#32;end_nd_it)&#32;<emphasis role="keyword">const</emphasis>;
205 
206 &#32;&#32;<emphasis role="keyword">private</emphasis>:
207 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>
208 &#32;&#32;&#32;&#32;next_child(<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a9c7f1810b16cd0d2cd32725ca0ea8776">a_const_iterator</link>,
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link>&amp;);
210 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a4935f49f1d53354c37a1fd7ae5145ff6">const_iterator</link>
213 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
214 
216 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a8ef0e1d114e626b4b148d92dc8327936">iterator</link>
217 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>()&#32;=&#32;0;
218 
220 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link>
221 &#32;&#32;&#32;&#32;node_begin()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
222 
224 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>
225 &#32;&#32;&#32;&#32;node_begin()&#32;=&#32;0;
226 
228 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a765bfa2626720dfcafaccf28e8c74114">node_const_iterator</link>
229 &#32;&#32;&#32;&#32;node_end()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
230 
232 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1ad3ffba54a43699d66540d1844694bdcc">node_iterator</link>
233 &#32;&#32;&#32;&#32;node_end()&#32;=&#32;0;
234 
236 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update_1a08b64c1b3cd0b0490384e960cf38fb0f">access_traits</link>&amp;
237 &#32;&#32;&#32;&#32;get_access_traits()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
238 &#32;&#32;};
239 
240 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp&gt;</emphasis>
241 
242 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
243 
244 <emphasis role="preprocessor">#define&#32;PB_DS_CLASS_C_DEC&#32;\</emphasis>
245 <emphasis role="preprocessor">&#32;&#32;trie_order_statistics_node_update&lt;Node_CItr,&#32;Node_Itr,&#32;\</emphasis>
246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ATraits,&#32;_Alloc&gt;</emphasis>
247 
249 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Node_CItr,
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;Node_Itr,
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_ATraits,
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
253 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">trie_order_statistics_node_update</link>&#32;:&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp_1a63373f41144a049b88756d9f55f51ef0">PB_DS_TRIE_POLICY_BASE</link>
254 &#32;&#32;{
255 &#32;&#32;<emphasis role="keyword">private</emphasis>:
256 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2trie__policy_8hpp_1a63373f41144a049b88756d9f55f51ef0">PB_DS_TRIE_POLICY_BASE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_type;
257 
258 &#32;&#32;<emphasis role="keyword">public</emphasis>:
259 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_ATraits&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9">access_traits</link>;
260 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;access_traits::const_iterator&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>;
261 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;_Alloc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a93bda84fa333cd9dbf9c1120e321bb54">allocator_type</link>;
262 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;allocator_type::size_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>;
263 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::key_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ae9f72162adffd4fe677c5dfc76accd4c">key_type</link>;
264 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::key_const_reference&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link>;
265 
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a1b51bbb1d8c3c95c0600b2984a936fee">metadata_type</link>;
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_CItr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>;
268 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Node_Itr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>;
269 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;node_const_iterator::value_type&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link>;
270 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;node_iterator::value_type&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link>;
271 
276 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a06172f7ebb846367e074a93a59af21e4">const_iterator</link>
277 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a52fae018050b4a953e510dfe0dd665bc">find_by_order</link>(<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>)&#32;<emphasis role="keyword">const</emphasis>;
278 
283 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link>
284 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a431702ea831079b51b5057b92a397bd2">find_by_order</link>(<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>);
285 
291 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>
292 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a99d4683f825bc4ead8237e21ef54886c">order_of_key</link>(<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a2f4b97dd9a316ab1118c5187f2bbd885">key_const_reference</link>)&#32;<emphasis role="keyword">const</emphasis>;
293 
299 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ad2a9f5527df463352e05f45dfa1c3632">size_type</link>
300 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a61833e698268e2d06ae6d868b33da0cc">order_of_prefix</link>(<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a3f7d16df4ac8842d058417b10e945dc6">a_const_iterator</link>)&#32;<emphasis role="keyword">const</emphasis>;
301 
302 &#32;&#32;<emphasis role="keyword">protected</emphasis>:
305 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
306 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1ac03a1d37b467c2f12926fcb78fb2803a">operator()</link>(<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>,&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>)&#32;<emphasis role="keyword">const</emphasis>;
307 
308 &#32;&#32;<emphasis role="keyword">private</emphasis>:
309 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_reference&#32;&#32;&#32;&#32;&#32;const_reference;
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;base_type::const_pointer&#32;&#32;&#32;&#32;&#32;&#32;&#32;const_pointer;
311 
312 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::template&#32;rebind&lt;metadata_type&gt;&#32;__rebind_m;
313 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_m::other&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rebind_ma;
314 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::const_reference&#32;&#32;&#32;&#32;&#32;&#32;metadata_const_reference;
315 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__rebind_ma::reference&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;metadata_reference;
316 
318 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a56bc959ca1311889bcd1c5abb178ab59">_GLIBCXX_NODISCARD</link>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
319 &#32;&#32;&#32;&#32;empty()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
320 
322 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link>
323 &#32;&#32;&#32;&#32;begin()&#32;=&#32;0;
324 
327 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a15bfc885508a0668262186a88af3fa64">iterator</link>
328 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a432111147038972f06e049e18a837002">end</link>()&#32;=&#32;0;
329 
331 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>
332 &#32;&#32;&#32;&#32;node_begin()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
333 
335 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>
336 &#32;&#32;&#32;&#32;node_begin()&#32;=&#32;0;
337 
340 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a17912abb84fff7ec4e5a9ccc85b00a29">node_const_iterator</link>
341 &#32;&#32;&#32;&#32;node_end()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
342 
344 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1a0e32e472715de0fc3447e59eb5a49951">node_iterator</link>
345 &#32;&#32;&#32;&#32;node_end()&#32;=&#32;0;
346 
348 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update_1abf5b4c07e2078e66af9e4fc51e9af2c9">access_traits</link>&amp;
349 &#32;&#32;&#32;&#32;get_access_traits()&#32;=&#32;0;
350 &#32;&#32;};
351 
352 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp&gt;</emphasis>
353 
354 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_T_DEC</emphasis>
355 <emphasis role="preprocessor">#undef&#32;PB_DS_CLASS_C_DEC</emphasis>
356 <emphasis role="preprocessor">#undef&#32;PB_DS_TRIE_POLICY_BASE</emphasis>
357 
358 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
359 
360 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
