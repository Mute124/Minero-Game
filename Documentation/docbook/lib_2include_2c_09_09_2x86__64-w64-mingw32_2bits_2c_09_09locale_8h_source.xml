<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09locale_8h_source" xml:lang="en-US">
<title>c++locale.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/x86_64-w64-mingw32/bits/c++locale.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Wrapper&#32;for&#32;underlying&#32;C-language&#32;localization&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2001-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="comment">//</emphasis>
31 <emphasis role="comment">//&#32;ISO&#32;C++&#32;14882:&#32;22.8&#32;&#32;Standard&#32;locale&#32;categories.</emphasis>
32 <emphasis role="comment">//</emphasis>
33 
34 <emphasis role="comment">//&#32;Written&#32;by&#32;Benjamin&#32;Kosnik&#32;&lt;bkoz@redhat.com&gt;</emphasis>
35 
36 <emphasis role="preprocessor">#ifndef&#32;_GLIBCXX_CXX_LOCALE_H</emphasis>
37 <emphasis role="preprocessor">#define&#32;_GLIBCXX_CXX_LOCALE_H&#32;1</emphasis>
38 
39 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
40 
41 <emphasis role="preprocessor">#include&#32;&lt;clocale&gt;</emphasis>
42 
43 <emphasis role="preprocessor">#define&#32;_GLIBCXX_NUM_CATEGORIES&#32;0</emphasis>
44 
45 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
46 {
47 _GLIBCXX_BEGIN_NAMESPACE_VERSION
48 
49 &#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__c_locale;
50 
51 &#32;&#32;<emphasis role="comment">//&#32;Convert&#32;numeric&#32;value&#32;of&#32;type&#32;double&#32;and&#32;long&#32;double&#32;to&#32;string&#32;and</emphasis>
52 &#32;&#32;<emphasis role="comment">//&#32;return&#32;length&#32;of&#32;string.&#32;&#32;If&#32;vsnprintf&#32;is&#32;available&#32;use&#32;it,&#32;otherwise</emphasis>
53 &#32;&#32;<emphasis role="comment">//&#32;fall&#32;back&#32;to&#32;the&#32;unsafe&#32;vsprintf&#32;which,&#32;in&#32;general,&#32;can&#32;be&#32;dangerous</emphasis>
54 &#32;&#32;<emphasis role="comment">//&#32;and&#32;should&#32;be&#32;avoided.</emphasis>
55 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>
56 &#32;&#32;__convert_from_v(<emphasis role="keyword">const</emphasis>&#32;__c_locale&amp;,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__out,
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__size&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__unused__)),
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__fmt,&#32;...)
59 &#32;&#32;{
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__old&#32;=&#32;std::setlocale(LC_NUMERIC,&#32;0);
61 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__sav&#32;=&#32;0;
62 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__builtin_strcmp(__old,&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>))
63 &#32;&#32;&#32;&#32;&#32;&#32;{
64 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__len&#32;=&#32;__builtin_strlen(__old)&#32;+&#32;1;
65 &#32;&#32;&#32;&#32;__sav&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[__len];
66 &#32;&#32;&#32;&#32;__builtin_memcpy(__sav,&#32;__old,&#32;__len);
67 &#32;&#32;&#32;&#32;std::setlocale(LC_NUMERIC,&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>);
68 &#32;&#32;&#32;&#32;&#32;&#32;}
69 
70 &#32;&#32;&#32;&#32;__builtin_va_list&#32;__args;
71 &#32;&#32;&#32;&#32;__builtin_va_start(__args,&#32;__fmt);
72 
73 <emphasis role="preprocessor">#if&#32;_GLIBCXX_USE_C99_STDIO&#32;&amp;&amp;&#32;!_GLIBCXX_HAVE_BROKEN_VSNPRINTF</emphasis>
74 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__ret&#32;=&#32;__builtin_vsnprintf(__out,&#32;__size,&#32;__fmt,&#32;__args);
75 <emphasis role="preprocessor">#else</emphasis>
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__ret&#32;=&#32;__builtin_vsprintf(__out,&#32;__fmt,&#32;__args);
77 <emphasis role="preprocessor">#endif</emphasis>
78 
79 &#32;&#32;&#32;&#32;__builtin_va_end(__args);
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__sav)
82 &#32;&#32;&#32;&#32;&#32;&#32;{
83 &#32;&#32;&#32;&#32;std::setlocale(LC_NUMERIC,&#32;__sav);
84 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;__sav;
85 &#32;&#32;&#32;&#32;&#32;&#32;}
86 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__ret;
87 &#32;&#32;}
88 
89 _GLIBCXX_END_NAMESPACE_VERSION
90 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
91 
92 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
