<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2avx512bitalgintrin_8h_source" xml:lang="en-US">
<title>avx512bitalgintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/avx512bitalgintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2017-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#if&#32;!defined&#32;_IMMINTRIN_H_INCLUDED</emphasis>
25 <emphasis role="preprocessor">#&#32;error&#32;&quot;Never&#32;use&#32;&lt;avx512bitalgintrin.h&gt;&#32;directly;&#32;include&#32;&lt;x86intrin.h&gt;&#32;instead.&quot;</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 
28 <emphasis role="preprocessor">#ifndef&#32;_AVX512BITALGINTRIN_H_INCLUDED</emphasis>
29 <emphasis role="preprocessor">#define&#32;_AVX512BITALGINTRIN_H_INCLUDED</emphasis>
30 
31 <emphasis role="preprocessor">#ifndef&#32;__AVX512BITALG__</emphasis>
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx512bitalg&quot;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX512BITALG__</emphasis>
35 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX512BITALG__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
36 
37 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
38 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
39 _mm512_popcnt_epi8&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
40 {
41 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountb_v64qi&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
42 }
43 
44 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
45 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
46 _mm512_popcnt_epi16&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
47 {
48 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountw_v32hi&#32;((__v32hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
49 }
50 
51 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX512BITALG__</emphasis>
52 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX512BITALG__</emphasis>
53 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
54 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX512BITALG__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
55 
56 <emphasis role="preprocessor">#if&#32;!defined(__AVX512BITALG__)&#32;||&#32;!defined(__AVX512BW__)</emphasis>
57 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
58 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx512bitalg,avx512bw&quot;)</emphasis>
59 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX512BITALGBW__</emphasis>
60 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX512VLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
61 
62 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
63 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
64 _mm512_mask_popcnt_epi8&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
65 {
66 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
69 }
70 
71 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
72 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
73 _mm512_maskz_popcnt_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
74 {
75 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountb_v64qi_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm512_setzero_si512&#32;(),
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
79 }
80 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
81 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
82 _mm512_mask_popcnt_epi16&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
83 {
84 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountw_v32hi_mask&#32;((__v32hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32hi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
87 }
88 
89 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m512i
90 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
91 _mm512_maskz_popcnt_epi16&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
92 {
93 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m512i)&#32;__builtin_ia32_vpopcountw_v32hi_mask&#32;((__v32hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32hi)
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm512_setzero_si512&#32;(),
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
97 }
98 
99 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>
100 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
101 _mm512_bitshuffle_epi64_mask&#32;(__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
102 {
103 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;__builtin_ia32_vpshufbitqmb512_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;-1);
106 }
107 
108 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>
109 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
110 _mm512_mask_bitshuffle_epi64_mask&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m512i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
111 {
112 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;__builtin_ia32_vpshufbitqmb512_mask&#32;((__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v64qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a910ccf7d2141c4a3b8675e2480cc33ff">__mmask64</link>)&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
115 }
116 
117 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX512BITALGBW__</emphasis>
118 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX512BITALGBW__</emphasis>
119 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
120 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX512BITALGBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
121 
122 <emphasis role="preprocessor">#if&#32;!defined(__AVX512BITALG__)&#32;||&#32;!defined(__AVX512VL__)&#32;||&#32;!defined(__AVX512BW__)</emphasis>
123 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
124 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx512bitalg,avx512vl,avx512bw&quot;)</emphasis>
125 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX512BITALGVLBW__</emphasis>
126 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX512VLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
127 
128 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
129 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
130 _mm256_mask_popcnt_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
131 {
132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
135 }
136 
137 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
138 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
139 _mm256_maskz_popcnt_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
140 {
141 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountb_v32qi_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_setzero_si256&#32;(),
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
145 }
146 
147 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>
148 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
149 _mm256_bitshuffle_epi64_mask&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
150 {
151 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;__builtin_ia32_vpshufbitqmb256_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;-1);
154 }
155 
156 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>
157 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
158 _mm256_mask_bitshuffle_epi64_mask&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
159 {
160 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;__builtin_ia32_vpshufbitqmb256_mask&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512vlintrin_8h_1adfd5d7ee308260ea96d3caf338c2ed75">__mmask32</link>)&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
163 }
164 
165 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX512BITALGVLBW__</emphasis>
166 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX512BITALGVLBW__</emphasis>
167 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
168 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX512BITALGVLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
169 
170 
171 <emphasis role="preprocessor">#if&#32;!defined(__AVX512BITALG__)&#32;||&#32;!defined(__AVX512VL__)</emphasis>
172 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
173 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx512bitalg,avx512vl&quot;)</emphasis>
174 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX512BITALGVL__</emphasis>
175 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX512VLBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
176 
177 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>
178 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
179 _mm_bitshuffle_epi64_mask&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
180 {
181 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;__builtin_ia32_vpshufbitqmb128_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;-1);
184 }
185 
186 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>
187 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
188 _mm_mask_bitshuffle_epi64_mask&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>)
189 {
190 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;__builtin_ia32_vpshufbitqmb128_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a383a4d504d8339114bbf28b7876a80a4">__B</link>,
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;<link linkend="__classes_2lib_2include_2avx2intrin_8h_1aa64b24b4136166eb543e3dc22b59369c">__M</link>);
193 }
194 
195 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
196 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
197 _mm256_popcnt_epi8&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
198 {
199 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountb_v32qi&#32;((__v32qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
200 }
201 
202 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
203 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
204 _mm256_popcnt_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
205 {
206 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountw_v16hi&#32;((__v16hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
207 }
208 
209 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
210 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
211 _mm_popcnt_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
212 {
213 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountb_v16qi&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
214 }
215 
216 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
217 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
218 _mm_popcnt_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
219 {
220 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountw_v8hi&#32;((__v8hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>);
221 }
222 
223 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
224 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
225 _mm256_mask_popcnt_epi16&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
226 {
227 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountw_v16hi_mask&#32;((__v16hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
230 }
231 
232 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i
233 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
234 _mm256_maskz_popcnt_epi16&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
235 {
236 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vpopcountw_v16hi_mask&#32;((__v16hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16hi)
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm256_setzero_si256&#32;(),
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
240 }
241 
242 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
243 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
244 _mm_mask_popcnt_epi8&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
245 {
246 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
249 }
250 
251 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
252 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
253 _mm_maskz_popcnt_epi8&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
254 {
255 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountb_v16qi_mask&#32;((__v16qi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v16qi)
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_si128&#32;(),
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1adc52f2d501b71ebd5df08fa2e0573636">__mmask16</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
259 }
260 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
261 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
262 _mm_mask_popcnt_epi16&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,&#32;<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
263 {
264 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountw_v8hi_mask&#32;((__v8hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8hi)&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ace4c8bc144569d0fa8d820544ee79463">__W</link>,
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
267 }
268 
269 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i
270 <link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
271 _mm_maskz_popcnt_epi16&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>)
272 {
273 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vpopcountw_v8hi_mask&#32;((__v8hi)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a26447bf0ac4b09fdfe3dfe7d1a563890">__A</link>,
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8hi)
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_setzero_si128&#32;(),
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2include_2avx512cdintrin_8h_1a9351fcffd2210999639f467660e32673">__mmask8</link>)&#32;<link linkend="__classes_2lib_2include_2avx512bitalgintrin_8h_1a132db22892ee002f0d504b064fd115c3">__U</link>);
277 }
278 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX512BITALGVL__</emphasis>
279 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX512BITALGVL__</emphasis>
280 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
281 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX512BITALGBW__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
282 
283 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_AVX512BITALGINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
