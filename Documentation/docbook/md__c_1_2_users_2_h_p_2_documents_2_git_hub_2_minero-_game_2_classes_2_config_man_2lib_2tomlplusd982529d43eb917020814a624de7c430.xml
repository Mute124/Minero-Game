<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430" xml:lang="en-US">
<title>Contributing to toml++</title>
<indexterm><primary>Contributing to toml++</primary></indexterm>

<para><anchor xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md113"/> Contributions are very welcome! Either by <link xlink:href="https://github.com/marzer/tomlplusplus/issues">reporting issues</link> or submitting pull requests. If you wish to submit a PR, please be aware that:</para>

<para><itemizedlist>
<listitem>
<para>The single-header file <computeroutput><link linkend="_toml_8hpp">toml.hpp</link></computeroutput> is generated by a script; make your changes in the files in <computeroutput>include</computeroutput>, <emphasis role="bold">not</emphasis> in <computeroutput><link linkend="_toml_8hpp">toml.hpp</link></computeroutput>.</para>
</listitem><listitem>
<para>Your changes should compile warning-free on at least one of:<itemizedlist>
<listitem>
<para>GCC 8 or higher</para>
</listitem><listitem>
<para>Clang 8 or higher</para>
</listitem><listitem>
<para>MSVC 19.2X (Visual Studio 2019) or higher</para>
</listitem></itemizedlist>
</para>
</listitem><listitem>
<para>You should regenerate the single-header file as part of your PR (a CI check will fail if you don&apos;t).</para>
</listitem></itemizedlist>
</para>

<para><?linebreak?></para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md114">
<title>Regenerating toml.hpp</title>

<para><orderedlist>
<listitem>
<para>Make your changes as necessary<itemizedlist>
<listitem>
<para>If you&apos;ve added a new header file that isn&apos;t going to be transitively included by one of the others, add an include directive to <computeroutput>include/toml++/toml.h</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem>
<para>Install the prerequisite python packages: <computeroutput>pip3 install -r tools/requirements.txt</computeroutput></para>
</listitem><listitem>
<para>Run <computeroutput><link linkend="_generate__single__header_8py">tools/generate_single_header.py</link></computeroutput></para>
</listitem></orderedlist>
</para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md115">
<title>Building and running the tests</title>

<para>Testing is done using <link xlink:href="https://github.com/catchorg/Catch2">Catch2</link>.</para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md116">
<title>Testing on Windows with Visual Studio</title>

<para>Install <link xlink:href="https://visualstudio.microsoft.com/vs/">Visual Studio</link> and <link xlink:href="https://marketplace.visualstudio.com/items?itemName=JohnnyHendriks.ext01">Test Adapter for Catch2</link>, then open <computeroutput>toml++.sln</computeroutput> and build the projects in the <computeroutput>tests</computeroutput> solution folder. Visual Studio&apos;s Test Explorer should pick these up and allow you to run the tests directly.</para>

<para>If test discovery fails you can usually fix it by enabling <computeroutput>Auto Detect runsettings Files</computeroutput> (settings gear icon &gt; <computeroutput>Configure Run Settings</computeroutput>).</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md117">
<title>Testing on Linux (and WSL)</title>

<para><literallayout><computeroutput>#&#32;install&#32;ninja,&#32;meson,&#32;locales&#32;(first&#32;time&#32;only)
sudo&#32;apt&#32;update&#32;&amp;&amp;&#32;sudo&#32;apt&#32;install&#32;-y&#32;locales&#32;python3&#32;python3-pip&#32;ninja-build
sudo&#32;pip3&#32;install&#32;meson
sudo&#32;locale-gen&#32;&apos;en_US.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;ja_JP.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;de_DE.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;it_IT.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;tr_TR.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;fi_FI.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;fr_FR.utf8&apos;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;zh_CN.utf8&apos;

#&#32;create&#32;the&#32;build&#32;configs&#32;(first&#32;time&#32;only)
meson&#32;setup&#32;build-debug&#32;&#32;&#32;--buildtype=debug&#32;&#32;&#32;-Ddevel=true
meson&#32;setup&#32;build-release&#32;--buildtype=release&#32;&#32;&#32;-Ddevel=true

#&#32;run&#32;the&#32;tests
cd&#32;build-debug&#32;&amp;&amp;&#32;ninja&#32;&amp;&amp;&#32;ninja&#32;test&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&amp;&amp;&#32;cd&#32;../build-release&#32;&amp;&amp;&#32;ninja&#32;&amp;&amp;&#32;ninja&#32;test&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&amp;&amp;&#32;cd&#32;..
</computeroutput></literallayout></para>

<para><blockquote>
<para>&#8205;â„¹&amp;#xFE0F; Pass <computeroutput>-Duse_vendored_libs=false</computeroutput> to Meson if you wish to use the system-installed version of Catch2 rather than the vendored one. </para>
</blockquote><?linebreak?></para>
</section>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430_1autotoc_md118">
<title>Testing with the &lt;a href=&quot;https://github.com/BurntSushi/toml-test&quot; &gt;toml-test&lt;/a&gt; suite</title>

<para>As an optional extra you may wish to test against the &apos;official&apos; test TOML test suite, <link xlink:href="https://github.com/BurntSushi/toml-test">BurntSushi/toml-test</link>. See the instructions at <link linkend="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus81961f6eaa96c67d28eba6d6e0651c40">toml-test/README</link>. Note that the toml++ tests already consume tests from the offical suite via a C++ code-generation script so you are not expected to take this extra step as part of contributing to the library. </para>
</section>
</section>
