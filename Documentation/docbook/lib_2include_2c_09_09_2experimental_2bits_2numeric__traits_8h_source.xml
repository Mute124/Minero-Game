<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2experimental_2bits_2numeric__traits_8h_source" xml:lang="en-US">
<title>numeric_traits.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/experimental/bits/numeric_traits.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Definition&#32;of&#32;numeric_limits&#32;replacement&#32;traits&#32;P1841R1&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2020-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
26 
27 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;{
28 
29 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;
30 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__value_exists_impl&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>&#32;{};
31 
32 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
33 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__value_exists_impl&lt;_Trait,&#32;_Tp,&#32;<link linkend="_namespacenlohmann_1_1detail_1a92a167c49c6697b6ffe4f79492c705e5">void_t</link>&lt;decltype(_Trait&lt;_Tp&gt;::<link linkend="_classvalue">value</link>)&gt;&gt;
34 &#32;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
35 
36 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
37 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits_impl&#32;{};
38 
39 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
40 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
41 &#32;&#32;{
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>
43 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(_Tp)&#32;*&#32;__CHAR_BIT__&#32;-&#32;is_signed_v&lt;_Tp&gt;;
44 &#32;&#32;};
45 
46 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
47 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits_impl&lt;float,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
48 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MANT_DIG__;&#32;};
49 
50 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
51 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits_impl&lt;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
52 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MANT_DIG__;&#32;};
53 
54 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
55 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits_impl&lt;long&#32;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
56 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MANT_DIG__;&#32;};
57 
58 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
59 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10_impl&#32;{};
60 
61 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
62 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
63 &#32;&#32;{
64 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;fraction&#32;643/2136&#32;approximates&#32;log10(2)&#32;to&#32;7&#32;significant&#32;digits.</emphasis>
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__digits_impl&lt;_Tp&gt;::value&#32;*&#32;643L&#32;/&#32;2136;
66 &#32;&#32;};
67 
68 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
69 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10_impl&lt;float,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
70 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_DIG__;&#32;};
71 
72 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
73 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10_impl&lt;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
74 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_DIG__;&#32;};
75 
76 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
77 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10_impl&lt;long&#32;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
78 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_DIG__;&#32;};
79 
80 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
81 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_digits10_impl&#32;{};
82 
83 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
84 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_digits10_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
85 &#32;&#32;{
86 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>
87 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;is_floating_point_v&lt;_Tp&gt;&#32;?&#32;2&#32;+&#32;__digits_impl&lt;_Tp&gt;::value&#32;*&#32;643L&#32;/&#32;2136
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;__digits10_impl&lt;_Tp&gt;::value&#32;+&#32;1;
89 &#32;&#32;};
90 
91 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
92 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent_impl&#32;{};
93 
94 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
95 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent_impl&lt;float&gt;
96 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MAX_EXP__;&#32;};
97 
98 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
99 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent_impl&lt;double&gt;
100 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MAX_EXP__;&#32;};
101 
102 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
103 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent_impl&lt;long&#32;double&gt;
104 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MAX_EXP__;&#32;};
105 
106 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
107 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent10_impl&#32;{};
108 
109 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
110 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent10_impl&lt;float&gt;
111 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MAX_10_EXP__;&#32;};
112 
113 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
114 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent10_impl&lt;double&gt;
115 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MAX_10_EXP__;&#32;};
116 
117 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
118 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent10_impl&lt;long&#32;double&gt;
119 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MAX_10_EXP__;&#32;};
120 
121 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
122 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent_impl&#32;{};
123 
124 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
125 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent_impl&lt;float&gt;
126 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MIN_EXP__;&#32;};
127 
128 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
129 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent_impl&lt;double&gt;
130 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MIN_EXP__;&#32;};
131 
132 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
133 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent_impl&lt;long&#32;double&gt;
134 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MIN_EXP__;&#32;};
135 
136 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
137 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent10_impl&#32;{};
138 
139 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
140 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent10_impl&lt;float&gt;
141 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MIN_10_EXP__;&#32;};
142 
143 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
144 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent10_impl&lt;double&gt;
145 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MIN_10_EXP__;&#32;};
146 
147 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
148 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent10_impl&lt;long&#32;double&gt;
149 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MIN_10_EXP__;&#32;};
150 
151 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
152 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__radix_impl&#32;{};
153 
154 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
155 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__radix_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
156 &#32;&#32;{
157 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>
158 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;is_floating_point_v&lt;_Tp&gt;&#32;?&#32;__FLT_RADIX__&#32;:&#32;2;
159 &#32;&#32;};
160 
161 <emphasis role="comment">//&#32;[num.traits.util],&#32;numeric&#32;utility&#32;traits</emphasis>
162 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
163 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__value_exists&#32;:&#32;__value_exists_impl&lt;_Trait,&#32;_Tp&gt;&#32;{};
164 
165 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
166 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacestd_1aa7ae232fbcf2790918a97f10f6ac2da4">__value_exists_v</link>&#32;=&#32;__value_exists&lt;_Trait,&#32;_Tp&gt;::value;
167 
168 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Up&#32;=&#32;_Tp&gt;
169 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Up
170 &#32;&#32;<link linkend="_namespacestd_1afb0b54c9aca639344dd22870d4179eca">__value_or</link>(_Up&#32;__def&#32;=&#32;_Up())&#32;noexcept
171 &#32;&#32;{
172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(__value_exists_v&lt;_Trait,&#32;_Tp&gt;)
173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_Up<emphasis role="keyword">&gt;</emphasis>(_Trait&lt;_Tp&gt;::value);
174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__def;
176 &#32;&#32;}
177 
178 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
179 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min_impl&#32;{};
180 
181 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
182 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
183 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_classvalue">value</link>&#32;=&#32;1;&#32;};
184 
185 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
186 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min_impl&lt;float,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
187 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MIN__;&#32;};
188 
189 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
190 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min_impl&lt;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
191 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MIN__;&#32;};
192 
193 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
194 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min_impl&lt;long&#32;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
195 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MIN__;&#32;};
196 
197 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
198 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__denorm_min_impl&#32;:&#32;__norm_min_impl&lt;_Tp&gt;&#32;{};
199 
200 <emphasis role="preprocessor">#if&#32;__FLT_HAS_DENORM__</emphasis>
201 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
202 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__denorm_min_impl&lt;float&gt;
203 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_DENORM_MIN__;&#32;};
204 <emphasis role="preprocessor">#endif</emphasis>
205 
206 <emphasis role="preprocessor">#if&#32;__DBL_HAS_DENORM__</emphasis>
207 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
208 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__denorm_min_impl&lt;double&gt;
209 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_DENORM_MIN__;&#32;};
210 <emphasis role="preprocessor">#endif</emphasis>
211 
212 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_DENORM__</emphasis>
213 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
214 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__denorm_min_impl&lt;long&#32;double&gt;
215 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_DENORM_MIN__;&#32;};
216 <emphasis role="preprocessor">#endif</emphasis>
217 
218 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
219 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__epsilon_impl&#32;{};
220 
221 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
222 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__epsilon_impl&lt;float&gt;
223 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_EPSILON__;&#32;};
224 
225 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
226 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__epsilon_impl&lt;double&gt;
227 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_EPSILON__;&#32;};
228 
229 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
230 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__epsilon_impl&lt;long&#32;double&gt;
231 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_EPSILON__;&#32;};
232 
233 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
234 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min_impl&#32;{};
235 
236 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
237 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
238 &#32;&#32;{
239 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_classvalue">value</link>
240 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;is_unsigned_v&lt;_Tp&gt;&#32;?&#32;_Tp()
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;-2&#32;*&#32;(_Tp(1)&#32;&lt;&lt;&#32;__digits_impl&lt;_Tp&gt;::<link linkend="_classvalue">value</link>&#32;-&#32;1);
242 &#32;&#32;};
243 
244 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
245 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min_impl&lt;float,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
246 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;-__FLT_MAX__;&#32;};
247 
248 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
249 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min_impl&lt;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
250 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;-__DBL_MAX__;&#32;};
251 
252 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
253 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min_impl&lt;long&#32;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
254 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;-__LDBL_MAX__;&#32;};
255 
256 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_arithmetic_v&lt;_Tp&gt;&gt;
257 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max_impl&#32;{};
258 
259 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
260 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
261 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_classvalue">value</link>&#32;=&#32;~__finite_min_impl&lt;_Tp&gt;::value;&#32;};
262 
263 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
264 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max_impl&lt;float,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
265 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__FLT_MAX__;&#32;};
266 
267 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
268 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max_impl&lt;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
269 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__DBL_MAX__;&#32;};
270 
271 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
272 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max_impl&lt;long&#32;double,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
273 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__LDBL_MAX__;&#32;};
274 
275 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
276 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__infinity_impl&#32;{};
277 
278 <emphasis role="preprocessor">#if&#32;__FLT_HAS_INFINITY__</emphasis>
279 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
280 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__infinity_impl&lt;float&gt;
281 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_inff();&#32;};
282 <emphasis role="preprocessor">#endif</emphasis>
283 
284 <emphasis role="preprocessor">#if&#32;__DBL_HAS_INFINITY__</emphasis>
285 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
286 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__infinity_impl&lt;double&gt;
287 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_inf();&#32;};
288 <emphasis role="preprocessor">#endif</emphasis>
289 
290 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_INFINITY__</emphasis>
291 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
292 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__infinity_impl&lt;long&#32;double&gt;
293 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_infl();&#32;};
294 <emphasis role="preprocessor">#endif</emphasis>
295 
296 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
297 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__quiet_NaN_impl&#32;{};
298 
299 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
300 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
301 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__quiet_NaN_impl&lt;float&gt;
302 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nanf(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
303 <emphasis role="preprocessor">#endif</emphasis>
304 
305 <emphasis role="preprocessor">#if&#32;__DBL_HAS_QUIET_NAN__</emphasis>
306 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
307 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__quiet_NaN_impl&lt;double&gt;
308 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nan(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
309 <emphasis role="preprocessor">#endif</emphasis>
310 
311 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_QUIET_NAN__</emphasis>
312 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
313 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__quiet_NaN_impl&lt;long&#32;double&gt;
314 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nanl(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
315 <emphasis role="preprocessor">#endif</emphasis>
316 
317 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_<emphasis role="keywordtype">float</emphasis>ing_po<emphasis role="keywordtype">int</emphasis>_v&lt;_Tp&gt;&gt;
318 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__reciprocal_overflow_threshold_impl&#32;{};
319 
320 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
321 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__reciprocal_overflow_threshold_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
322 &#32;&#32;{
323 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;typically&#32;yields&#32;a&#32;subnormal&#32;value.&#32;Is&#32;this&#32;incorrect&#32;for</emphasis>
324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;flush-to-zero&#32;configurations?</emphasis>
325 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_structstd_1_1____reciprocal__overflow__threshold__impl_3_01___tp_00_01true_01_4_1a1ced245fbbc5f3052f1044af16ada1c1">_S_search</link>(_Tp&#32;__ok,&#32;_Tp&#32;__overflows)
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_Tp&#32;__mid&#32;=&#32;(__ok&#32;+&#32;__overflows)&#32;/&#32;2;
328 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1/__mid&#32;without&#32;-ffast-math&#32;is&#32;not&#32;a&#32;constant&#32;expression&#32;if&#32;it</emphasis>
329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;overflows.&#32;Therefore&#32;divide&#32;1&#32;by&#32;the&#32;radix&#32;before&#32;division.</emphasis>
330 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Consequently&#32;finite_max&#32;(the&#32;threshold)&#32;must&#32;be&#32;scaled&#32;by&#32;the</emphasis>
331 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;same&#32;value.</emphasis>
332 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__mid&#32;==&#32;__ok&#32;||&#32;__mid&#32;==&#32;__overflows)
333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__ok;
334 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_Tp(1)&#32;/&#32;(<link linkend="_structstd_1_1____radix__impl">__radix_impl&lt;_Tp&gt;::value</link>&#32;*&#32;__mid)
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;=&#32;<link linkend="_structstd_1_1____finite__max__impl">__finite_max_impl&lt;_Tp&gt;::value</link>&#32;/&#32;<link linkend="_structstd_1_1____radix__impl">__radix_impl&lt;_Tp&gt;::value</link>)
336 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_S_search(__mid,&#32;__overflows);
337 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
338 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_S_search(__ok,&#32;__mid);
339 &#32;&#32;&#32;&#32;}
340 
341 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_classvalue">value</link>
342 &#32;&#32;&#32;&#32;&#32;&#32;=&#32;_S_search(_Tp(1.01)&#32;/&#32;<link linkend="_structstd_1_1____finite__max__impl">__finite_max_impl&lt;_Tp&gt;::value</link>,
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Tp(0.99)&#32;/&#32;<link linkend="_structstd_1_1____finite__max__impl">__finite_max_impl&lt;_Tp&gt;::value</link>);
344 &#32;&#32;};
345 
346 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;=&#32;is_<emphasis role="keywordtype">float</emphasis>ing_po<emphasis role="keywordtype">int</emphasis>_v&lt;_Tp&gt;&gt;
347 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__round_error_impl&#32;{};
348 
349 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
350 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__round_error_impl&lt;_Tp,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;
351 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;_Tp&#32;<link linkend="_classvalue">value</link>&#32;=&#32;0.5;&#32;};
352 
353 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
354 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__signaling_NaN_impl&#32;{};
355 
356 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
357 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
358 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__signaling_NaN_impl&lt;float&gt;
359 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nansf(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
360 <emphasis role="preprocessor">#endif</emphasis>
361 
362 <emphasis role="preprocessor">#if&#32;__DBL_HAS_QUIET_NAN__</emphasis>
363 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
364 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__signaling_NaN_impl&lt;double&gt;
365 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nans(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
366 <emphasis role="preprocessor">#endif</emphasis>
367 
368 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_QUIET_NAN__</emphasis>
369 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
370 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__signaling_NaN_impl&lt;long&#32;double&gt;
371 &#32;&#32;{&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;__builtin_nansl(<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;};
372 <emphasis role="preprocessor">#endif</emphasis>
373 
374 <emphasis role="comment">//&#32;[num.traits.val],&#32;numeric&#32;distinguished&#32;value&#32;traits</emphasis>
375 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
376 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__denorm_min&#32;:&#32;__denorm_min_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
377 
378 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
379 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__epsilon&#32;:&#32;__epsilon_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
380 
381 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
382 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_max&#32;:&#32;__finite_max_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
383 
384 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
385 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__finite_min&#32;:&#32;__finite_min_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
386 
387 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
388 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__infinity&#32;:&#32;__infinity_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
389 
390 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
391 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__norm_min&#32;:&#32;__norm_min_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
392 
393 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
394 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__quiet_NaN&#32;:&#32;__quiet_NaN_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
395 
396 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
397 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__reciprocal_overflow_threshold
398 &#32;&#32;:&#32;__reciprocal_overflow_threshold_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
399 
400 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
401 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__round_error&#32;:&#32;__round_error_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
402 
403 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
404 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__signaling_NaN&#32;:&#32;__signaling_NaN_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
405 
406 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
407 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a62381ea7149c93b6d057c647ff1d1c49">__denorm_min_v</link>&#32;=&#32;__denorm_min&lt;_Tp&gt;::value;
408 
409 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
410 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a3760ff6d7b14de23097c9a1e007ae635">__epsilon_v</link>&#32;=&#32;__epsilon&lt;_Tp&gt;::value;
411 
412 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
413 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a0d8da259a6a4c3a911b5a4f46a91bd65">__finite_max_v</link>&#32;=&#32;__finite_max&lt;_Tp&gt;::value;
414 
415 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
416 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1af108d927d1d48c236ee58f02e1f66206">__finite_min_v</link>&#32;=&#32;__finite_min&lt;_Tp&gt;::value;
417 
418 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
419 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a459ce5336666d09ed2cbda6902f8d464">__infinity_v</link>&#32;=&#32;__infinity&lt;_Tp&gt;::value;
420 
421 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
422 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1ae82e3e386cb77c5f9df37f8a7e4002f8">__norm_min_v</link>&#32;=&#32;__norm_min&lt;_Tp&gt;::value;
423 
424 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
425 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a739eba7491f4e358b44a95d43570d4bf">__quiet_NaN_v</link>&#32;=&#32;__quiet_NaN&lt;_Tp&gt;::value;
426 
427 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
428 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1ab133749ec0bcee1e1f914509b5512cb4">__reciprocal_overflow_threshold_v</link>
429 &#32;&#32;&#32;&#32;=&#32;__reciprocal_overflow_threshold&lt;_Tp&gt;::value;
430 
431 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
432 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a95c232e9e27c7f3d49016b0732483957">__round_error_v</link>&#32;=&#32;__round_error&lt;_Tp&gt;::value;
433 
434 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
435 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a2d6041736fd2bd49d6492956f0b85f8f">__signaling_NaN_v</link>&#32;=&#32;__signaling_NaN&lt;_Tp&gt;::value;
436 
437 <emphasis role="comment">//&#32;[num.traits.char],&#32;numeric&#32;characteristics&#32;traits</emphasis>
438 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
439 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits&#32;:&#32;__digits_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
440 
441 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
442 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__digits10&#32;:&#32;__digits10_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
443 
444 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
445 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_digits10&#32;:&#32;__max_digits10_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
446 
447 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
448 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent&#32;:&#32;__max_exponent_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
449 
450 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
451 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__max_exponent10&#32;:&#32;__max_exponent10_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
452 
453 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
454 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent&#32;:&#32;__min_exponent_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
455 
456 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
457 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__min_exponent10&#32;:&#32;__min_exponent10_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
458 
459 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
460 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__radix&#32;:&#32;__radix_impl&lt;remove_cv_t&lt;_Tp&gt;&gt;&#32;{};
461 
462 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
463 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a3b0642926b321992beb023600ace989e">__digits_v</link>&#32;=&#32;__digits&lt;_Tp&gt;::value;
464 
465 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
466 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1ab4cb32ee09031f5ba80a0c177ad45b30">__digits10_v</link>&#32;=&#32;__digits10&lt;_Tp&gt;::value;
467 
468 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
469 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1aad62a7deedbdb38c20d9a5e398cdd4b9">__max_digits10_v</link>&#32;=&#32;__max_digits10&lt;_Tp&gt;::value;
470 
471 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
472 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a13620c564d7575a1e3c9057a9b42d4b1">__max_exponent_v</link>&#32;=&#32;__max_exponent&lt;_Tp&gt;::value;
473 
474 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
475 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a70b9e37a46d30c3c7bb2f38e88d40802">__max_exponent10_v</link>&#32;=&#32;__max_exponent10&lt;_Tp&gt;::value;
476 
477 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
478 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a1299ac5d8f27c5d9767c12358ca28971">__min_exponent_v</link>&#32;=&#32;__min_exponent&lt;_Tp&gt;::value;
479 
480 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
481 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a40b4fcdd5587c393e222b408e5747b09">__min_exponent10_v</link>&#32;=&#32;__min_exponent10&lt;_Tp&gt;::value;
482 
483 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
484 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;<link linkend="_namespacestd_1a511c20ecb8405016527733b89d3aada3">__radix_v</link>&#32;=&#32;__radix&lt;_Tp&gt;::value;
485 
486 <emphasis role="comment">//&#32;mkretz&apos;s&#32;extensions</emphasis>
487 <emphasis role="comment">//&#32;TODO:&#32;does&#32;GCC&#32;tell&#32;me?&#32;__GCC_IEC_559&#32;&gt;=&#32;2&#32;is&#32;not&#32;the&#32;right&#32;answer</emphasis>
488 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
489 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_storage_format&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
490 
491 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
492 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacestd_1aa15f4d72f6eb58958e3763c45a2dfcdc">__has_iec559_storage_format_v</link>
493 &#32;&#32;&#32;&#32;=&#32;__has_iec559_storage_format&lt;_Tp&gt;::value;
494 
495 <emphasis role="comment">/*&#32;To&#32;propose:</emphasis>
496 <emphasis role="comment">&#32;&#32;&#32;If&#32;__has_iec559_behavior&lt;__quiet_NaN,&#32;T&gt;&#32;is&#32;true&#32;the&#32;following&#32;holds:</emphasis>
497 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;nan&#32;==&#32;nan&#32;is&#32;false</emphasis>
498 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isnan(nan)&#32;is&#32;true</emphasis>
499 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isnan(nan&#32;+&#32;x)&#32;is&#32;true</emphasis>
500 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isnan(inf/inf)&#32;is&#32;true</emphasis>
501 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isnan(0/0)&#32;is&#32;true</emphasis>
502 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isunordered(nan,&#32;x)&#32;is&#32;true</emphasis>
503 <emphasis role="comment"></emphasis>
504 <emphasis role="comment">&#32;&#32;&#32;If&#32;__has_iec559_behavior&lt;__infinity,&#32;T&gt;&#32;is&#32;true&#32;the&#32;following&#32;holds&#32;(x&#32;is</emphasis>
505 <emphasis role="comment">&#32;&#32;&#32;neither&#32;nan&#32;nor&#32;inf):</emphasis>
506 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isinf(inf)&#32;is&#32;true</emphasis>
507 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isinf(inf&#32;+&#32;x)&#32;is&#32;true</emphasis>
508 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;-&#32;isinf(1/0)&#32;is&#32;true</emphasis>
509 <emphasis role="comment">&#32;*/</emphasis>
510 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
511 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>&#32;{};
512 
513 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>_Trait,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Tp&gt;
514 &#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacestd_1a18c96fc1fd03305b7bffd337c2911751">__has_iec559_behavior_v</link>
515 &#32;&#32;&#32;&#32;=&#32;__has_iec559_behavior&lt;_Trait,&#32;_Tp&gt;::value;
516 
517 <emphasis role="preprocessor">#if&#32;!__FINITE_MATH_ONLY__</emphasis>
518 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
519 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
520 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__quiet_NaN,&#32;float&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
521 <emphasis role="preprocessor">#endif</emphasis>
522 
523 <emphasis role="preprocessor">#if&#32;__DBL_HAS_QUIET_NAN__</emphasis>
524 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
525 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__quiet_NaN,&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
526 <emphasis role="preprocessor">#endif</emphasis>
527 
528 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_QUIET_NAN__</emphasis>
529 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
530 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__quiet_NaN,&#32;long&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
531 <emphasis role="preprocessor">#endif</emphasis>
532 
533 <emphasis role="preprocessor">#if&#32;__FLT_HAS_INFINITY__</emphasis>
534 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
535 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__infinity,&#32;float&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
536 <emphasis role="preprocessor">#endif</emphasis>
537 
538 <emphasis role="preprocessor">#if&#32;__DBL_HAS_INFINITY__</emphasis>
539 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
540 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__infinity,&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
541 <emphasis role="preprocessor">#endif</emphasis>
542 
543 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_INFINITY__</emphasis>
544 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
545 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__infinity,&#32;long&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
546 <emphasis role="preprocessor">#endif</emphasis>
547 
548 <emphasis role="preprocessor">#ifdef&#32;__SUPPORT_SNAN__</emphasis>
549 <emphasis role="preprocessor">#if&#32;__FLT_HAS_QUIET_NAN__</emphasis>
550 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
551 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__signaling_NaN,&#32;float&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
552 <emphasis role="preprocessor">#endif</emphasis>
553 
554 <emphasis role="preprocessor">#if&#32;__DBL_HAS_QUIET_NAN__</emphasis>
555 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
556 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__signaling_NaN,&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
557 <emphasis role="preprocessor">#endif</emphasis>
558 
559 <emphasis role="preprocessor">#if&#32;__LDBL_HAS_QUIET_NAN__</emphasis>
560 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
561 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>__has_iec559_behavior&lt;__signaling_NaN,&#32;long&#32;double&gt;&#32;:&#32;<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>&#32;{};
562 <emphasis role="preprocessor">#endif</emphasis>
563 
564 <emphasis role="preprocessor">#endif</emphasis>
565 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__FINITE_MATH_ONLY__</emphasis>
566 
567 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
</programlisting></section>
