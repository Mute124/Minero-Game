<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2constructor__destructor__fn__imps_8hpp_source" xml:lang="en-US">
<title>constructor_destructor_fn_imps.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
43 
44 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
45 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::entry_allocator
46 PB_DS_CLASS_C_DEC::s_entry_allocator;
47 
48 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
49 <emphasis role="keyword">typename</emphasis>&#32;PB_DS_CLASS_C_DEC::entry_pointer_allocator
50 PB_DS_CLASS_C_DEC::s_entry_pointer_allocator;
51 
52 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
53 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;It&gt;
54 <emphasis role="keywordtype">void</emphasis>
55 PB_DS_CLASS_C_DEC::
56 copy_from_range(It&#32;first_it,&#32;It&#32;last_it)
57 {
58 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(first_it&#32;!=&#32;last_it)
59 &#32;&#32;&#32;&#32;insert(*(first_it++));
60 }
61 
62 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
63 PB_DS_CLASS_C_DEC::
64 PB_DS_CC_HASH_NAME()&#32;:
65 &#32;&#32;ranged_hash_fn_base(resize_base::get_nearest_larger_size(1)),
66 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
67 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
68 {
69 &#32;&#32;initialize();
70 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
71 }
72 
73 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
74 PB_DS_CLASS_C_DEC::
75 PB_DS_CC_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn)&#32;:
76 &#32;&#32;ranged_hash_fn_base(resize_base::get_nearest_larger_size(1),&#32;r_hash_fn),
77 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
78 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
79 {
80 &#32;&#32;initialize();
81 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
82 }
83 
84 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
85 PB_DS_CLASS_C_DEC::
86 PB_DS_CC_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn)&#32;:
87 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>(r_eq_fn),
88 &#32;&#32;ranged_hash_fn_base(resize_base::get_nearest_larger_size(1),&#32;r_hash_fn),
89 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
90 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
91 {
92 &#32;&#32;<link linkend="_namespacestd_1a9042ae744521b1770e868813f939b4b7">std::fill</link>(m_entries,&#32;m_entries&#32;+&#32;m_num_e,&#32;(entry_pointer)0);
93 &#32;&#32;Resize_Policy::notify_cleared();
94 &#32;&#32;ranged_hash_fn_base::notify_resized(m_num_e);
95 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
96 }
97 
98 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
99 PB_DS_CLASS_C_DEC::
100 PB_DS_CC_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn,&#32;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Hash_Fn&amp;&#32;r_comb_hash_fn)&#32;:
102 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>(r_eq_fn),
103 &#32;&#32;ranged_hash_fn_base(resize_base::get_nearest_larger_size(1),
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_hash_fn,&#32;r_comb_hash_fn),
105 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
106 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
107 {
108 &#32;&#32;initialize();
109 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
110 }
111 
112 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
113 PB_DS_CLASS_C_DEC::
114 PB_DS_CC_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;Hash_Fn&amp;&#32;r_hash_fn,&#32;<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn,&#32;
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Comb_Hash_Fn&amp;&#32;r_comb_hash_fn,&#32;
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Resize_Policy&amp;&#32;r_resize_policy)&#32;:
117 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>(r_eq_fn),
118 &#32;&#32;Resize_Policy(r_resize_policy),
119 &#32;&#32;ranged_hash_fn_base(resize_base::get_nearest_larger_size(1),
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_hash_fn,&#32;r_comb_hash_fn),
121 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
122 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
123 {
124 &#32;&#32;initialize();
125 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
126 }
127 
128 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
129 PB_DS_CLASS_C_DEC::
130 PB_DS_CC_HASH_NAME(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)&#32;:
131 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2cc__hash__table__map___2cc__ht__map___8hpp_1a59100664ff9233dd7b0160dfe4dc8cc8">PB_DS_HASH_EQ_FN_C_DEC</link>(other),
132 &#32;&#32;resize_base(other),&#32;ranged_hash_fn_base(other),
133 &#32;&#32;m_num_e(resize_base::get_nearest_larger_size(1)),&#32;m_num_used_e(0),
134 &#32;&#32;m_entries(s_entry_pointer_allocator.allocate(m_num_e))
135 {
136 &#32;&#32;initialize();
137 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
138 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a130bf0cd31a0783cd03563f46b46915b">__try</link>
139 &#32;&#32;&#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;copy_from_range(other.begin(),&#32;other.end());
141 &#32;&#32;&#32;&#32;&#32;&#32;}
142 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(...)
143 &#32;&#32;&#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;deallocate_all();
145 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a92ef03a5310b10a4243a6ec8f43494b5">__throw_exception_again</link>;
146 &#32;&#32;&#32;&#32;&#32;&#32;}
147 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
148 }
149 
150 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
151 PB_DS_CLASS_C_DEC::
152 ~PB_DS_CC_HASH_NAME()
153 {&#32;deallocate_all();&#32;}
154 
155 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
156 <emphasis role="keywordtype">void</emphasis>
157 PB_DS_CLASS_C_DEC::
158 swap(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)
159 {
160 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
161 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
162 
163 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_entries,&#32;other.m_entries);
164 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_num_e,&#32;other.m_num_e);
165 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_num_used_e,&#32;other.m_num_used_e);
166 &#32;&#32;ranged_hash_fn_base::swap(other);
167 &#32;&#32;hash_eq_fn_base::swap(other);
168 &#32;&#32;resize_base::swap(other);
169 
170 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1a784d392bfeacfb0e3e6e0d2719489fb6">_GLIBCXX_DEBUG_ONLY</link>(debug_base::swap(other));
171 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
172 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
173 }
174 
175 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
176 <emphasis role="keywordtype">void</emphasis>
177 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
178 deallocate_all()
179 {
180 &#32;&#32;clear();
181 &#32;&#32;s_entry_pointer_allocator.deallocate(m_entries,&#32;m_num_e);
182 }
183 
184 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
185 <emphasis role="keywordtype">void</emphasis>
186 PB_DS_CLASS_C_DEC::
187 initialize()
188 {
189 &#32;&#32;<link linkend="_namespacestd_1a9042ae744521b1770e868813f939b4b7">std::fill</link>(m_entries,&#32;m_entries&#32;+&#32;m_num_e,&#32;entry_pointer(0));
190 &#32;&#32;Resize_Policy::notify_resized(m_num_e);
191 &#32;&#32;Resize_Policy::notify_cleared();
192 &#32;&#32;ranged_hash_fn_base::notify_resized(m_num_e);
193 }
194 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
