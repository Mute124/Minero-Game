<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2ext_2opt__random_8h_source" xml:lang="en-US">
<title>opt_random.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/x86_64-w64-mingw32/ext/opt_random.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Optimizations&#32;for&#32;random&#32;number&#32;extensions,&#32;x86&#32;version&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2012-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_EXT_OPT_RANDOM_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_EXT_OPT_RANDOM_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
34 
35 <emphasis role="preprocessor">#if&#32;__BYTE_ORDER__&#32;==&#32;__ORDER_LITTLE_ENDIAN__</emphasis>
36 
37 <emphasis role="preprocessor">#ifdef&#32;__SSE2__</emphasis>
38 
39 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
40 {
41 _GLIBCXX_BEGIN_NAMESPACE_VERSION
42 
43 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>{
44 
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl2,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr2,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk1,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk2,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk3,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk4&gt;
47 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;__m128i&#32;__sse2_recursion(__m128i&#32;__a,&#32;__m128i&#32;__b,
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__c,&#32;__m128i&#32;__d)
49 &#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;__m128i&#32;__y&#32;=&#32;_mm_srli_epi32(__b,&#32;__sr1);
51 &#32;&#32;&#32;&#32;__m128i&#32;__z&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a6184a7deed3960a115ba3b83ea370d44">_mm_srli_si128</link>(__c,&#32;__sr2);
52 &#32;&#32;&#32;&#32;__m128i&#32;__v&#32;=&#32;_mm_slli_epi32(__d,&#32;__sl1);
53 &#32;&#32;&#32;&#32;__z&#32;=&#32;_mm_xor_si128(__z,&#32;__a);
54 &#32;&#32;&#32;&#32;__z&#32;=&#32;_mm_xor_si128(__z,&#32;__v);
55 &#32;&#32;&#32;&#32;__m128i&#32;__x&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2091290bb42bdb544fbc4c652afc2751">_mm_slli_si128</link>(__a,&#32;__sl2);
56 &#32;&#32;&#32;&#32;__y&#32;=&#32;_mm_and_si128(__y,&#32;_mm_set_epi32(__msk4,&#32;__msk3,&#32;__msk2,&#32;__msk1));
57 &#32;&#32;&#32;&#32;__z&#32;=&#32;_mm_xor_si128(__z,&#32;__x);
58 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm_xor_si128(__z,&#32;__y);
59 &#32;&#32;&#32;&#32;&#32;&#32;}
60 
61 &#32;&#32;}
62 
63 
64 <emphasis role="preprocessor">#define&#32;_GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ&#32;&#32;1</emphasis>
65 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_UIntType,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__m,
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__pos1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl2,
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr2,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk1,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk2,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk3,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk4,
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity1,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity2,
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity3,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity4&gt;
72 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;simd_fast_mersenne_twister_engine&lt;_UIntType,&#32;__m,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__pos1,&#32;__sl1,&#32;__sl2,&#32;__sr1,&#32;__sr2,
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__msk1,&#32;__msk2,&#32;__msk3,&#32;__msk4,
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parity1,&#32;__parity2,&#32;__parity3,
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parity4&gt;::
77 &#32;&#32;&#32;&#32;_M_gen_rand(<emphasis role="keywordtype">void</emphasis>)
78 &#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__r1&#32;=&#32;_mm_load_si128(&amp;_M_state[_M_nstate&#32;-&#32;2]);
80 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__r2&#32;=&#32;_mm_load_si128(&amp;_M_state[_M_nstate&#32;-&#32;1]);
81 
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__i;
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(__i&#32;=&#32;0;&#32;__i&#32;&lt;&#32;_M_nstate&#32;-&#32;__pos1;&#32;++__i)
84 &#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__r&#32;=&#32;__sse2_recursion&lt;__sl1,&#32;__sl2,&#32;__sr1,&#32;__sr2,
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__msk1,&#32;__msk2,&#32;__msk3,&#32;__msk4&gt;
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_M_state[__i],&#32;_M_state[__i&#32;+&#32;__pos1],&#32;__r1,&#32;__r2);
88 &#32;&#32;&#32;&#32;&#32;&#32;_mm_store_si128(&amp;_M_state[__i],&#32;__r);
89 &#32;&#32;&#32;&#32;&#32;&#32;__r1&#32;=&#32;__r2;
90 &#32;&#32;&#32;&#32;&#32;&#32;__r2&#32;=&#32;__r;
91 &#32;&#32;&#32;&#32;}
92 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__i&#32;&lt;&#32;_M_nstate;&#32;++__i)
93 &#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__r&#32;=&#32;__sse2_recursion&lt;__sl1,&#32;__sl2,&#32;__sr1,&#32;__sr2,
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__msk1,&#32;__msk2,&#32;__msk3,&#32;__msk4&gt;
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_M_state[__i],&#32;_M_state[__i&#32;+&#32;__pos1&#32;-&#32;_M_nstate],&#32;__r1,&#32;__r2);
97 &#32;&#32;&#32;&#32;&#32;&#32;_mm_store_si128(&amp;_M_state[__i],&#32;__r);
98 &#32;&#32;&#32;&#32;&#32;&#32;__r1&#32;=&#32;__r2;
99 &#32;&#32;&#32;&#32;&#32;&#32;__r2&#32;=&#32;__r;
100 &#32;&#32;&#32;&#32;}
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;_M_pos&#32;=&#32;0;
103 &#32;&#32;&#32;&#32;}
104 
105 
106 <emphasis role="preprocessor">#define&#32;_GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL&#32;1</emphasis>
107 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_UIntType,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__m,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__pos1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sl2,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr1,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;__sr2,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk1,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk2,
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk3,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__msk4,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity1,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity2,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity3,&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;__parity4&gt;
114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
115 &#32;&#32;&#32;&#32;<link linkend="_namespacenlohmann_1aaf11d1e42c5a671e7cd362ab0a182de1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::simd_fast_mersenne_twister_engine&lt;_UIntType,
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m,&#32;__pos1,&#32;__sl1,&#32;__sl2,&#32;__sr1,&#32;__sr2,
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__msk1,&#32;__msk2,&#32;__msk3,&#32;__msk4,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parity1,&#32;__parity2,&#32;__parity3,&#32;__parity4&gt;&amp;&#32;__lhs,
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;__gnu_cxx::simd_fast_mersenne_twister_engine&lt;_UIntType,
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m,&#32;__pos1,&#32;__sl1,&#32;__sl2,&#32;__sr1,&#32;__sr2,
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__msk1,&#32;__msk2,&#32;__msk3,&#32;__msk4,
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__parity1,&#32;__parity2,&#32;__parity3,&#32;__parity4&gt;&amp;&#32;__rhs)
123 &#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__res&#32;=&#32;_mm_cmpeq_epi8(__lhs._M_state[0],&#32;__rhs._M_state[0]);
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;__i&#32;=&#32;1;&#32;__i&#32;&lt;&#32;__lhs._M_nstate;&#32;++__i)
126 &#32;&#32;&#32;&#32;__res&#32;=&#32;_mm_and_si128(__res,&#32;_mm_cmpeq_epi8(__lhs._M_state[__i],
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__rhs._M_state[__i]));
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_mm_movemask_epi8(__res)&#32;==&#32;0xffff
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;__lhs._M_pos&#32;==&#32;__rhs._M_pos);
130 &#32;&#32;&#32;&#32;}
131 
132 
133 _GLIBCXX_END_NAMESPACE_VERSION
134 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
135 
136 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__SSE2__</emphasis>
137 
138 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__BYTE_ORDER__&#32;==&#32;__ORDER_LITTLE_ENDIAN__</emphasis>
139 
140 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_EXT_OPT_RANDOM_H</emphasis>
</programlisting></section>
