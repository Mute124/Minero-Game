<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2ammintrin_8h_source" xml:lang="en-US">
<title>ammintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/ammintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="comment">/*&#32;Implemented&#32;from&#32;the&#32;specification&#32;included&#32;in&#32;the&#32;AMD&#32;Programmers</emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;Manual&#32;Update,&#32;version&#32;2.x&#32;*/</emphasis>
26 
27 <emphasis role="preprocessor">#ifndef&#32;_AMMINTRIN_H_INCLUDED</emphasis>
28 <emphasis role="preprocessor">#define&#32;_AMMINTRIN_H_INCLUDED</emphasis>
29 
30 <emphasis role="comment">/*&#32;We&#32;need&#32;definitions&#32;from&#32;the&#32;SSE3,&#32;SSE2&#32;and&#32;SSE&#32;header&#32;files*/</emphasis>
31 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__old_2_classes_2lib_2include_2pmmintrin_8h">pmmintrin.h</link>&gt;</emphasis>
32 
33 <emphasis role="preprocessor">#ifndef&#32;__SSE4A__</emphasis>
34 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
35 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;sse4a&quot;)</emphasis>
36 <emphasis role="preprocessor">#define&#32;__DISABLE_SSE4A__</emphasis>
37 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__SSE4A__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
38 
39 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
40 _mm_stream_sd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
41 {
42 &#32;&#32;__builtin_ia32_movntsd&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v2df)&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
43 }
44 
45 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
46 _mm_stream_ss&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
47 {
48 &#32;&#32;__builtin_ia32_movntss&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v4sf)&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
49 }
50 
51 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
52 _mm_extract_si64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
53 {
54 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_extrq&#32;((__v2di)&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v16qi)&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
55 }
56 
57 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
58 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
59 <link linkend="__classes_2lib_2include_2ammintrin_8h_1a48098361d2a2d94bccb04e9a26a37442">_mm_extracti_si64</link>&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>)
60 {
61 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_extrqi&#32;((__v2di)&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>,&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>);
62 }
63 <emphasis role="preprocessor">#else</emphasis>
64 <emphasis role="preprocessor">#define&#32;_mm_extracti_si64(X,&#32;I,&#32;L)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
65 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_extrqi&#32;((__v2di)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
66 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(unsigned&#32;int)(I),&#32;(unsigned&#32;int)(L)))</emphasis>
67 <emphasis role="preprocessor">#endif</emphasis>
68 
69 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
70 _mm_insert_si64&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,__m128i&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>)
71 {
72 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_insertq&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>);
73 }
74 
75 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
76 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avx512bf16intrin_8h_1a016eb0ea28cf676c28ca5fdd1709f105">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
77 <link linkend="__classes_2lib_2include_2ammintrin_8h_1a5f37889197cb565fc3f9c048b47f6d90">_mm_inserti_si64</link>(__m128i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>)
78 {
79 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_insertqi&#32;((__v2di)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2ammintrin_8h_1a7b70f4809eae886c3a07836e4d0126e2">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1ae424314b1e3db87b12f3092fbd83d775">__I</link>,&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>);
80 }
81 <emphasis role="preprocessor">#else</emphasis>
82 <emphasis role="preprocessor">#define&#32;_mm_inserti_si64(X,&#32;Y,&#32;I,&#32;L)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
83 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_insertqi&#32;((__v2di)(__m128i)(X),&#32;&#32;&#32;&#32;&#32;\</emphasis>
84 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)(__m128i)(Y),&#32;&#32;&#32;&#32;&#32;\</emphasis>
85 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(unsigned&#32;int)(I),&#32;(unsigned&#32;int)(L)))</emphasis>
86 <emphasis role="preprocessor">#endif</emphasis>
87 
88 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_SSE4A__</emphasis>
89 <emphasis role="preprocessor">#undef&#32;__DISABLE_SSE4A__</emphasis>
90 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
91 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_SSE4A__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
92 
93 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_AMMINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
