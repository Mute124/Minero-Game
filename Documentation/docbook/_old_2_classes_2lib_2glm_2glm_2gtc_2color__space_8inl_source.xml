<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2glm_2gtc_2color__space_8inl_source" xml:lang="en-US">
<title>color_space.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/glm/gtc/color_space.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
4 <emphasis role="keyword">namespace&#32;</emphasis>detail
5 {
6 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rgbToSrgb
8 &#32;&#32;&#32;&#32;{
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb_1afdd0ede6e9033fbb7bea07bd2291c0d5">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorRGB,&#32;T&#32;GammaCorrection)
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&#32;ClampedColor(<link linkend="_namespaceclamp">clamp</link>(ColorRGB,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)));
12 
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4">mix</link>(
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>(ClampedColor,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>(GammaCorrection))&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1.055)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.055),
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ClampedColor&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(12.92),
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__vector__relational_1gaedc3a837f960109afe22ea3f267b9a19">lessThan</link>(ClampedColor,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.0031308))));
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
18 &#32;&#32;&#32;&#32;};
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rgbToSrgb&lt;4,&#32;T,&#32;Q&gt;
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb_3_014_00_01_t_00_01_q_01_4_1aff3b229fa0cc7824e199ba061fa3fcdb">call</link>(<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorRGB,&#32;T&#32;GammaCorrection)
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb">compute_rgbToSrgb&lt;3, T, Q&gt;::call</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(ColorRGB),&#32;GammaCorrection),&#32;ColorRGB.w);
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
27 &#32;&#32;&#32;&#32;};
28 
29 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_srgbToRgb
31 &#32;&#32;&#32;&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb_1a7806d3941d9426b2d708522265206243">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorSRGB,&#32;T&#32;Gamma)
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4">mix</link>(
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>((ColorSRGB&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.055))&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.94786729857819905213270142180095),&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>(Gamma)),
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ColorSRGB&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.07739938080495356037151702786378),
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__core__func__vector__relational_1gae4adee3ccfca4f66ff5b0ce3686399c2">lessThanEqual</link>(ColorSRGB,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.04045))));
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
39 &#32;&#32;&#32;&#32;};
40 
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_srgbToRgb&lt;4,&#32;T,&#32;Q&gt;
43 &#32;&#32;&#32;&#32;{
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb_3_014_00_01_t_00_01_q_01_4_1a72fa3b25659824e36d3014de5c29dc6c">call</link>(<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorSRGB,&#32;T&#32;Gamma)
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, T, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb">compute_srgbToRgb&lt;3, T, Q&gt;::call</link>(<link linkend="_structglm_1_1vec">vec&lt;3, T, Q&gt;</link>(ColorSRGB),&#32;Gamma),&#32;ColorSRGB.w);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
48 &#32;&#32;&#32;&#32;};
49 }<emphasis role="comment">//namespace&#32;detail</emphasis>
50 
51 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
52 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__color__space_1ga12a34c560bb2db262bd02605d99aa512">convertLinearToSRGB</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorLinear)
53 &#32;&#32;&#32;&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb_1afdd0ede6e9033fbb7bea07bd2291c0d5">detail::compute_rgbToSrgb&lt;L, T, Q&gt;::call</link>(ColorLinear,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.41666));
55 &#32;&#32;&#32;&#32;}
56 
57 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Based&#32;on&#32;Ian&#32;Taylor&#32;http://chilliant.blogspot.fr/2012/08/srgb-approximations-for-hlsl.html</emphasis>
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
59 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, float, lowp&gt;</link>&#32;<link linkend="_group__gtc__color__space_1ga12a34c560bb2db262bd02605d99aa512">convertLinearToSRGB</link>(<link linkend="_structglm_1_1vec">vec&lt;3, float, lowp&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorLinear)
60 &#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;3, float, lowp&gt;</link>&#32;S1&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(ColorLinear);
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;3, float, lowp&gt;</link>&#32;S2&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(S1);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structglm_1_1vec">vec&lt;3, float, lowp&gt;</link>&#32;S3&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(S2);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.662002687f&#32;*&#32;S1&#32;+&#32;0.684122060f&#32;*&#32;S2&#32;-&#32;0.323583601f&#32;*&#32;S3&#32;-&#32;0.0225411470f&#32;*&#32;ColorLinear;
65 &#32;&#32;&#32;&#32;}
66 
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
68 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__color__space_1ga12a34c560bb2db262bd02605d99aa512">convertLinearToSRGB</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorLinear,&#32;T&#32;Gamma)
69 &#32;&#32;&#32;&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb_1afdd0ede6e9033fbb7bea07bd2291c0d5">detail::compute_rgbToSrgb&lt;L, T, Q&gt;::call</link>(ColorLinear,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;Gamma);
71 &#32;&#32;&#32;&#32;}
72 
73 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
74 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__color__space_1ga9deb7729e709faeb1b89d65541f0dab0">convertSRGBToLinear</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorSRGB)
75 &#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb_1a7806d3941d9426b2d708522265206243">detail::compute_srgbToRgb&lt;L, T, Q&gt;::call</link>(ColorSRGB,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2.4));
77 &#32;&#32;&#32;&#32;}
78 
79 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
80 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__color__space_1ga9deb7729e709faeb1b89d65541f0dab0">convertSRGBToLinear</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;ColorSRGB,&#32;T&#32;Gamma)
81 &#32;&#32;&#32;&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb_1a7806d3941d9426b2d708522265206243">detail::compute_srgbToRgb&lt;L, T, Q&gt;::call</link>(ColorSRGB,&#32;Gamma);
83 &#32;&#32;&#32;&#32;}
84 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
