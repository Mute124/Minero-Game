<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2eq__fn_2hash__eq__fn_8hpp_source" xml:lang="en-US">
<title>hash_eq_fn.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifndef&#32;PB_DS_HASH_EQ_FN_HPP</emphasis>
43 <emphasis role="preprocessor">#define&#32;PB_DS_HASH_EQ_FN_HPP</emphasis>
44 
45 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/detail/types_traits.hpp&gt;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
48 
49 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
50 {
51 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
52 &#32;&#32;{
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Eq_Fn,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Store_Hash&gt;
55 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash_eq_fn;
56 
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">typename</emphasis>&#32;Eq_Fn,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
59 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash_eq_fn&lt;Key,&#32;Eq_Fn,&#32;_Alloc,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>&gt;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;Eq_Fn
60 &#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eq_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a35e319bcd80843da333108b904f9c3a7">eq_fn_base</link>;
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Key&gt;::const_reference</link>
63 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a56f0771857bba9c2dbf93a6e08cb6fe0">key_const_reference</link>;
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a683e2a144dcd594d3cab71deed88e8f7">hash_eq_fn</link>()&#32;{&#32;}
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a22e142ec82f2a778a8a710690993e3b7">hash_eq_fn</link>(<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn)&#32;:&#32;Eq_Fn(r_eq_fn)&#32;{&#32;}
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1af7d8a0901adc846e66a6eb950723a37a">operator()</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a56f0771857bba9c2dbf93a6e08cb6fe0">key_const_reference</link>&#32;r_lhs_key,&#32;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a56f0771857bba9c2dbf93a6e08cb6fe0">key_const_reference</link>&#32;r_rhs_key)<emphasis role="keyword">&#32;const</emphasis>
72 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;eq_fn_base::operator()(r_lhs_key,&#32;r_rhs_key);&#32;}
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
75 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4_1a48f2b2cab85c5c3c058cbe59ed71c26f">swap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn">hash_eq_fn</link>&amp;&#32;other)
76 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>((Eq_Fn&amp;)(*<emphasis role="keyword">this</emphasis>),&#32;(Eq_Fn&amp;)other);&#32;}
77 &#32;&#32;&#32;&#32;};
78 
79 
81 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Key,&#32;<emphasis role="keyword">class</emphasis>&#32;Eq_Fn,&#32;<emphasis role="keyword">class</emphasis>&#32;_Alloc&gt;
82 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>hash_eq_fn&lt;Key,&#32;Eq_Fn,&#32;_Alloc,&#32;<link linkend="__classes_2lib_2include_2stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</link>&gt;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;Eq_Fn
83 &#32;&#32;&#32;&#32;{
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc::size_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a3a608dc5e464dc88e3409b3268e0ea1c">size_type</link>;
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eq_Fn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a4009dbfdaf79f88ba7a8e2f006a1ebe2">eq_fn_base</link>;
86 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Key&gt;::const_reference</link>
87 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1ae07379585faaf2065cb8ed3077fd0d1c">key_const_reference</link>;
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1aaf15c849790d0a4cd19ee5d235e64294">hash_eq_fn</link>()&#32;{&#32;}
90 
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a8120deab3c030dca78c0d2fa32103a58">hash_eq_fn</link>(<emphasis role="keyword">const</emphasis>&#32;Eq_Fn&amp;&#32;r_eq_fn)&#32;:&#32;Eq_Fn(r_eq_fn)&#32;{&#32;}
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1aa87de242e9beb3907f2431db2173bdaf">operator()</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1ae07379585faaf2065cb8ed3077fd0d1c">key_const_reference</link>&#32;r_lhs_key,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a3a608dc5e464dc88e3409b3268e0ea1c">size_type</link>&#32;lhs_hash,&#32;
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1ae07379585faaf2065cb8ed3077fd0d1c">key_const_reference</link>&#32;r_rhs_key,&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a3a608dc5e464dc88e3409b3268e0ea1c">size_type</link>&#32;rhs_hash)<emphasis role="keyword">&#32;const</emphasis>
96 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
97 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(!eq_fn_base::operator()(r_lhs_key,&#32;r_rhs_key)&#32;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;lhs_hash&#32;==&#32;rhs_hash);
99 
100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(lhs_hash&#32;==&#32;rhs_hash&#32;&amp;&amp;&#32;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eq_fn_base::operator()(r_lhs_key,&#32;r_rhs_key));
102 &#32;&#32;&#32;&#32;&#32;&#32;}
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4_1a8aca7a9f9970b61de148a35b8d2cadfe">swap</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn">hash_eq_fn</link>&amp;&#32;other)
106 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacestd_1a3ece115a1c8ed9020a20f1d0b70efda8">std::swap</link>((Eq_Fn&amp;)(*<emphasis role="keyword">this</emphasis>),&#32;(Eq_Fn&amp;)(other));&#32;}
107 &#32;&#32;&#32;&#32;};
108 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
109 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
110 
111 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
