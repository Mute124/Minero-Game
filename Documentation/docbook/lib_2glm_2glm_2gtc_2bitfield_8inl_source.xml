<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2gtc_2bitfield_8inl_source" xml:lang="en-US">
<title>bitfield.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/gtc/bitfield.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="preprocessor">#include&#32;&quot;../simd/integer.h&quot;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
6 <emphasis role="keyword">namespace&#32;</emphasis>detail
7 {
8 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;PARAM,&#32;<emphasis role="keyword">typename</emphasis>&#32;RET&gt;
9 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;RET&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
10 
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;PARAM,&#32;<emphasis role="keyword">typename</emphasis>&#32;RET&gt;
12 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;RET&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
13 
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;PARAM,&#32;<emphasis role="keyword">typename</emphasis>&#32;RET&gt;
15 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link>&#32;RET&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;PARAM&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
16 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
18 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
19 &#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
22 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x0F0F);
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x0F0F);
25 
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x3333);
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x3333);
28 
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x5555);
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint16&gt;(0x5555);
31 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link><emphasis role="keyword">&gt;</emphasis>(REG2&#32;&lt;&lt;&#32;1);
33 &#32;&#32;&#32;&#32;}
34 
35 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
36 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
37 &#32;&#32;&#32;&#32;{
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
40 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x00FF00FF);
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x00FF00FF);
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x0F0F0F0F);
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x0F0F0F0F);
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x33333333);
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x33333333);
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x55555555);
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x55555555);
52 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1);
54 &#32;&#32;&#32;&#32;}
55 
56 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
57 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
58 &#32;&#32;&#32;&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;16)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0000FFFF0000FFFFull);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;16)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0000FFFF0000FFFFull);
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF00FF00FF00FFull);
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF00FF00FF00FFull);
67 
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0F0F0F0F0F0F0F0Full);
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0F0F0F0F0F0F0F0Full);
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x3333333333333333ull);
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x3333333333333333ull);
73 
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x5555555555555555ull);
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x5555555555555555ull);
76 
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1);
78 &#32;&#32;&#32;&#32;}
79 
80 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
81 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
82 &#32;&#32;&#32;&#32;{
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;16)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xFF0000FFu);
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;16)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xFF0000FFu);
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;16)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xFF0000FFu);
90 
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x0F00F00Fu);
94 
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xC30C30C3u);
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xC30C30C3u);
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0xC30C30C3u);
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x49249249u);
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x49249249u);
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x49249249u);
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1)&#32;|&#32;(REG3&#32;&lt;&lt;&#32;2);
104 &#32;&#32;&#32;&#32;}
105 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
107 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
108 &#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;32)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;32)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;32)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;16)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;16)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;16)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1)&#32;|&#32;(REG3&#32;&lt;&lt;&#32;2);
134 &#32;&#32;&#32;&#32;}
135 
136 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
137 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
138 &#32;&#32;&#32;&#32;{
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;32)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;32)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;32)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xFFFF00000000FFFFull);
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;16)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;16)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;16)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x00FF0000FF0000FFull);
150 
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;8)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0xF00F00F00F00F00Full);
154 
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;4)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x30C30C30C30C30C3ull);
158 
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;2)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x9249249249249249ull);
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1)&#32;|&#32;(REG3&#32;&lt;&lt;&#32;2);
164 &#32;&#32;&#32;&#32;}
165 
166 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
167 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">glm::uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
168 &#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG4(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;12)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x000F000Fu);
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;12)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x000F000Fu);
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;12)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x000F000Fu);
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;12)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x000F000Fu);
178 
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x03030303u);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x03030303u);
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x03030303u);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x03030303u);
183 
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x11111111u);
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x11111111u);
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x11111111u);
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint32&gt;(0x11111111u);
188 
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1)&#32;|&#32;(REG3&#32;&lt;&lt;&#32;2)&#32;|&#32;(REG4&#32;&lt;&lt;&#32;3);
190 &#32;&#32;&#32;&#32;}
191 
192 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
193 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
194 &#32;&#32;&#32;&#32;{
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG4(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;24)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;24)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;24)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;24)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000000FF000000FFull);
204 
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;12)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;12)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;12)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;12)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x000F000F000F000Full);
209 
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;&#32;6)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x0303030303030303ull);
214 
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG1)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG2)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG3&#32;=&#32;((REG3&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG3)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG4&#32;=&#32;((REG4&#32;&lt;&lt;&#32;&#32;3)&#32;|&#32;REG4)&#32;&amp;&#32;static_cast&lt;glm::uint64&gt;(0x1111111111111111ull);
219 
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;REG1&#32;|&#32;(REG2&#32;&lt;&lt;&#32;1)&#32;|&#32;(REG3&#32;&lt;&lt;&#32;2)&#32;|&#32;(REG4&#32;&lt;&lt;&#32;3);
221 &#32;&#32;&#32;&#32;}
222 }<emphasis role="comment">//namespace&#32;detail</emphasis>
223 
224 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIUType&gt;
225 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIUType&#32;<link linkend="_namespacemask">mask</link>(genIUType&#32;Bits)
226 &#32;&#32;&#32;&#32;{
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;genIUType&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;mask&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
228 
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Bits&#32;&gt;=&#32;<emphasis role="keyword">sizeof</emphasis>(genIUType)&#32;*&#32;8&#32;?&#32;~<emphasis role="keyword">static_cast&lt;</emphasis>genIUType<emphasis role="keyword">&gt;</emphasis>(0)&#32;:&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>genIUType<emphasis role="keyword">&gt;</emphasis>(1)&#32;&lt;&lt;&#32;Bits)&#32;-&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIUType<emphasis role="keyword">&gt;</emphasis>(1);
230 &#32;&#32;&#32;&#32;}
231 
232 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
233 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespacemask">mask</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
234 &#32;&#32;&#32;&#32;{
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;mask&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
236 
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor1&lt;vec,&#32;L,&#32;T,&#32;T,&#32;Q&gt;::call(<link linkend="_namespacemask">mask</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>);
238 &#32;&#32;&#32;&#32;}
239 
240 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIType&gt;
241 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIType&#32;<link linkend="_group__gtc__bitfield_1ga1c33d075c5fb8bd8dbfd5092bfc851ca">bitfieldRotateRight</link>(genIType&#32;In,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Shift)
242 &#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;genIType&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;bitfieldRotateRight&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
244 
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;BitSize&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(genIType)&#32;*&#32;8);
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(In&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(Shift))&#32;|&#32;(In&#32;&gt;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(BitSize&#32;-&#32;Shift));
247 &#32;&#32;&#32;&#32;}
248 
249 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
250 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__bitfield_1ga1c33d075c5fb8bd8dbfd5092bfc851ca">bitfieldRotateRight</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;In,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Shift)
251 &#32;&#32;&#32;&#32;{
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;bitfieldRotateRight&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
253 
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;BitSize&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(T)&#32;*&#32;8);
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(In&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(Shift))&#32;|&#32;(In&#32;&gt;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(BitSize&#32;-&#32;Shift));
256 &#32;&#32;&#32;&#32;}
257 
258 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIType&gt;
259 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIType&#32;<link linkend="_group__gtc__bitfield_1ga2eb49678a344ce1495bdb5586d9896b9">bitfieldRotateLeft</link>(genIType&#32;In,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Shift)
260 &#32;&#32;&#32;&#32;{
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;genIType&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;bitfieldRotateLeft&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;BitSize&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(genIType)&#32;*&#32;8);
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(In&#32;&gt;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(Shift))&#32;|&#32;(In&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIType<emphasis role="keyword">&gt;</emphasis>(BitSize&#32;-&#32;Shift));
265 &#32;&#32;&#32;&#32;}
266 
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
268 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__bitfield_1ga2eb49678a344ce1495bdb5586d9896b9">bitfieldRotateLeft</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;In,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Shift)
269 &#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a6893d4a6bf0ecab00f7c73166379245a">GLM_STATIC_ASSERT</link>(std::numeric_limits&lt;T&gt;::is_integer,&#32;<emphasis role="stringliteral">&quot;&apos;bitfieldRotateLeft&apos;&#32;accepts&#32;only&#32;integer&#32;values&quot;</emphasis>);
271 
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;BitSize&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(T)&#32;*&#32;8);
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(In&#32;&gt;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(Shift))&#32;|&#32;(In&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(BitSize&#32;-&#32;Shift));
274 &#32;&#32;&#32;&#32;}
275 
276 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIUType&gt;
277 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIUType&#32;<link linkend="_group__gtc__bitfield_1ga46f9295abe3b5c7658f5b13c7f819f0a">bitfieldFillOne</link>(genIUType&#32;Value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;FirstBit,&#32;<emphasis role="keywordtype">int</emphasis>&#32;BitCount)
278 &#32;&#32;&#32;&#32;{
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIUType<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacemask">mask</link>(BitCount)&#32;&lt;&lt;&#32;FirstBit);
280 &#32;&#32;&#32;&#32;}
281 
282 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
283 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__bitfield_1ga46f9295abe3b5c7658f5b13c7f819f0a">bitfieldFillOne</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;FirstBit,&#32;<emphasis role="keywordtype">int</emphasis>&#32;BitCount)
284 &#32;&#32;&#32;&#32;{
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacemask">mask</link>(BitCount)&#32;&lt;&lt;&#32;FirstBit);
286 &#32;&#32;&#32;&#32;}
287 
288 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genIUType&gt;
289 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genIUType&#32;<link linkend="_group__gtc__bitfield_1ga697b86998b7d74ee0a69d8e9f8819fee">bitfieldFillZero</link>(genIUType&#32;Value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;FirstBit,&#32;<emphasis role="keywordtype">int</emphasis>&#32;BitCount)
290 &#32;&#32;&#32;&#32;{
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genIUType<emphasis role="keyword">&gt;</emphasis>(~(<link linkend="_namespacemask">mask</link>(BitCount)&#32;&lt;&lt;&#32;FirstBit));
292 &#32;&#32;&#32;&#32;}
293 
294 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
295 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__bitfield_1ga697b86998b7d74ee0a69d8e9f8819fee">bitfieldFillZero</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;FirstBit,&#32;<emphasis role="keywordtype">int</emphasis>&#32;BitCount)
296 &#32;&#32;&#32;&#32;{
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(~(<link linkend="_namespacemask">mask</link>(BitCount)&#32;&lt;&lt;&#32;FirstBit));
298 &#32;&#32;&#32;&#32;}
299 
300 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
301 &#32;&#32;&#32;&#32;{
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign8
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;i;
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y;
307 
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign16
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;i;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
313 
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u);
317 
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
319 &#32;&#32;&#32;&#32;}
320 
321 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
322 &#32;&#32;&#32;&#32;{
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint16&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
324 &#32;&#32;&#32;&#32;}
325 
326 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint2__sized_1ga01e28d0272428f94d22ea6111f0112be">u8vec2</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
327 &#32;&#32;&#32;&#32;{
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint16&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y);
329 &#32;&#32;&#32;&#32;}
330 
331 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__vector__uint2__sized_1ga01e28d0272428f94d22ea6111f0112be">u8vec2</link>&#32;<link linkend="_group__gtc__bitfield_1ga960049f17c6d851d621e094b6676f56d">bitfieldDeinterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">glm::uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
332 &#32;&#32;&#32;&#32;{
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&gt;=&#32;1);
335 
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;REG1&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x5555);
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;REG2&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x5555);
338 
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x3333);
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x3333);
341 
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F);
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F);
344 
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x00FF);
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0x00FF);
347 
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0xFFFF);
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link><emphasis role="keyword">&gt;</emphasis>(0xFFFF);
350 
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__vector__uint2__sized_1ga01e28d0272428f94d22ea6111f0112be">glm::u8vec2</link>(REG1,&#32;REG2);
352 &#32;&#32;&#32;&#32;}
353 
354 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
355 &#32;&#32;&#32;&#32;{
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign16
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;i;
359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y;
361 
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign32
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;i;
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
367 
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u);
371 
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
373 &#32;&#32;&#32;&#32;}
374 
375 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
376 &#32;&#32;&#32;&#32;{
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint16,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
378 &#32;&#32;&#32;&#32;}
379 
380 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint2__sized_1ga50bd2ceeb100a187e7c46f135269a0ec">u16vec2</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
381 &#32;&#32;&#32;&#32;{
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint16,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y);
383 &#32;&#32;&#32;&#32;}
384 
385 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">glm::u16vec2</link>&#32;<link linkend="_group__gtc__bitfield_1ga960049f17c6d851d621e094b6676f56d">bitfieldDeinterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
386 &#32;&#32;&#32;&#32;{
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&gt;=&#32;1);
389 
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;REG1&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x55555555);
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;REG2&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x55555555);
392 
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x33333333);
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x33333333);
395 
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F0F0F);
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F0F0F);
398 
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x00FF00FF);
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x00FF00FF);
401 
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x0000FFFF);
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">glm::uint32</link><emphasis role="keyword">&gt;</emphasis>(0x0000FFFF);
404 
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__vector__uint2__sized_1ga50bd2ceeb100a187e7c46f135269a0ec">glm::u16vec2</link>(REG1,&#32;REG2);
406 &#32;&#32;&#32;&#32;}
407 
408 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__int__sized_1ga435d75819cce297cc5fa21bd84ef89a5">int64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
409 &#32;&#32;&#32;&#32;{
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign32
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;i;
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y;
415 
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign64
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a427e1ba144685539c0efb4c89e97a277">int64</link>&#32;i;
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
421 
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u);
425 
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
427 &#32;&#32;&#32;&#32;}
428 
429 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
430 &#32;&#32;&#32;&#32;{
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
432 &#32;&#32;&#32;&#32;}
433 
434 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint2__sized_1gad854a1005ce84d8f6e8f05e42893f5c9">u32vec2</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
435 &#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y);
437 &#32;&#32;&#32;&#32;}
438 
439 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_structglm_1_1vec">glm::u32vec2</link>&#32;<link linkend="_group__gtc__bitfield_1ga960049f17c6d851d621e094b6676f56d">bitfieldDeinterleave</link>(<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
440 &#32;&#32;&#32;&#32;{
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG1(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link>&#32;REG2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&gt;=&#32;1);
443 
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;REG1&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x5555555555555555ull);
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;REG2&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x5555555555555555ull);
446 
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;1)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x3333333333333333ull);
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;1)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x3333333333333333ull);
449 
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;2)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F0F0F0F0F0F0Full);
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;2)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x0F0F0F0F0F0F0F0Full);
452 
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;4)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x00FF00FF00FF00FFull);
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;4)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x00FF00FF00FF00FFull);
455 
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;8)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x0000FFFF0000FFFFull);
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;8)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x0000FFFF0000FFFFull);
458 
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG1&#32;=&#32;((REG1&#32;&gt;&gt;&#32;16)&#32;|&#32;REG1)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x00000000FFFFFFFFull);
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;REG2&#32;=&#32;((REG2&#32;&gt;&gt;&#32;16)&#32;|&#32;REG2)&#32;&amp;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">glm::uint64</link><emphasis role="keyword">&gt;</emphasis>(0x00000000FFFFFFFFull);
461 
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__vector__uint2__sized_1gad854a1005ce84d8f6e8f05e42893f5c9">glm::u32vec2</link>(REG1,&#32;REG2);
463 &#32;&#32;&#32;&#32;}
464 
465 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
466 &#32;&#32;&#32;&#32;{
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign8
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;i;
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y,&#32;sign_z;
472 
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign32
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;i;
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
478 
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_z.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u,&#32;sign_z.u);
483 
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
485 &#32;&#32;&#32;&#32;}
486 
487 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
488 &#32;&#32;&#32;&#32;{
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
490 &#32;&#32;&#32;&#32;}
491 
492 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint3__sized_1gaa86b325e581afdc643495fbe428c1f1b">u8vec3</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
493 &#32;&#32;&#32;&#32;{
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
495 &#32;&#32;&#32;&#32;}
496 
497 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__int__sized_1ga435d75819cce297cc5fa21bd84ef89a5">int64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
498 &#32;&#32;&#32;&#32;{
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign16
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;i;
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y,&#32;sign_z;
504 
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign64
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a427e1ba144685539c0efb4c89e97a277">int64</link>&#32;i;
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
510 
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_z.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u,&#32;sign_z.u);
515 
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
517 &#32;&#32;&#32;&#32;}
518 
519 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
520 &#32;&#32;&#32;&#32;{
521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
522 &#32;&#32;&#32;&#32;}
523 
524 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint3__sized_1gad60f14d1abd39b480cbe5c5cf848071a">u16vec3</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
525 &#32;&#32;&#32;&#32;{
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
527 &#32;&#32;&#32;&#32;}
528 
529 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__int__sized_1ga435d75819cce297cc5fa21bd84ef89a5">int64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
530 &#32;&#32;&#32;&#32;{
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign16
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;i;
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y,&#32;sign_z;
536 
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign64
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a427e1ba144685539c0efb4c89e97a277">int64</link>&#32;i;
540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
542 
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_z.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u,&#32;sign_z.u);
547 
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
549 &#32;&#32;&#32;&#32;}
550 
551 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
552 &#32;&#32;&#32;&#32;{
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
554 &#32;&#32;&#32;&#32;}
555 
556 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint3__sized_1ga342e504c37b635393e6747b85147151f">u32vec3</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
557 &#32;&#32;&#32;&#32;{
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint32,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z);
559 &#32;&#32;&#32;&#32;}
560 
561 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
562 &#32;&#32;&#32;&#32;{
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign8
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1b956fe1df85f3c132b21edb4e116458">int8</link>&#32;i;
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y,&#32;sign_z,&#32;sign_w;
568 
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign32
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&#32;i;
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
574 
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_z.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_w.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u,&#32;sign_z.u,&#32;sign_w.u);
580 
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
582 &#32;&#32;&#32;&#32;}
583 
584 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1adde6aaee8457bee49c2a92621fe22b79">uint8</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
585 &#32;&#32;&#32;&#32;{
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
587 &#32;&#32;&#32;&#32;}
588 
589 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a1134b580f8da4de94ca6b1de4d37975e">uint32</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint4__sized_1ga6c8841fa492bd5b1078b171452fd6974">u8vec4</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
590 &#32;&#32;&#32;&#32;{
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint8,&#32;uint32&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w);
592 &#32;&#32;&#32;&#32;}
593 
594 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__int__sized_1ga435d75819cce297cc5fa21bd84ef89a5">int64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
595 &#32;&#32;&#32;&#32;{
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign16
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a259fa4834387bd68627ddf37bb3ebdb9">int16</link>&#32;i;
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;sign_x,&#32;sign_y,&#32;sign_z,&#32;sign_w;
601 
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis>sign64
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1a427e1ba144685539c0efb4c89e97a277">int64</link>&#32;i;
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
607 
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_x.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_y.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_z.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_w.i&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.u&#32;=&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(sign_x.u,&#32;sign_y.u,&#32;sign_z.u,&#32;sign_w.u);
613 
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>.i;
615 &#32;&#32;&#32;&#32;}
616 
617 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a05f6b0ae8f6a6e135b0e290c25fe0e4e">uint16</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)
618 &#32;&#32;&#32;&#32;{
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint16,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
620 &#32;&#32;&#32;&#32;}
621 
622 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>&#32;<link linkend="_namespacebitfield_interleave">bitfieldInterleave</link>(<link linkend="_group__ext__vector__uint4__sized_1ga049d45ad8d0f78578d7ceb86a7fdaae4">u16vec4</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
623 &#32;&#32;&#32;&#32;{
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::bitfieldInterleave&lt;uint16,&#32;uint64&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.w);
625 &#32;&#32;&#32;&#32;}
626 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
