<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2glfw_2src_2platform_8c_source" xml:lang="en-US">
<title>platform.c</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/glfw/src/platform.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//========================================================================</emphasis>
2 <emphasis role="comment">//&#32;GLFW&#32;3.4&#32;-&#32;www.glfw.org</emphasis>
3 <emphasis role="comment">//------------------------------------------------------------------------</emphasis>
4 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2002-2006&#32;Marcus&#32;Geelnard</emphasis>
5 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;2006-2018&#32;Camilla&#32;LÃ¶wy&#32;&lt;elmindreda@glfw.org&gt;</emphasis>
6 <emphasis role="comment">//</emphasis>
7 <emphasis role="comment">//&#32;This&#32;software&#32;is&#32;provided&#32;&apos;as-is&apos;,&#32;without&#32;any&#32;express&#32;or&#32;implied</emphasis>
8 <emphasis role="comment">//&#32;warranty.&#32;In&#32;no&#32;event&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages</emphasis>
9 <emphasis role="comment">//&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
10 <emphasis role="comment">//</emphasis>
11 <emphasis role="comment">//&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,</emphasis>
12 <emphasis role="comment">//&#32;including&#32;commercial&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it</emphasis>
13 <emphasis role="comment">//&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
14 <emphasis role="comment">//</emphasis>
15 <emphasis role="comment">//&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not</emphasis>
16 <emphasis role="comment">//&#32;&#32;&#32;&#32;claim&#32;that&#32;you&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software</emphasis>
17 <emphasis role="comment">//&#32;&#32;&#32;&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment&#32;in&#32;the&#32;product&#32;documentation&#32;would</emphasis>
18 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
19 <emphasis role="comment">//</emphasis>
20 <emphasis role="comment">//&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not</emphasis>
21 <emphasis role="comment">//&#32;&#32;&#32;&#32;be&#32;misrepresented&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
22 <emphasis role="comment">//</emphasis>
23 <emphasis role="comment">//&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source</emphasis>
24 <emphasis role="comment">//&#32;&#32;&#32;&#32;distribution.</emphasis>
25 <emphasis role="comment">//</emphasis>
26 <emphasis role="comment">//========================================================================</emphasis>
27 <emphasis role="comment">//&#32;Please&#32;use&#32;C89&#32;style&#32;variable&#32;declarations&#32;in&#32;this&#32;file&#32;because&#32;VS&#32;2010</emphasis>
28 <emphasis role="comment">//========================================================================</emphasis>
29 
30 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__old_2_classes_2lib_2raylib_2src_2external_2glfw_2src_2internal_8h">internal.h</link>&quot;</emphasis>
31 
35 
36 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
37 {
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1af180e926633cde08a05ccbc3af397ee4">ID</link>;
39 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;(*<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1a09fba7fe010bf5874aedf846155a0950">connect</link>)(int,<link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link>*);
40 }&#32;supportedPlatforms[]&#32;=
41 {
42 <emphasis role="preprocessor">#if&#32;defined(_GLFW_WIN32)</emphasis>
43 &#32;&#32;&#32;&#32;{&#32;<link linkend="_group__init_1ga8d3d17df2ab57492cef665da52c603a1">GLFW_PLATFORM_WIN32</link>,&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2win32__init_8c_1a3c83872580850a72c3cde2861fdc229f">_glfwConnectWin32</link>&#32;},
44 <emphasis role="preprocessor">#endif</emphasis>
45 <emphasis role="preprocessor">#if&#32;defined(_GLFW_COCOA)</emphasis>
46 &#32;&#32;&#32;&#32;{&#32;<link linkend="_group__init_1ga83b18714254f75bc2f0cdbafa0f10b6b">GLFW_PLATFORM_COCOA</link>,&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__init_8m_1ae2c18e6b1b4087349db05fc416f94d77">_glfwConnectCocoa</link>&#32;},
47 <emphasis role="preprocessor">#endif</emphasis>
48 <emphasis role="preprocessor">#if&#32;defined(_GLFW_X11)</emphasis>
49 &#32;&#32;&#32;&#32;{&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>,&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2x11__init_8c_1a3ef34494ec1a6b49e24c3139b0bbdb56">_glfwConnectX11</link>&#32;},
50 <emphasis role="preprocessor">#endif</emphasis>
51 <emphasis role="preprocessor">#if&#32;defined(_GLFW_WAYLAND)</emphasis>
52 &#32;&#32;&#32;&#32;{&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>,&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2wl__init_8c_1aa808bd5a1ba23557d20738142c2066e7">_glfwConnectWayland</link>&#32;},
53 <emphasis role="preprocessor">#endif</emphasis>
54 };
55 
56 <link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1ac0e7d5f9c3735b1959f87e959b90ce53">_glfwSelectPlatform</link>(<emphasis role="keywordtype">int</emphasis>&#32;desiredID,&#32;<link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link>*&#32;platform)
57 {
58 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(supportedPlatforms)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(supportedPlatforms[0]);
59 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
60 
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desiredID&#32;!=&#32;<link linkend="_group__init_1ga18b2d37374d0dea28cd69194fa85b859">GLFW_ANY_PLATFORM</link>&#32;&amp;&amp;
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desiredID&#32;!=&#32;<link linkend="_group__init_1ga8d3d17df2ab57492cef665da52c603a1">GLFW_PLATFORM_WIN32</link>&#32;&amp;&amp;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desiredID&#32;!=&#32;<link linkend="_group__init_1ga83b18714254f75bc2f0cdbafa0f10b6b">GLFW_PLATFORM_COCOA</link>&#32;&amp;&amp;
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desiredID&#32;!=&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>&#32;&amp;&amp;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desiredID&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>&#32;&amp;&amp;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desiredID&#32;!=&#32;<link linkend="_group__init_1gac06fad5a4866ae7a1d7b2675fac72d7f">GLFW_PLATFORM_NULL</link>)
67 &#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;platform&#32;ID&#32;0x%08X&quot;</emphasis>,&#32;desiredID);
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
70 &#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;allow&#32;the&#32;Null&#32;platform&#32;if&#32;specifically&#32;requested</emphasis>
73 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desiredID&#32;==&#32;<link linkend="_group__init_1gac06fad5a4866ae7a1d7b2675fac72d7f">GLFW_PLATFORM_NULL</link>)
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;&#32;<emphasis role="comment">//_glfwConnectNull(desiredID,&#32;platform);&#32;&#32;//&#32;@raysan5</emphasis>
75 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;0)
76 &#32;&#32;&#32;&#32;{
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;This&#32;binary&#32;only&#32;supports&#32;the&#32;Null&#32;platform&quot;</emphasis>);
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
79 &#32;&#32;&#32;&#32;}
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(desiredID&#32;==&#32;<link linkend="_group__init_1ga18b2d37374d0dea28cd69194fa85b859">GLFW_ANY_PLATFORM</link>)
82 &#32;&#32;&#32;&#32;{
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;there&#32;is&#32;exactly&#32;one&#32;platform&#32;available&#32;for&#32;auto-selection,&#32;let&#32;it&#32;emit&#32;the</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;error&#32;on&#32;failure&#32;as&#32;the&#32;platform-specific&#32;error&#32;description&#32;may&#32;be&#32;more&#32;helpful</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;1)
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;supportedPlatforms[0].connect(supportedPlatforms[0].<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1af180e926633cde08a05ccbc3af397ee4">ID</link>,&#32;platform);
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;&#32;i++)
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(supportedPlatforms[i].<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1a09fba7fe010bf5874aedf846155a0950">connect</link>(desiredID,&#32;platform))
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
93 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;detect&#32;any&#32;supported&#32;platform&quot;</emphasis>);
95 &#32;&#32;&#32;&#32;}
96 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
97 &#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;&#32;i++)
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(supportedPlatforms[i].<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1af180e926633cde08a05ccbc3af397ee4">ID</link>&#32;==&#32;desiredID)
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;supportedPlatforms[i].connect(desiredID,&#32;platform);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
103 
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;The&#32;requested&#32;platform&#32;is&#32;not&#32;supported&quot;</emphasis>);
105 &#32;&#32;&#32;&#32;}
106 
107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
108 }
109 
113 
114 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__init_1gac2d1735162a981fcaa8fb386740aa5ce">glfwGetPlatform</link>(<emphasis role="keywordtype">void</emphasis>)
115 {
116 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(0);
117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>;
118 }
119 
120 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__init_1ga7b57ba0946498e8621f4d969bbcecfba">glfwPlatformSupported</link>(<emphasis role="keywordtype">int</emphasis>&#32;platformID)
121 {
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(supportedPlatforms)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(supportedPlatforms[0]);
123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;i;
124 
125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;!=&#32;<link linkend="_group__init_1ga8d3d17df2ab57492cef665da52c603a1">GLFW_PLATFORM_WIN32</link>&#32;&amp;&amp;
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;platformID&#32;!=&#32;<link linkend="_group__init_1ga83b18714254f75bc2f0cdbafa0f10b6b">GLFW_PLATFORM_COCOA</link>&#32;&amp;&amp;
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;platformID&#32;!=&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>&#32;&amp;&amp;
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;platformID&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>&#32;&amp;&amp;
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;platformID&#32;!=&#32;<link linkend="_group__init_1gac06fad5a4866ae7a1d7b2675fac72d7f">GLFW_PLATFORM_NULL</link>)
130 &#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga76f6bb9c4eea73db675f096b404593ce">GLFW_INVALID_ENUM</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;platform&#32;ID&#32;0x%08X&quot;</emphasis>,&#32;platformID);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
133 &#32;&#32;&#32;&#32;}
134 
135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;<link linkend="_group__init_1gac06fad5a4866ae7a1d7b2675fac72d7f">GLFW_PLATFORM_NULL</link>)
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
137 
138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;&#32;i++)
139 &#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;supportedPlatforms[i].<link linkend="__classes_2lib_2external_2glfw_2src_2platform_8c_1af180e926633cde08a05ccbc3af397ee4">ID</link>)
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
142 &#32;&#32;&#32;&#32;}
143 
144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
145 }
146 
147 <link linkend="__classes_2lib_2external_2glfw_2include_2_g_l_f_w_2glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_group__init_1gae5952184a0db36e24d1de7805b8b0945">glfwGetVersionString</link>(<emphasis role="keywordtype">void</emphasis>)
148 {
149 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2internal_8h_1a49e6e8977bd1fed7778c71dffa019eae">_GLFW_VERSION_NUMBER</link>
150 <emphasis role="preprocessor">#if&#32;defined(_GLFW_WIN32)</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Win32&#32;WGL&quot;</emphasis>
152 <emphasis role="preprocessor">#endif</emphasis>
153 <emphasis role="preprocessor">#if&#32;defined(_GLFW_COCOA)</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Cocoa&#32;NSGL&quot;</emphasis>
155 <emphasis role="preprocessor">#endif</emphasis>
156 <emphasis role="preprocessor">#if&#32;defined(_GLFW_WAYLAND)</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Wayland&quot;</emphasis>
158 <emphasis role="preprocessor">#endif</emphasis>
159 <emphasis role="preprocessor">#if&#32;defined(_GLFW_X11)</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;X11&#32;GLX&quot;</emphasis>
161 <emphasis role="preprocessor">#endif</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Null&quot;</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;EGL&quot;</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;OSMesa&quot;</emphasis>
165 <emphasis role="preprocessor">#if&#32;defined(__MINGW64_VERSION_MAJOR)</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;MinGW-w64&quot;</emphasis>
167 <emphasis role="preprocessor">#elif&#32;defined(__MINGW32__)</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;MinGW&quot;</emphasis>
169 <emphasis role="preprocessor">#elif&#32;defined(_MSC_VER)</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;VisualC&quot;</emphasis>
171 <emphasis role="preprocessor">#endif</emphasis>
172 <emphasis role="preprocessor">#if&#32;defined(_GLFW_USE_HYBRID_HPG)&#32;||&#32;defined(_GLFW_USE_OPTIMUS_HPG)</emphasis>
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;hybrid-GPU&quot;</emphasis>
174 <emphasis role="preprocessor">#endif</emphasis>
175 <emphasis role="preprocessor">#if&#32;defined(_POSIX_MONOTONIC_CLOCK)</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;monotonic&quot;</emphasis>
177 <emphasis role="preprocessor">#endif</emphasis>
178 <emphasis role="preprocessor">#if&#32;defined(_GLFW_BUILD_DLL)</emphasis>
179 <emphasis role="preprocessor">#if&#32;defined(_WIN32)</emphasis>
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;DLL&quot;</emphasis>
181 <emphasis role="preprocessor">#elif&#32;defined(__APPLE__)</emphasis>
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;dynamic&quot;</emphasis>
183 <emphasis role="preprocessor">#else</emphasis>
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;shared&quot;</emphasis>
185 <emphasis role="preprocessor">#endif</emphasis>
186 <emphasis role="preprocessor">#endif</emphasis>
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;;
188 }
189 
</programlisting></section>
