<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2point__const__iterator_8hpp_source" xml:lang="en-US">
<title>point_const_iterator.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
42 <emphasis role="preprocessor">#ifndef&#32;PB_DS_BINARY_HEAP_CONST_FIND_ITERATOR_HPP</emphasis>
43 <emphasis role="preprocessor">#define&#32;PB_DS_BINARY_HEAP_CONST_FIND_ITERATOR_HPP</emphasis>
44 
45 <emphasis role="preprocessor">#include&#32;&lt;ext/pb_ds/tag_and_trait.hpp&gt;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&lt;debug/debug.h&gt;</emphasis>
47 
48 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
49 {
50 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
51 &#32;&#32;{
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;Entry,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Simple,&#32;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
55 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>
56 &#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
58 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, Entry&gt;::pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link>;
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">trivial_iterator_tag</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a0d1b6774adedb170ee1ed23fcff30ba2">iterator_category</link>;
63 
65 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_group__tags_1ga3a45dab56a44f762c97eb0eaee17f6f2">trivial_iterator_difference_type</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afa0007845d620ae7f329c9813ecfe7d0">difference_type</link>;
66 
68 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af4eb9042a7175d970490ed0cdd89eda4">value_type</link>;
69 
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;::pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a461773cfd85dff5c18c8c3840d1ff909">pointer</link>;
72 
74 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;::const_pointer</link>
75 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link>;
76 
78 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;::reference</link>
79 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1af713a1e755a57e6984f6419b4f33887c">reference</link>;
80 
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, value_type&gt;::const_reference</link>
83 &#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link>;
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
86 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a3a67001849acf7d294d1e615d3013dc7">binary_heap_point_const_iterator_</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link>&#32;p_e)&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>(p_e)
87 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
88 
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a51849dc1d50e671689acdc7ca14297f9">binary_heap_point_const_iterator_</link>()&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>(0)&#32;{&#32;}
92 
94 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a4caa8f4cc657a7fd700f07c51653c29b">binary_heap_point_const_iterator_</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&amp;&#32;other)
96 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>(other.<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>)
97 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
98 
100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link>
101 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a60137368e9df33aaca43271c842f0dea">operator-&gt;</link>()<emphasis role="keyword">&#32;const</emphasis>
102 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
103 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>&#32;!=&#32;0);
104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;to_ptr(integral_constant&lt;int,&#32;Simple&gt;());
105 &#32;&#32;&#32;&#32;&#32;&#32;}
106 
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1afca49db7bfb9edb2fe6695ca4be4accf">const_reference</link>
109 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a50d89bdcb26164ff380a312673cf0f06">operator*</link>()<emphasis role="keyword">&#32;const</emphasis>
110 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
111 &#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>&#32;!=&#32;0);
112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*to_ptr(integral_constant&lt;int,&#32;Simple&gt;());
113 &#32;&#32;&#32;&#32;&#32;&#32;}
114 
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a086ba257226b242633bc6519023da110">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
118 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>&#32;==&#32;other.<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>;&#32;}
119 
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1ac2a94a28e8beb3b3b2e66632636930f9">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">binary_heap_point_const_iterator_</link>&amp;&#32;other)<emphasis role="keyword">&#32;const</emphasis>
123 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>&#32;!=&#32;other.<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>;&#32;}
124 
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link>
127 &#32;&#32;&#32;&#32;&#32;&#32;to_ptr(<link linkend="_namespace____gnu__pbds_1_1detail_1a6bd7131856cf31c3caa443a674400ab1">true_type</link>)<emphasis role="keyword">&#32;const</emphasis>
128 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>;&#32;}
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a456e7474be3544efe1dfab3548e2e5d4">const_pointer</link>
131 &#32;&#32;&#32;&#32;&#32;&#32;to_ptr(<link linkend="_namespace____gnu__pbds_1_1detail_1a05db727ae5396f8d8518969cd59fff55">false_type</link>)<emphasis role="keyword">&#32;const</emphasis>
132 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>;&#32;}
133 
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1a7b13c76cc0ff32a1ffc938d86ddc6cab">entry_pointer</link>&#32;<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator___1aed5aa19eda08791f97fd5054103775d0">m_p_e</link>;
136 &#32;&#32;&#32;&#32;};
137 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
138 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
139 
140 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
