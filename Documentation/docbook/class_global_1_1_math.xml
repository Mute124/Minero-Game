<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_global_1_1_math" xml:lang="en-US">
<title>Global::Math Class Reference</title>
<indexterm><primary>Global::Math</primary></indexterm>
<para>
<computeroutput>#include &lt;Monobehavior.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dc">ValueFlags</link> { <link linkend="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dca91c385e6334073e4d58a44eeb4a4e7fa">NEGATIVE</link> = 0
, <link linkend="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dca33c058ad93df59d9cec6e18b86669c3e">POSITIVE</link> = 1
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static float <link linkend="_class_global_1_1_math_1ac0513a944dfbb744f2757f716186f176">randomRange</link> (float <link linkend="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14">min</link>, float max)</para>
</listitem>
            <listitem><para>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class_global_1_1_math_1ae977ca8f18ed37e3db166207a4143b9f">CheckCollisionRayBox</link> (<link linkend="_struct_ray">Ray</link> <link linkend="_main_8cpp_1a5fa8a84ba0e7d665477d8e8d2ba14499">ray</link>, <link linkend="_struct_bounding_box">BoundingBox</link> box, float *outDistance)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1a05dc47d90fdc7114bea2de9db39fcb18">CameraToWorld</link> (<link linkend="_struct_camera3_d">Camera3D</link> <link linkend="__classes_2lib_2glm_2test_2cmake_2test__find__glm_8cpp_1a8f389d10179adf56cc907127d615c000">camera</link>)</para>
</listitem>
            <listitem><para>static float <link linkend="_class_global_1_1_math_1a1c801c46b342d1bc52db72672edb869a">Mean</link> (const std::vector&lt; float &gt; &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)</para>
</listitem>
            <listitem><para>static float <link linkend="_class_global_1_1_math_1a415063093a61930390d706db13efd417">Invert</link> (float Value)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1ad7d9136265e3b6efd9cd180c8ba07ba3">Vector3Random</link> (int <link linkend="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14">min</link>, int max)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1a3a6676b242d577bc6a5870d1691e7e38">RoundVec3</link> (<link linkend="_struct_vector3">Vector3</link> Target)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1afff5d5a4c96aab078edaac5258eac72a">Vector3MaxPos</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1a86da5b697465f2d6893d091b08e335ce">Vector3RandomControlled</link> (<link linkend="_struct_vector3">Vector3</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>, int minDeviation, int maxDeviation)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_vector3">Vector3</link> <link linkend="_class_global_1_1_math_1a5643e6f21e4df1fcd428ac849477ca13">Vector3RandomEx</link> (<link linkend="_struct_vector3">Vector3</link> <link linkend="_toml_8hpp_1aef6fbc596e7e69a80f14c34a2b786a14">min</link>, <link linkend="_struct_vector3">Vector3</link> max)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dc"/><section>
    <title>ValueFlags</title>
<indexterm><primary>ValueFlags</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>ValueFlags</secondary></indexterm>
<para><computeroutput>enum <link linkend="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dc">Global::Math::ValueFlags</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>NEGATIVE</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>NEGATIVE</secondary></indexterm>
<anchor xml:id="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dca91c385e6334073e4d58a44eeb4a4e7fa"/>NEGATIVE</entry><entry></entry></row><row><entry><indexterm><primary>POSITIVE</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>POSITIVE</secondary></indexterm>
<anchor xml:id="_class_global_1_1_math_1a2c027a21df9c9c3974a76e3f031e80dca33c058ad93df59d9cec6e18b86669c3e"/>POSITIVE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_global_1_1_math_1a05dc47d90fdc7114bea2de9db39fcb18"/><section>
    <title>CameraToWorld()</title>
<indexterm><primary>CameraToWorld</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>CameraToWorld</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::CameraToWorld (<link linkend="_struct_camera3_d">Camera3D</link> camera)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_global_1_1_math_a05dc47d90fdc7114bea2de9db39fcb18_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_global_1_1_math_1ae977ca8f18ed37e3db166207a4143b9f"/><section>
    <title>CheckCollisionRayBox()</title>
<indexterm><primary>CheckCollisionRayBox</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>CheckCollisionRayBox</secondary></indexterm>
<para><computeroutput>static <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> Global::Math::CheckCollisionRayBox (<link linkend="_struct_ray">Ray</link> ray, <link linkend="_struct_bounding_box">BoundingBox</link> box, float * outDistance)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_global_1_1_math_1a415063093a61930390d706db13efd417"/><section>
    <title>Invert()</title>
<indexterm><primary>Invert</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Invert</secondary></indexterm>
<para><computeroutput>static float Global::Math::Invert (float Value)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Inverts the given float value.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Value</entry><entry>
<para>the float value to be inverted</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the inverted float value</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ErrorType</entry><entry>
<para>description of error </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_global_1_1_math_1a1c801c46b342d1bc52db72672edb869a"/><section>
    <title>Mean()</title>
<indexterm><primary>Mean</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Mean</secondary></indexterm>
<para><computeroutput>static float Global::Math::Mean (const std::vector&lt; float &gt; &amp; data)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>
<para>Calculates the mean of a given vector of float values.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>the vector containing the float values for which the mean needs to be calculated.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the mean value of the input vector.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_global_1_1_math_1ac0513a944dfbb744f2757f716186f176"/><section>
    <title>randomRange()</title>
<indexterm><primary>randomRange</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>randomRange</secondary></indexterm>
<para><computeroutput>static float Global::Math::randomRange (float min, float max)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_global_1_1_math_ac0513a944dfbb744f2757f716186f176_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_global_1_1_math_1a3a6676b242d577bc6a5870d1691e7e38"/><section>
    <title>RoundVec3()</title>
<indexterm><primary>RoundVec3</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>RoundVec3</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::RoundVec3 (<link linkend="_struct_vector3">Vector3</link> Target)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_global_1_1_math_1afff5d5a4c96aab078edaac5258eac72a"/><section>
    <title>Vector3MaxPos()</title>
<indexterm><primary>Vector3MaxPos</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Vector3MaxPos</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::Vector3MaxPos ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_global_1_1_math_1ad7d9136265e3b6efd9cd180c8ba07ba3"/><section>
    <title>Vector3Random()</title>
<indexterm><primary>Vector3Random</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Vector3Random</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::Vector3Random (int min, int max)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_global_1_1_math_ad7d9136265e3b6efd9cd180c8ba07ba3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_global_1_1_math_1a86da5b697465f2d6893d091b08e335ce"/><section>
    <title>Vector3RandomControlled()</title>
<indexterm><primary>Vector3RandomControlled</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Vector3RandomControlled</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::Vector3RandomControlled (<link linkend="_struct_vector3">Vector3</link> start, int minDeviation, int maxDeviation)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_global_1_1_math_a86da5b697465f2d6893d091b08e335ce_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_global_1_1_math_1a5643e6f21e4df1fcd428ac849477ca13"/><section>
    <title>Vector3RandomEx()</title>
<indexterm><primary>Vector3RandomEx</primary><secondary>Global::Math</secondary></indexterm>
<indexterm><primary>Global::Math</primary><secondary>Vector3RandomEx</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_vector3">Vector3</link> Global::Math::Vector3RandomEx (<link linkend="_struct_vector3">Vector3</link> min, <link linkend="_struct_vector3">Vector3</link> max)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_global_1_1_math_a5643e6f21e4df1fcd428ac849477ca13_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/<link linkend="__monobehavior_8h">Monobehavior.h</link></section>
</section>
