<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__transform2" xml:lang="en-US">
<title>GLM_GTX_transform2</title>
<indexterm><primary>GLM_GTX_transform2</primary></indexterm>
Collaboration diagram for GLM_GTX_transform2:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__transform2.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__transform2_1gaf2bdb7a551159848d643437766d8a201">glm::shearX2D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__transform2_1ga6fe5f159911a1a1d5d8e70ad387972ab">glm::shearY2D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1gae6a501ee950a9c3437bb0364e4ff0ad6">glm::shearX3D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1gab351594f265fabee8f6c12cdffef78dd">glm::shearY3D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1gaa19d0f7560aa007fbeff5e515ba5c066">glm::shearZ3D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__transform2_1ga468bd38fd8e3999a4c38f13f52712ada">glm::proj2D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp;m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;normal)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1ga54be8b39a58f85ff667fd9aaa881a1e6">glm::proj3D</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;normal)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1gad9a3e611fee11d78e7d027f50288f0eb">glm::scaleBias</link> (T <link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>, T bias)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__transform2_1gaa0d9550d5ccb84fad05e91a9a0a3742a">glm::scaleBias</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp;m, T <link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>, T bias)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/transform2.hpp&gt; to use the features of this extension.</para>

<para>Add extra transformation matrices </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__transform2_1ga468bd38fd8e3999a4c38f13f52712ada"/><section>
    <title>proj2D()</title>
<indexterm><primary>proj2D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>proj2D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::proj2D (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; normal)</computeroutput></para>
<para>Build planar projection matrix along normal axis. From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1ga54be8b39a58f85ff667fd9aaa881a1e6"/><section>
    <title>proj3D()</title>
<indexterm><primary>proj3D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>proj3D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::proj3D (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, <link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; normal)</computeroutput></para>
<para>Build planar projection matrix along normal axis. From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1gaa0d9550d5ccb84fad05e91a9a0a3742a"/><section>
    <title>scaleBias()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>scaleBias</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>scaleBias</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::scaleBias (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T scale, T bias)</computeroutput></para>
<para>Build a scale bias matrix. From GLM_GTX_transform2 extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__transform2_gaa0d9550d5ccb84fad05e91a9a0a3742a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__transform2_1gad9a3e611fee11d78e7d027f50288f0eb"/><section>
    <title>scaleBias()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>scaleBias</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>scaleBias</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::scaleBias (T scale, T bias)</computeroutput></para>
<para>Build a scale bias matrix. From GLM_GTX_transform2 extension. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__transform2_gad9a3e611fee11d78e7d027f50288f0eb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__transform2_gad9a3e611fee11d78e7d027f50288f0eb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__transform2_1gaf2bdb7a551159848d643437766d8a201"/><section>
    <title>shearX2D()</title>
<indexterm><primary>shearX2D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>shearX2D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::shearX2D (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m, T y)</computeroutput></para>
<para>Transforms a matrix with a shearing on X axis. From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1gae6a501ee950a9c3437bb0364e4ff0ad6"/><section>
    <title>shearX3D()</title>
<indexterm><primary>shearX3D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>shearX3D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::shearX3D (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T y, T z)</computeroutput></para>
<para>Transforms a matrix with a shearing on X axis From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1ga6fe5f159911a1a1d5d8e70ad387972ab"/><section>
    <title>shearY2D()</title>
<indexterm><primary>shearY2D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>shearY2D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::shearY2D (<link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; const &amp; m, T x)</computeroutput></para>
<para>Transforms a matrix with a shearing on Y axis. From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1gab351594f265fabee8f6c12cdffef78dd"/><section>
    <title>shearY3D()</title>
<indexterm><primary>shearY3D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>shearY3D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::shearY3D (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T x, T z)</computeroutput></para>
<para>Transforms a matrix with a shearing on Y axis. From GLM_GTX_transform2 extension. </para>
</section>
<anchor xml:id="_group__gtx__transform2_1gaa19d0f7560aa007fbeff5e515ba5c066"/><section>
    <title>shearZ3D()</title>
<indexterm><primary>shearZ3D</primary><secondary>GLM_GTX_transform2</secondary></indexterm>
<indexterm><primary>GLM_GTX_transform2</primary><secondary>shearZ3D</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::shearZ3D (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; const &amp; m, T x, T y)</computeroutput></para>
<para>Transforms a matrix with a shearing on Z axis. From GLM_GTX_transform2 extension. </para>
</section>
</section>
</section>
