<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2gtx_2quaternion_8inl_source" xml:lang="en-US">
<title>quaternion.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/gtx/quaternion.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
3 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;../gtc/constants.hpp&quot;</emphasis>
5 
6 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
7 {
8 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
9 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1ga96a6304e423f605c2dedd5b09d50e382">quat_identity</link>()
10 &#32;&#32;&#32;&#32;{
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
12 &#32;&#32;&#32;&#32;}
13 
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
15 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespacecross">cross</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
16 &#32;&#32;&#32;&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(q)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
18 &#32;&#32;&#32;&#32;}
19 
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
21 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespacecross">cross</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
24 &#32;&#32;&#32;&#32;}
25 
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
27 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1ga77f8e42a93c02b56d5dd6f7ca2c904bd">squad</link>
28 &#32;&#32;&#32;&#32;(
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q1,
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q2,
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s1,
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;s2,
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;h)
34 &#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4">mix</link>(<link linkend="_group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4">mix</link>(q1,&#32;q2,&#32;h),&#32;<link linkend="_group__core__func__common_1ga8e93f374aae27d1a88b921860351f8d4">mix</link>(s1,&#32;s2,&#32;h),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2)&#32;*&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;h)&#32;*&#32;h);
36 &#32;&#32;&#32;&#32;}
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
39 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1ga674f3a481bf37d397e81787c5d4d873f">intermediate</link>
40 &#32;&#32;&#32;&#32;(
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;prev,
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;curr,
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;next
44 &#32;&#32;&#32;&#32;)
45 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;invQuat&#32;=&#32;<link linkend="_group__core__func__matrix_1gace61e11fc177491beeca0c6971e2f3fc">inverse</link>(curr);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp</link>((<link linkend="__classes_2lib_2include_2tgmath_8h_1a25a8d722e743f3a219e5f0bf0bb867c7">log</link>(next&#32;*&#32;invQuat)&#32;+&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a25a8d722e743f3a219e5f0bf0bb867c7">log</link>(prev&#32;*&#32;invQuat))&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(-4))&#32;*&#32;curr;
48 &#32;&#32;&#32;&#32;}
49 
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
51 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__ext__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950">rotate</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
52 &#32;&#32;&#32;&#32;{
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
54 &#32;&#32;&#32;&#32;}
55 
56 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
57 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__ext__matrix__transform_1ga42613eb0c7deb5f5188fc159df6c8950">rotate</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q,&#32;vec&lt;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
58 &#32;&#32;&#32;&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
60 &#32;&#32;&#32;&#32;}
61 
62 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
63 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;T&#32;<link linkend="_group__gtx__quaternion_1ga321953c1b2e7befe6f5dcfddbfc6b76b">extractRealComponent</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
64 &#32;&#32;&#32;&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;q.x&#32;*&#32;q.x&#32;-&#32;q.y&#32;*&#32;q.y&#32;-&#32;q.z&#32;*&#32;q.z;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;&lt;&#32;T(0))
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;T(0);
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
70 &#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
73 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;T&#32;<link linkend="_group__gtx__norm_1ga8d1789651050adb7024917984b41c3de">length2</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;q)
74 &#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q.x&#32;*&#32;q.x&#32;+&#32;q.y&#32;*&#32;q.y&#32;+&#32;q.z&#32;*&#32;q.z&#32;+&#32;q.w&#32;*&#32;q.w;
76 &#32;&#32;&#32;&#32;}
77 
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
79 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1gaa67d8a157c0c4df05354aafd2e40aa72">shortMix</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
80 &#32;&#32;&#32;&#32;{
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;fCos&#32;=&#32;<link linkend="_namespacedot">dot</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qua&lt;T,&#32;Q&gt;&#32;y2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);&#32;<emphasis role="comment">//BUG!!!&#32;qua&lt;T&gt;&#32;y2;</emphasis>
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fCos&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0))
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y2&#32;=&#32;-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fCos&#32;=&#32;-fCos;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
91 
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if(fCos&#32;&gt;&#32;1.0f)&#32;//&#32;problem</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;k0,&#32;k1;
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fCos&#32;&gt;&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;epsilon&lt;T&gt;()))
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;&#32;<emphasis role="comment">//BUG!!!&#32;1.0f&#32;+&#32;a;</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;fSin&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>(T(1)&#32;-&#32;fCos&#32;*&#32;fCos);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;fAngle&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1af59f8735da7eee127c6807d114e82a3a">atan</link>(fSin,&#32;fCos);
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;fOneOverSin&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;fSin;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>((<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;*&#32;fAngle)&#32;*&#32;fOneOverSin;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a428aa2da5120f109315e38b59ac2fbe7">sin</link>((<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0)&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;*&#32;fAngle)&#32;*&#32;fOneOverSin;
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>.w&#32;+&#32;k1&#32;*&#32;y2.w,
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>.x&#32;+&#32;k1&#32;*&#32;y2.x,
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>.y&#32;+&#32;k1&#32;*&#32;y2.y,
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k0&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>.z&#32;+&#32;k1&#32;*&#32;y2.z);
113 &#32;&#32;&#32;&#32;}
114 
115 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
116 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1ga43a95b70cd08ed3471e09d6c117e3464">fastMix</link>(qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;qua&lt;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
117 &#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__core__func__geometric_1ga5c6c1379961d4589035a390856f2d66c">glm::normalize</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>));
119 &#32;&#32;&#32;&#32;}
120 
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
122 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;qua&lt;T,&#32;Q&gt;&#32;<link linkend="_group__gtx__quaternion_1gadbb992b52cef49dd3b11966e34260d17">rotation</link>(vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;orig,&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;dest)
123 &#32;&#32;&#32;&#32;{
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;cosTheta&#32;=&#32;<link linkend="_namespacedot">dot</link>(orig,&#32;dest);
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;Q&gt;&#32;rotationAxis;
126 
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(cosTheta&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;epsilon&lt;T&gt;())&#32;{
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;orig&#32;and&#32;dest&#32;point&#32;in&#32;the&#32;same&#32;direction</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;quat_identity&lt;T,Q&gt;();
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
131 
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(cosTheta&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(-1)&#32;+&#32;epsilon&lt;T&gt;())
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;special&#32;case&#32;when&#32;vectors&#32;in&#32;opposite&#32;directions&#32;:</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;there&#32;is&#32;no&#32;&quot;ideal&quot;&#32;rotation&#32;axis</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;So&#32;guess&#32;one;&#32;any&#32;will&#32;do&#32;as&#32;long&#32;as&#32;it&apos;s&#32;perpendicular&#32;to&#32;start</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;implementation&#32;favors&#32;a&#32;rotation&#32;around&#32;the&#32;Up&#32;axis&#32;(Y),</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;since&#32;it&apos;s&#32;often&#32;what&#32;you&#32;want&#32;to&#32;do.</emphasis>
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis&#32;=&#32;<link linkend="_namespacecross">cross</link>(vec&lt;3,&#32;T,&#32;Q&gt;(0,&#32;0,&#32;1),&#32;orig);
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group__gtx__norm_1ga8d1789651050adb7024917984b41c3de">length2</link>(rotationAxis)&#32;&lt;&#32;epsilon&lt;T&gt;())&#32;<emphasis role="comment">//&#32;bad&#32;luck,&#32;they&#32;were&#32;parallel,&#32;try&#32;again!</emphasis>
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis&#32;=&#32;<link linkend="_namespacecross">cross</link>(vec&lt;3,&#32;T,&#32;Q&gt;(1,&#32;0,&#32;0),&#32;orig);
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis&#32;=&#32;<link linkend="_namespacenormalize">normalize</link>(rotationAxis);
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__ext__quaternion__trigonometric_1gaff39bc5f51f734fea1170ba68da07268">angleAxis</link>(pi&lt;T&gt;(),&#32;rotationAxis);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Implementation&#32;from&#32;Stan&#32;Melax&apos;s&#32;Game&#32;Programming&#32;Gems&#32;1&#32;article</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis&#32;=&#32;<link linkend="_namespacecross">cross</link>(orig,&#32;dest);
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;s&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>((T(1)&#32;+&#32;cosTheta)&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(2));
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;invs&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(1)&#32;/&#32;s;
152 
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qua&lt;T,&#32;Q&gt;(
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;*&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0.5f),
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis.x&#32;*&#32;invs,
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis.y&#32;*&#32;invs,
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationAxis.z&#32;*&#32;invs);
158 &#32;&#32;&#32;&#32;}
159 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
