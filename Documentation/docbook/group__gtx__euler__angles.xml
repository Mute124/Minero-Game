<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__gtx__euler__angles" xml:lang="en-US">
<title>GLM_GTX_euler_angles</title>
<indexterm><primary>GLM_GTX_euler_angles</primary></indexterm>
Collaboration diagram for GLM_GTX_euler_angles:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga6ddd62c69c42f6e0fb22260c59e11764">glm::eulerAngleX</link> (T const &amp;angleX)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga0a88d64e714bb232fd6a3722f17751a3">glm::eulerAngleY</link> (T const &amp;angleY)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga8466b03295c03fe68d012b19373e1935">glm::eulerAngleZ</link> (T const &amp;angleZ)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gadd3e9cdc380b20bc36ec98ac3c56e9e5">glm::derivedEulerAngleX</link> (T const &amp;angleX, T const &amp;angularVelocityX)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga3b075c479274a16e2614eef3c550e8ec">glm::derivedEulerAngleY</link> (T const &amp;angleY, T const &amp;angularVelocityY)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gadeaadd11e26da6de2cdf60b967bf86d9">glm::derivedEulerAngleZ</link> (T const &amp;angleZ, T const &amp;angularVelocityZ)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga215b970822b20b63611e0ad4f61e4afd">glm::eulerAngleXY</link> (T const &amp;angleX, T const &amp;angleY)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gaebd29b1894276d6632fc299bbe7f081e">glm::eulerAngleYX</link> (T const &amp;angleY, T const &amp;angleX)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gaae63ce27584867e3f9d8889631060846">glm::eulerAngleXZ</link> (T const &amp;angleX, T const &amp;angleZ)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gaf7edd0bc96e86e0cf78a5369dbad1514">glm::eulerAngleZX</link> (T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>, T const &amp;angleX)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga3d58cfed58182afcf60a1bb54e9adb8e">glm::eulerAngleYZ</link> (T const &amp;angleY, T const &amp;angleZ)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gad9660d363649bd15ae8b24e04bea8a1a">glm::eulerAngleZY</link> (T const &amp;angleZ, T const &amp;angleY)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga45b31c18b6459f6f0946f3fdd6af41af">glm::eulerAngleXYZ</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga3f6cc50ed7cea176ec4ef73a88d19b30">glm::eulerAngleYXZ</link> (T const &amp;<link linkend="_group__gtc__quaternion_1ga8da38cdfdc452dafa660c2f46506bad5">yaw</link>, T const &amp;<link linkend="_group__gtc__quaternion_1ga7603e81477b46ddb448896909bc04928">pitch</link>, T const &amp;<link linkend="_group__gtc__quaternion_1ga0cc5ad970d0b00829b139fe0fe5a1e13">roll</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gae938f6896c15f5df1c2f042f60dd0337">glm::eulerAngleXZX</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga539cca54c48ac87c1d47da4ef708bb48">glm::eulerAngleXYX</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga44844028683298b23f65c82501c171c9">glm::eulerAngleYXY</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga5c0cb5d7b3c0ea1b908b63682b6b58d4">glm::eulerAngleYZY</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga5824c8c72d7092aec88d3ab741802bdf">glm::eulerAngleZYZ</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gab72fd85973e419db4230e14fcc64e4a5">glm::eulerAngleZXZ</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1ga6150d65975f440c7027f19c255884d9b">glm::eulerAngleXZY</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gac85e15f08046feefcf2c609e453c32a5">glm::eulerAngleYZX</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gab1fdbd50b5477074bc04fac99728ac9e">glm::eulerAngleZYX</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gac2a9506c526671e93f3c01c437f20c42">glm::eulerAngleZXY</link> (T const &amp;t1, T const &amp;t2, T const &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gaf9483e883509aad2888188699f9c63ed">glm::yawPitchRoll</link> (T const &amp;<link linkend="_group__gtc__quaternion_1ga8da38cdfdc452dafa660c2f46506bad5">yaw</link>, T const &amp;<link linkend="_group__gtc__quaternion_1ga7603e81477b46ddb448896909bc04928">pitch</link>, T const &amp;<link linkend="_group__gtc__quaternion_1ga0cc5ad970d0b00829b139fe0fe5a1e13">roll</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gad7884bdb6fc591ad8c7080c112121b7d">glm::orientate2</link> (T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; <link linkend="_group__gtx__euler__angles_1gad93945eb388f8647269adc60b7a9731c">glm::orientate3</link> (T const &amp;<link linkend="_group__ext__quaternion__trigonometric_1ga8aa248b31d5ade470c87304df5eb7bd8">angle</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; <link linkend="_group__gtx__euler__angles_1ga51f0ff190eac49b24be115b5bf18ef54">glm::orientate3</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;angles)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; <link linkend="_group__gtx__euler__angles_1gaf833e7060d90ba20ae9b54e9d8cd7aad">glm::orientate4</link> (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp;angles)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gacea701562f778c1da4d3a0a1cf091000">glm::extractEulerAngleXYZ</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gaf0937518e63037335a0e8358b6f053c5">glm::extractEulerAngleYXZ</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gacf0bc6c031f25fa3ee0055b62c8260d0">glm::extractEulerAngleXZX</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gaf1077a72171d0f3b08f022ab5ff88af7">glm::extractEulerAngleXYX</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gaab8868556361a190db94374e9983ed39">glm::extractEulerAngleYXY</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1ga11dad972c109e4bf8694c915017c44a6">glm::extractEulerAngleYZY</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gafdfa880a64b565223550c2d3938b1aeb">glm::extractEulerAngleZYZ</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1ga59359fef9bad92afaca55e193f91e702">glm::extractEulerAngleZXZ</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1gabe5a65d8eb1cd873c8de121cce1a15ed">glm::extractEulerAngleXZY</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1ga9049b78466796c0de2971756e25b93d3">glm::extractEulerAngleYZX</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1ga2d6c11a4abfa60c565483cee2d3f7665">glm::extractEulerAngleZYX</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_group__gtx__euler__angles_1ga81fbbca2ba0c778b9662d5355b4e2363">glm::extractEulerAngleZXY</link> (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp;M, T &amp;t1, T &amp;t2, T &amp;t3)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include &lt;glm/gtx/euler_angles.hpp&gt; to use the features of this extension.</para>

<para>Build matrices from Euler angles.</para>

<para>Extraction of Euler angles from rotation matrix. Based on the original paper 2014 Mike Day - Extracting Euler Angles from a Rotation <link linkend="_struct_matrix">Matrix</link>. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__gtx__euler__angles_1gadd3e9cdc380b20bc36ec98ac3c56e9e5"/><section>
    <title>derivedEulerAngleX()</title>
<indexterm><primary>derivedEulerAngleX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>derivedEulerAngleX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::derivedEulerAngleX (T const &amp; angleX, T const &amp; angularVelocityX)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about X-axis. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gadd3e9cdc380b20bc36ec98ac3c56e9e5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga3b075c479274a16e2614eef3c550e8ec"/><section>
    <title>derivedEulerAngleY()</title>
<indexterm><primary>derivedEulerAngleY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>derivedEulerAngleY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::derivedEulerAngleY (T const &amp; angleY, T const &amp; angularVelocityY)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about Y-axis. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga3b075c479274a16e2614eef3c550e8ec_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gadeaadd11e26da6de2cdf60b967bf86d9"/><section>
    <title>derivedEulerAngleZ()</title>
<indexterm><primary>derivedEulerAngleZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>derivedEulerAngleZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::derivedEulerAngleZ (T const &amp; angleZ, T const &amp; angularVelocityZ)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous derived matrix from the rotation matrix about Z-axis. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gadeaadd11e26da6de2cdf60b967bf86d9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga6ddd62c69c42f6e0fb22260c59e11764"/><section>
    <title>eulerAngleX()</title>
<indexterm><primary>eulerAngleX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleX (T const &amp; angleX)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle X. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga6ddd62c69c42f6e0fb22260c59e11764_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga6ddd62c69c42f6e0fb22260c59e11764_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga215b970822b20b63611e0ad4f61e4afd"/><section>
    <title>eulerAngleXY()</title>
<indexterm><primary>eulerAngleXY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXY (T const &amp; angleX, T const &amp; angleY)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga215b970822b20b63611e0ad4f61e4afd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga215b970822b20b63611e0ad4f61e4afd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga539cca54c48ac87c1d47da4ef708bb48"/><section>
    <title>eulerAngleXYX()</title>
<indexterm><primary>eulerAngleXYX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXYX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXYX (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga539cca54c48ac87c1d47da4ef708bb48_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga45b31c18b6459f6f0946f3fdd6af41af"/><section>
    <title>eulerAngleXYZ()</title>
<indexterm><primary>eulerAngleXYZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXYZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXYZ (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Y * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga45b31c18b6459f6f0946f3fdd6af41af_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaae63ce27584867e3f9d8889631060846"/><section>
    <title>eulerAngleXZ()</title>
<indexterm><primary>eulerAngleXZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXZ (T const &amp; angleX, T const &amp; angleZ)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaae63ce27584867e3f9d8889631060846_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaae63ce27584867e3f9d8889631060846_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gae938f6896c15f5df1c2f042f60dd0337"/><section>
    <title>eulerAngleXZX()</title>
<indexterm><primary>eulerAngleXZX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXZX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXZX (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gae938f6896c15f5df1c2f042f60dd0337_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga6150d65975f440c7027f19c255884d9b"/><section>
    <title>eulerAngleXZY()</title>
<indexterm><primary>eulerAngleXZY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleXZY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleXZY (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (X * Z * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga6150d65975f440c7027f19c255884d9b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga0a88d64e714bb232fd6a3722f17751a3"/><section>
    <title>eulerAngleY()</title>
<indexterm><primary>eulerAngleY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleY (T const &amp; angleY)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle Y. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga0a88d64e714bb232fd6a3722f17751a3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga0a88d64e714bb232fd6a3722f17751a3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaebd29b1894276d6632fc299bbe7f081e"/><section>
    <title>eulerAngleYX()</title>
<indexterm><primary>eulerAngleYX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYX (T const &amp; angleY, T const &amp; angleX)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaebd29b1894276d6632fc299bbe7f081e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaebd29b1894276d6632fc299bbe7f081e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga44844028683298b23f65c82501c171c9"/><section>
    <title>eulerAngleYXY()</title>
<indexterm><primary>eulerAngleYXY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYXY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYXY (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga44844028683298b23f65c82501c171c9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga3f6cc50ed7cea176ec4ef73a88d19b30"/><section>
    <title>eulerAngleYXZ()</title>
<indexterm><primary>eulerAngleYXZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYXZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYXZ (T const &amp; yaw, T const &amp; pitch, T const &amp; roll)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga3f6cc50ed7cea176ec4ef73a88d19b30_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga3f6cc50ed7cea176ec4ef73a88d19b30_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga3d58cfed58182afcf60a1bb54e9adb8e"/><section>
    <title>eulerAngleYZ()</title>
<indexterm><primary>eulerAngleYZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYZ (T const &amp; angleY, T const &amp; angleZ)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga3d58cfed58182afcf60a1bb54e9adb8e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga3d58cfed58182afcf60a1bb54e9adb8e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gac85e15f08046feefcf2c609e453c32a5"/><section>
    <title>eulerAngleYZX()</title>
<indexterm><primary>eulerAngleYZX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYZX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYZX (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gac85e15f08046feefcf2c609e453c32a5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga5c0cb5d7b3c0ea1b908b63682b6b58d4"/><section>
    <title>eulerAngleYZY()</title>
<indexterm><primary>eulerAngleYZY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleYZY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleYZY (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * Z * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga5c0cb5d7b3c0ea1b908b63682b6b58d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga8466b03295c03fe68d012b19373e1935"/><section>
    <title>eulerAngleZ()</title>
<indexterm><primary>eulerAngleZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZ (T const &amp; angleZ)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from an euler angle Z. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga8466b03295c03fe68d012b19373e1935_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga8466b03295c03fe68d012b19373e1935_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaf7edd0bc96e86e0cf78a5369dbad1514"/><section>
    <title>eulerAngleZX()</title>
<indexterm><primary>eulerAngleZX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZX (T const &amp; angle, T const &amp; angleX)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf7edd0bc96e86e0cf78a5369dbad1514_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf7edd0bc96e86e0cf78a5369dbad1514_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gac2a9506c526671e93f3c01c437f20c42"/><section>
    <title>eulerAngleZXY()</title>
<indexterm><primary>eulerAngleZXY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZXY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZXY (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gac2a9506c526671e93f3c01c437f20c42_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gab72fd85973e419db4230e14fcc64e4a5"/><section>
    <title>eulerAngleZXZ()</title>
<indexterm><primary>eulerAngleZXZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZXZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZXZ (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gab72fd85973e419db4230e14fcc64e4a5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gad9660d363649bd15ae8b24e04bea8a1a"/><section>
    <title>eulerAngleZY()</title>
<indexterm><primary>eulerAngleZY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZY (T const &amp; angleZ, T const &amp; angleY)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gad9660d363649bd15ae8b24e04bea8a1a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gad9660d363649bd15ae8b24e04bea8a1a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gab1fdbd50b5477074bc04fac99728ac9e"/><section>
    <title>eulerAngleZYX()</title>
<indexterm><primary>eulerAngleZYX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZYX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZYX (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y * X). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gab1fdbd50b5477074bc04fac99728ac9e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga5824c8c72d7092aec88d3ab741802bdf"/><section>
    <title>eulerAngleZYZ()</title>
<indexterm><primary>eulerAngleZYZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>eulerAngleZYZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::eulerAngleZYZ (T const &amp; t1, T const &amp; t2, T const &amp; t3)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Z * Y * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga5824c8c72d7092aec88d3ab741802bdf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaf1077a72171d0f3b08f022ab5ff88af7"/><section>
    <title>extractEulerAngleXYX()</title>
<indexterm><primary>extractEulerAngleXYX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleXYX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleXYX (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (X * Y * X) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf1077a72171d0f3b08f022ab5ff88af7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gacea701562f778c1da4d3a0a1cf091000"/><section>
    <title>extractEulerAngleXYZ()</title>
<indexterm><primary>extractEulerAngleXYZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleXYZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleXYZ (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (X * Y * Z) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gacea701562f778c1da4d3a0a1cf091000_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gacf0bc6c031f25fa3ee0055b62c8260d0"/><section>
    <title>extractEulerAngleXZX()</title>
<indexterm><primary>extractEulerAngleXZX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleXZX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleXZX (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (X * Z * X) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gacf0bc6c031f25fa3ee0055b62c8260d0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gabe5a65d8eb1cd873c8de121cce1a15ed"/><section>
    <title>extractEulerAngleXZY()</title>
<indexterm><primary>extractEulerAngleXZY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleXZY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleXZY (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (X * Z * Y) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gabe5a65d8eb1cd873c8de121cce1a15ed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaab8868556361a190db94374e9983ed39"/><section>
    <title>extractEulerAngleYXY()</title>
<indexterm><primary>extractEulerAngleYXY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleYXY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleYXY (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Y * X * Y) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaab8868556361a190db94374e9983ed39_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaf0937518e63037335a0e8358b6f053c5"/><section>
    <title>extractEulerAngleYXZ()</title>
<indexterm><primary>extractEulerAngleYXZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleYXZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleYXZ (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Y * X * Z) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf0937518e63037335a0e8358b6f053c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga9049b78466796c0de2971756e25b93d3"/><section>
    <title>extractEulerAngleYZX()</title>
<indexterm><primary>extractEulerAngleYZX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleYZX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleYZX (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Y * Z * X) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga9049b78466796c0de2971756e25b93d3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga11dad972c109e4bf8694c915017c44a6"/><section>
    <title>extractEulerAngleYZY()</title>
<indexterm><primary>extractEulerAngleYZY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleYZY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleYZY (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Y * Z * Y) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga11dad972c109e4bf8694c915017c44a6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga81fbbca2ba0c778b9662d5355b4e2363"/><section>
    <title>extractEulerAngleZXY()</title>
<indexterm><primary>extractEulerAngleZXY</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleZXY</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleZXY (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Z * X * Y) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga81fbbca2ba0c778b9662d5355b4e2363_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga59359fef9bad92afaca55e193f91e702"/><section>
    <title>extractEulerAngleZXZ()</title>
<indexterm><primary>extractEulerAngleZXZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleZXZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleZXZ (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Z * X * Z) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga59359fef9bad92afaca55e193f91e702_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga2d6c11a4abfa60c565483cee2d3f7665"/><section>
    <title>extractEulerAngleZYX()</title>
<indexterm><primary>extractEulerAngleZYX</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleZYX</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleZYX (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Z * Y * X) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga2d6c11a4abfa60c565483cee2d3f7665_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gafdfa880a64b565223550c2d3938b1aeb"/><section>
    <title>extractEulerAngleZYZ()</title>
<indexterm><primary>extractEulerAngleZYZ</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>extractEulerAngleZYZ</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> glm::extractEulerAngleZYZ (<link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; const &amp; M, T &amp; t1, T &amp; t2, T &amp; t3)</computeroutput></para>
<para>Extracts the (Z * Y * Z) Euler angles from the rotation matrix M <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gafdfa880a64b565223550c2d3938b1aeb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gad7884bdb6fc591ad8c7080c112121b7d"/><section>
    <title>orientate2()</title>
<indexterm><primary>orientate2</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>orientate2</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 2, 2, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::orientate2 (T const &amp; angle)</computeroutput></para>
<para>Creates a 2D 2 * 2 rotation matrix from an euler angle. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gad7884bdb6fc591ad8c7080c112121b7d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gad93945eb388f8647269adc60b7a9731c"/><section>
    <title>orientate3()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>orientate3</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>orientate3</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::orientate3 (T const &amp; angle)</computeroutput></para>
<para>Creates a 2D 4 * 4 homogeneous rotation matrix from an euler angle. <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gad93945eb388f8647269adc60b7a9731c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1ga51f0ff190eac49b24be115b5bf18ef54"/><section>
    <title>orientate3()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>orientate3</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>orientate3</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 3, 3, T, Q &gt; glm::orientate3 (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; angles)</computeroutput></para>
<para>Creates a 3D 3 * 3 rotation matrix from euler angles (Y * X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_ga51f0ff190eac49b24be115b5bf18ef54_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaf833e7060d90ba20ae9b54e9d8cd7aad"/><section>
    <title>orientate4()</title>
<indexterm><primary>orientate4</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>orientate4</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, Q &gt; glm::orientate4 (<link linkend="_structglm_1_1vec">vec</link>&lt; 3, T, Q &gt; const &amp; angles)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf833e7060d90ba20ae9b54e9d8cd7aad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__gtx__euler__angles_1gaf9483e883509aad2888188699f9c63ed"/><section>
    <title>yawPitchRoll()</title>
<indexterm><primary>yawPitchRoll</primary><secondary>GLM_GTX_euler_angles</secondary></indexterm>
<indexterm><primary>GLM_GTX_euler_angles</primary><secondary>yawPitchRoll</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1mat">mat</link>&lt; 4, 4, T, <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25a1ce20eaa9cf6535e2d86e669a0129199">defaultp</link> &gt; glm::yawPitchRoll (T const &amp; yaw, T const &amp; pitch, T const &amp; roll)</computeroutput></para>
<para>Creates a 3D 4 * 4 homogeneous rotation matrix from euler angles (Y * X * Z). <formalpara><title>See also</title>

<para><link linkend="_group__gtx__euler__angles">GLM_GTX_euler_angles</link> </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf9483e883509aad2888188699f9c63ed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__gtx__euler__angles_gaf9483e883509aad2888188699f9c63ed_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
