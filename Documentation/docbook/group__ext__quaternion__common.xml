<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__ext__quaternion__common" xml:lang="en-US">
<title>GLM_EXT_quaternion_common</title>
<indexterm><primary>GLM_EXT_quaternion_common</primary></indexterm>
Collaboration diagram for GLM_EXT_quaternion_common:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1gac3fe299d58c0c327ea48063c76cd3369">glm::mix</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1gac81141eb679f52c4eae9df570b597690">glm::lerp</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1gac536fe0ef911df8ecea579d86ee50b08">glm::slerp</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename S , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1ga7534d2870199137dfceaa11aa63ab4b7">glm::slerp</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>, T <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>, S k)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1ga6e0e20f4ce678614aef6d8a89bff1b2e">glm::conjugate</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; <link linkend="_group__ext__quaternion__common_1ga1f500fd2eb9bca6cd4f16829f6cabd6d">glm::inverse</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;q)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>, Q &gt; <link linkend="_group__ext__quaternion__common_1ga49ea41e6fbe1b03413c391506047d845">glm::isnan</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
            <listitem><para>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>, Q &gt; <link linkend="_group__ext__quaternion__common_1ga834e828ec30721e389a94d9194e93037">glm::isinf</link> (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Provides common functions for quaternion types</para>

<para>Include &lt;glm/ext/quaternion_common.hpp&gt; to use the features of this extension.</para>

<para><formalpara><title>See also</title>

<para><link linkend="_group__ext__scalar__common">GLM_EXT_scalar_common</link> </para>

<para><link linkend="_group__ext__vector__common">GLM_EXT_vector_common</link> </para>

<para><link linkend="_group__ext__quaternion__float">GLM_EXT_quaternion_float</link> </para>

<para><link linkend="_group__ext__quaternion__double">GLM_EXT_quaternion_double</link> </para>

<para><link linkend="_group__ext__quaternion__exponential">GLM_EXT_quaternion_exponential</link> </para>

<para><link linkend="_group__ext__quaternion__geometric">GLM_EXT_quaternion_geometric</link> </para>

<para><link linkend="_group__ext__quaternion__relational">GLM_EXT_quaternion_relational</link> </para>

<para><link linkend="_group__ext__quaternion__trigonometric">GLM_EXT_quaternion_trigonometric</link> </para>

<para><link linkend="_group__ext__quaternion__transform">GLM_EXT_quaternion_transform</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__ext__quaternion__common_1ga6e0e20f4ce678614aef6d8a89bff1b2e"/><section>
    <title>conjugate()</title>
<indexterm><primary>conjugate</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>conjugate</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::conjugate (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns the q conjugate.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_ga6e0e20f4ce678614aef6d8a89bff1b2e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1ga1f500fd2eb9bca6cd4f16829f6cabd6d"/><section>
    <title>inverse()</title>
<indexterm><primary>inverse</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>inverse</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::inverse (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; q)</computeroutput></para>
<para>Returns the q inverse.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_ga1f500fd2eb9bca6cd4f16829f6cabd6d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1ga834e828ec30721e389a94d9194e93037"/><section>
    <title>isinf()</title>
<indexterm><primary>isinf</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>isinf</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>, Q &gt; glm::isinf (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x)</computeroutput></para>
<para>Returns true if x holds a positive infinity or negative infinity representation in the underlying implementation&apos;s set of floating point representations. Returns false otherwise, including for implementations with no infinity representations.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_ga834e828ec30721e389a94d9194e93037_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1ga49ea41e6fbe1b03413c391506047d845"/><section>
    <title>isnan()</title>
<indexterm><primary>isnan</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>isnan</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1vec">vec</link>&lt; 4, <link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link>, Q &gt; glm::isnan (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x)</computeroutput></para>
<para>Returns true if x holds a NaN (not a number) representation in the underlying implementation&apos;s set of floating point representations. Returns false otherwise, including for implementations with no NaN representations.</para>

<para>/!\ When using compiler fast math, this function may fail.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_ga49ea41e6fbe1b03413c391506047d845_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1gac81141eb679f52c4eae9df570b597690"/><section>
    <title>lerp()</title>
<indexterm><primary>lerp</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>lerp</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::lerp (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T a)</computeroutput></para>
<para>Linear interpolation of two quaternions. The interpolation is oriented.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>a</entry><entry>
<para>Interpolation factor. The interpolation is defined in the range [0, 1].</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1gac3fe299d58c0c327ea48063c76cd3369"/><section>
    <title>mix()</title>
<indexterm><primary>mix</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>mix</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::mix (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T a)</computeroutput></para>
<para>Spherical linear interpolation of two quaternions. The interpolation is oriented and the rotation is performed at constant speed. For short path spherical linear interpolation, use the slerp function.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>a</entry><entry>
<para>Interpolation factor. The interpolation is defined beyond the range [0, 1].</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para>- slerp(qua&lt;T, Q&gt; const&amp; x, qua&lt;T, Q&gt; const&amp; y, T const&amp; a) </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_gac3fe299d58c0c327ea48063c76cd3369_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1gac536fe0ef911df8ecea579d86ee50b08"/><section>
    <title>slerp()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>slerp</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>slerp</secondary></indexterm>
<computeroutput>template&lt;typename T , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::slerp (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T a)</computeroutput></para>
<para>Spherical linear interpolation of two quaternions. The interpolation always take the short path and the rotation is performed at constant speed.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>a</entry><entry>
<para>Interpolation factor. The interpolation is defined beyond the range [0, 1].</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_gac536fe0ef911df8ecea579d86ee50b08_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_gac536fe0ef911df8ecea579d86ee50b08_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group__ext__quaternion__common_1ga7534d2870199137dfceaa11aa63ab4b7"/><section>
    <title>slerp()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>slerp</primary><secondary>GLM_EXT_quaternion_common</secondary></indexterm>
<indexterm><primary>GLM_EXT_quaternion_common</primary><secondary>slerp</secondary></indexterm>
<computeroutput>template&lt;typename T , typename S , <link linkend="_namespaceglm_1a36ed105b07c7746804d7fdc7cc90ff25">qualifier</link> Q&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1ab2d052de21a70539923e9bcbf6e83a51">GLM_FUNC_DECL</link> <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; glm::slerp (<link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; x, <link linkend="_structglm_1_1qua">qua</link>&lt; T, Q &gt; const &amp; y, T a, S k)</computeroutput></para>
<para>Spherical linear interpolation of two quaternions with multiple spins over rotation axis. The interpolation always take the short path when the spin count is positive and long path when count is negative. Rotation is performed at constant speed.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>A quaternion </para>
</entry>
                            </row>
                            <row>
<entry>a</entry><entry>
<para>Interpolation factor. The interpolation is defined beyond the range [0, 1]. </para>
</entry>
                            </row>
                            <row>
<entry>k</entry><entry>
<para>Additional spin count. If Value is negative interpolation will be on &quot;long&quot; path.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>A floating-point scalar type </para>
</entry>
                            </row>
                            <row>
<entry>S</entry><entry>
<para>An integer scalar type </para>
</entry>
                            </row>
                            <row>
<entry>Q</entry><entry>
<para>A value from qualifier enum </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group__ext__quaternion__common_ga7534d2870199137dfceaa11aa63ab4b7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
