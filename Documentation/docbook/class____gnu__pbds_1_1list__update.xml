<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__pbds_1_1list__update" xml:lang="en-US">
<title>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; Class Template Reference</title>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;assoc_container.hpp&gt;</computeroutput>
</para>
Inheritance diagram for __gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for __gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6">container_category</link></para>
</listitem>
            <listitem><para>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053">eq_fn</link></para>
</listitem>
            <listitem><para>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9">update_policy</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6">container_category</link></para>
</listitem>
            <listitem><para>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053">eq_fn</link></para>
</listitem>
            <listitem><para>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9">update_policy</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6">container_category</link></para>
</listitem>
            <listitem><para>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053">eq_fn</link></para>
</listitem>
            <listitem><para>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9">update_policy</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e">list_update</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d">list_update</link> (It <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>, It last)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127">list_update</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa">~list_update</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129">operator=</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c">swap</link> (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e">list_update</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d">list_update</link> (It <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>, It last)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127">list_update</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa">~list_update</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129">operator=</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c">swap</link> (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e">list_update</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename It &gt; </para><para><link linkend="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d">list_update</link> (It <link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>, It last)</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127">list_update</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa">~list_update</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129">operator=</link> (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c">swap</link> (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp;other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename Key, typename Mapped, class Eq_Fn = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy = detail::default_update_policy::type, class _Alloc = std::allocator&lt;char&gt;&gt;<?linebreak?>class __gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</title></simplesect>

<para>A list-update based associative container.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Key</entry><entry>
<para>Key type. </para>
</entry>
                            </row>
                            <row>
<entry>Mapped</entry><entry>
<para>Map type. </para>
</entry>
                            </row>
                            <row>
<entry>Eq_Fn</entry><entry>
<para>Equal functor. </para>
</entry>
                            </row>
                            <row>
<entry>Update_Policy</entry><entry>
<para>Update policy, determines when an element will be moved to the front of the list. </para>
</entry>
                            </row>
                            <row>
<entry>_Alloc</entry><entry>
<para>Allocator type.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Base is detail::lu_map. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6"/><section>
    <title>container_category<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6"/><section>
    <title>container_category<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a0625cec9addbc772e5ccfe8006241ee6"/><section>
    <title>container_category<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>container_category</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>container_category</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct____gnu__pbds_1_1list__update__tag">list_update_tag</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::container_category</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053"/><section>
    <title>eq_fn<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>eq_fn</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>eq_fn</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::eq_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053"/><section>
    <title>eq_fn<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>eq_fn</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>eq_fn</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::eq_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1af62722f2e2ed5a458baad8487151f053"/><section>
    <title>eq_fn<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>eq_fn</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>eq_fn</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Eq_Fn <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::eq_fn</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9"/><section>
    <title>update_policy<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>update_policy</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>update_policy</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::update_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9"/><section>
    <title>update_policy<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>update_policy</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>update_policy</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::update_policy</computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1acb9b6c1abea70c9b15ded06194c71bc9"/><section>
    <title>update_policy<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>update_policy</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>update_policy</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>typedef Update_Policy <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::update_policy</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e"/><section>
    <title>list_update()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d"/><section>
    <title>list_update()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (It first, It last)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127"/><section>
    <title>list_update()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa"/><section>
    <title>~list_update()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>~list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>~list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e"/><section>
    <title>list_update()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d"/><section>
    <title>list_update()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (It first, It last)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127"/><section>
    <title>list_update()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa"/><section>
    <title>~list_update()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>~list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>~list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac862f825375b8705de21cb3a1fd74a9e"/><section>
    <title>list_update()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a9d7daaa0c1b890842f1117e4be17366d"/><section>
    <title>list_update()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><computeroutput>template&lt;typename It &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (It first, It last)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object. </para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a7768fcdfdcc36792a343074861a5b127"/><section>
    <title>list_update()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::list_update (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a5a49f201390906149a72c591cdce85aa"/><section>
    <title>~list_update()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>~list_update</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>~list_update</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::~<link linkend="_class____gnu__pbds_1_1list__update">list_update</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129"/><section>
    <title>operator=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update_ac947c2c44c43db1b630435109f62f129_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129"/><section>
    <title>operator=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update_ac947c2c44c43db1b630435109f62f129_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1ac947c2c44c43db1b630435109f62f129"/><section>
    <title>operator=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__pbds_1_1list__update">list_update</link> &amp; <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::operator= (const <link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update_ac947c2c44c43db1b630435109f62f129_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c"/><section>
    <title>swap()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class____gnu__pbds_1_1list__update_a31063febc4cdf5dac8f4b7d5a171602c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c"/><section>
    <title>swap()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class____gnu__pbds_1_1list__update_1a31063febc4cdf5dac8f4b7d5a171602c"/><section>
    <title>swap()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>swap</primary><secondary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</secondary></indexterm>
<indexterm><primary>__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</primary><secondary>swap</secondary></indexterm>
<computeroutput>template&lt;typename Key , typename Mapped , class Eq_Fn  = typename detail::default_eq_fn&lt;Key&gt;::type, class Update_Policy  = detail::default_update_policy::type, class _Alloc  = std::allocator&lt;char&gt;&gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> <link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;::swap (<link linkend="_class____gnu__pbds_1_1list__update">list_update</link>&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2assoc__container_8hpp">assoc_container.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/ext/pb_ds/<link linkend="_lib_2include_2c_09_09_2ext_2pb__ds_2assoc__container_8hpp">assoc_container.hpp</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2assoc__container_8hpp">assoc_container.hpp</link></section>
</section>
