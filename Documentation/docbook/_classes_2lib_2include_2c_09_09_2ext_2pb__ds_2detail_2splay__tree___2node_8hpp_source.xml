<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2splay__tree___2node_8hpp_source" xml:lang="en-US">
<title>node.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/ext/pb_ds/detail/splay_tree_/node.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifndef&#32;PB_DS_SPLAY_TREE_NODE_HPP</emphasis>
42 <emphasis role="preprocessor">#define&#32;PB_DS_SPLAY_TREE_NODE_HPP</emphasis>
43 
44 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__pbds">__gnu_pbds</link>
45 {
46 &#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>detail
47 &#32;&#32;{
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">class</emphasis>&#32;Metadata,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node__">splay_tree_node_</link>
51 &#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
53 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a7704151fc71f8d7a51c3c3e000d1320e">value_type</link>;
54 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Metadata&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1aedf9c6aa666980e8b2a9ab693aa81ed9">metadata_type</link>;
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, splay_tree_node_&gt;::pointer</link>
57 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a35ee4a5ebe3095f0690b43cda4e810cd">node_pointer</link>;
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;::reference</link>
60 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ab3cde960af02bf36db931f47aed87fad">metadata_reference</link>;
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, metadata_type&gt;::const_reference</link>
63 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a8003a873fcd6775adf392d30458c33d7">metadata_const_reference</link>;
64 
65 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BIN_SEARCH_TREE_TRACE_</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
67 &#32;&#32;&#32;&#32;&#32;&#32;trace()<emphasis role="keyword">&#32;const</emphasis>
68 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a26ae655942bc69e6ee8bbdf27714a984">m_value</link>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ae72d63a0a3280be217be02462ad675b1">m_metadata</link>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>;&#32;}
69 <emphasis role="preprocessor">#endif</emphasis>
70 
71 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a81cbee2e7744fe389d8bf0426c6de135">special</link>()<emphasis role="keyword">&#32;const</emphasis>
73 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1af21678c4d2da525f778919831194c2f5">m_special</link>;&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a8003a873fcd6775adf392d30458c33d7">metadata_const_reference</link>
76 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1adce4de650d650a729851b2409391f0e2">get_metadata</link>()<emphasis role="keyword">&#32;const</emphasis>
77 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ae72d63a0a3280be217be02462ad675b1">m_metadata</link>;&#32;}
78 
79 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ab3cde960af02bf36db931f47aed87fad">metadata_reference</link>
80 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a05493a49f1f7fbe91fd6f9ec074a254d">get_metadata</link>()
81 &#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ae72d63a0a3280be217be02462ad675b1">m_metadata</link>;&#32;}
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a7704151fc71f8d7a51c3c3e000d1320e">value_type</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a26ae655942bc69e6ee8bbdf27714a984">m_value</link>;
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1af21678c4d2da525f778919831194c2f5">m_special</link>;
85 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a35ee4a5ebe3095f0690b43cda4e810cd">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1aeae3bb099c632f672bb9a0e222ee4c01">m_p_left</link>;
86 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a35ee4a5ebe3095f0690b43cda4e810cd">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a3dee3a3c542049e98cd695ca941eed6e">m_p_right</link>;
87 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a35ee4a5ebe3095f0690b43cda4e810cd">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a3bc74c435e1ac7b4eb4fe1e845e15050">m_p_parent</link>;
88 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1aedf9c6aa666980e8b2a9ab693aa81ed9">metadata_type</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1ae72d63a0a3280be217be02462ad675b1">m_metadata</link>;
89 &#32;&#32;&#32;&#32;};
90 
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Value_Type,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Alloc&gt;
92 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node__">splay_tree_node_</link>&lt;Value_Type,&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>,&#32;_Alloc&gt;
93 &#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
95 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Value_Type&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1ab0b85f62460420ad5f6b04a9404079ae">value_type</link>;
96 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1null__type">null_type</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a0ce8f4959f768bc0dcabe34980e195f3">metadata_type</link>;
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">rebind_traits&lt;_Alloc, splay_tree_node_&gt;::pointer</link>
99 &#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aa6a2134f767534bc72ec45dd8aa35fbc">node_pointer</link>;
100 
101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1abd070a386d8b4f7eead543cd97984deb">special</link>()<emphasis role="keyword">&#32;const</emphasis>
103 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1af21678c4d2da525f778919831194c2f5">m_special</link>;&#32;}
104 
105 <emphasis role="preprocessor">#ifdef&#32;PB_DS_BIN_SEARCH_TREE_TRACE_</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;trace()<emphasis role="keyword">&#32;const</emphasis>
108 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2container__base__dispatch_8hpp_1af0c6120ccc52c862d51ab8fdcf9781c8">PB_DS_V2F</link>(<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___1a26ae655942bc69e6ee8bbdf27714a984">m_value</link>);&#32;}
109 <emphasis role="preprocessor">#endif&#32;</emphasis>
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aa6a2134f767534bc72ec45dd8aa35fbc">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a498086d8c7268e89e25ef6a5a156e75f">m_p_left</link>;
112 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aa6a2134f767534bc72ec45dd8aa35fbc">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aa6a9cf4651106e48ac54f4c5f3989e0e">m_p_right</link>;
113 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1aa6a2134f767534bc72ec45dd8aa35fbc">node_pointer</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a8c79975ab3bd25f0d2c999ed0ba37a1f">m_p_parent</link>;
114 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1ab0b85f62460420ad5f6b04a9404079ae">value_type</link>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a8e2988a7a21eac5f99cfc6689e917510">m_value</link>;
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4_1a74bea6619b4da8763e14ae4385b3f491">m_special</link>;
116 &#32;&#32;&#32;&#32;};
117 &#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;detail</emphasis>
118 }&#32;<emphasis role="comment">//&#32;namespace&#32;__gnu_pbds</emphasis>
119 
120 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
