<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2external_2stb__image_8h_source" xml:lang="en-US">
<title>stb_image.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/external/stb_image.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;stb_image&#32;-&#32;v2.28&#32;-&#32;public&#32;domain&#32;image&#32;loader&#32;-&#32;http://nothings.org/stb</emphasis>
2 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no&#32;warranty&#32;implied;&#32;use&#32;at&#32;your&#32;own&#32;risk</emphasis>
3 <emphasis role="comment"></emphasis>
4 <emphasis role="comment">&#32;&#32;&#32;Do&#32;this:</emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STB_IMAGE_IMPLEMENTATION</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;before&#32;you&#32;include&#32;this&#32;file&#32;in&#32;*one*&#32;C&#32;or&#32;C++&#32;file&#32;to&#32;create&#32;the&#32;implementation.</emphasis>
7 <emphasis role="comment"></emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;//&#32;i.e.&#32;it&#32;should&#32;look&#32;like&#32;this:</emphasis>
9 <emphasis role="comment">&#32;&#32;&#32;#include&#32;...</emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;#include&#32;...</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;#include&#32;...</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;#define&#32;STB_IMAGE_IMPLEMENTATION</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;#include&#32;&quot;stb_image.h&quot;</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;You&#32;can&#32;#define&#32;STBI_ASSERT(x)&#32;before&#32;the&#32;#include&#32;to&#32;avoid&#32;using&#32;assert.h.</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;And&#32;#define&#32;STBI_MALLOC,&#32;STBI_REALLOC,&#32;and&#32;STBI_FREE&#32;to&#32;avoid&#32;using&#32;malloc,realloc,free</emphasis>
17 <emphasis role="comment"></emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;QUICK&#32;NOTES:</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Primarily&#32;of&#32;interest&#32;to&#32;game&#32;developers&#32;and&#32;other&#32;people&#32;who&#32;can</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avoid&#32;problematic&#32;images&#32;and&#32;only&#32;need&#32;the&#32;trivial&#32;interface</emphasis>
22 <emphasis role="comment"></emphasis>
23 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;JPEG&#32;baseline&#32;&amp;&#32;progressive&#32;(12&#32;bpc/arithmetic&#32;not&#32;supported,&#32;same&#32;as&#32;stock&#32;IJG&#32;lib)</emphasis>
24 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;PNG&#32;1/2/4/8/16-bit-per-channel</emphasis>
25 <emphasis role="comment"></emphasis>
26 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;TGA&#32;(not&#32;sure&#32;what&#32;subset,&#32;if&#32;a&#32;subset)</emphasis>
27 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;BMP&#32;non-1bpp,&#32;non-RLE</emphasis>
28 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;PSD&#32;(composited&#32;view&#32;only,&#32;no&#32;extra&#32;channels,&#32;8/16&#32;bit-per-channel)</emphasis>
29 <emphasis role="comment"></emphasis>
30 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;GIF&#32;(*comp&#32;always&#32;reports&#32;as&#32;4-channel)</emphasis>
31 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;HDR&#32;(radiance&#32;rgbE&#32;format)</emphasis>
32 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;PIC&#32;(Softimage&#32;PIC)</emphasis>
33 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;PNM&#32;(PPM&#32;and&#32;PGM&#32;binary&#32;only)</emphasis>
34 <emphasis role="comment"></emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;Animated&#32;GIF&#32;still&#32;needs&#32;a&#32;proper&#32;API,&#32;but&#32;here&apos;s&#32;one&#32;way&#32;to&#32;do&#32;it:</emphasis>
36 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;http://gist.github.com/urraka/685d9a6340b26b830d49</emphasis>
37 <emphasis role="comment"></emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-&#32;decode&#32;from&#32;memory&#32;or&#32;through&#32;FILE&#32;(define&#32;STBI_NO_STDIO&#32;to&#32;remove&#32;code)</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-&#32;decode&#32;from&#32;arbitrary&#32;I/O&#32;callbacks</emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;-&#32;SIMD&#32;acceleration&#32;on&#32;x86/x64&#32;(SSE2)&#32;and&#32;ARM&#32;(NEON)</emphasis>
41 <emphasis role="comment"></emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;Full&#32;documentation&#32;under&#32;&quot;DOCUMENTATION&quot;&#32;below.</emphasis>
43 <emphasis role="comment"></emphasis>
44 <emphasis role="comment"></emphasis>
45 <emphasis role="comment">LICENSE</emphasis>
46 <emphasis role="comment"></emphasis>
47 <emphasis role="comment">&#32;&#32;See&#32;end&#32;of&#32;file&#32;for&#32;license&#32;information.</emphasis>
48 <emphasis role="comment"></emphasis>
49 <emphasis role="comment">RECENT&#32;REVISION&#32;HISTORY:</emphasis>
50 <emphasis role="comment"></emphasis>
51 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.28&#32;&#32;(2023-01-29)&#32;many&#32;error&#32;fixes,&#32;security&#32;errors,&#32;just&#32;tons&#32;of&#32;stuff</emphasis>
52 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.27&#32;&#32;(2021-07-11)&#32;document&#32;stbi_info&#32;better,&#32;16-bit&#32;PNM&#32;support,&#32;bug&#32;fixes</emphasis>
53 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.26&#32;&#32;(2020-07-13)&#32;many&#32;minor&#32;fixes</emphasis>
54 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.25&#32;&#32;(2020-02-02)&#32;fix&#32;warnings</emphasis>
55 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.24&#32;&#32;(2020-02-02)&#32;fix&#32;warnings;&#32;thread-local&#32;failure_reason&#32;and&#32;flip_vertically</emphasis>
56 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.23&#32;&#32;(2019-08-11)&#32;fix&#32;clang&#32;static&#32;analysis&#32;warning</emphasis>
57 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.22&#32;&#32;(2019-03-04)&#32;gif&#32;fixes,&#32;fix&#32;warnings</emphasis>
58 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.21&#32;&#32;(2019-02-25)&#32;fix&#32;typo&#32;in&#32;comment</emphasis>
59 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.20&#32;&#32;(2019-02-07)&#32;support&#32;utf8&#32;filenames&#32;in&#32;Windows;&#32;fix&#32;warnings&#32;and&#32;platform&#32;ifdefs</emphasis>
60 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.19&#32;&#32;(2018-02-11)&#32;fix&#32;warning</emphasis>
61 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.18&#32;&#32;(2018-01-30)&#32;fix&#32;warnings</emphasis>
62 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.17&#32;&#32;(2018-01-29)&#32;bugfix,&#32;1-bit&#32;BMP,&#32;16-bitness&#32;query,&#32;fix&#32;warnings</emphasis>
63 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.16&#32;&#32;(2017-07-23)&#32;all&#32;functions&#32;have&#32;16-bit&#32;variants;&#32;optimizations;&#32;bugfixes</emphasis>
64 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.15&#32;&#32;(2017-03-18)&#32;fix&#32;png-1,2,4;&#32;all&#32;Imagenet&#32;JPGs;&#32;no&#32;runtime&#32;SSE&#32;detection&#32;on&#32;GCC</emphasis>
65 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.14&#32;&#32;(2017-03-03)&#32;remove&#32;deprecated&#32;STBI_JPEG_OLD;&#32;fixes&#32;for&#32;Imagenet&#32;JPGs</emphasis>
66 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.13&#32;&#32;(2016-12-04)&#32;experimental&#32;16-bit&#32;API,&#32;only&#32;for&#32;PNG&#32;so&#32;far;&#32;fixes</emphasis>
67 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.12&#32;&#32;(2016-04-02)&#32;fix&#32;typo&#32;in&#32;2.11&#32;PSD&#32;fix&#32;that&#32;caused&#32;crashes</emphasis>
68 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.11&#32;&#32;(2016-04-02)&#32;16-bit&#32;PNGS;&#32;enable&#32;SSE2&#32;in&#32;non-gcc&#32;x64</emphasis>
69 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RGB-format&#32;JPEG;&#32;remove&#32;white&#32;matting&#32;in&#32;PSD;</emphasis>
70 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocate&#32;large&#32;structures&#32;on&#32;the&#32;stack;</emphasis>
71 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;correct&#32;channel&#32;count&#32;for&#32;PNG&#32;&amp;&#32;BMP</emphasis>
72 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.10&#32;&#32;(2016-01-22)&#32;avoid&#32;warning&#32;introduced&#32;in&#32;2.09</emphasis>
73 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.09&#32;&#32;(2016-01-16)&#32;16-bit&#32;TGA;&#32;comments&#32;in&#32;PNM&#32;files;&#32;STBI_REALLOC_SIZED</emphasis>
74 <emphasis role="comment"></emphasis>
75 <emphasis role="comment">&#32;&#32;&#32;See&#32;end&#32;of&#32;file&#32;for&#32;full&#32;revision&#32;history.</emphasis>
76 <emphasis role="comment"></emphasis>
77 <emphasis role="comment"></emphasis>
78 <emphasis role="comment">&#32;============================&#32;&#32;&#32;&#32;Contributors&#32;&#32;&#32;&#32;=========================</emphasis>
79 <emphasis role="comment"></emphasis>
80 <emphasis role="comment">&#32;Image&#32;formats&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Extensions,&#32;features</emphasis>
81 <emphasis role="comment">&#32;&#32;&#32;&#32;Sean&#32;Barrett&#32;(jpeg,&#32;png,&#32;bmp)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Jetro&#32;Lauha&#32;(stbi_info)</emphasis>
82 <emphasis role="comment">&#32;&#32;&#32;&#32;Nicolas&#32;Schulz&#32;(hdr,&#32;psd)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Martin&#32;&quot;SpartanJ&quot;&#32;Golini&#32;(stbi_info)</emphasis>
83 <emphasis role="comment">&#32;&#32;&#32;&#32;Jonathan&#32;Dummer&#32;(tga)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;James&#32;&quot;moose2000&quot;&#32;Brown&#32;(iPhone&#32;PNG)</emphasis>
84 <emphasis role="comment">&#32;&#32;&#32;&#32;Jean-Marc&#32;Lienher&#32;(gif)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ben&#32;&quot;Disch&quot;&#32;Wenger&#32;(io&#32;callbacks)</emphasis>
85 <emphasis role="comment">&#32;&#32;&#32;&#32;Tom&#32;Seddon&#32;(pic)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Omar&#32;Cornut&#32;(1/2/4-bit&#32;PNG)</emphasis>
86 <emphasis role="comment">&#32;&#32;&#32;&#32;Thatcher&#32;Ulrich&#32;(psd)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Nicolas&#32;Guillemot&#32;(vertical&#32;flip)</emphasis>
87 <emphasis role="comment">&#32;&#32;&#32;&#32;Ken&#32;Miller&#32;(pgm,&#32;ppm)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Richard&#32;Mitton&#32;(16-bit&#32;PSD)</emphasis>
88 <emphasis role="comment">&#32;&#32;&#32;&#32;github:urraka&#32;(animated&#32;gif)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Junggon&#32;Kim&#32;(PNM&#32;comments)</emphasis>
89 <emphasis role="comment">&#32;&#32;&#32;&#32;Christopher&#32;Forseth&#32;(animated&#32;gif)&#32;&#32;&#32;&#32;&#32;Daniel&#32;Gibson&#32;(16-bit&#32;TGA)</emphasis>
90 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;socks-the-fox&#32;(16-bit&#32;PNG)</emphasis>
91 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Jeremy&#32;Sawicki&#32;(handle&#32;all&#32;ImageNet&#32;JPGs)</emphasis>
92 <emphasis role="comment">&#32;Optimizations&#32;&amp;&#32;bugfixes&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mikhail&#32;Morozov&#32;(1-bit&#32;BMP)</emphasis>
93 <emphasis role="comment">&#32;&#32;&#32;&#32;Fabian&#32;&quot;ryg&quot;&#32;Giesen&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Anael&#32;Seghezzi&#32;(is-16-bit&#32;query)</emphasis>
94 <emphasis role="comment">&#32;&#32;&#32;&#32;Arseny&#32;Kapoulkine&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Simon&#32;Breuss&#32;(16-bit&#32;PNM)</emphasis>
95 <emphasis role="comment">&#32;&#32;&#32;&#32;John-Mark&#32;Allen</emphasis>
96 <emphasis role="comment">&#32;&#32;&#32;&#32;Carmelo&#32;J&#32;Fdez-Aguera</emphasis>
97 <emphasis role="comment"></emphasis>
98 <emphasis role="comment">&#32;Bug&#32;&amp;&#32;warning&#32;fixes</emphasis>
99 <emphasis role="comment">&#32;&#32;&#32;&#32;Marc&#32;LeBlanc&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;David&#32;Woo&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Guillaume&#32;George&#32;&#32;&#32;&#32;&#32;Martins&#32;Mozeiko</emphasis>
100 <emphasis role="comment">&#32;&#32;&#32;&#32;Christpher&#32;Lloyd&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Jerry&#32;Jansson&#32;&#32;&#32;&#32;&#32;&#32;Joseph&#32;Thomson&#32;&#32;&#32;&#32;&#32;&#32;&#32;Blazej&#32;Dariusz&#32;Roszkowski</emphasis>
101 <emphasis role="comment">&#32;&#32;&#32;&#32;Phil&#32;Jordan&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dave&#32;Moore&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Roy&#32;Eltham</emphasis>
102 <emphasis role="comment">&#32;&#32;&#32;&#32;Hayaki&#32;Saito&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Nathan&#32;Reed&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Won&#32;Chun</emphasis>
103 <emphasis role="comment">&#32;&#32;&#32;&#32;Luke&#32;Graham&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Johan&#32;Duparc&#32;&#32;&#32;&#32;&#32;&#32;&#32;Nick&#32;Verigakis&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;Horde3D&#32;community</emphasis>
104 <emphasis role="comment">&#32;&#32;&#32;&#32;Thomas&#32;Ruf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ronny&#32;Chevalier&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:rlyeh</emphasis>
105 <emphasis role="comment">&#32;&#32;&#32;&#32;Janez&#32;Zemva&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;John&#32;Bartholomew&#32;&#32;&#32;Michal&#32;Cichon&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:romigrou</emphasis>
106 <emphasis role="comment">&#32;&#32;&#32;&#32;Jonathan&#32;Blow&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ken&#32;Hamada&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tero&#32;Hanninen&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:svdijk</emphasis>
107 <emphasis role="comment">&#32;&#32;&#32;&#32;Eugene&#32;Golushkov&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Laurent&#32;Gomila&#32;&#32;&#32;&#32;&#32;Cort&#32;Stratton&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:snagar</emphasis>
108 <emphasis role="comment">&#32;&#32;&#32;&#32;Aruelien&#32;Pocheville&#32;&#32;&#32;&#32;&#32;Sergio&#32;Gonzalez&#32;&#32;&#32;&#32;Thibault&#32;Reuille&#32;&#32;&#32;&#32;&#32;github:Zelex</emphasis>
109 <emphasis role="comment">&#32;&#32;&#32;&#32;Cass&#32;Everitt&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ryamond&#32;Barbiero&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:grim210</emphasis>
110 <emphasis role="comment">&#32;&#32;&#32;&#32;Paul&#32;Du&#32;Bois&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Engin&#32;Manap&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Aldo&#32;Culquicondor&#32;&#32;&#32;&#32;github:sammyhw</emphasis>
111 <emphasis role="comment">&#32;&#32;&#32;&#32;Philipp&#32;Wiesemann&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dale&#32;Weiler&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Oriol&#32;Ferrer&#32;Mesia&#32;&#32;&#32;github:phprus</emphasis>
112 <emphasis role="comment">&#32;&#32;&#32;&#32;Josh&#32;Tobin&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Neil&#32;Bickford&#32;&#32;&#32;&#32;&#32;&#32;Matthew&#32;Gregan&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:poppolopoppo</emphasis>
113 <emphasis role="comment">&#32;&#32;&#32;&#32;Julian&#32;Raschke&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gregory&#32;Mullen&#32;&#32;&#32;&#32;&#32;Christian&#32;Floisand&#32;&#32;&#32;github:darealshinji</emphasis>
114 <emphasis role="comment">&#32;&#32;&#32;&#32;Baldur&#32;Karlsson&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Kevin&#32;Schmidt&#32;&#32;&#32;&#32;&#32;&#32;JR&#32;Smith&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;github:Michaelangel007</emphasis>
115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Brad&#32;Weinberger&#32;&#32;&#32;&#32;Matvey&#32;Cherevko&#32;&#32;&#32;&#32;&#32;&#32;github:mosra</emphasis>
116 <emphasis role="comment">&#32;&#32;&#32;&#32;Luca&#32;Sas&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Alexander&#32;Veselov&#32;&#32;Zack&#32;Middleton&#32;&#32;&#32;&#32;&#32;&#32;&#32;[reserved]</emphasis>
117 <emphasis role="comment">&#32;&#32;&#32;&#32;Ryan&#32;C.&#32;Gordon&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[reserved]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[reserved]</emphasis>
118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DO&#32;NOT&#32;ADD&#32;YOUR&#32;NAME&#32;HERE</emphasis>
119 <emphasis role="comment"></emphasis>
120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Jacko&#32;Dirks</emphasis>
121 <emphasis role="comment"></emphasis>
122 <emphasis role="comment">&#32;&#32;To&#32;add&#32;your&#32;name&#32;to&#32;the&#32;credits,&#32;pick&#32;a&#32;random&#32;blank&#32;space&#32;in&#32;the&#32;middle&#32;and&#32;fill&#32;it.</emphasis>
123 <emphasis role="comment">&#32;&#32;80%&#32;of&#32;merge&#32;conflicts&#32;on&#32;stb&#32;PRs&#32;are&#32;due&#32;to&#32;people&#32;adding&#32;their&#32;name&#32;at&#32;the&#32;end</emphasis>
124 <emphasis role="comment">&#32;&#32;of&#32;the&#32;credits.</emphasis>
125 <emphasis role="comment">*/</emphasis>
126 
127 <emphasis role="preprocessor">#ifndef&#32;STBI_INCLUDE_STB_IMAGE_H</emphasis>
128 <emphasis role="preprocessor">#define&#32;STBI_INCLUDE_STB_IMAGE_H</emphasis>
129 
130 <emphasis role="comment">//&#32;DOCUMENTATION</emphasis>
131 <emphasis role="comment">//</emphasis>
132 <emphasis role="comment">//&#32;Limitations:</emphasis>
133 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;no&#32;12-bit-per-channel&#32;JPEG</emphasis>
134 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;no&#32;JPEGs&#32;with&#32;arithmetic&#32;coding</emphasis>
135 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;GIF&#32;always&#32;returns&#32;*comp=4</emphasis>
136 <emphasis role="comment">//</emphasis>
137 <emphasis role="comment">//&#32;Basic&#32;usage&#32;(see&#32;HDR&#32;discussion&#32;below&#32;for&#32;HDR&#32;usage):</emphasis>
138 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;x,y,n;</emphasis>
139 <emphasis role="comment">//&#32;&#32;&#32;&#32;unsigned&#32;char&#32;*data&#32;=&#32;stbi_load(filename,&#32;&amp;x,&#32;&amp;y,&#32;&amp;n,&#32;0);</emphasis>
140 <emphasis role="comment">//&#32;&#32;&#32;&#32;//&#32;...&#32;process&#32;data&#32;if&#32;not&#32;NULL&#32;...</emphasis>
141 <emphasis role="comment">//&#32;&#32;&#32;&#32;//&#32;...&#32;x&#32;=&#32;width,&#32;y&#32;=&#32;height,&#32;n&#32;=&#32;#&#32;8-bit&#32;components&#32;per&#32;pixel&#32;...</emphasis>
142 <emphasis role="comment">//&#32;&#32;&#32;&#32;//&#32;...&#32;replace&#32;&apos;0&apos;&#32;with&#32;&apos;1&apos;..&apos;4&apos;&#32;to&#32;force&#32;that&#32;many&#32;components&#32;per&#32;pixel</emphasis>
143 <emphasis role="comment">//&#32;&#32;&#32;&#32;//&#32;...&#32;but&#32;&apos;n&apos;&#32;will&#32;always&#32;be&#32;the&#32;number&#32;that&#32;it&#32;would&#32;have&#32;been&#32;if&#32;you&#32;said&#32;0</emphasis>
144 <emphasis role="comment">//&#32;&#32;&#32;&#32;stbi_image_free(data);</emphasis>
145 <emphasis role="comment">//</emphasis>
146 <emphasis role="comment">//&#32;Standard&#32;parameters:</emphasis>
147 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;*x&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;outputs&#32;image&#32;width&#32;in&#32;pixels</emphasis>
148 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;*y&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--&#32;outputs&#32;image&#32;height&#32;in&#32;pixels</emphasis>
149 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;*channels_in_file&#32;&#32;--&#32;outputs&#32;#&#32;of&#32;image&#32;components&#32;in&#32;image&#32;file</emphasis>
150 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;desired_channels&#32;&#32;&#32;--&#32;if&#32;non-zero,&#32;#&#32;of&#32;image&#32;components&#32;requested&#32;in&#32;result</emphasis>
151 <emphasis role="comment">//</emphasis>
152 <emphasis role="comment">//&#32;The&#32;return&#32;value&#32;from&#32;an&#32;image&#32;loader&#32;is&#32;an&#32;&apos;unsigned&#32;char&#32;*&apos;&#32;which&#32;points</emphasis>
153 <emphasis role="comment">//&#32;to&#32;the&#32;pixel&#32;data,&#32;or&#32;NULL&#32;on&#32;an&#32;allocation&#32;failure&#32;or&#32;if&#32;the&#32;image&#32;is</emphasis>
154 <emphasis role="comment">//&#32;corrupt&#32;or&#32;invalid.&#32;The&#32;pixel&#32;data&#32;consists&#32;of&#32;*y&#32;scanlines&#32;of&#32;*x&#32;pixels,</emphasis>
155 <emphasis role="comment">//&#32;with&#32;each&#32;pixel&#32;consisting&#32;of&#32;N&#32;interleaved&#32;8-bit&#32;components;&#32;the&#32;first</emphasis>
156 <emphasis role="comment">//&#32;pixel&#32;pointed&#32;to&#32;is&#32;top-left-most&#32;in&#32;the&#32;image.&#32;There&#32;is&#32;no&#32;padding&#32;between</emphasis>
157 <emphasis role="comment">//&#32;image&#32;scanlines&#32;or&#32;between&#32;pixels,&#32;regardless&#32;of&#32;format.&#32;The&#32;number&#32;of</emphasis>
158 <emphasis role="comment">//&#32;components&#32;N&#32;is&#32;&apos;desired_channels&apos;&#32;if&#32;desired_channels&#32;is&#32;non-zero,&#32;or</emphasis>
159 <emphasis role="comment">//&#32;*channels_in_file&#32;otherwise.&#32;If&#32;desired_channels&#32;is&#32;non-zero,</emphasis>
160 <emphasis role="comment">//&#32;*channels_in_file&#32;has&#32;the&#32;number&#32;of&#32;components&#32;that&#32;_would_&#32;have&#32;been</emphasis>
161 <emphasis role="comment">//&#32;output&#32;otherwise.&#32;E.g.&#32;if&#32;you&#32;set&#32;desired_channels&#32;to&#32;4,&#32;you&#32;will&#32;always</emphasis>
162 <emphasis role="comment">//&#32;get&#32;RGBA&#32;output,&#32;but&#32;you&#32;can&#32;check&#32;*channels_in_file&#32;to&#32;see&#32;if&#32;it&apos;s&#32;trivially</emphasis>
163 <emphasis role="comment">//&#32;opaque&#32;because&#32;e.g.&#32;there&#32;were&#32;only&#32;3&#32;channels&#32;in&#32;the&#32;source&#32;image.</emphasis>
164 <emphasis role="comment">//</emphasis>
165 <emphasis role="comment">//&#32;An&#32;output&#32;image&#32;with&#32;N&#32;components&#32;has&#32;the&#32;following&#32;components&#32;interleaved</emphasis>
166 <emphasis role="comment">//&#32;in&#32;this&#32;order&#32;in&#32;each&#32;pixel:</emphasis>
167 <emphasis role="comment">//</emphasis>
168 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;N=#comp&#32;&#32;&#32;&#32;&#32;components</emphasis>
169 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;1&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grey</emphasis>
170 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;2&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grey,&#32;alpha</emphasis>
171 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;3&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;red,&#32;green,&#32;blue</emphasis>
172 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;4&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;red,&#32;green,&#32;blue,&#32;alpha</emphasis>
173 <emphasis role="comment">//</emphasis>
174 <emphasis role="comment">//&#32;If&#32;image&#32;loading&#32;fails&#32;for&#32;any&#32;reason,&#32;the&#32;return&#32;value&#32;will&#32;be&#32;NULL,</emphasis>
175 <emphasis role="comment">//&#32;and&#32;*x,&#32;*y,&#32;*channels_in_file&#32;will&#32;be&#32;unchanged.&#32;The&#32;function</emphasis>
176 <emphasis role="comment">//&#32;stbi_failure_reason()&#32;can&#32;be&#32;queried&#32;for&#32;an&#32;extremely&#32;brief,&#32;end-user</emphasis>
177 <emphasis role="comment">//&#32;unfriendly&#32;explanation&#32;of&#32;why&#32;the&#32;load&#32;failed.&#32;Define&#32;STBI_NO_FAILURE_STRINGS</emphasis>
178 <emphasis role="comment">//&#32;to&#32;avoid&#32;compiling&#32;these&#32;strings&#32;at&#32;all,&#32;and&#32;STBI_FAILURE_USERMSG&#32;to&#32;get&#32;slightly</emphasis>
179 <emphasis role="comment">//&#32;more&#32;user-friendly&#32;ones.</emphasis>
180 <emphasis role="comment">//</emphasis>
181 <emphasis role="comment">//&#32;Paletted&#32;PNG,&#32;BMP,&#32;GIF,&#32;and&#32;PIC&#32;images&#32;are&#32;automatically&#32;depalettized.</emphasis>
182 <emphasis role="comment">//</emphasis>
183 <emphasis role="comment">//&#32;To&#32;query&#32;the&#32;width,&#32;height&#32;and&#32;component&#32;count&#32;of&#32;an&#32;image&#32;without&#32;having&#32;to</emphasis>
184 <emphasis role="comment">//&#32;decode&#32;the&#32;full&#32;file,&#32;you&#32;can&#32;use&#32;the&#32;stbi_info&#32;family&#32;of&#32;functions:</emphasis>
185 <emphasis role="comment">//</emphasis>
186 <emphasis role="comment">//&#32;&#32;&#32;int&#32;x,y,n,ok;</emphasis>
187 <emphasis role="comment">//&#32;&#32;&#32;ok&#32;=&#32;stbi_info(filename,&#32;&amp;x,&#32;&amp;y,&#32;&amp;n);</emphasis>
188 <emphasis role="comment">//&#32;&#32;&#32;//&#32;returns&#32;ok=1&#32;and&#32;sets&#32;x,&#32;y,&#32;n&#32;if&#32;image&#32;is&#32;a&#32;supported&#32;format,</emphasis>
189 <emphasis role="comment">//&#32;&#32;&#32;//&#32;0&#32;otherwise.</emphasis>
190 <emphasis role="comment">//</emphasis>
191 <emphasis role="comment">//&#32;Note&#32;that&#32;stb_image&#32;pervasively&#32;uses&#32;ints&#32;in&#32;its&#32;public&#32;API&#32;for&#32;sizes,</emphasis>
192 <emphasis role="comment">//&#32;including&#32;sizes&#32;of&#32;memory&#32;buffers.&#32;This&#32;is&#32;now&#32;part&#32;of&#32;the&#32;API&#32;and&#32;thus</emphasis>
193 <emphasis role="comment">//&#32;hard&#32;to&#32;change&#32;without&#32;causing&#32;breakage.&#32;As&#32;a&#32;result,&#32;the&#32;various&#32;image</emphasis>
194 <emphasis role="comment">//&#32;loaders&#32;all&#32;have&#32;certain&#32;limits&#32;on&#32;image&#32;size;&#32;these&#32;differ&#32;somewhat</emphasis>
195 <emphasis role="comment">//&#32;by&#32;format&#32;but&#32;generally&#32;boil&#32;down&#32;to&#32;either&#32;just&#32;under&#32;2GB&#32;or&#32;just&#32;under</emphasis>
196 <emphasis role="comment">//&#32;1GB.&#32;When&#32;the&#32;decoded&#32;image&#32;would&#32;be&#32;larger&#32;than&#32;this,&#32;stb_image&#32;decoding</emphasis>
197 <emphasis role="comment">//&#32;will&#32;fail.</emphasis>
198 <emphasis role="comment">//</emphasis>
199 <emphasis role="comment">//&#32;Additionally,&#32;stb_image&#32;will&#32;reject&#32;image&#32;files&#32;that&#32;have&#32;any&#32;of&#32;their</emphasis>
200 <emphasis role="comment">//&#32;dimensions&#32;set&#32;to&#32;a&#32;larger&#32;value&#32;than&#32;the&#32;configurable&#32;STBI_MAX_DIMENSIONS,</emphasis>
201 <emphasis role="comment">//&#32;which&#32;defaults&#32;to&#32;2**24&#32;=&#32;16777216&#32;pixels.&#32;Due&#32;to&#32;the&#32;above&#32;memory&#32;limit,</emphasis>
202 <emphasis role="comment">//&#32;the&#32;only&#32;way&#32;to&#32;have&#32;an&#32;image&#32;with&#32;such&#32;dimensions&#32;load&#32;correctly</emphasis>
203 <emphasis role="comment">//&#32;is&#32;for&#32;it&#32;to&#32;have&#32;a&#32;rather&#32;extreme&#32;aspect&#32;ratio.&#32;Either&#32;way,&#32;the</emphasis>
204 <emphasis role="comment">//&#32;assumption&#32;here&#32;is&#32;that&#32;such&#32;larger&#32;images&#32;are&#32;likely&#32;to&#32;be&#32;malformed</emphasis>
205 <emphasis role="comment">//&#32;or&#32;malicious.&#32;If&#32;you&#32;do&#32;need&#32;to&#32;load&#32;an&#32;image&#32;with&#32;individual&#32;dimensions</emphasis>
206 <emphasis role="comment">//&#32;larger&#32;than&#32;that,&#32;and&#32;it&#32;still&#32;fits&#32;in&#32;the&#32;overall&#32;size&#32;limit,&#32;you&#32;can</emphasis>
207 <emphasis role="comment">//&#32;#define&#32;STBI_MAX_DIMENSIONS&#32;on&#32;your&#32;own&#32;to&#32;be&#32;something&#32;larger.</emphasis>
208 <emphasis role="comment">//</emphasis>
209 <emphasis role="comment">//&#32;===========================================================================</emphasis>
210 <emphasis role="comment">//</emphasis>
211 <emphasis role="comment">//&#32;UNICODE:</emphasis>
212 <emphasis role="comment">//</emphasis>
213 <emphasis role="comment">//&#32;&#32;&#32;If&#32;compiling&#32;for&#32;Windows&#32;and&#32;you&#32;wish&#32;to&#32;use&#32;Unicode&#32;filenames,&#32;compile</emphasis>
214 <emphasis role="comment">//&#32;&#32;&#32;with</emphasis>
215 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_WINDOWS_UTF8</emphasis>
216 <emphasis role="comment">//&#32;&#32;&#32;and&#32;pass&#32;utf8-encoded&#32;filenames.&#32;Call&#32;stbi_convert_wchar_to_utf8&#32;to&#32;convert</emphasis>
217 <emphasis role="comment">//&#32;&#32;&#32;Windows&#32;wchar_t&#32;filenames&#32;to&#32;utf8.</emphasis>
218 <emphasis role="comment">//</emphasis>
219 <emphasis role="comment">//&#32;===========================================================================</emphasis>
220 <emphasis role="comment">//</emphasis>
221 <emphasis role="comment">//&#32;Philosophy</emphasis>
222 <emphasis role="comment">//</emphasis>
223 <emphasis role="comment">//&#32;stb&#32;libraries&#32;are&#32;designed&#32;with&#32;the&#32;following&#32;priorities:</emphasis>
224 <emphasis role="comment">//</emphasis>
225 <emphasis role="comment">//&#32;&#32;&#32;&#32;1.&#32;easy&#32;to&#32;use</emphasis>
226 <emphasis role="comment">//&#32;&#32;&#32;&#32;2.&#32;easy&#32;to&#32;maintain</emphasis>
227 <emphasis role="comment">//&#32;&#32;&#32;&#32;3.&#32;good&#32;performance</emphasis>
228 <emphasis role="comment">//</emphasis>
229 <emphasis role="comment">//&#32;Sometimes&#32;I&#32;let&#32;&quot;good&#32;performance&quot;&#32;creep&#32;up&#32;in&#32;priority&#32;over&#32;&quot;easy&#32;to&#32;maintain&quot;,</emphasis>
230 <emphasis role="comment">//&#32;and&#32;for&#32;best&#32;performance&#32;I&#32;may&#32;provide&#32;less-easy-to-use&#32;APIs&#32;that&#32;give&#32;higher</emphasis>
231 <emphasis role="comment">//&#32;performance,&#32;in&#32;addition&#32;to&#32;the&#32;easy-to-use&#32;ones.&#32;Nevertheless,&#32;it&apos;s&#32;important</emphasis>
232 <emphasis role="comment">//&#32;to&#32;keep&#32;in&#32;mind&#32;that&#32;from&#32;the&#32;standpoint&#32;of&#32;you,&#32;a&#32;client&#32;of&#32;this&#32;library,</emphasis>
233 <emphasis role="comment">//&#32;all&#32;you&#32;care&#32;about&#32;is&#32;#1&#32;and&#32;#3,&#32;and&#32;stb&#32;libraries&#32;DO&#32;NOT&#32;emphasize&#32;#3&#32;above&#32;all.</emphasis>
234 <emphasis role="comment">//</emphasis>
235 <emphasis role="comment">//&#32;Some&#32;secondary&#32;priorities&#32;arise&#32;directly&#32;from&#32;the&#32;first&#32;two,&#32;some&#32;of&#32;which</emphasis>
236 <emphasis role="comment">//&#32;provide&#32;more&#32;explicit&#32;reasons&#32;why&#32;performance&#32;can&apos;t&#32;be&#32;emphasized.</emphasis>
237 <emphasis role="comment">//</emphasis>
238 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;Portable&#32;(&quot;ease&#32;of&#32;use&quot;)</emphasis>
239 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;Small&#32;source&#32;code&#32;footprint&#32;(&quot;easy&#32;to&#32;maintain&quot;)</emphasis>
240 <emphasis role="comment">//&#32;&#32;&#32;&#32;-&#32;No&#32;dependencies&#32;(&quot;ease&#32;of&#32;use&quot;)</emphasis>
241 <emphasis role="comment">//</emphasis>
242 <emphasis role="comment">//&#32;===========================================================================</emphasis>
243 <emphasis role="comment">//</emphasis>
244 <emphasis role="comment">//&#32;I/O&#32;callbacks</emphasis>
245 <emphasis role="comment">//</emphasis>
246 <emphasis role="comment">//&#32;I/O&#32;callbacks&#32;allow&#32;you&#32;to&#32;read&#32;from&#32;arbitrary&#32;sources,&#32;like&#32;packaged</emphasis>
247 <emphasis role="comment">//&#32;files&#32;or&#32;some&#32;other&#32;source.&#32;Data&#32;read&#32;from&#32;callbacks&#32;are&#32;processed</emphasis>
248 <emphasis role="comment">//&#32;through&#32;a&#32;small&#32;internal&#32;buffer&#32;(currently&#32;128&#32;bytes)&#32;to&#32;try&#32;to&#32;reduce</emphasis>
249 <emphasis role="comment">//&#32;overhead.</emphasis>
250 <emphasis role="comment">//</emphasis>
251 <emphasis role="comment">//&#32;The&#32;three&#32;functions&#32;you&#32;must&#32;define&#32;are&#32;&quot;read&quot;&#32;(reads&#32;some&#32;bytes&#32;of&#32;data),</emphasis>
252 <emphasis role="comment">//&#32;&quot;skip&quot;&#32;(skips&#32;some&#32;bytes&#32;of&#32;data),&#32;&quot;eof&quot;&#32;(reports&#32;if&#32;the&#32;stream&#32;is&#32;at&#32;the&#32;end).</emphasis>
253 <emphasis role="comment">//</emphasis>
254 <emphasis role="comment">//&#32;===========================================================================</emphasis>
255 <emphasis role="comment">//</emphasis>
256 <emphasis role="comment">//&#32;SIMD&#32;support</emphasis>
257 <emphasis role="comment">//</emphasis>
258 <emphasis role="comment">//&#32;The&#32;JPEG&#32;decoder&#32;will&#32;try&#32;to&#32;automatically&#32;use&#32;SIMD&#32;kernels&#32;on&#32;x86&#32;when</emphasis>
259 <emphasis role="comment">//&#32;supported&#32;by&#32;the&#32;compiler.&#32;For&#32;ARM&#32;Neon&#32;support,&#32;you&#32;must&#32;explicitly</emphasis>
260 <emphasis role="comment">//&#32;request&#32;it.</emphasis>
261 <emphasis role="comment">//</emphasis>
262 <emphasis role="comment">//&#32;(The&#32;old&#32;do-it-yourself&#32;SIMD&#32;API&#32;is&#32;no&#32;longer&#32;supported&#32;in&#32;the&#32;current</emphasis>
263 <emphasis role="comment">//&#32;code.)</emphasis>
264 <emphasis role="comment">//</emphasis>
265 <emphasis role="comment">//&#32;On&#32;x86,&#32;SSE2&#32;will&#32;automatically&#32;be&#32;used&#32;when&#32;available&#32;based&#32;on&#32;a&#32;run-time</emphasis>
266 <emphasis role="comment">//&#32;test;&#32;if&#32;not,&#32;the&#32;generic&#32;C&#32;versions&#32;are&#32;used&#32;as&#32;a&#32;fall-back.&#32;On&#32;ARM&#32;targets,</emphasis>
267 <emphasis role="comment">//&#32;the&#32;typical&#32;path&#32;is&#32;to&#32;have&#32;separate&#32;builds&#32;for&#32;NEON&#32;and&#32;non-NEON&#32;devices</emphasis>
268 <emphasis role="comment">//&#32;(at&#32;least&#32;this&#32;is&#32;true&#32;for&#32;iOS&#32;and&#32;Android).&#32;Therefore,&#32;the&#32;NEON&#32;support&#32;is</emphasis>
269 <emphasis role="comment">//&#32;toggled&#32;by&#32;a&#32;build&#32;flag:&#32;define&#32;STBI_NEON&#32;to&#32;get&#32;NEON&#32;loops.</emphasis>
270 <emphasis role="comment">//</emphasis>
271 <emphasis role="comment">//&#32;If&#32;for&#32;some&#32;reason&#32;you&#32;do&#32;not&#32;want&#32;to&#32;use&#32;any&#32;of&#32;SIMD&#32;code,&#32;or&#32;if</emphasis>
272 <emphasis role="comment">//&#32;you&#32;have&#32;issues&#32;compiling&#32;it,&#32;you&#32;can&#32;disable&#32;it&#32;entirely&#32;by</emphasis>
273 <emphasis role="comment">//&#32;defining&#32;STBI_NO_SIMD.</emphasis>
274 <emphasis role="comment">//</emphasis>
275 <emphasis role="comment">//&#32;===========================================================================</emphasis>
276 <emphasis role="comment">//</emphasis>
277 <emphasis role="comment">//&#32;HDR&#32;image&#32;support&#32;&#32;&#32;(disable&#32;by&#32;defining&#32;STBI_NO_HDR)</emphasis>
278 <emphasis role="comment">//</emphasis>
279 <emphasis role="comment">//&#32;stb_image&#32;supports&#32;loading&#32;HDR&#32;images&#32;in&#32;general,&#32;and&#32;currently&#32;the&#32;Radiance</emphasis>
280 <emphasis role="comment">//&#32;.HDR&#32;file&#32;format&#32;specifically.&#32;You&#32;can&#32;still&#32;load&#32;any&#32;file&#32;through&#32;the&#32;existing</emphasis>
281 <emphasis role="comment">//&#32;interface;&#32;if&#32;you&#32;attempt&#32;to&#32;load&#32;an&#32;HDR&#32;file,&#32;it&#32;will&#32;be&#32;automatically&#32;remapped</emphasis>
282 <emphasis role="comment">//&#32;to&#32;LDR,&#32;assuming&#32;gamma&#32;2.2&#32;and&#32;an&#32;arbitrary&#32;scale&#32;factor&#32;defaulting&#32;to&#32;1;</emphasis>
283 <emphasis role="comment">//&#32;both&#32;of&#32;these&#32;constants&#32;can&#32;be&#32;reconfigured&#32;through&#32;this&#32;interface:</emphasis>
284 <emphasis role="comment">//</emphasis>
285 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbi_hdr_to_ldr_gamma(2.2f);</emphasis>
286 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbi_hdr_to_ldr_scale(1.0f);</emphasis>
287 <emphasis role="comment">//</emphasis>
288 <emphasis role="comment">//&#32;(note,&#32;do&#32;not&#32;use&#32;_inverse_&#32;constants;&#32;stbi_image&#32;will&#32;invert&#32;them</emphasis>
289 <emphasis role="comment">//&#32;appropriately).</emphasis>
290 <emphasis role="comment">//</emphasis>
291 <emphasis role="comment">//&#32;Additionally,&#32;there&#32;is&#32;a&#32;new,&#32;parallel&#32;interface&#32;for&#32;loading&#32;files&#32;as</emphasis>
292 <emphasis role="comment">//&#32;(linear)&#32;floats&#32;to&#32;preserve&#32;the&#32;full&#32;dynamic&#32;range:</emphasis>
293 <emphasis role="comment">//</emphasis>
294 <emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;*data&#32;=&#32;stbi_loadf(filename,&#32;&amp;x,&#32;&amp;y,&#32;&amp;n,&#32;0);</emphasis>
295 <emphasis role="comment">//</emphasis>
296 <emphasis role="comment">//&#32;If&#32;you&#32;load&#32;LDR&#32;images&#32;through&#32;this&#32;interface,&#32;those&#32;images&#32;will</emphasis>
297 <emphasis role="comment">//&#32;be&#32;promoted&#32;to&#32;floating&#32;point&#32;values,&#32;run&#32;through&#32;the&#32;inverse&#32;of</emphasis>
298 <emphasis role="comment">//&#32;constants&#32;corresponding&#32;to&#32;the&#32;above:</emphasis>
299 <emphasis role="comment">//</emphasis>
300 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbi_ldr_to_hdr_scale(1.0f);</emphasis>
301 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbi_ldr_to_hdr_gamma(2.2f);</emphasis>
302 <emphasis role="comment">//</emphasis>
303 <emphasis role="comment">//&#32;Finally,&#32;given&#32;a&#32;filename&#32;(or&#32;an&#32;open&#32;file&#32;or&#32;memory&#32;block--see&#32;header</emphasis>
304 <emphasis role="comment">//&#32;file&#32;for&#32;details)&#32;containing&#32;image&#32;data,&#32;you&#32;can&#32;query&#32;for&#32;the&#32;&quot;most</emphasis>
305 <emphasis role="comment">//&#32;appropriate&quot;&#32;interface&#32;to&#32;use&#32;(that&#32;is,&#32;whether&#32;the&#32;image&#32;is&#32;HDR&#32;or</emphasis>
306 <emphasis role="comment">//&#32;not),&#32;using:</emphasis>
307 <emphasis role="comment">//</emphasis>
308 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;stbi_is_hdr(char&#32;*filename);</emphasis>
309 <emphasis role="comment">//</emphasis>
310 <emphasis role="comment">//&#32;===========================================================================</emphasis>
311 <emphasis role="comment">//</emphasis>
312 <emphasis role="comment">//&#32;iPhone&#32;PNG&#32;support:</emphasis>
313 <emphasis role="comment">//</emphasis>
314 <emphasis role="comment">//&#32;We&#32;optionally&#32;support&#32;converting&#32;iPhone-formatted&#32;PNGs&#32;(which&#32;store</emphasis>
315 <emphasis role="comment">//&#32;premultiplied&#32;BGRA)&#32;back&#32;to&#32;RGB,&#32;even&#32;though&#32;they&apos;re&#32;internally&#32;encoded</emphasis>
316 <emphasis role="comment">//&#32;differently.&#32;To&#32;enable&#32;this&#32;conversion,&#32;call</emphasis>
317 <emphasis role="comment">//&#32;stbi_convert_iphone_png_to_rgb(1).</emphasis>
318 <emphasis role="comment">//</emphasis>
319 <emphasis role="comment">//&#32;Call&#32;stbi_set_unpremultiply_on_load(1)&#32;as&#32;well&#32;to&#32;force&#32;a&#32;divide&#32;per</emphasis>
320 <emphasis role="comment">//&#32;pixel&#32;to&#32;remove&#32;any&#32;premultiplied&#32;alpha&#32;*only*&#32;if&#32;the&#32;image&#32;file&#32;explicitly</emphasis>
321 <emphasis role="comment">//&#32;says&#32;there&apos;s&#32;premultiplied&#32;data&#32;(currently&#32;only&#32;happens&#32;in&#32;iPhone&#32;images,</emphasis>
322 <emphasis role="comment">//&#32;and&#32;only&#32;if&#32;iPhone&#32;convert-to-rgb&#32;processing&#32;is&#32;on).</emphasis>
323 <emphasis role="comment">//</emphasis>
324 <emphasis role="comment">//&#32;===========================================================================</emphasis>
325 <emphasis role="comment">//</emphasis>
326 <emphasis role="comment">//&#32;ADDITIONAL&#32;CONFIGURATION</emphasis>
327 <emphasis role="comment">//</emphasis>
328 <emphasis role="comment">//&#32;&#32;-&#32;You&#32;can&#32;suppress&#32;implementation&#32;of&#32;any&#32;of&#32;the&#32;decoders&#32;to&#32;reduce</emphasis>
329 <emphasis role="comment">//&#32;&#32;&#32;&#32;your&#32;code&#32;footprint&#32;by&#32;#defining&#32;one&#32;or&#32;more&#32;of&#32;the&#32;following</emphasis>
330 <emphasis role="comment">//&#32;&#32;&#32;&#32;symbols&#32;before&#32;creating&#32;the&#32;implementation.</emphasis>
331 <emphasis role="comment">//</emphasis>
332 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_JPEG</emphasis>
333 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_PNG</emphasis>
334 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_BMP</emphasis>
335 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_PSD</emphasis>
336 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_TGA</emphasis>
337 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_GIF</emphasis>
338 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_HDR</emphasis>
339 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_PIC</emphasis>
340 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_PNM&#32;&#32;&#32;(.ppm&#32;and&#32;.pgm)</emphasis>
341 <emphasis role="comment">//</emphasis>
342 <emphasis role="comment">//&#32;&#32;-&#32;You&#32;can&#32;request&#32;*only*&#32;certain&#32;decoders&#32;and&#32;suppress&#32;all&#32;other&#32;ones</emphasis>
343 <emphasis role="comment">//&#32;&#32;&#32;&#32;(this&#32;will&#32;be&#32;more&#32;forward-compatible,&#32;as&#32;addition&#32;of&#32;new&#32;decoders</emphasis>
344 <emphasis role="comment">//&#32;&#32;&#32;&#32;doesn&apos;t&#32;require&#32;you&#32;to&#32;disable&#32;them&#32;explicitly):</emphasis>
345 <emphasis role="comment">//</emphasis>
346 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_JPEG</emphasis>
347 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_PNG</emphasis>
348 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_BMP</emphasis>
349 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_PSD</emphasis>
350 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_TGA</emphasis>
351 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_GIF</emphasis>
352 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_HDR</emphasis>
353 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_PIC</emphasis>
354 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ONLY_PNM&#32;&#32;&#32;(.ppm&#32;and&#32;.pgm)</emphasis>
355 <emphasis role="comment">//</emphasis>
356 <emphasis role="comment">//&#32;&#32;&#32;-&#32;If&#32;you&#32;use&#32;STBI_NO_PNG&#32;(or&#32;_ONLY_&#32;without&#32;PNG),&#32;and&#32;you&#32;still</emphasis>
357 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;want&#32;the&#32;zlib&#32;decoder&#32;to&#32;be&#32;available,&#32;#define&#32;STBI_SUPPORT_ZLIB</emphasis>
358 <emphasis role="comment">//</emphasis>
359 <emphasis role="comment">//&#32;&#32;-&#32;If&#32;you&#32;define&#32;STBI_MAX_DIMENSIONS,&#32;stb_image&#32;will&#32;reject&#32;images&#32;greater</emphasis>
360 <emphasis role="comment">//&#32;&#32;&#32;&#32;than&#32;that&#32;size&#32;(in&#32;either&#32;width&#32;or&#32;height)&#32;without&#32;further&#32;processing.</emphasis>
361 <emphasis role="comment">//&#32;&#32;&#32;&#32;This&#32;is&#32;to&#32;let&#32;programs&#32;in&#32;the&#32;wild&#32;set&#32;an&#32;upper&#32;bound&#32;to&#32;prevent</emphasis>
362 <emphasis role="comment">//&#32;&#32;&#32;&#32;denial-of-service&#32;attacks&#32;on&#32;untrusted&#32;data,&#32;as&#32;one&#32;could&#32;generate&#32;a</emphasis>
363 <emphasis role="comment">//&#32;&#32;&#32;&#32;valid&#32;image&#32;of&#32;gigantic&#32;dimensions&#32;and&#32;force&#32;stb_image&#32;to&#32;allocate&#32;a</emphasis>
364 <emphasis role="comment">//&#32;&#32;&#32;&#32;huge&#32;block&#32;of&#32;memory&#32;and&#32;spend&#32;disproportionate&#32;time&#32;decoding&#32;it.&#32;By</emphasis>
365 <emphasis role="comment">//&#32;&#32;&#32;&#32;default&#32;this&#32;is&#32;set&#32;to&#32;(1&#32;&lt;&lt;&#32;24),&#32;which&#32;is&#32;16777216,&#32;but&#32;that&apos;s&#32;still</emphasis>
366 <emphasis role="comment">//&#32;&#32;&#32;&#32;very&#32;big.</emphasis>
367 
368 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
369 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
370 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NO_STDIO</emphasis>
371 
372 <emphasis role="preprocessor">#define&#32;STBI_VERSION&#32;1</emphasis>
373 
374 <emphasis role="keyword">enum</emphasis>
375 {
376 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfba0177ac2c5002f4f251bb766d41752029">STBI_default</link>&#32;=&#32;0,&#32;<emphasis role="comment">//&#32;only&#32;used&#32;for&#32;desired_channels</emphasis>
377 
378 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbad1eb95ca1fa7706bf732bf35a0ed40aa">STBI_grey</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;1,
379 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaf5829d16d4cca6077465c5abd346e2f8">STBI_grey_alpha</link>&#32;=&#32;2,
380 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;3,
381 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaa7b1af0c9f0310c3ada2aa29a32de293">STBI_rgb_alpha</link>&#32;&#32;=&#32;4
382 };
383 
384 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
385 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>;
386 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>;
387 
388 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
389 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
390 <emphasis role="preprocessor">#endif</emphasis>
391 
392 <emphasis role="preprocessor">#ifndef&#32;STBIDEF</emphasis>
393 <emphasis role="preprocessor">#ifdef&#32;STB_IMAGE_STATIC</emphasis>
394 <emphasis role="preprocessor">#define&#32;STBIDEF&#32;static</emphasis>
395 <emphasis role="preprocessor">#else</emphasis>
396 <emphasis role="preprocessor">#define&#32;STBIDEF&#32;extern</emphasis>
397 <emphasis role="preprocessor">#endif</emphasis>
398 <emphasis role="preprocessor">#endif</emphasis>
399 
401 <emphasis role="comment">//</emphasis>
402 <emphasis role="comment">//&#32;PRIMARY&#32;API&#32;-&#32;works&#32;on&#32;images&#32;of&#32;any&#32;type</emphasis>
403 <emphasis role="comment">//</emphasis>
404 
405 <emphasis role="comment">//</emphasis>
406 <emphasis role="comment">//&#32;load&#32;image&#32;by&#32;filename,&#32;open&#32;file,&#32;or&#32;memory&#32;buffer</emphasis>
407 <emphasis role="comment">//</emphasis>
408 
409 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
410 {
411 &#32;&#32;&#32;int&#32;&#32;&#32;&#32;&#32;&#32;(*read)&#32;&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*user,<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);&#32;&#32;&#32;<emphasis role="comment">//&#32;fill&#32;&apos;data&apos;&#32;with&#32;&apos;size&apos;&#32;bytes.&#32;&#32;return&#32;number&#32;of&#32;bytes&#32;actually&#32;read</emphasis>
412 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;&#32;&#32;&#32;&#32;(*skip)&#32;&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*user,<emphasis role="keywordtype">int</emphasis>&#32;n);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;the&#32;next&#32;&apos;n&apos;&#32;bytes,&#32;or&#32;&apos;unget&apos;&#32;the&#32;last&#32;-n&#32;bytes&#32;if&#32;negative</emphasis>
413 &#32;&#32;&#32;int&#32;&#32;&#32;&#32;&#32;&#32;(*eof)&#32;&#32;&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*user);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;returns&#32;nonzero&#32;if&#32;we&#32;are&#32;at&#32;end&#32;of&#32;file/data</emphasis>
414 }&#32;<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>;
415 
417 <emphasis role="comment">//</emphasis>
418 <emphasis role="comment">//&#32;8-bits-per-channel&#32;interface</emphasis>
419 <emphasis role="comment">//</emphasis>
420 
421 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a5bf9d78a27dc1cb216005798fb704bdf">stbi_load_from_memory</link>&#32;&#32;&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&#32;&#32;,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
422 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a354f2a6f7939cf1792db087ad3b2220a">stbi_load_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk&#32;&#32;,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
423 
424 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
425 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ad3fc296ba0778df0a8094e20da82deab">stbi_load</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
426 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a093f86b90423ff020846c6d002c3296c">stbi_load_from_file</link>&#32;&#32;(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
427 <emphasis role="comment">//&#32;for&#32;stbi_load_from_file,&#32;file&#32;pointer&#32;is&#32;left&#32;pointing&#32;immediately&#32;after&#32;image</emphasis>
428 <emphasis role="preprocessor">#endif</emphasis>
429 
430 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_GIF</emphasis>
431 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a1d5ab90f79c38ced898becd050cfb910">stbi_load_gif_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**delays,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp);
432 <emphasis role="preprocessor">#endif</emphasis>
433 
434 <emphasis role="preprocessor">#ifdef&#32;STBI_WINDOWS_UTF8</emphasis>
435 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_convert_wchar_to_utf8(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufferlen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;input);
436 <emphasis role="preprocessor">#endif</emphasis>
437 
439 <emphasis role="comment">//</emphasis>
440 <emphasis role="comment">//&#32;16-bits-per-channel&#32;interface</emphasis>
441 <emphasis role="comment">//</emphasis>
442 
443 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a2ce4a73cca165fd30e0a23d012d8e770">stbi_load_16_from_memory</link>&#32;&#32;&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
444 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1aa93c0e91f15bf7b1aca8369bf39c5e41">stbi_load_16_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
445 
446 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
447 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a2202a8c0f947dd555c286f7fee1fc39d">stbi_load_16</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
448 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a077867644e156572eaf54d118f65e5a1">stbi_load_from_file_16</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
449 <emphasis role="preprocessor">#endif</emphasis>
450 
452 <emphasis role="comment">//</emphasis>
453 <emphasis role="comment">//&#32;float-per-channel&#32;interface</emphasis>
454 <emphasis role="comment">//</emphasis>
455 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
456 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a09c9f8ddfda96cc62461b86daccf0f77">stbi_loadf_from_memory</link>&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
457 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a7573a229fe25afc452dffddbded8e5a8">stbi_loadf_from_callbacks</link>&#32;&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
458 
459 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_STDIO</emphasis>
460 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a4fe9e7c92b7f8e8df8939b776a49cfa8">stbi_loadf</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
461 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a9099e31f34506c8630d58b737aa5a049">stbi_loadf_from_file</link>&#32;&#32;(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels);
462 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
463 <emphasis role="preprocessor">#endif</emphasis>
464 
465 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_HDR</emphasis>
466 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e">stbi_hdr_to_ldr_gamma</link>(<emphasis role="keywordtype">float</emphasis>&#32;gamma);
467 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258">stbi_hdr_to_ldr_scale</link>(<emphasis role="keywordtype">float</emphasis>&#32;scale);
468 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NO_HDR</emphasis>
469 
470 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
471 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb">stbi_ldr_to_hdr_gamma</link>(<emphasis role="keywordtype">float</emphasis>&#32;gamma);
472 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1af946583656a362a316b40c0421c20561">stbi_ldr_to_hdr_scale</link>(<emphasis role="keywordtype">float</emphasis>&#32;scale);
473 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NO_LINEAR</emphasis>
474 
475 <emphasis role="comment">//&#32;stbi_is_hdr&#32;is&#32;always&#32;defined,&#32;but&#32;always&#32;returns&#32;false&#32;if&#32;STBI_NO_HDR</emphasis>
476 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1af0e94f316fe1848f632517ca3c11d077">stbi_is_hdr_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user);
477 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e">stbi_is_hdr_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
478 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
479 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c">stbi_is_hdr</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>);
480 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524">stbi_is_hdr_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
481 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NO_STDIO</emphasis>
482 
483 
484 <emphasis role="comment">//&#32;get&#32;a&#32;VERY&#32;brief&#32;reason&#32;for&#32;failure</emphasis>
485 <emphasis role="comment">//&#32;on&#32;most&#32;compilers&#32;(and&#32;ALL&#32;modern&#32;mainstream&#32;compilers)&#32;this&#32;is&#32;threadsafe</emphasis>
486 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ac72f312f610a7df1519ea0f2a2f94be9">stbi_failure_reason</link>&#32;&#32;(<emphasis role="keywordtype">void</emphasis>);
487 
488 <emphasis role="comment">//&#32;free&#32;the&#32;loaded&#32;image&#32;--&#32;this&#32;is&#32;just&#32;free()</emphasis>
489 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb">stbi_image_free</link>&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*retval_from_stbi_load);
490 
491 <emphasis role="comment">//&#32;get&#32;image&#32;dimensions&#32;&amp;&#32;components&#32;without&#32;fully&#32;decoding</emphasis>
492 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1acfef077febce3bc3f1f339de478f3315">stbi_info_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
493 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a86291c64cb663f41a34647d5e1abf363">stbi_info_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
494 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f">stbi_is_16_bit_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
495 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f">stbi_is_16_bit_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user);
496 
497 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
498 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70">stbi_info</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
499 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28abedef4a0a93909332080df6be0021">stbi_info_from_file</link>&#32;&#32;&#32;&#32;&#32;(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
500 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af">stbi_is_16_bit</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>);
501 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62">stbi_is_16_bit_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
502 <emphasis role="preprocessor">#endif</emphasis>
503 
504 
505 
506 <emphasis role="comment">//&#32;for&#32;image&#32;formats&#32;that&#32;explicitly&#32;notate&#32;that&#32;they&#32;have&#32;premultiplied&#32;alpha,</emphasis>
507 <emphasis role="comment">//&#32;we&#32;just&#32;return&#32;the&#32;colors&#32;as&#32;stored&#32;in&#32;the&#32;file.&#32;set&#32;this&#32;flag&#32;to&#32;force</emphasis>
508 <emphasis role="comment">//&#32;unpremultiplication.&#32;results&#32;are&#32;undefined&#32;if&#32;the&#32;unpremultiply&#32;overflow.</emphasis>
509 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9">stbi_set_unpremultiply_on_load</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_unpremultiply);
510 
511 <emphasis role="comment">//&#32;indicate&#32;whether&#32;we&#32;should&#32;process&#32;iphone&#32;images&#32;back&#32;to&#32;canonical&#32;format,</emphasis>
512 <emphasis role="comment">//&#32;or&#32;just&#32;pass&#32;them&#32;through&#32;&quot;as-is&quot;</emphasis>
513 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b">stbi_convert_iphone_png_to_rgb</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_convert);
514 
515 <emphasis role="comment">//&#32;flip&#32;the&#32;image&#32;vertically,&#32;so&#32;the&#32;first&#32;pixel&#32;in&#32;the&#32;output&#32;array&#32;is&#32;the&#32;bottom&#32;left</emphasis>
516 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4">stbi_set_flip_vertically_on_load</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_flip);
517 
518 <emphasis role="comment">//&#32;as&#32;above,&#32;but&#32;only&#32;applies&#32;to&#32;images&#32;loaded&#32;on&#32;the&#32;thread&#32;that&#32;calls&#32;the&#32;function</emphasis>
519 <emphasis role="comment">//&#32;this&#32;function&#32;is&#32;only&#32;available&#32;if&#32;your&#32;compiler&#32;supports&#32;thread-local&#32;variables;</emphasis>
520 <emphasis role="comment">//&#32;calling&#32;it&#32;will&#32;fail&#32;to&#32;link&#32;if&#32;your&#32;compiler&#32;doesn&apos;t</emphasis>
521 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca">stbi_set_unpremultiply_on_load_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_unpremultiply);
522 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aff26696e30b62a40dd00bc12415343f6">stbi_convert_iphone_png_to_rgb_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_convert);
523 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee">stbi_set_flip_vertically_on_load_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_flip);
524 
525 <emphasis role="comment">//&#32;ZLIB&#32;client&#32;-&#32;used&#32;by&#32;PNG,&#32;available&#32;for&#32;other&#32;purposes</emphasis>
526 
527 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1acba137e5310f3c0fe9bb198e4bee3dce">stbi_zlib_decode_malloc_guesssize</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;initial_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen);
528 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1adc3de199aa29f7370a699ad545155541">stbi_zlib_decode_malloc_guesssize_headerflag</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;initial_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen,&#32;<emphasis role="keywordtype">int</emphasis>&#32;parse_header);
529 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1afec644d4e1a3cd858dfe0f9c55a1e55c">stbi_zlib_decode_malloc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen);
530 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48">stbi_zlib_decode_buffer</link>(<emphasis role="keywordtype">char</emphasis>&#32;*obuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;olen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*ibuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ilen);
531 
532 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ad6b5cd73a89037832ee2b2872a17bd1b">stbi_zlib_decode_noheader_malloc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen);
533 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e">stbi_zlib_decode_noheader_buffer</link>(<emphasis role="keywordtype">char</emphasis>&#32;*obuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;olen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*ibuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ilen);
534 
535 
536 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
537 }
538 <emphasis role="preprocessor">#endif</emphasis>
539 
540 <emphasis role="comment">//</emphasis>
541 <emphasis role="comment">//</emphasis>
543 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_INCLUDE_STB_IMAGE_H</emphasis>
544 
545 <emphasis role="preprocessor">#ifdef&#32;STB_IMAGE_IMPLEMENTATION</emphasis>
546 
547 <emphasis role="preprocessor">#if&#32;defined(STBI_ONLY_JPEG)&#32;||&#32;defined(STBI_ONLY_PNG)&#32;||&#32;defined(STBI_ONLY_BMP)&#32;\</emphasis>
548 <emphasis role="preprocessor">&#32;&#32;||&#32;defined(STBI_ONLY_TGA)&#32;||&#32;defined(STBI_ONLY_GIF)&#32;||&#32;defined(STBI_ONLY_PSD)&#32;\</emphasis>
549 <emphasis role="preprocessor">&#32;&#32;||&#32;defined(STBI_ONLY_HDR)&#32;||&#32;defined(STBI_ONLY_PIC)&#32;||&#32;defined(STBI_ONLY_PNM)&#32;\</emphasis>
550 <emphasis role="preprocessor">&#32;&#32;||&#32;defined(STBI_ONLY_ZLIB)</emphasis>
551 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_JPEG</emphasis>
552 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_JPEG</emphasis>
553 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
554 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_PNG</emphasis>
555 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_PNG</emphasis>
556 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
557 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_BMP</emphasis>
558 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_BMP</emphasis>
559 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
560 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_PSD</emphasis>
561 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_PSD</emphasis>
562 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
563 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_TGA</emphasis>
564 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_TGA</emphasis>
565 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
566 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_GIF</emphasis>
567 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_GIF</emphasis>
568 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
569 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_HDR</emphasis>
570 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_HDR</emphasis>
571 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
572 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_PIC</emphasis>
573 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_PIC</emphasis>
574 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
575 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_ONLY_PNM</emphasis>
576 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;STBI_NO_PNM</emphasis>
577 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
578 <emphasis role="preprocessor">#endif</emphasis>
579 
580 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;!defined(STBI_SUPPORT_ZLIB)&#32;&amp;&amp;&#32;!defined(STBI_NO_ZLIB)</emphasis>
581 <emphasis role="preprocessor">#define&#32;STBI_NO_ZLIB</emphasis>
582 <emphasis role="preprocessor">#endif</emphasis>
583 
584 
585 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
586 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;ptrdiff_t&#32;on&#32;osx</emphasis>
587 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
588 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
589 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
590 
591 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_LINEAR)&#32;||&#32;!defined(STBI_NO_HDR)</emphasis>
592 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>&#32;&#32;<emphasis role="comment">//&#32;ldexp,&#32;pow</emphasis>
593 <emphasis role="preprocessor">#endif</emphasis>
594 
595 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
596 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
597 <emphasis role="preprocessor">#endif</emphasis>
598 
599 <emphasis role="preprocessor">#ifndef&#32;STBI_ASSERT</emphasis>
600 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
601 <emphasis role="preprocessor">#define&#32;STBI_ASSERT(x)&#32;assert(x)</emphasis>
602 <emphasis role="preprocessor">#endif</emphasis>
603 
604 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
605 <emphasis role="preprocessor">#define&#32;STBI_EXTERN&#32;extern&#32;&quot;C&quot;</emphasis>
606 <emphasis role="preprocessor">#else</emphasis>
607 <emphasis role="preprocessor">#define&#32;STBI_EXTERN&#32;extern</emphasis>
608 <emphasis role="preprocessor">#endif</emphasis>
609 
610 
611 <emphasis role="preprocessor">#ifndef&#32;_MSC_VER</emphasis>
612 <emphasis role="preprocessor">&#32;&#32;&#32;#ifdef&#32;__cplusplus</emphasis>
613 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi_inline&#32;inline</emphasis>
614 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
615 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi_inline</emphasis>
616 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
617 <emphasis role="preprocessor">#else</emphasis>
618 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi_inline&#32;__forceinline</emphasis>
619 <emphasis role="preprocessor">#endif</emphasis>
620 
621 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_THREAD_LOCALS</emphasis>
622 <emphasis role="preprocessor">&#32;&#32;&#32;#if&#32;defined(__cplusplus)&#32;&amp;&amp;&#32;&#32;__cplusplus&#32;&gt;=&#32;201103L</emphasis>
623 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_THREAD_LOCAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;thread_local</emphasis>
624 <emphasis role="preprocessor">&#32;&#32;&#32;#elif&#32;defined(__GNUC__)&#32;&amp;&amp;&#32;__GNUC__&#32;&lt;&#32;5</emphasis>
625 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_THREAD_LOCAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread</emphasis>
626 <emphasis role="preprocessor">&#32;&#32;&#32;#elif&#32;defined(_MSC_VER)</emphasis>
627 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_THREAD_LOCAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;__declspec(thread)</emphasis>
628 <emphasis role="preprocessor">&#32;&#32;&#32;#elif&#32;defined&#32;(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;201112L&#32;&amp;&amp;&#32;!defined(__STDC_NO_THREADS__)</emphasis>
629 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_THREAD_LOCAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Thread_local</emphasis>
630 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
631 
632 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_THREAD_LOCAL</emphasis>
633 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__GNUC__)</emphasis>
634 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI_THREAD_LOCAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;__thread</emphasis>
635 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
636 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
637 <emphasis role="preprocessor">#endif</emphasis>
638 
639 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;||&#32;defined(__SYMBIAN32__)</emphasis>
640 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;stbi__uint16;
641 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;stbi__int16;
642 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;stbi__uint32;
643 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;stbi__int32;
644 <emphasis role="preprocessor">#else</emphasis>
645 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
646 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>&#32;stbi__uint16;
647 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a269259c924dce846340ddbb810db2e3c">int16_t</link>&#32;&#32;stbi__int16;
648 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;stbi__uint32;
649 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2deps_2vs2008_2stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;stbi__int32;
650 <emphasis role="preprocessor">#endif</emphasis>
651 
652 <emphasis role="comment">//&#32;should&#32;produce&#32;compiler&#32;error&#32;if&#32;size&#32;is&#32;wrong</emphasis>
653 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;validate_uint32[<emphasis role="keyword">sizeof</emphasis>(stbi__uint32)==4&#32;?&#32;1&#32;:&#32;-1];
654 
655 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
656 <emphasis role="preprocessor">#define&#32;STBI_NOTUSED(v)&#32;&#32;(void)(v)</emphasis>
657 <emphasis role="preprocessor">#else</emphasis>
658 <emphasis role="preprocessor">#define&#32;STBI_NOTUSED(v)&#32;&#32;(void)sizeof(v)</emphasis>
659 <emphasis role="preprocessor">#endif</emphasis>
660 
661 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
662 <emphasis role="preprocessor">#define&#32;STBI_HAS_LROTL</emphasis>
663 <emphasis role="preprocessor">#endif</emphasis>
664 
665 <emphasis role="preprocessor">#ifdef&#32;STBI_HAS_LROTL</emphasis>
666 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi_lrot(x,y)&#32;&#32;_lrotl(x,y)</emphasis>
667 <emphasis role="preprocessor">#else</emphasis>
668 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi_lrot(x,y)&#32;&#32;(((x)&#32;&lt;&lt;&#32;(y))&#32;|&#32;((x)&#32;&gt;&gt;&#32;(-(y)&#32;&amp;&#32;31)))</emphasis>
669 <emphasis role="preprocessor">#endif</emphasis>
670 
671 <emphasis role="preprocessor">#if&#32;defined(STBI_MALLOC)&#32;&amp;&amp;&#32;defined(STBI_FREE)&#32;&amp;&amp;&#32;(defined(STBI_REALLOC)&#32;||&#32;defined(STBI_REALLOC_SIZED))</emphasis>
672 <emphasis role="comment">//&#32;ok</emphasis>
673 <emphasis role="preprocessor">#elif&#32;!defined(STBI_MALLOC)&#32;&amp;&amp;&#32;!defined(STBI_FREE)&#32;&amp;&amp;&#32;!defined(STBI_REALLOC)&#32;&amp;&amp;&#32;!defined(STBI_REALLOC_SIZED)</emphasis>
674 <emphasis role="comment">//&#32;ok</emphasis>
675 <emphasis role="preprocessor">#else</emphasis>
676 <emphasis role="preprocessor">#error&#32;&quot;Must&#32;define&#32;all&#32;or&#32;none&#32;of&#32;STBI_MALLOC,&#32;STBI_FREE,&#32;and&#32;STBI_REALLOC&#32;(or&#32;STBI_REALLOC_SIZED).&quot;</emphasis>
677 <emphasis role="preprocessor">#endif</emphasis>
678 
679 <emphasis role="preprocessor">#ifndef&#32;STBI_MALLOC</emphasis>
680 <emphasis role="preprocessor">#define&#32;STBI_MALLOC(sz)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;malloc(sz)</emphasis>
681 <emphasis role="preprocessor">#define&#32;STBI_REALLOC(p,newsz)&#32;&#32;&#32;&#32;&#32;realloc(p,newsz)</emphasis>
682 <emphasis role="preprocessor">#define&#32;STBI_FREE(p)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(p)</emphasis>
683 <emphasis role="preprocessor">#endif</emphasis>
684 
685 <emphasis role="preprocessor">#ifndef&#32;STBI_REALLOC_SIZED</emphasis>
686 <emphasis role="preprocessor">#define&#32;STBI_REALLOC_SIZED(p,oldsz,newsz)&#32;STBI_REALLOC(p,newsz)</emphasis>
687 <emphasis role="preprocessor">#endif</emphasis>
688 
689 <emphasis role="comment">//&#32;x86/x64&#32;detection</emphasis>
690 <emphasis role="preprocessor">#if&#32;defined(__x86_64__)&#32;||&#32;defined(_M_X64)</emphasis>
691 <emphasis role="preprocessor">#define&#32;STBI__X64_TARGET</emphasis>
692 <emphasis role="preprocessor">#elif&#32;defined(__i386)&#32;||&#32;defined(_M_IX86)</emphasis>
693 <emphasis role="preprocessor">#define&#32;STBI__X86_TARGET</emphasis>
694 <emphasis role="preprocessor">#endif</emphasis>
695 
696 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)&#32;&amp;&amp;&#32;defined(STBI__X86_TARGET)&#32;&amp;&amp;&#32;!defined(__SSE2__)&#32;&amp;&amp;&#32;!defined(STBI_NO_SIMD)</emphasis>
697 <emphasis role="comment">//&#32;gcc&#32;doesn&apos;t&#32;support&#32;sse2&#32;intrinsics&#32;unless&#32;you&#32;compile&#32;with&#32;-msse2,</emphasis>
698 <emphasis role="comment">//&#32;which&#32;in&#32;turn&#32;means&#32;it&#32;gets&#32;to&#32;use&#32;SSE2&#32;everywhere.&#32;This&#32;is&#32;unfortunate,</emphasis>
699 <emphasis role="comment">//&#32;but&#32;previous&#32;attempts&#32;to&#32;provide&#32;the&#32;SSE2&#32;functions&#32;with&#32;runtime</emphasis>
700 <emphasis role="comment">//&#32;detection&#32;caused&#32;numerous&#32;issues.&#32;The&#32;way&#32;architecture&#32;extensions&#32;are</emphasis>
701 <emphasis role="comment">//&#32;exposed&#32;in&#32;GCC/Clang&#32;is,&#32;sadly,&#32;not&#32;really&#32;suited&#32;for&#32;one-file&#32;libs.</emphasis>
702 <emphasis role="comment">//&#32;New&#32;behavior:&#32;if&#32;compiled&#32;with&#32;-msse2,&#32;we&#32;use&#32;SSE2&#32;without&#32;any</emphasis>
703 <emphasis role="comment">//&#32;detection;&#32;if&#32;not,&#32;we&#32;don&apos;t&#32;use&#32;it&#32;at&#32;all.</emphasis>
704 <emphasis role="preprocessor">#define&#32;STBI_NO_SIMD</emphasis>
705 <emphasis role="preprocessor">#endif</emphasis>
706 
707 <emphasis role="preprocessor">#if&#32;defined(__MINGW32__)&#32;&amp;&amp;&#32;defined(STBI__X86_TARGET)&#32;&amp;&amp;&#32;!defined(STBI_MINGW_ENABLE_SSE2)&#32;&amp;&amp;&#32;!defined(STBI_NO_SIMD)</emphasis>
708 <emphasis role="comment">//&#32;Note&#32;that&#32;__MINGW32__&#32;doesn&apos;t&#32;actually&#32;mean&#32;32-bit,&#32;so&#32;we&#32;have&#32;to&#32;avoid&#32;STBI__X64_TARGET</emphasis>
709 <emphasis role="comment">//</emphasis>
710 <emphasis role="comment">//&#32;32-bit&#32;MinGW&#32;wants&#32;ESP&#32;to&#32;be&#32;16-byte&#32;aligned,&#32;but&#32;this&#32;is&#32;not&#32;in&#32;the</emphasis>
711 <emphasis role="comment">//&#32;Windows&#32;ABI&#32;and&#32;VC++&#32;as&#32;well&#32;as&#32;Windows&#32;DLLs&#32;don&apos;t&#32;maintain&#32;that&#32;invariant.</emphasis>
712 <emphasis role="comment">//&#32;As&#32;a&#32;result,&#32;enabling&#32;SSE2&#32;on&#32;32-bit&#32;MinGW&#32;is&#32;dangerous&#32;when&#32;not</emphasis>
713 <emphasis role="comment">//&#32;simultaneously&#32;enabling&#32;&quot;-mstackrealign&quot;.</emphasis>
714 <emphasis role="comment">//</emphasis>
715 <emphasis role="comment">//&#32;See&#32;https://github.com/nothings/stb/issues/81&#32;for&#32;more&#32;information.</emphasis>
716 <emphasis role="comment">//</emphasis>
717 <emphasis role="comment">//&#32;So&#32;default&#32;to&#32;no&#32;SSE2&#32;on&#32;32-bit&#32;MinGW.&#32;If&#32;you&apos;ve&#32;read&#32;this&#32;far&#32;and&#32;added</emphasis>
718 <emphasis role="comment">//&#32;-mstackrealign&#32;to&#32;your&#32;build&#32;settings,&#32;feel&#32;free&#32;to&#32;#define&#32;STBI_MINGW_ENABLE_SSE2.</emphasis>
719 <emphasis role="preprocessor">#define&#32;STBI_NO_SIMD</emphasis>
720 <emphasis role="preprocessor">#endif</emphasis>
721 
722 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_SIMD)&#32;&amp;&amp;&#32;(defined(STBI__X86_TARGET)&#32;||&#32;defined(STBI__X64_TARGET))</emphasis>
723 <emphasis role="preprocessor">#define&#32;STBI_SSE2</emphasis>
724 <emphasis role="preprocessor">#include&#32;&lt;emmintrin.h&gt;</emphasis>
725 
726 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
727 
728 <emphasis role="preprocessor">#if&#32;_MSC_VER&#32;&gt;=&#32;1400&#32;&#32;</emphasis><emphasis role="comment">//&#32;not&#32;VC6</emphasis>
729 <emphasis role="preprocessor">#include&#32;&lt;intrin.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;__cpuid</emphasis>
730 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__cpuid3(<emphasis role="keywordtype">void</emphasis>)
731 {
732 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;info[4];
733 &#32;&#32;&#32;<link linkend="__classes_2lib_2include_2cpuid_8h_1a0a60b3297b088d11136eb91a8d87b0ee">__cpuid</link>(info,1);
734 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;info[3];
735 }
736 <emphasis role="preprocessor">#else</emphasis>
737 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__cpuid3(<emphasis role="keywordtype">void</emphasis>)
738 {
739 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
740 &#32;&#32;&#32;__asm&#32;{
741 &#32;&#32;&#32;&#32;&#32;&#32;mov&#32;&#32;eax,1
742 &#32;&#32;&#32;&#32;&#32;&#32;cpuid
743 &#32;&#32;&#32;&#32;&#32;&#32;mov&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>,edx
744 &#32;&#32;&#32;}
745 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
746 }
747 <emphasis role="preprocessor">#endif</emphasis>
748 
749 <emphasis role="preprocessor">#define&#32;STBI_SIMD_ALIGN(type,&#32;name)&#32;__declspec(align(16))&#32;type&#32;name</emphasis>
750 
751 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_SSE2)</emphasis>
752 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__sse2_available(<emphasis role="keywordtype">void</emphasis>)
753 {
754 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;info3&#32;=&#32;stbi__cpuid3();
755 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((info3&#32;&gt;&gt;&#32;26)&#32;&amp;&#32;1)&#32;!=&#32;0;
756 }
757 <emphasis role="preprocessor">#endif</emphasis>
758 
759 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//&#32;assume&#32;GCC-style&#32;if&#32;not&#32;VC++</emphasis>
760 <emphasis role="preprocessor">#define&#32;STBI_SIMD_ALIGN(type,&#32;name)&#32;type&#32;name&#32;__attribute__((aligned(16)))</emphasis>
761 
762 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_SSE2)</emphasis>
763 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__sse2_available(<emphasis role="keywordtype">void</emphasis>)
764 {
765 &#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&apos;re&#32;even&#32;attempting&#32;to&#32;compile&#32;this&#32;on&#32;GCC/Clang,&#32;that&#32;means</emphasis>
766 &#32;&#32;&#32;<emphasis role="comment">//&#32;-msse2&#32;is&#32;on,&#32;which&#32;means&#32;the&#32;compiler&#32;is&#32;allowed&#32;to&#32;use&#32;SSE2</emphasis>
767 &#32;&#32;&#32;<emphasis role="comment">//&#32;instructions&#32;at&#32;will,&#32;and&#32;so&#32;are&#32;we.</emphasis>
768 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
769 }
770 <emphasis role="preprocessor">#endif</emphasis>
771 
772 <emphasis role="preprocessor">#endif</emphasis>
773 <emphasis role="preprocessor">#endif</emphasis>
774 
775 <emphasis role="comment">//&#32;ARM&#32;NEON</emphasis>
776 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_SIMD)&#32;&amp;&amp;&#32;defined(STBI_NEON)</emphasis>
777 <emphasis role="preprocessor">#undef&#32;STBI_NEON</emphasis>
778 <emphasis role="preprocessor">#endif</emphasis>
779 
780 <emphasis role="preprocessor">#ifdef&#32;STBI_NEON</emphasis>
781 <emphasis role="preprocessor">#include&#32;&lt;arm_neon.h&gt;</emphasis>
782 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
783 <emphasis role="preprocessor">#define&#32;STBI_SIMD_ALIGN(type,&#32;name)&#32;__declspec(align(16))&#32;type&#32;name</emphasis>
784 <emphasis role="preprocessor">#else</emphasis>
785 <emphasis role="preprocessor">#define&#32;STBI_SIMD_ALIGN(type,&#32;name)&#32;type&#32;name&#32;__attribute__((aligned(16)))</emphasis>
786 <emphasis role="preprocessor">#endif</emphasis>
787 <emphasis role="preprocessor">#endif</emphasis>
788 
789 <emphasis role="preprocessor">#ifndef&#32;STBI_SIMD_ALIGN</emphasis>
790 <emphasis role="preprocessor">#define&#32;STBI_SIMD_ALIGN(type,&#32;name)&#32;type&#32;name</emphasis>
791 <emphasis role="preprocessor">#endif</emphasis>
792 
793 <emphasis role="preprocessor">#ifndef&#32;STBI_MAX_DIMENSIONS</emphasis>
794 <emphasis role="preprocessor">#define&#32;STBI_MAX_DIMENSIONS&#32;(1&#32;&lt;&lt;&#32;24)</emphasis>
795 <emphasis role="preprocessor">#endif</emphasis>
796 
798 <emphasis role="comment">//</emphasis>
799 <emphasis role="comment">//&#32;&#32;stbi__context&#32;struct&#32;and&#32;start_xxx&#32;functions</emphasis>
800 
801 <emphasis role="comment">//&#32;stbi__context&#32;structure&#32;is&#32;our&#32;basic&#32;context&#32;used&#32;by&#32;all&#32;images,&#32;so&#32;it</emphasis>
802 <emphasis role="comment">//&#32;contains&#32;all&#32;the&#32;IO&#32;context,&#32;plus&#32;some&#32;basic&#32;image&#32;information</emphasis>
803 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
804 {
805 &#32;&#32;&#32;stbi__uint32&#32;img_x,&#32;img_y;
806 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_n,&#32;img_out_n;
807 
808 &#32;&#32;&#32;<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;io;
809 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*io_user_data;
810 
811 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;read_from_callbacks;
812 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;buflen;
813 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;buffer_start[128];
814 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;callback_already_read;
815 
816 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*img_buffer,&#32;*img_buffer_end;
817 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*img_buffer_original,&#32;*img_buffer_original_end;
818 }&#32;stbi__context;
819 
820 
821 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__refill_buffer(stbi__context&#32;*s);
822 
823 <emphasis role="comment">//&#32;initialize&#32;a&#32;memory-decode&#32;context</emphasis>
824 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__start_mem(stbi__context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
825 {
826 &#32;&#32;&#32;s-&gt;io.read&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
827 &#32;&#32;&#32;s-&gt;read_from_callbacks&#32;=&#32;0;
828 &#32;&#32;&#32;s-&gt;callback_already_read&#32;=&#32;0;
829 &#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_original&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
830 &#32;&#32;&#32;s-&gt;img_buffer_end&#32;=&#32;s-&gt;img_buffer_original_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
831 }
832 
833 <emphasis role="comment">//&#32;initialize&#32;a&#32;callback-based&#32;context</emphasis>
834 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__start_callbacks(stbi__context&#32;*s,&#32;<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*c,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user)
835 {
836 &#32;&#32;&#32;s-&gt;io&#32;=&#32;*c;
837 &#32;&#32;&#32;s-&gt;io_user_data&#32;=&#32;user;
838 &#32;&#32;&#32;s-&gt;buflen&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(s-&gt;buffer_start);
839 &#32;&#32;&#32;s-&gt;read_from_callbacks&#32;=&#32;1;
840 &#32;&#32;&#32;s-&gt;callback_already_read&#32;=&#32;0;
841 &#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_original&#32;=&#32;s-&gt;buffer_start;
842 &#32;&#32;&#32;stbi__refill_buffer(s);
843 &#32;&#32;&#32;s-&gt;img_buffer_original_end&#32;=&#32;s-&gt;img_buffer_end;
844 }
845 
846 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
847 
848 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__stdio_read(<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
849 {
850 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;fread(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,1,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,(FILE*)&#32;user);
851 }
852 
853 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__stdio_skip(<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
854 {
855 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch;
856 &#32;&#32;&#32;fseek((FILE*)&#32;user,&#32;n,&#32;SEEK_CUR);
857 &#32;&#32;&#32;ch&#32;=&#32;fgetc((FILE*)&#32;user);&#32;&#32;<emphasis role="comment">/*&#32;have&#32;to&#32;read&#32;a&#32;byte&#32;to&#32;reset&#32;feof()&apos;s&#32;flag&#32;*/</emphasis>
858 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ch&#32;!=&#32;EOF)&#32;{
859 &#32;&#32;&#32;&#32;&#32;&#32;ungetc(ch,&#32;(FILE&#32;*)&#32;user);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;byte&#32;back&#32;onto&#32;stream&#32;if&#32;valid.&#32;*/</emphasis>
860 &#32;&#32;&#32;}
861 }
862 
863 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__stdio_eof(<emphasis role="keywordtype">void</emphasis>&#32;*user)
864 {
865 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;feof((FILE*)&#32;user)&#32;||&#32;ferror((FILE&#32;*)&#32;user);
866 }
867 
868 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;stbi__stdio_callbacks&#32;=
869 {
870 &#32;&#32;&#32;stbi__stdio_read,
871 &#32;&#32;&#32;stbi__stdio_skip,
872 &#32;&#32;&#32;stbi__stdio_eof,
873 };
874 
875 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__start_file(stbi__context&#32;*s,&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)
876 {
877 &#32;&#32;&#32;stbi__start_callbacks(s,&#32;&amp;stbi__stdio_callbacks,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
878 }
879 
880 <emphasis role="comment">//static&#32;void&#32;stop_file(stbi__context&#32;*s)&#32;{&#32;}</emphasis>
881 
882 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_NO_STDIO</emphasis>
883 
884 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__rewind(stbi__context&#32;*s)
885 {
886 &#32;&#32;&#32;<emphasis role="comment">//&#32;conceptually&#32;rewind&#32;SHOULD&#32;rewind&#32;to&#32;the&#32;beginning&#32;of&#32;the&#32;stream,</emphasis>
887 &#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;we&#32;just&#32;rewind&#32;to&#32;the&#32;beginning&#32;of&#32;the&#32;initial&#32;buffer,&#32;because</emphasis>
888 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;only&#32;use&#32;it&#32;after&#32;doing&#32;&apos;test&apos;,&#32;which&#32;only&#32;ever&#32;looks&#32;at&#32;at&#32;most&#32;92&#32;bytes</emphasis>
889 &#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_original;
890 &#32;&#32;&#32;s-&gt;img_buffer_end&#32;=&#32;s-&gt;img_buffer_original_end;
891 }
892 
893 <emphasis role="keyword">enum</emphasis>
894 {
895 &#32;&#32;&#32;STBI_ORDER_RGB,
896 &#32;&#32;&#32;STBI_ORDER_BGR
897 };
898 
899 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
900 {
901 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits_per_channel;
902 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_channels;
903 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channel_order;
904 }&#32;stbi__result_info;
905 
906 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_JPEG</emphasis>
907 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_test(stbi__context&#32;*s);
908 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__jpeg_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
909 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
910 <emphasis role="preprocessor">#endif</emphasis>
911 
912 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PNG</emphasis>
913 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__png_test(stbi__context&#32;*s);
914 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__png_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
915 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__png_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
916 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__png_is16(stbi__context&#32;*s);
917 <emphasis role="preprocessor">#endif</emphasis>
918 
919 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_BMP</emphasis>
920 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__bmp_test(stbi__context&#32;*s);
921 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__bmp_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
922 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__bmp_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
923 <emphasis role="preprocessor">#endif</emphasis>
924 
925 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_TGA</emphasis>
926 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__tga_test(stbi__context&#32;*s);
927 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__tga_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
928 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__tga_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
929 <emphasis role="preprocessor">#endif</emphasis>
930 
931 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PSD</emphasis>
932 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__psd_test(stbi__context&#32;*s);
933 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__psd_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpc);
934 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__psd_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
935 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__psd_is16(stbi__context&#32;*s);
936 <emphasis role="preprocessor">#endif</emphasis>
937 
938 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_HDR</emphasis>
939 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__hdr_test(stbi__context&#32;*s);
940 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;*stbi__hdr_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
941 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__hdr_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
942 <emphasis role="preprocessor">#endif</emphasis>
943 
944 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PIC</emphasis>
945 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pic_test(stbi__context&#32;*s);
946 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__pic_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
947 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pic_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
948 <emphasis role="preprocessor">#endif</emphasis>
949 
950 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_GIF</emphasis>
951 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__gif_test(stbi__context&#32;*s);
952 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__gif_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
953 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__load_gif_main(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**delays,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp);
954 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__gif_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
955 <emphasis role="preprocessor">#endif</emphasis>
956 
957 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PNM</emphasis>
958 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_test(stbi__context&#32;*s);
959 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*stbi__pnm_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri);
960 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
961 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_is16(stbi__context&#32;*s);
962 <emphasis role="preprocessor">#endif</emphasis>
963 
964 <emphasis role="keyword">static</emphasis>
965 <emphasis role="preprocessor">#ifdef&#32;STBI_THREAD_LOCAL</emphasis>
966 STBI_THREAD_LOCAL
967 <emphasis role="preprocessor">#endif</emphasis>
968 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbi__g_failure_reason;
969 
970 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ac72f312f610a7df1519ea0f2a2f94be9">stbi_failure_reason</link>(<emphasis role="keywordtype">void</emphasis>)
971 {
972 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__g_failure_reason;
973 }
974 
975 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_FAILURE_STRINGS</emphasis>
976 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__err(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str)
977 {
978 &#32;&#32;&#32;stbi__g_failure_reason&#32;=&#32;str;
979 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
980 }
981 <emphasis role="preprocessor">#endif</emphasis>
982 
983 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__malloc(<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
984 {
985 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1a0cdb9c42c21645876b3977da46360aeb">STBI_MALLOC</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
986 }
987 
988 <emphasis role="comment">//&#32;stb_image&#32;uses&#32;ints&#32;pervasively,&#32;including&#32;for&#32;offset&#32;calculations.</emphasis>
989 <emphasis role="comment">//&#32;therefore&#32;the&#32;largest&#32;decoded&#32;image&#32;size&#32;we&#32;can&#32;support&#32;with&#32;the</emphasis>
990 <emphasis role="comment">//&#32;current&#32;code,&#32;even&#32;on&#32;64-bit&#32;targets,&#32;is&#32;INT_MAX.&#32;this&#32;is&#32;not&#32;a</emphasis>
991 <emphasis role="comment">//&#32;significant&#32;limitation&#32;for&#32;the&#32;intended&#32;use&#32;case.</emphasis>
992 <emphasis role="comment">//</emphasis>
993 <emphasis role="comment">//&#32;we&#32;do,&#32;however,&#32;need&#32;to&#32;make&#32;sure&#32;our&#32;size&#32;calculations&#32;don&apos;t</emphasis>
994 <emphasis role="comment">//&#32;overflow.&#32;hence&#32;a&#32;few&#32;helper&#32;functions&#32;for&#32;size&#32;calculations&#32;that</emphasis>
995 <emphasis role="comment">//&#32;multiply&#32;integers&#32;together,&#32;making&#32;sure&#32;that&#32;they&apos;re&#32;non-negative</emphasis>
996 <emphasis role="comment">//&#32;and&#32;no&#32;overflow&#32;occurs.</emphasis>
997 
998 <emphasis role="comment">//&#32;return&#32;1&#32;if&#32;the&#32;sum&#32;is&#32;valid,&#32;0&#32;on&#32;overflow.</emphasis>
999 <emphasis role="comment">//&#32;negative&#32;terms&#32;are&#32;considered&#32;invalid.</emphasis>
1000 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__addsizes_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1001 {
1002 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1003 &#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;0&#32;&lt;=&#32;b&#32;&lt;=&#32;INT_MAX,&#32;hence&#32;also</emphasis>
1004 &#32;&#32;&#32;<emphasis role="comment">//&#32;0&#32;&lt;=&#32;INT_MAX&#32;-&#32;b&#32;&lt;=&#32;INTMAX.</emphasis>
1005 &#32;&#32;&#32;<emphasis role="comment">//&#32;And&#32;&quot;a&#32;+&#32;b&#32;&lt;=&#32;INT_MAX&quot;&#32;(which&#32;might&#32;overflow)&#32;is&#32;the</emphasis>
1006 &#32;&#32;&#32;<emphasis role="comment">//&#32;same&#32;as&#32;a&#32;&lt;=&#32;INT_MAX&#32;-&#32;b&#32;(no&#32;overflow)</emphasis>
1007 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;INT_MAX&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1008 }
1009 
1010 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;the&#32;product&#32;is&#32;valid,&#32;0&#32;on&#32;overflow.</emphasis>
1011 <emphasis role="comment">//&#32;negative&#32;factors&#32;are&#32;considered&#32;invalid.</emphasis>
1012 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__mul2sizes_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1013 {
1014 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1015 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;mul-by-0&#32;is&#32;always&#32;safe</emphasis>
1016 &#32;&#32;&#32;<emphasis role="comment">//&#32;portable&#32;way&#32;to&#32;check&#32;for&#32;no&#32;overflows&#32;in&#32;a*b</emphasis>
1017 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;INT_MAX/<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1018 }
1019 
1020 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_JPEG)&#32;||&#32;!defined(STBI_NO_PNG)&#32;||&#32;!defined(STBI_NO_TGA)&#32;||&#32;!defined(STBI_NO_HDR)</emphasis>
1021 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;&quot;a*b&#32;+&#32;add&quot;&#32;has&#32;no&#32;negative&#32;terms/factors&#32;and&#32;doesn&apos;t&#32;overflow</emphasis>
1022 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__mad2sizes_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1023 {
1024 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;&amp;&amp;&#32;stbi__addsizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1025 }
1026 <emphasis role="preprocessor">#endif</emphasis>
1027 
1028 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;&quot;a*b*c&#32;+&#32;add&quot;&#32;has&#32;no&#32;negative&#32;terms/factors&#32;and&#32;doesn&apos;t&#32;overflow</emphasis>
1029 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__mad3sizes_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1030 {
1031 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;&amp;&amp;&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;c)&#32;&amp;&amp;
1032 &#32;&#32;&#32;&#32;&#32;&#32;stbi__addsizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*c,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1033 }
1034 
1035 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;&quot;a*b*c*d&#32;+&#32;add&quot;&#32;has&#32;no&#32;negative&#32;terms/factors&#32;and&#32;doesn&apos;t&#32;overflow</emphasis>
1036 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_LINEAR)&#32;||&#32;!defined(STBI_NO_HDR)&#32;||&#32;!defined(STBI_NO_PNM)</emphasis>
1037 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__mad4sizes_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,&#32;<emphasis role="keywordtype">int</emphasis>&#32;d,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1038 {
1039 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;&amp;&amp;&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;c)&#32;&amp;&amp;
1040 &#32;&#32;&#32;&#32;&#32;&#32;stbi__mul2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*c,&#32;d)&#32;&amp;&amp;&#32;stbi__addsizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*c*d,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1041 }
1042 <emphasis role="preprocessor">#endif</emphasis>
1043 
1044 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_JPEG)&#32;||&#32;!defined(STBI_NO_PNG)&#32;||&#32;!defined(STBI_NO_TGA)&#32;||&#32;!defined(STBI_NO_HDR)</emphasis>
1045 <emphasis role="comment">//&#32;mallocs&#32;with&#32;size&#32;overflow&#32;checking</emphasis>
1046 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__malloc_mad2(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1047 {
1048 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad2sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1049 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__malloc(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1050 }
1051 <emphasis role="preprocessor">#endif</emphasis>
1052 
1053 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__malloc_mad3(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1054 {
1055 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;c,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1056 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__malloc(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*c&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1057 }
1058 
1059 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_LINEAR)&#32;||&#32;!defined(STBI_NO_HDR)&#32;||&#32;!defined(STBI_NO_PNM)</emphasis>
1060 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__malloc_mad4(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,&#32;<emphasis role="keywordtype">int</emphasis>&#32;d,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>)
1061 {
1062 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad4sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;c,&#32;d,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1063 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__malloc(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>*c*d&#32;+&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__setup__force__size__t__length_8cpp_1a125cf68de8b64e40ee4cede7e2b57ea2">add</link>);
1064 }
1065 <emphasis role="preprocessor">#endif</emphasis>
1066 
1067 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;the&#32;sum&#32;of&#32;two&#32;signed&#32;ints&#32;is&#32;valid&#32;(between&#32;-2^31&#32;and&#32;2^31-1&#32;inclusive),&#32;0&#32;on&#32;overflow.</emphasis>
1068 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__addints_valid(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1069 {
1070 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;0)&#32;!=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;=&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;a&#32;and&#32;b&#32;have&#32;different&#32;signs,&#32;so&#32;no&#32;overflow</emphasis>
1071 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;&#32;0&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;INT_MIN&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;&#32;<emphasis role="comment">//&#32;same&#32;as&#32;a&#32;+&#32;b&#32;&gt;=&#32;INT_MIN;&#32;INT_MIN&#32;-&#32;b&#32;cannot&#32;overflow&#32;since&#32;b&#32;&lt;&#32;0.</emphasis>
1072 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;INT_MAX&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1073 }
1074 
1075 <emphasis role="comment">//&#32;returns&#32;1&#32;if&#32;the&#32;product&#32;of&#32;two&#32;signed&#32;shorts&#32;is&#32;valid,&#32;0&#32;on&#32;overflow.</emphasis>
1076 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__mul2shorts_valid(<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1077 {
1078 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;==&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;<emphasis role="comment">//&#32;multiplication&#32;by&#32;0&#32;is&#32;always&#32;0;&#32;check&#32;for&#32;-1&#32;so&#32;SHRT_MIN/b&#32;doesn&apos;t&#32;overflow</emphasis>
1079 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;0)&#32;==&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;=&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;SHRT_MAX/<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;&#32;<emphasis role="comment">//&#32;product&#32;is&#32;positive,&#32;so&#32;similar&#32;to&#32;mul2sizes_valid</emphasis>
1080 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&lt;=&#32;SHRT_MIN&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;&#32;<emphasis role="comment">//&#32;same&#32;as&#32;a&#32;*&#32;b&#32;&gt;=&#32;SHRT_MIN</emphasis>
1081 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;=&#32;SHRT_MIN&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
1082 }
1083 
1084 <emphasis role="comment">//&#32;stbi__err&#32;-&#32;error</emphasis>
1085 <emphasis role="comment">//&#32;stbi__errpf&#32;-&#32;error&#32;returning&#32;pointer&#32;to&#32;float</emphasis>
1086 <emphasis role="comment">//&#32;stbi__errpuc&#32;-&#32;error&#32;returning&#32;pointer&#32;to&#32;unsigned&#32;char</emphasis>
1087 
1088 <emphasis role="preprocessor">#ifdef&#32;STBI_NO_FAILURE_STRINGS</emphasis>
1089 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi__err(x,y)&#32;&#32;0</emphasis>
1090 <emphasis role="preprocessor">#elif&#32;defined(STBI_FAILURE_USERMSG)</emphasis>
1091 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi__err(x,y)&#32;&#32;stbi__err(y)</emphasis>
1092 <emphasis role="preprocessor">#else</emphasis>
1093 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;stbi__err(x,y)&#32;&#32;stbi__err(x)</emphasis>
1094 <emphasis role="preprocessor">#endif</emphasis>
1095 
1096 <emphasis role="preprocessor">#define&#32;stbi__errpf(x,y)&#32;&#32;&#32;((float&#32;*)(size_t)&#32;(stbi__err(x,y)?NULL:NULL))</emphasis>
1097 <emphasis role="preprocessor">#define&#32;stbi__errpuc(x,y)&#32;&#32;((unsigned&#32;char&#32;*)(size_t)&#32;(stbi__err(x,y)?NULL:NULL))</emphasis>
1098 
1099 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb">stbi_image_free</link>(<emphasis role="keywordtype">void</emphasis>&#32;*retval_from_stbi_load)
1100 {
1101 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(retval_from_stbi_load);
1102 }
1103 
1104 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
1105 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;*stbi__ldr_to_hdr(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
1106 <emphasis role="preprocessor">#endif</emphasis>
1107 
1108 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_HDR</emphasis>
1109 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__hdr_to_ldr(<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
1110 <emphasis role="preprocessor">#endif</emphasis>
1111 
1112 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__vertically_flip_on_load_global&#32;=&#32;0;
1113 
1114 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4">stbi_set_flip_vertically_on_load</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_flip)
1115 {
1116 &#32;&#32;&#32;stbi__vertically_flip_on_load_global&#32;=&#32;flag_true_if_should_flip;
1117 }
1118 
1119 <emphasis role="preprocessor">#ifndef&#32;STBI_THREAD_LOCAL</emphasis>
1120 <emphasis role="preprocessor">#define&#32;stbi__vertically_flip_on_load&#32;&#32;stbi__vertically_flip_on_load_global</emphasis>
1121 <emphasis role="preprocessor">#else</emphasis>
1122 <emphasis role="keyword">static</emphasis>&#32;STBI_THREAD_LOCAL&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__vertically_flip_on_load_local,&#32;stbi__vertically_flip_on_load_set;
1123 
1124 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee">stbi_set_flip_vertically_on_load_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_flip)
1125 {
1126 &#32;&#32;&#32;stbi__vertically_flip_on_load_local&#32;=&#32;flag_true_if_should_flip;
1127 &#32;&#32;&#32;stbi__vertically_flip_on_load_set&#32;=&#32;1;
1128 }
1129 
1130 <emphasis role="preprocessor">#define&#32;stbi__vertically_flip_on_load&#32;&#32;(stbi__vertically_flip_on_load_set&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
1131 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;stbi__vertically_flip_on_load_local&#32;&#32;\</emphasis>
1132 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;stbi__vertically_flip_on_load_global)</emphasis>
1133 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_THREAD_LOCAL</emphasis>
1134 
1135 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__load_main(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpc)
1136 {
1137 &#32;&#32;&#32;memset(ri,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(*ri));&#32;<emphasis role="comment">//&#32;make&#32;sure&#32;it&apos;s&#32;initialized&#32;if&#32;we&#32;add&#32;new&#32;fields</emphasis>
1138 &#32;&#32;&#32;ri-&gt;bits_per_channel&#32;=&#32;8;&#32;<emphasis role="comment">//&#32;default&#32;is&#32;8&#32;so&#32;most&#32;paths&#32;don&apos;t&#32;have&#32;to&#32;be&#32;changed</emphasis>
1139 &#32;&#32;&#32;ri-&gt;channel_order&#32;=&#32;STBI_ORDER_RGB;&#32;<emphasis role="comment">//&#32;all&#32;current&#32;input&#32;&amp;&#32;output&#32;are&#32;this,&#32;but&#32;this&#32;is&#32;here&#32;so&#32;we&#32;can&#32;add&#32;BGR&#32;order</emphasis>
1140 &#32;&#32;&#32;ri-&gt;num_channels&#32;=&#32;0;
1141 
1142 &#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;the&#32;formats&#32;with&#32;a&#32;very&#32;explicit&#32;header&#32;first&#32;(at&#32;least&#32;a&#32;FOURCC</emphasis>
1143 &#32;&#32;&#32;<emphasis role="comment">//&#32;or&#32;distinctive&#32;magic&#32;number&#32;first)</emphasis>
1144 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNG</emphasis>
1145 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__png_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__png_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1146 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1147 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_BMP</emphasis>
1148 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__bmp_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__bmp_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1149 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1150 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_GIF</emphasis>
1151 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__gif_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__gif_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1152 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1153 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PSD</emphasis>
1154 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__psd_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__psd_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri,&#32;bpc);
1155 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
1156 &#32;&#32;&#32;STBI_NOTUSED(bpc);
1157 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1158 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PIC</emphasis>
1159 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pic_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__pic_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1160 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1161 
1162 &#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;the&#32;formats&#32;that&#32;can&#32;end&#32;up&#32;attempting&#32;to&#32;load&#32;with&#32;just&#32;1&#32;or&#32;2</emphasis>
1163 &#32;&#32;&#32;<emphasis role="comment">//&#32;bytes&#32;matching&#32;expectations;&#32;these&#32;are&#32;prone&#32;to&#32;false&#32;positives,&#32;so</emphasis>
1164 &#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;them&#32;later</emphasis>
1165 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_JPEG</emphasis>
1166 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_test(s))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__jpeg_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1167 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1168 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNM</emphasis>
1169 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pnm_test(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__pnm_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1170 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1171 
1172 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
1173 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__hdr_test(s))&#32;{
1174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*hdr&#32;=&#32;stbi__hdr_load(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__hdr_to_ldr(hdr,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
1176 &#32;&#32;&#32;}
1177 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1178 
1179 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_TGA</emphasis>
1180 &#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;tga&#32;last&#32;because&#32;it&apos;s&#32;a&#32;crappy&#32;test!</emphasis>
1181 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__tga_test(s))
1182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__tga_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
1183 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1184 
1185 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unknown&#32;image&#32;type&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;not&#32;of&#32;any&#32;known&#32;type,&#32;or&#32;corrupt&quot;</emphasis>);
1186 }
1187 
1188 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__convert_16_to_8(stbi__uint16&#32;*orig,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels)
1189 {
1190 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1191 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_len&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;h&#32;*&#32;channels;
1192 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*reduced;
1193 
1194 &#32;&#32;&#32;reduced&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(img_len);
1195 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reduced&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
1196 
1197 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;img_len;&#32;++i)
1198 &#32;&#32;&#32;&#32;&#32;&#32;reduced[i]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)((orig[i]&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xFF);&#32;<emphasis role="comment">//&#32;top&#32;half&#32;of&#32;each&#32;byte&#32;is&#32;sufficient&#32;approx&#32;of&#32;16-&gt;8&#32;bit&#32;scaling</emphasis>
1199 
1200 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(orig);
1201 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reduced;
1202 }
1203 
1204 <emphasis role="keyword">static</emphasis>&#32;stbi__uint16&#32;*stbi__convert_8_to_16(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*orig,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels)
1205 {
1206 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1207 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_len&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;h&#32;*&#32;channels;
1208 &#32;&#32;&#32;stbi__uint16&#32;*enlarged;
1209 
1210 &#32;&#32;&#32;enlarged&#32;=&#32;(stbi__uint16&#32;*)&#32;stbi__malloc(img_len*2);
1211 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enlarged&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbi__uint16&#32;*)&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
1212 
1213 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;img_len;&#32;++i)
1214 &#32;&#32;&#32;&#32;&#32;&#32;enlarged[i]&#32;=&#32;(stbi__uint16)((orig[i]&#32;&lt;&lt;&#32;8)&#32;+&#32;orig[i]);&#32;<emphasis role="comment">//&#32;replicate&#32;to&#32;high&#32;and&#32;low&#32;byte,&#32;maps&#32;0-&gt;0,&#32;255-&gt;0xffff</emphasis>
1215 
1216 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(orig);
1217 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;enlarged;
1218 }
1219 
1220 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__vertical_flip(<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes_per_pixel)
1221 {
1222 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>;
1223 &#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_per_row&#32;=&#32;(<link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;bytes_per_pixel;
1224 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;temp[2048];
1225 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*bytes&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>;
1226 
1227 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(row&#32;=&#32;0;&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;&lt;&#32;(h&gt;&gt;1);&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>++)&#32;{
1228 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*row0&#32;=&#32;bytes&#32;+&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>*bytes_per_row;
1229 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*row1&#32;=&#32;bytes&#32;+&#32;(h&#32;-&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;-&#32;1)*bytes_per_row;
1230 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;swap&#32;row0&#32;with&#32;row1</emphasis>
1231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_left&#32;=&#32;bytes_per_row;
1232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(bytes_left)&#32;{
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_copy&#32;=&#32;(bytes_left&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(temp))&#32;?&#32;bytes_left&#32;:&#32;<emphasis role="keyword">sizeof</emphasis>(temp);
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(temp,&#32;row0,&#32;bytes_copy);
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(row0,&#32;row1,&#32;bytes_copy);
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(row1,&#32;temp,&#32;bytes_copy);
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row0&#32;+=&#32;bytes_copy;
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row1&#32;+=&#32;bytes_copy;
1239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytes_left&#32;-=&#32;bytes_copy;
1240 &#32;&#32;&#32;&#32;&#32;&#32;}
1241 &#32;&#32;&#32;}
1242 }
1243 
1244 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_GIF</emphasis>
1245 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__vertical_flip_slices(<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes_per_pixel)
1246 {
1247 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slice;
1248 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slice_size&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;h&#32;*&#32;bytes_per_pixel;
1249 
1250 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*bytes&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>;
1251 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(slice&#32;=&#32;0;&#32;slice&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;&#32;++slice)&#32;{
1252 &#32;&#32;&#32;&#32;&#32;&#32;stbi__vertical_flip(bytes,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h,&#32;bytes_per_pixel);
1253 &#32;&#32;&#32;&#32;&#32;&#32;bytes&#32;+=&#32;slice_size;
1254 &#32;&#32;&#32;}
1255 }
1256 <emphasis role="preprocessor">#endif</emphasis>
1257 
1258 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbi__load_and_postprocess_8bit(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1259 {
1260 &#32;&#32;&#32;stbi__result_info&#32;ri;
1261 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__load_main(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp,&#32;&amp;ri,&#32;8);
1262 
1263 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1264 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1265 
1266 &#32;&#32;&#32;<emphasis role="comment">//&#32;it&#32;is&#32;the&#32;responsibility&#32;of&#32;the&#32;loaders&#32;to&#32;make&#32;sure&#32;we&#32;get&#32;either&#32;8&#32;or&#32;16&#32;bit.</emphasis>
1267 &#32;&#32;&#32;STBI_ASSERT(ri.bits_per_channel&#32;==&#32;8&#32;||&#32;ri.bits_per_channel&#32;==&#32;16);
1268 
1269 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri.bits_per_channel&#32;!=&#32;8)&#32;{
1270 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__convert_16_to_8((stbi__uint16&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;req_comp&#32;==&#32;0&#32;?&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;:&#32;req_comp);
1271 &#32;&#32;&#32;&#32;&#32;&#32;ri.bits_per_channel&#32;=&#32;8;
1272 &#32;&#32;&#32;}
1273 
1274 &#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO:&#32;move&#32;stbi__convert_format&#32;to&#32;here</emphasis>
1275 
1276 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__vertically_flip_on_load)&#32;{
1277 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels&#32;=&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1278 &#32;&#32;&#32;&#32;&#32;&#32;stbi__vertical_flip(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;channels&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>));
1279 &#32;&#32;&#32;}
1280 
1281 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1282 }
1283 
1284 <emphasis role="keyword">static</emphasis>&#32;stbi__uint16&#32;*stbi__load_and_postprocess_16bit(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1285 {
1286 &#32;&#32;&#32;stbi__result_info&#32;ri;
1287 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__load_main(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp,&#32;&amp;ri,&#32;16);
1288 
1289 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1290 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1291 
1292 &#32;&#32;&#32;<emphasis role="comment">//&#32;it&#32;is&#32;the&#32;responsibility&#32;of&#32;the&#32;loaders&#32;to&#32;make&#32;sure&#32;we&#32;get&#32;either&#32;8&#32;or&#32;16&#32;bit.</emphasis>
1293 &#32;&#32;&#32;STBI_ASSERT(ri.bits_per_channel&#32;==&#32;8&#32;||&#32;ri.bits_per_channel&#32;==&#32;16);
1294 
1295 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri.bits_per_channel&#32;!=&#32;16)&#32;{
1296 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__convert_8_to_16((<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;req_comp&#32;==&#32;0&#32;?&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;:&#32;req_comp);
1297 &#32;&#32;&#32;&#32;&#32;&#32;ri.bits_per_channel&#32;=&#32;16;
1298 &#32;&#32;&#32;}
1299 
1300 &#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO:&#32;move&#32;stbi__convert_format16&#32;to&#32;here</emphasis>
1301 &#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO:&#32;special&#32;case&#32;RGB-to-Y&#32;(and&#32;RGBA-to-YA)&#32;for&#32;8-bit-to-16-bit&#32;case&#32;to&#32;keep&#32;more&#32;precision</emphasis>
1302 
1303 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__vertically_flip_on_load)&#32;{
1304 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels&#32;=&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1305 &#32;&#32;&#32;&#32;&#32;&#32;stbi__vertical_flip(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;channels&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(stbi__uint16));
1306 &#32;&#32;&#32;}
1307 
1308 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbi__uint16&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1309 }
1310 
1311 <emphasis role="preprocessor">#if&#32;!defined(STBI_NO_HDR)&#32;&amp;&amp;&#32;!defined(STBI_NO_LINEAR)</emphasis>
1312 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__float_postprocess(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1313 {
1314 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__vertically_flip_on_load&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels&#32;=&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
1316 &#32;&#32;&#32;&#32;&#32;&#32;stbi__vertical_flip(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;channels&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>));
1317 &#32;&#32;&#32;}
1318 }
1319 <emphasis role="preprocessor">#endif</emphasis>
1320 
1321 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
1322 
1323 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(STBI_WINDOWS_UTF8)</emphasis>
1324 STBI_EXTERN&#32;__declspec(dllimport)&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;MultiByteToWideChar(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cbmb,&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;*widestr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cchwide);
1325 STBI_EXTERN&#32;__declspec(dllimport)&#32;<emphasis role="keywordtype">int</emphasis>&#32;__stdcall&#32;WideCharToMultiByte(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;*widestr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cchwide,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cbmb,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*defchar,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*used_default);
1326 <emphasis role="preprocessor">#endif</emphasis>
1327 
1328 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(STBI_WINDOWS_UTF8)</emphasis>
1329 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi_convert_wchar_to_utf8(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufferlen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*&#32;input)
1330 {
1331 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;WideCharToMultiByte(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;input,&#32;-1,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;bufferlen,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1332 }
1333 <emphasis role="preprocessor">#endif</emphasis>
1334 
1335 <emphasis role="keyword">static</emphasis>&#32;FILE&#32;*stbi__fopen(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)
1336 {
1337 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
1338 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(STBI_WINDOWS_UTF8)</emphasis>
1339 &#32;&#32;&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;wMode[64];
1340 &#32;&#32;&#32;<emphasis role="keywordtype">wchar_t</emphasis>&#32;wFilename[1024];
1341 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;==&#32;MultiByteToWideChar(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;-1,&#32;wFilename,&#32;<emphasis role="keyword">sizeof</emphasis>(wFilename)/<emphasis role="keyword">sizeof</emphasis>(*wFilename)))
1342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1343 
1344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;==&#32;MultiByteToWideChar(65001&#32;<emphasis role="comment">/*&#32;UTF8&#32;*/</emphasis>,&#32;0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>,&#32;-1,&#32;wMode,&#32;<emphasis role="keyword">sizeof</emphasis>(wMode)/<emphasis role="keyword">sizeof</emphasis>(*wMode)))
1345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1346 
1347 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
1348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;!=&#32;_wfopen_s(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;wFilename,&#32;wMode))
1349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;0;
1350 <emphasis role="preprocessor">#else</emphasis>
1351 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;_wfopen(wFilename,&#32;wMode);
1352 <emphasis role="preprocessor">#endif</emphasis>
1353 
1354 <emphasis role="preprocessor">#elif&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
1355 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;!=&#32;fopen_s(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>))
1356 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>=0;
1357 <emphasis role="preprocessor">#else</emphasis>
1358 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
1359 <emphasis role="preprocessor">#endif</emphasis>
1360 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>;
1361 }
1362 
1363 
1364 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ad3fc296ba0778df0a8094e20da82deab">stbi_load</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1365 {
1366 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1367 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1368 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
1369 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a093f86b90423ff020846c6d002c3296c">stbi_load_from_file</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1370 &#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1371 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1372 }
1373 
1374 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a093f86b90423ff020846c6d002c3296c">stbi_load_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1375 {
1376 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1377 &#32;&#32;&#32;stbi__context&#32;s;
1378 &#32;&#32;&#32;stbi__start_file(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1379 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__load_and_postprocess_8bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1380 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)&#32;{
1381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;&apos;unget&apos;&#32;all&#32;the&#32;characters&#32;in&#32;the&#32;IO&#32;buffer</emphasis>
1382 &#32;&#32;&#32;&#32;&#32;&#32;fseek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;-&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(s.img_buffer_end&#32;-&#32;s.img_buffer),&#32;SEEK_CUR);
1383 &#32;&#32;&#32;}
1384 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1385 }
1386 
1387 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;stbi__uint16&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a077867644e156572eaf54d118f65e5a1">stbi_load_from_file_16</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1388 {
1389 &#32;&#32;&#32;stbi__uint16&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1390 &#32;&#32;&#32;stbi__context&#32;s;
1391 &#32;&#32;&#32;stbi__start_file(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1392 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__load_and_postprocess_16bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1393 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)&#32;{
1394 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;&apos;unget&apos;&#32;all&#32;the&#32;characters&#32;in&#32;the&#32;IO&#32;buffer</emphasis>
1395 &#32;&#32;&#32;&#32;&#32;&#32;fseek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;-&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(s.img_buffer_end&#32;-&#32;s.img_buffer),&#32;SEEK_CUR);
1396 &#32;&#32;&#32;}
1397 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1398 }
1399 
1400 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a2202a8c0f947dd555c286f7fee1fc39d">stbi_load_16</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1401 {
1402 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1403 &#32;&#32;&#32;stbi__uint16&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1404 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*)&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
1405 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a077867644e156572eaf54d118f65e5a1">stbi_load_from_file_16</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1406 &#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1407 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1408 }
1409 
1410 
1411 <emphasis role="preprocessor">#endif&#32;</emphasis>
1412 
1413 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a2ce4a73cca165fd30e0a23d012d8e770">stbi_load_16_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels)
1414 {
1415 &#32;&#32;&#32;stbi__context&#32;s;
1416 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1417 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_and_postprocess_16bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,channels_in_file,desired_channels);
1418 }
1419 
1420 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1aa93c0e91f15bf7b1aca8369bf39c5e41">stbi_load_16_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*channels_in_file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;desired_channels)
1421 {
1422 &#32;&#32;&#32;stbi__context&#32;s;
1423 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)clbk,&#32;user);
1424 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_and_postprocess_16bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,channels_in_file,desired_channels);
1425 }
1426 
1427 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a5bf9d78a27dc1cb216005798fb704bdf">stbi_load_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1428 {
1429 &#32;&#32;&#32;stbi__context&#32;s;
1430 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1431 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_and_postprocess_8bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1432 }
1433 
1434 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a354f2a6f7939cf1792db087ad3b2220a">stbi_load_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1435 {
1436 &#32;&#32;&#32;stbi__context&#32;s;
1437 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
1438 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_and_postprocess_8bit(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1439 }
1440 
1441 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_GIF</emphasis>
1442 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a1d5ab90f79c38ced898becd050cfb910">stbi_load_gif_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**delays,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1443 {
1444 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1445 &#32;&#32;&#32;stbi__context&#32;s;
1446 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1447 
1448 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;stbi__load_gif_main(&amp;s,&#32;delays,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp);
1449 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__vertically_flip_on_load)&#32;{
1450 &#32;&#32;&#32;&#32;&#32;&#32;stbi__vertical_flip_slices(&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;);
1451 &#32;&#32;&#32;}
1452 
1453 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1454 }
1455 <emphasis role="preprocessor">#endif</emphasis>
1456 
1457 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
1458 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*stbi__loadf_main(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1459 {
1460 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1461 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
1462 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__hdr_test(s))&#32;{
1463 &#32;&#32;&#32;&#32;&#32;&#32;stbi__result_info&#32;ri;
1464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*hdr_data&#32;=&#32;stbi__hdr_load(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;&amp;ri);
1465 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hdr_data)
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__float_postprocess(hdr_data,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1467 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hdr_data;
1468 &#32;&#32;&#32;}
1469 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1470 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;stbi__load_and_postprocess_8bit(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp);
1471 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)
1472 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__ldr_to_hdr(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
1473 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;unknown&#32;image&#32;type&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;not&#32;of&#32;any&#32;known&#32;type,&#32;or&#32;corrupt&quot;</emphasis>);
1474 }
1475 
1476 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a09c9f8ddfda96cc62461b86daccf0f77">stbi_loadf_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1477 {
1478 &#32;&#32;&#32;stbi__context&#32;s;
1479 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1480 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__loadf_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1481 }
1482 
1483 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a7573a229fe25afc452dffddbded8e5a8">stbi_loadf_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1484 {
1485 &#32;&#32;&#32;stbi__context&#32;s;
1486 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
1487 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__loadf_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1488 }
1489 
1490 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
1491 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a4fe9e7c92b7f8e8df8939b776a49cfa8">stbi_loadf</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1492 {
1493 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1494 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1495 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
1496 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a9099e31f34506c8630d58b737aa5a049">stbi_loadf_from_file</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1497 &#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1498 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1499 }
1500 
1501 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1a9099e31f34506c8630d58b737aa5a049">stbi_loadf_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
1502 {
1503 &#32;&#32;&#32;stbi__context&#32;s;
1504 &#32;&#32;&#32;stbi__start_file(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1505 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__loadf_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
1506 }
1507 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_NO_STDIO</emphasis>
1508 
1509 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_NO_LINEAR</emphasis>
1510 
1511 <emphasis role="comment">//&#32;these&#32;is-hdr-or-not&#32;is&#32;defined&#32;independent&#32;of&#32;whether&#32;STBI_NO_LINEAR&#32;is</emphasis>
1512 <emphasis role="comment">//&#32;defined,&#32;for&#32;API&#32;simplicity;&#32;if&#32;STBI_NO_LINEAR&#32;is&#32;defined,&#32;it&#32;always</emphasis>
1513 <emphasis role="comment">//&#32;reports&#32;false!</emphasis>
1514 
1515 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e">stbi_is_hdr_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
1516 {
1517 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
1518 &#32;&#32;&#32;stbi__context&#32;s;
1519 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1520 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__hdr_test(&amp;s);
1521 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
1522 &#32;&#32;&#32;STBI_NOTUSED(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
1523 &#32;&#32;&#32;STBI_NOTUSED(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
1524 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1525 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1526 }
1527 
1528 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
1529 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c">stbi_is_hdr</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>)
1530 {
1531 &#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
1532 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>=0;
1533 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;{
1534 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524">stbi_is_hdr_from_file</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1535 &#32;&#32;&#32;&#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1536 &#32;&#32;&#32;}
1537 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
1538 }
1539 
1540 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524">stbi_is_hdr_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)
1541 {
1542 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
1543 &#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pos&#32;=&#32;ftell(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1544 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
1545 &#32;&#32;&#32;stbi__context&#32;s;
1546 &#32;&#32;&#32;stbi__start_file(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1547 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;stbi__hdr_test(&amp;s);
1548 &#32;&#32;&#32;fseek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;pos,&#32;SEEK_SET);
1549 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
1550 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
1551 &#32;&#32;&#32;STBI_NOTUSED(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
1552 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1553 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1554 }
1555 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_NO_STDIO</emphasis>
1556 
1557 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1af0e94f316fe1848f632517ca3c11d077">stbi_is_hdr_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*clbk,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user)
1558 {
1559 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
1560 &#32;&#32;&#32;stbi__context&#32;s;
1561 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
1562 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__hdr_test(&amp;s);
1563 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
1564 &#32;&#32;&#32;STBI_NOTUSED(clbk);
1565 &#32;&#32;&#32;STBI_NOTUSED(user);
1566 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1567 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
1568 }
1569 
1570 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
1571 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;stbi__l2h_gamma=2.2f,&#32;stbi__l2h_scale=1.0f;
1572 
1573 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb">stbi_ldr_to_hdr_gamma</link>(<emphasis role="keywordtype">float</emphasis>&#32;gamma)&#32;{&#32;stbi__l2h_gamma&#32;=&#32;gamma;&#32;}
1574 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1af946583656a362a316b40c0421c20561">stbi_ldr_to_hdr_scale</link>(<emphasis role="keywordtype">float</emphasis>&#32;scale)&#32;{&#32;stbi__l2h_scale&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>;&#32;}
1575 <emphasis role="preprocessor">#endif</emphasis>
1576 
1577 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;stbi__h2l_gamma_i=1.0f/2.2f,&#32;stbi__h2l_scale_i=1.0f;
1578 
1579 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e">stbi_hdr_to_ldr_gamma</link>(<emphasis role="keywordtype">float</emphasis>&#32;gamma)&#32;{&#32;stbi__h2l_gamma_i&#32;=&#32;1/gamma;&#32;}
1580 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258">stbi_hdr_to_ldr_scale</link>(<emphasis role="keywordtype">float</emphasis>&#32;scale)&#32;{&#32;stbi__h2l_scale_i&#32;=&#32;1/<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>;&#32;}
1581 
1582 
1584 <emphasis role="comment">//</emphasis>
1585 <emphasis role="comment">//&#32;Common&#32;code&#32;used&#32;by&#32;all&#32;image&#32;loaders</emphasis>
1586 <emphasis role="comment">//</emphasis>
1587 
1588 <emphasis role="keyword">enum</emphasis>
1589 {
1590 &#32;&#32;&#32;STBI__SCAN_load=0,
1591 &#32;&#32;&#32;STBI__SCAN_type,
1592 &#32;&#32;&#32;STBI__SCAN_header
1593 };
1594 
1595 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__refill_buffer(stbi__context&#32;*s)
1596 {
1597 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;(s-&gt;io.read)(s-&gt;io_user_data,(<emphasis role="keywordtype">char</emphasis>*)s-&gt;buffer_start,s-&gt;buflen);
1598 &#32;&#32;&#32;s-&gt;callback_already_read&#32;+=&#32;(int)&#32;(s-&gt;img_buffer&#32;-&#32;s-&gt;img_buffer_original);
1599 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)&#32;{
1600 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;at&#32;end&#32;of&#32;file,&#32;treat&#32;same&#32;as&#32;if&#32;from&#32;memory,&#32;but&#32;need&#32;to&#32;handle&#32;case</emphasis>
1601 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;s-&gt;img_buffer&#32;isn&apos;t&#32;pointing&#32;to&#32;safe&#32;memory,&#32;e.g.&#32;0-byte&#32;file</emphasis>
1602 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;read_from_callbacks&#32;=&#32;0;
1603 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;buffer_start;
1604 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer_end&#32;=&#32;s-&gt;buffer_start+1;
1605 &#32;&#32;&#32;&#32;&#32;&#32;*s-&gt;img_buffer&#32;=&#32;0;
1606 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1607 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;buffer_start;
1608 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer_end&#32;=&#32;s-&gt;buffer_start&#32;+&#32;n;
1609 &#32;&#32;&#32;}
1610 }
1611 
1612 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__get8(stbi__context&#32;*s)
1613 {
1614 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_buffer&#32;&lt;&#32;s-&gt;img_buffer_end)
1615 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*s-&gt;img_buffer++;
1616 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;read_from_callbacks)&#32;{
1617 &#32;&#32;&#32;&#32;&#32;&#32;stbi__refill_buffer(s);
1618 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*s-&gt;img_buffer++;
1619 &#32;&#32;&#32;}
1620 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1621 }
1622 
1623 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_NO_HDR)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)&#32;&amp;&amp;&#32;defined(STBI_NO_PNM)</emphasis>
1624 <emphasis role="comment">//&#32;nothing</emphasis>
1625 <emphasis role="preprocessor">#else</emphasis>
1626 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__at_eof(stbi__context&#32;*s)
1627 {
1628 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;io.read)&#32;{
1629 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(s-&gt;io.eof)(s-&gt;io_user_data))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1630 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;feof()&#32;is&#32;true,&#32;check&#32;if&#32;buffer&#32;=&#32;end</emphasis>
1631 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;special&#32;case:&#32;we&apos;ve&#32;only&#32;got&#32;the&#32;special&#32;0&#32;character&#32;at&#32;the&#32;end</emphasis>
1632 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;read_from_callbacks&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1633 &#32;&#32;&#32;}
1634 
1635 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s-&gt;img_buffer&#32;&gt;=&#32;s-&gt;img_buffer_end;
1636 }
1637 <emphasis role="preprocessor">#endif</emphasis>
1638 
1639 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_BMP)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)&#32;&amp;&amp;&#32;defined(STBI_NO_TGA)&#32;&amp;&amp;&#32;defined(STBI_NO_GIF)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)</emphasis>
1640 <emphasis role="comment">//&#32;nothing</emphasis>
1641 <emphasis role="preprocessor">#else</emphasis>
1642 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__skip(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1643 {
1644 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>;&#32;&#32;<emphasis role="comment">//&#32;already&#32;there!</emphasis>
1645 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&lt;&#32;0)&#32;{
1646 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_end;
1647 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1648 &#32;&#32;&#32;}
1649 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;io.read)&#32;{
1650 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;blen&#32;=&#32;(int)&#32;(s-&gt;img_buffer_end&#32;-&#32;s-&gt;img_buffer);
1651 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blen&#32;&lt;&#32;n)&#32;{
1652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_end;
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(s-&gt;io.skip)(s-&gt;io_user_data,&#32;n&#32;-&#32;blen);
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1655 &#32;&#32;&#32;&#32;&#32;&#32;}
1656 &#32;&#32;&#32;}
1657 &#32;&#32;&#32;s-&gt;img_buffer&#32;+=&#32;n;
1658 }
1659 <emphasis role="preprocessor">#endif</emphasis>
1660 
1661 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_TGA)&#32;&amp;&amp;&#32;defined(STBI_NO_HDR)&#32;&amp;&amp;&#32;defined(STBI_NO_PNM)</emphasis>
1662 <emphasis role="comment">//&#32;nothing</emphasis>
1663 <emphasis role="preprocessor">#else</emphasis>
1664 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__getn(stbi__context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
1665 {
1666 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;io.read)&#32;{
1667 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;blen&#32;=&#32;(int)&#32;(s-&gt;img_buffer_end&#32;-&#32;s-&gt;img_buffer);
1668 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blen&#32;&lt;&#32;n)&#32;{
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;
1670 
1671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;s-&gt;img_buffer,&#32;blen);
1672 
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;(s-&gt;io.read)(s-&gt;io_user_data,&#32;(<emphasis role="keywordtype">char</emphasis>*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>&#32;+&#32;blen,&#32;n&#32;-&#32;blen);
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;(n-blen));
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;=&#32;s-&gt;img_buffer_end;
1676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
1677 &#32;&#32;&#32;&#32;&#32;&#32;}
1678 &#32;&#32;&#32;}
1679 
1680 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_buffer+n&#32;&lt;=&#32;s-&gt;img_buffer_end)&#32;{
1681 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;s-&gt;img_buffer,&#32;n);
1682 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_buffer&#32;+=&#32;n;
1683 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
1684 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
1685 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1686 }
1687 <emphasis role="preprocessor">#endif</emphasis>
1688 
1689 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)</emphasis>
1690 <emphasis role="comment">//&#32;nothing</emphasis>
1691 <emphasis role="preprocessor">#else</emphasis>
1692 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__get16be(stbi__context&#32;*s)
1693 {
1694 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__get8(s);
1695 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&lt;&#32;8)&#32;+&#32;stbi__get8(s);
1696 }
1697 <emphasis role="preprocessor">#endif</emphasis>
1698 
1699 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)</emphasis>
1700 <emphasis role="comment">//&#32;nothing</emphasis>
1701 <emphasis role="preprocessor">#else</emphasis>
1702 <emphasis role="keyword">static</emphasis>&#32;stbi__uint32&#32;stbi__get32be(stbi__context&#32;*s)
1703 {
1704 &#32;&#32;&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__get16be(s);
1705 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&lt;&#32;16)&#32;+&#32;stbi__get16be(s);
1706 }
1707 <emphasis role="preprocessor">#endif</emphasis>
1708 
1709 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_BMP)&#32;&amp;&amp;&#32;defined(STBI_NO_TGA)&#32;&amp;&amp;&#32;defined(STBI_NO_GIF)</emphasis>
1710 <emphasis role="comment">//&#32;nothing</emphasis>
1711 <emphasis role="preprocessor">#else</emphasis>
1712 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__get16le(stbi__context&#32;*s)
1713 {
1714 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__get8(s);
1715 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;+&#32;(stbi__get8(s)&#32;&lt;&lt;&#32;8);
1716 }
1717 <emphasis role="preprocessor">#endif</emphasis>
1718 
1719 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_BMP</emphasis>
1720 <emphasis role="keyword">static</emphasis>&#32;stbi__uint32&#32;stbi__get32le(stbi__context&#32;*s)
1721 {
1722 &#32;&#32;&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__get16le(s);
1723 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;+=&#32;(stbi__uint32)stbi__get16le(s)&#32;&lt;&lt;&#32;16;
1724 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
1725 }
1726 <emphasis role="preprocessor">#endif</emphasis>
1727 
1728 <emphasis role="preprocessor">#define&#32;STBI__BYTECAST(x)&#32;&#32;((stbi_uc)&#32;((x)&#32;&amp;&#32;255))&#32;&#32;</emphasis><emphasis role="comment">//&#32;truncate&#32;int&#32;to&#32;byte&#32;without&#32;warnings</emphasis>
1729 
1730 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_JPEG)&#32;&amp;&amp;&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_BMP)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)&#32;&amp;&amp;&#32;defined(STBI_NO_TGA)&#32;&amp;&amp;&#32;defined(STBI_NO_GIF)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)&#32;&amp;&amp;&#32;defined(STBI_NO_PNM)</emphasis>
1731 <emphasis role="comment">//&#32;nothing</emphasis>
1732 <emphasis role="preprocessor">#else</emphasis>
1734 <emphasis role="comment">//</emphasis>
1735 <emphasis role="comment">//&#32;&#32;generic&#32;converter&#32;from&#32;built-in&#32;img_n&#32;to&#32;req_comp</emphasis>
1736 <emphasis role="comment">//&#32;&#32;&#32;&#32;individual&#32;types&#32;do&#32;this&#32;automatically&#32;as&#32;much&#32;as&#32;possible&#32;(e.g.&#32;jpeg</emphasis>
1737 <emphasis role="comment">//&#32;&#32;&#32;&#32;does&#32;all&#32;cases&#32;internally&#32;since&#32;it&#32;needs&#32;to&#32;colorspace&#32;convert&#32;anyway,</emphasis>
1738 <emphasis role="comment">//&#32;&#32;&#32;&#32;and&#32;it&#32;never&#32;has&#32;alpha,&#32;so&#32;very&#32;few&#32;cases&#32;).&#32;png&#32;can&#32;automatically</emphasis>
1739 <emphasis role="comment">//&#32;&#32;&#32;&#32;interleave&#32;an&#32;alpha=255&#32;channel,&#32;but&#32;falls&#32;back&#32;to&#32;this&#32;for&#32;other&#32;cases</emphasis>
1740 <emphasis role="comment">//</emphasis>
1741 <emphasis role="comment">//&#32;&#32;assume&#32;data&#32;buffer&#32;is&#32;malloced,&#32;so&#32;malloc&#32;a&#32;new&#32;one&#32;and&#32;free&#32;that&#32;one</emphasis>
1742 <emphasis role="comment">//&#32;&#32;only&#32;failure&#32;mode&#32;is&#32;malloc&#32;failing</emphasis>
1743 
1744 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__compute_y(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1745 {
1746 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;(((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>*77)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>*150)&#32;+&#32;&#32;(29*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>))&#32;&gt;&gt;&#32;8);
1747 }
1748 <emphasis role="preprocessor">#endif</emphasis>
1749 
1750 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_BMP)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)&#32;&amp;&amp;&#32;defined(STBI_NO_TGA)&#32;&amp;&amp;&#32;defined(STBI_NO_GIF)&#32;&amp;&amp;&#32;defined(STBI_NO_PIC)&#32;&amp;&amp;&#32;defined(STBI_NO_PNM)</emphasis>
1751 <emphasis role="comment">//&#32;nothing</emphasis>
1752 <emphasis role="preprocessor">#else</emphasis>
1753 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbi__convert_format(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
1754 {
1755 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
1756 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*good;
1757 
1758 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;img_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1759 &#32;&#32;&#32;STBI_ASSERT(req_comp&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;req_comp&#32;&lt;=&#32;4);
1760 
1761 &#32;&#32;&#32;good&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;stbi__malloc_mad3(req_comp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;0);
1762 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(good&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1763 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1764 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
1765 &#32;&#32;&#32;}
1766 
1767 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;img_n&#32;&#32;&#32;;
1769 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dest&#32;=&#32;good&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;req_comp;
1770 
1771 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__COMBO(a,b)&#32;&#32;((a)*8+(b))</emphasis>
1772 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__CASE(a,b)&#32;&#32;&#32;case&#32;STBI__COMBO(a,b):&#32;for(i=x-1;&#32;i&#32;&gt;=&#32;0;&#32;--i,&#32;src&#32;+=&#32;a,&#32;dest&#32;+=&#32;b)</emphasis>
1773 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;source&#32;image&#32;with&#32;img_n&#32;components&#32;to&#32;one&#32;with&#32;req_comp&#32;components;</emphasis>
1774 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;avoid&#32;switch&#32;per&#32;pixel,&#32;so&#32;use&#32;switch&#32;per&#32;scanline&#32;and&#32;massive&#32;macros</emphasis>
1775 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(STBI__COMBO(img_n,&#32;req_comp))&#32;{
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,2)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[1]=255;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,3)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,4)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[3]=255;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,1)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,3)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,4)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[3]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,4)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];dest[1]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2];dest[3]=255;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,1)&#32;{&#32;dest[0]=stbi__compute_y(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,2)&#32;{&#32;dest[0]=stbi__compute_y(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;dest[1]&#32;=&#32;255;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,1)&#32;{&#32;dest[0]=stbi__compute_y(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,2)&#32;{&#32;dest[0]=stbi__compute_y(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;dest[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[3];&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,3)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];dest[1]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;STBI_ASSERT(0);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(good);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unsupported&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;format&#32;conversion&quot;</emphasis>);
1789 &#32;&#32;&#32;&#32;&#32;&#32;}
1790 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#undef&#32;STBI__CASE</emphasis>
1791 &#32;&#32;&#32;}
1792 
1793 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1794 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;good;
1795 }
1796 <emphasis role="preprocessor">#endif</emphasis>
1797 
1798 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)</emphasis>
1799 <emphasis role="comment">//&#32;nothing</emphasis>
1800 <emphasis role="preprocessor">#else</emphasis>
1801 <emphasis role="keyword">static</emphasis>&#32;stbi__uint16&#32;stbi__compute_y_16(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
1802 {
1803 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbi__uint16)&#32;(((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>*77)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>*150)&#32;+&#32;&#32;(29*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>))&#32;&gt;&gt;&#32;8);
1804 }
1805 <emphasis role="preprocessor">#endif</emphasis>
1806 
1807 <emphasis role="preprocessor">#if&#32;defined(STBI_NO_PNG)&#32;&amp;&amp;&#32;defined(STBI_NO_PSD)</emphasis>
1808 <emphasis role="comment">//&#32;nothing</emphasis>
1809 <emphasis role="preprocessor">#else</emphasis>
1810 <emphasis role="keyword">static</emphasis>&#32;stbi__uint16&#32;*stbi__convert_format16(stbi__uint16&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
1811 {
1812 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
1813 &#32;&#32;&#32;stbi__uint16&#32;*good;
1814 
1815 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;img_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1816 &#32;&#32;&#32;STBI_ASSERT(req_comp&#32;&gt;=&#32;1&#32;&amp;&amp;&#32;req_comp&#32;&lt;=&#32;4);
1817 
1818 &#32;&#32;&#32;good&#32;=&#32;(stbi__uint16&#32;*)&#32;stbi__malloc(req_comp&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;*&#32;2);
1819 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(good&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
1820 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1821 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbi__uint16&#32;*)&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
1822 &#32;&#32;&#32;}
1823 
1824 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
1825 &#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;img_n&#32;&#32;&#32;;
1826 &#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*dest&#32;=&#32;good&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;req_comp;
1827 
1828 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__COMBO(a,b)&#32;&#32;((a)*8+(b))</emphasis>
1829 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__CASE(a,b)&#32;&#32;&#32;case&#32;STBI__COMBO(a,b):&#32;for(i=x-1;&#32;i&#32;&gt;=&#32;0;&#32;--i,&#32;src&#32;+=&#32;a,&#32;dest&#32;+=&#32;b)</emphasis>
1830 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;source&#32;image&#32;with&#32;img_n&#32;components&#32;to&#32;one&#32;with&#32;req_comp&#32;components;</emphasis>
1831 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;avoid&#32;switch&#32;per&#32;pixel,&#32;so&#32;use&#32;switch&#32;per&#32;scanline&#32;and&#32;massive&#32;macros</emphasis>
1832 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(STBI__COMBO(img_n,&#32;req_comp))&#32;{
1833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,2)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[1]=0xffff;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,3)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(1,4)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[3]=0xffff;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,1)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,3)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(2,4)&#32;{&#32;dest[0]=dest[1]=dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];&#32;dest[3]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,4)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];dest[1]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2];dest[3]=0xffff;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,1)&#32;{&#32;dest[0]=stbi__compute_y_16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(3,2)&#32;{&#32;dest[0]=stbi__compute_y_16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;dest[1]&#32;=&#32;0xffff;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,1)&#32;{&#32;dest[0]=stbi__compute_y_16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,2)&#32;{&#32;dest[0]=stbi__compute_y_16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2]);&#32;dest[1]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[3];&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(4,3)&#32;{&#32;dest[0]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[0];dest[1]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[1];dest[2]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[2];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
1845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;STBI_ASSERT(0);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(good);&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stbi__uint16*)&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unsupported&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;format&#32;conversion&quot;</emphasis>);
1846 &#32;&#32;&#32;&#32;&#32;&#32;}
1847 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#undef&#32;STBI__CASE</emphasis>
1848 &#32;&#32;&#32;}
1849 
1850 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1851 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;good;
1852 }
1853 <emphasis role="preprocessor">#endif</emphasis>
1854 
1855 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_LINEAR</emphasis>
1856 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;*stbi__ldr_to_hdr(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
1857 {
1858 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,k,n;
1859 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*output;
1860 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1861 &#32;&#32;&#32;output&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;stbi__malloc_mad4(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>),&#32;0);
1862 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(output&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);&#32;}
1863 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;number&#32;of&#32;non-alpha&#32;components</emphasis>
1864 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&amp;&#32;1)&#32;n&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;&#32;<emphasis role="keywordflow">else</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>-1;
1865 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++i)&#32;{
1866 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;n;&#32;++k)&#32;{
1867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;+&#32;k]&#32;=&#32;(float)&#32;(<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+k]/255.0f,&#32;stbi__l2h_gamma)&#32;*&#32;stbi__l2h_scale);
1868 &#32;&#32;&#32;&#32;&#32;&#32;}
1869 &#32;&#32;&#32;}
1870 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&lt;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;{
1871 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++i)&#32;{
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;+&#32;n]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;+&#32;n]/255.0f;
1873 &#32;&#32;&#32;&#32;&#32;&#32;}
1874 &#32;&#32;&#32;}
1875 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1876 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output;
1877 }
1878 <emphasis role="preprocessor">#endif</emphasis>
1879 
1880 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_HDR</emphasis>
1881 <emphasis role="preprocessor">#define&#32;stbi__float2int(x)&#32;&#32;&#32;((int)&#32;(x))</emphasis>
1882 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__hdr_to_ldr(<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
1883 {
1884 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,k,n;
1885 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*output;
1886 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1887 &#32;&#32;&#32;output&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;0);
1888 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(output&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);&#32;}
1889 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;number&#32;of&#32;non-alpha&#32;components</emphasis>
1890 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&amp;&#32;1)&#32;n&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;&#32;<emphasis role="keywordflow">else</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>-1;
1891 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++i)&#32;{
1892 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;n;&#32;++k)&#32;{
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;(float)&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a490c36eca6590103f32eb0520a4c11f6">pow</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+k]*stbi__h2l_scale_i,&#32;stbi__h2l_gamma_i)&#32;*&#32;255&#32;+&#32;0.5f;
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0;
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&#32;255)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;255;
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;+&#32;k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;stbi__float2int(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
1897 &#32;&#32;&#32;&#32;&#32;&#32;}
1898 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&lt;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;{
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>+k]&#32;*&#32;255&#32;+&#32;0.5f;
1900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0;
1901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&#32;255)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;255;
1902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;+&#32;k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;stbi__float2int(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
1903 &#32;&#32;&#32;&#32;&#32;&#32;}
1904 &#32;&#32;&#32;}
1905 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
1906 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output;
1907 }
1908 <emphasis role="preprocessor">#endif</emphasis>
1909 
1911 <emphasis role="comment">//</emphasis>
1912 <emphasis role="comment">//&#32;&#32;&quot;baseline&quot;&#32;JPEG/JFIF&#32;decoder</emphasis>
1913 <emphasis role="comment">//</emphasis>
1914 <emphasis role="comment">//&#32;&#32;&#32;&#32;simple&#32;implementation</emphasis>
1915 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;doesn&apos;t&#32;support&#32;delayed&#32;output&#32;of&#32;y-dimension</emphasis>
1916 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;simple&#32;interface&#32;(only&#32;one&#32;output&#32;format:&#32;8-bit&#32;interleaved&#32;RGB)</emphasis>
1917 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;doesn&apos;t&#32;try&#32;to&#32;recover&#32;corrupt&#32;jpegs</emphasis>
1918 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;doesn&apos;t&#32;allow&#32;partial&#32;loading,&#32;loading&#32;multiple&#32;at&#32;once</emphasis>
1919 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;still&#32;fast&#32;on&#32;x86&#32;(copying&#32;globals&#32;into&#32;locals&#32;doesn&apos;t&#32;help&#32;x86)</emphasis>
1920 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;allocates&#32;lots&#32;of&#32;intermediate&#32;memory&#32;(full&#32;size&#32;of&#32;all&#32;components)</emphasis>
1921 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;non-interleaved&#32;case&#32;requires&#32;this&#32;anyway</emphasis>
1922 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;allows&#32;good&#32;upsampling&#32;(see&#32;next)</emphasis>
1923 <emphasis role="comment">//&#32;&#32;&#32;&#32;high-quality</emphasis>
1924 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;upsampled&#32;channels&#32;are&#32;bilinearly&#32;interpolated,&#32;even&#32;across&#32;blocks</emphasis>
1925 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;quality&#32;integer&#32;IDCT&#32;derived&#32;from&#32;IJG&apos;s&#32;&apos;slow&apos;</emphasis>
1926 <emphasis role="comment">//&#32;&#32;&#32;&#32;performance</emphasis>
1927 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;fast&#32;huffman;&#32;reasonable&#32;integer&#32;IDCT</emphasis>
1928 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;some&#32;SIMD&#32;kernels&#32;for&#32;common&#32;paths&#32;on&#32;targets&#32;with&#32;SSE2/NEON</emphasis>
1929 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;uses&#32;a&#32;lot&#32;of&#32;intermediate&#32;memory,&#32;could&#32;cache&#32;poorly</emphasis>
1930 
1931 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_JPEG</emphasis>
1932 
1933 <emphasis role="comment">//&#32;huffman&#32;decoding&#32;acceleration</emphasis>
1934 <emphasis role="preprocessor">#define&#32;FAST_BITS&#32;&#32;&#32;9&#32;&#32;</emphasis><emphasis role="comment">//&#32;larger&#32;handles&#32;more&#32;cases;&#32;smaller&#32;stomps&#32;less&#32;cache</emphasis>
1935 
1936 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
1937 {
1938 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;fast[1&#32;&lt;&lt;&#32;FAST_BITS];
1939 &#32;&#32;&#32;<emphasis role="comment">//&#32;weirdly,&#32;repacking&#32;this&#32;into&#32;AoS&#32;is&#32;a&#32;10%&#32;speed&#32;loss,&#32;instead&#32;of&#32;a&#32;win</emphasis>
1940 &#32;&#32;&#32;stbi__uint16&#32;code[256];
1941 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae545debabe0f0f4d3ca9331981dbaf6b">values</link>[256];
1942 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>[257];
1943 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxcode[18];
1944 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;delta[17];&#32;&#32;&#32;<emphasis role="comment">//&#32;old&#32;&apos;firstsymbol&apos;&#32;-&#32;old&#32;&apos;firstcode&apos;</emphasis>
1945 }&#32;stbi__huffman;
1946 
1947 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
1948 {
1949 &#32;&#32;&#32;stbi__context&#32;*s;
1950 &#32;&#32;&#32;stbi__huffman&#32;huff_dc[4];
1951 &#32;&#32;&#32;stbi__huffman&#32;huff_ac[4];
1952 &#32;&#32;&#32;stbi__uint16&#32;dequant[4][64];
1953 &#32;&#32;&#32;stbi__int16&#32;fast_ac[4][1&#32;&lt;&lt;&#32;FAST_BITS];
1954 
1955 <emphasis role="comment">//&#32;sizes&#32;for&#32;components,&#32;interleaved&#32;MCUs</emphasis>
1956 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_h_max,&#32;img_v_max;
1957 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_mcu_x,&#32;img_mcu_y;
1958 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_mcu_w,&#32;img_mcu_h;
1959 
1960 <emphasis role="comment">//&#32;definition&#32;of&#32;jpeg&#32;image&#32;component</emphasis>
1961 &#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
1962 &#32;&#32;&#32;{
1963 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2glfw_2src_2cocoa__platform_8h_1ae52362b10d585638f5b96140e90f1b7a">id</link>;
1964 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
1965 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tq;
1966 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hd,ha;
1967 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dc_pred;
1968 
1969 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,w2,h2;
1970 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
1971 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*raw_data,&#32;*raw_coeff;
1972 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*linebuf;
1973 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;&#32;&#32;*coeff;&#32;&#32;&#32;<emphasis role="comment">//&#32;progressive&#32;only</emphasis>
1974 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;coeff_w,&#32;coeff_h;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;8x8&#32;coefficient&#32;blocks</emphasis>
1975 &#32;&#32;&#32;}&#32;img_comp[4];
1976 
1977 &#32;&#32;&#32;stbi__uint32&#32;&#32;&#32;code_buffer;&#32;<emphasis role="comment">//&#32;jpeg&#32;entropy-coded&#32;buffer</emphasis>
1978 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;code_bits;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;valid&#32;bits</emphasis>
1979 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ad197067eba8400e74603a2bcd4fac47e">marker</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;marker&#32;seen&#32;while&#32;filling&#32;entropy&#32;buffer</emphasis>
1980 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nomore;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;flag&#32;if&#32;we&#32;saw&#32;a&#32;marker&#32;so&#32;must&#32;stop</emphasis>
1981 
1982 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressive;
1983 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spec_start;
1984 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spec_end;
1985 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;succ_high;
1986 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;succ_low;
1987 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eob_run;
1988 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jfif;
1989 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;app14_color_transform;&#32;<emphasis role="comment">//&#32;Adobe&#32;APP14&#32;tag</emphasis>
1990 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb;
1991 
1992 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;scan_n,&#32;order[4];
1993 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;restart_interval,&#32;todo;
1994 
1995 <emphasis role="comment">//&#32;kernels</emphasis>
1996 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*idct_block_kernel)(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64]);
1997 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link>&#32;(*YCbCr_to_RGB_kernel)(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*pcb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*pcr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>);
1998 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*(*resample_row_hv_2_kernel)(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs);
1999 }&#32;stbi__jpeg;
2000 
2001 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__build_huffman(stbi__huffman&#32;*h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)
2002 {
2003 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k=0;
2004 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;code;
2005 &#32;&#32;&#32;<emphasis role="comment">//&#32;build&#32;size&#32;list&#32;for&#32;each&#32;symbol&#32;(from&#32;JPEG&#32;spec)</emphasis>
2006 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;16;&#32;++i)&#32;{
2007 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>[i];&#32;++j)&#32;{
2008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h-&gt;size[k++]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;(i+1);
2009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(k&#32;&gt;=&#32;257)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;size&#32;list&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2010 &#32;&#32;&#32;&#32;&#32;&#32;}
2011 &#32;&#32;&#32;}
2012 &#32;&#32;&#32;h-&gt;size[k]&#32;=&#32;0;
2013 
2014 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;actual&#32;symbols&#32;(from&#32;jpeg&#32;spec)</emphasis>
2015 &#32;&#32;&#32;code&#32;=&#32;0;
2016 &#32;&#32;&#32;k&#32;=&#32;0;
2017 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=1;&#32;j&#32;&lt;=&#32;16;&#32;++j)&#32;{
2018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;delta&#32;to&#32;add&#32;to&#32;code&#32;to&#32;compute&#32;symbol&#32;id</emphasis>
2019 &#32;&#32;&#32;&#32;&#32;&#32;h-&gt;delta[j]&#32;=&#32;k&#32;-&#32;code;
2020 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(h-&gt;size[k]&#32;==&#32;j)&#32;{
2021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(h-&gt;size[k]&#32;==&#32;j)
2022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h-&gt;code[k++]&#32;=&#32;(stbi__uint16)&#32;(code++);
2023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code-1&#32;&gt;=&#32;(1u&#32;&lt;&lt;&#32;j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;code&#32;lengths&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2024 &#32;&#32;&#32;&#32;&#32;&#32;}
2025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;largest&#32;code&#32;+&#32;1&#32;for&#32;this&#32;size,&#32;preshifted&#32;as&#32;needed&#32;later</emphasis>
2026 &#32;&#32;&#32;&#32;&#32;&#32;h-&gt;maxcode[j]&#32;=&#32;code&#32;&lt;&lt;&#32;(16-j);
2027 &#32;&#32;&#32;&#32;&#32;&#32;code&#32;&lt;&lt;=&#32;1;
2028 &#32;&#32;&#32;}
2029 &#32;&#32;&#32;h-&gt;maxcode[j]&#32;=&#32;0xffffffff;
2030 
2031 &#32;&#32;&#32;<emphasis role="comment">//&#32;build&#32;non-spec&#32;acceleration&#32;table;&#32;255&#32;is&#32;flag&#32;for&#32;not-accelerated</emphasis>
2032 &#32;&#32;&#32;memset(h-&gt;fast,&#32;255,&#32;1&#32;&lt;&lt;&#32;FAST_BITS);
2033 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;k;&#32;++i)&#32;{
2034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;h-&gt;size[i];
2035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&lt;=&#32;FAST_BITS)&#32;{
2036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;h-&gt;code[i]&#32;&lt;&lt;&#32;(FAST_BITS-s);
2037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;1&#32;&lt;&lt;&#32;(FAST_BITS-s);
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;m;&#32;++j)&#32;{
2039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h-&gt;fast[c+j]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;i;
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2041 &#32;&#32;&#32;&#32;&#32;&#32;}
2042 &#32;&#32;&#32;}
2043 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2044 }
2045 
2046 <emphasis role="comment">//&#32;build&#32;a&#32;table&#32;that&#32;decodes&#32;both&#32;magnitude&#32;and&#32;value&#32;of&#32;small&#32;ACs&#32;in</emphasis>
2047 <emphasis role="comment">//&#32;one&#32;go.</emphasis>
2048 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__build_fast_ac(stbi__int16&#32;*fast_ac,&#32;stbi__huffman&#32;*h)
2049 {
2050 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
2051 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(1&#32;&lt;&lt;&#32;FAST_BITS);&#32;++i)&#32;{
2052 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;fast&#32;=&#32;h-&gt;fast[i];
2053 &#32;&#32;&#32;&#32;&#32;&#32;fast_ac[i]&#32;=&#32;0;
2054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fast&#32;&lt;&#32;255)&#32;{
2055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rs&#32;=&#32;h-&gt;values[fast];
2056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespaceutils_1a187ff8156e2bfba6bc234ed6bfd64b3f">run</link>&#32;=&#32;(rs&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;15;
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;magbits&#32;=&#32;rs&#32;&amp;&#32;15;
2058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;h-&gt;size[fast];
2059 
2060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(magbits&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;+&#32;magbits&#32;&lt;=&#32;FAST_BITS)&#32;{
2061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;magnitude&#32;code&#32;followed&#32;by&#32;receive_extend&#32;code</emphasis>
2062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;((i&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;FAST_BITS)&#32;-&#32;1))&#32;&gt;&gt;&#32;(FAST_BITS&#32;-&#32;magbits);
2063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;1&#32;&lt;&lt;&#32;(magbits&#32;-&#32;1);
2064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&lt;&#32;m)&#32;k&#32;+=&#32;(~0U&#32;&lt;&lt;&#32;magbits)&#32;+&#32;1;
2065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;result&#32;is&#32;small&#32;enough,&#32;we&#32;can&#32;fit&#32;it&#32;in&#32;fast_ac&#32;table</emphasis>
2066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;=&#32;-128&#32;&amp;&amp;&#32;k&#32;&lt;=&#32;127)
2067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fast_ac[i]&#32;=&#32;(stbi__int16)&#32;((k&#32;*&#32;256)&#32;+&#32;(<link linkend="_namespaceutils_1a187ff8156e2bfba6bc234ed6bfd64b3f">run</link>&#32;*&#32;16)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;+&#32;magbits));
2068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2069 &#32;&#32;&#32;&#32;&#32;&#32;}
2070 &#32;&#32;&#32;}
2071 }
2072 
2073 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__grow_buffer_unsafe(stbi__jpeg&#32;*j)
2074 {
2075 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
2076 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;j-&gt;nomore&#32;?&#32;0&#32;:&#32;stbi__get8(j-&gt;s);
2077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;==&#32;0xff)&#32;{
2078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;stbi__get8(j-&gt;s);
2079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(c&#32;==&#32;0xff)&#32;c&#32;=&#32;stbi__get8(j-&gt;s);&#32;<emphasis role="comment">//&#32;consume&#32;fill&#32;bytes</emphasis>
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;0)&#32;{
2081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;marker&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;c;
2082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;nomore&#32;=&#32;1;
2083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2085 &#32;&#32;&#32;&#32;&#32;&#32;}
2086 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_buffer&#32;|=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&lt;&#32;(24&#32;-&#32;j-&gt;code_bits);
2087 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_bits&#32;+=&#32;8;
2088 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j-&gt;code_bits&#32;&lt;=&#32;24);
2089 }
2090 
2091 <emphasis role="comment">//&#32;(1&#32;&lt;&lt;&#32;n)&#32;-&#32;1</emphasis>
2092 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;stbi__uint32&#32;stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};
2093 
2094 <emphasis role="comment">//&#32;decode&#32;a&#32;jpeg&#32;huffman&#32;value&#32;from&#32;the&#32;bitstream</emphasis>
2095 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_huff_decode(stbi__jpeg&#32;*j,&#32;stbi__huffman&#32;*h)
2096 {
2097 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;temp;
2098 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,k;
2099 
2100 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;16)&#32;stbi__grow_buffer_unsafe(j);
2101 
2102 &#32;&#32;&#32;<emphasis role="comment">//&#32;look&#32;at&#32;the&#32;top&#32;FAST_BITS&#32;and&#32;determine&#32;what&#32;symbol&#32;ID&#32;it&#32;is,</emphasis>
2103 &#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;code&#32;is&#32;&lt;=&#32;FAST_BITS</emphasis>
2104 &#32;&#32;&#32;c&#32;=&#32;(j-&gt;code_buffer&#32;&gt;&gt;&#32;(32&#32;-&#32;FAST_BITS))&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;FAST_BITS)-1);
2105 &#32;&#32;&#32;k&#32;=&#32;h-&gt;fast[c];
2106 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&lt;&#32;255)&#32;{
2107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;h-&gt;size[k];
2108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&gt;&#32;j-&gt;code_bits)
2109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2110 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_buffer&#32;&lt;&lt;=&#32;s;
2111 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;s;
2112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h-&gt;values[k];
2113 &#32;&#32;&#32;}
2114 
2115 &#32;&#32;&#32;<emphasis role="comment">//&#32;naive&#32;test&#32;is&#32;to&#32;shift&#32;the&#32;code_buffer&#32;down&#32;so&#32;k&#32;bits&#32;are</emphasis>
2116 &#32;&#32;&#32;<emphasis role="comment">//&#32;valid,&#32;then&#32;test&#32;against&#32;maxcode.&#32;To&#32;speed&#32;this&#32;up,&#32;we&apos;ve</emphasis>
2117 &#32;&#32;&#32;<emphasis role="comment">//&#32;preshifted&#32;maxcode&#32;left&#32;so&#32;that&#32;it&#32;has&#32;(16-k)&#32;0s&#32;at&#32;the</emphasis>
2118 &#32;&#32;&#32;<emphasis role="comment">//&#32;end;&#32;in&#32;other&#32;words,&#32;regardless&#32;of&#32;the&#32;number&#32;of&#32;bits,&#32;it</emphasis>
2119 &#32;&#32;&#32;<emphasis role="comment">//&#32;wants&#32;to&#32;be&#32;compared&#32;against&#32;something&#32;shifted&#32;to&#32;have&#32;16;</emphasis>
2120 &#32;&#32;&#32;<emphasis role="comment">//&#32;that&#32;way&#32;we&#32;don&apos;t&#32;need&#32;to&#32;shift&#32;inside&#32;the&#32;loop.</emphasis>
2121 &#32;&#32;&#32;temp&#32;=&#32;j-&gt;code_buffer&#32;&gt;&gt;&#32;16;
2122 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=FAST_BITS+1&#32;;&#32;;&#32;++k)
2123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temp&#32;&lt;&#32;h-&gt;maxcode[k])
2124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2125 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;==&#32;17)&#32;{
2126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;error!&#32;code&#32;not&#32;found</emphasis>
2127 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;16;
2128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2129 &#32;&#32;&#32;}
2130 
2131 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;j-&gt;code_bits)
2132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2133 
2134 &#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;the&#32;huffman&#32;code&#32;to&#32;the&#32;symbol&#32;id</emphasis>
2135 &#32;&#32;&#32;c&#32;=&#32;((j-&gt;code_buffer&#32;&gt;&gt;&#32;(32&#32;-&#32;k))&#32;&amp;&#32;stbi__bmask[k])&#32;+&#32;h-&gt;delta[k];
2136 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&#32;&lt;&#32;0&#32;||&#32;c&#32;&gt;=&#32;256)&#32;<emphasis role="comment">//&#32;symbol&#32;id&#32;out&#32;of&#32;bounds!</emphasis>
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2138 &#32;&#32;&#32;STBI_ASSERT((((j-&gt;code_buffer)&#32;&gt;&gt;&#32;(32&#32;-&#32;h-&gt;size[c]))&#32;&amp;&#32;stbi__bmask[h-&gt;size[c]])&#32;==&#32;h-&gt;code[c]);
2139 
2140 &#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;the&#32;id&#32;to&#32;a&#32;symbol</emphasis>
2141 &#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;k;
2142 &#32;&#32;&#32;j-&gt;code_buffer&#32;&lt;&lt;=&#32;k;
2143 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h-&gt;values[c];
2144 }
2145 
2146 <emphasis role="comment">//&#32;bias[n]&#32;=&#32;(-1&lt;&lt;n)&#32;+&#32;1</emphasis>
2147 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jbias[16]&#32;=&#32;{0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};
2148 
2149 <emphasis role="comment">//&#32;combined&#32;JPEG&#32;&apos;receive&apos;&#32;and&#32;JPEG&#32;&apos;extend&apos;,&#32;since&#32;baseline</emphasis>
2150 <emphasis role="comment">//&#32;always&#32;extends&#32;everything&#32;it&#32;receives.</emphasis>
2151 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__extend_receive(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
2152 {
2153 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
2154 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sgn;
2155 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;n)&#32;stbi__grow_buffer_unsafe(j);
2156 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;ran&#32;out&#32;of&#32;bits&#32;from&#32;stream,&#32;return&#32;0s&#32;intead&#32;of&#32;continuing</emphasis>
2157 
2158 &#32;&#32;&#32;sgn&#32;=&#32;j-&gt;code_buffer&#32;&gt;&gt;&#32;31;&#32;<emphasis role="comment">//&#32;sign&#32;bit&#32;always&#32;in&#32;MSB;&#32;0&#32;if&#32;MSB&#32;clear&#32;(positive),&#32;1&#32;if&#32;MSB&#32;set&#32;(negative)</emphasis>
2159 &#32;&#32;&#32;k&#32;=&#32;stbi_lrot(j-&gt;code_buffer,&#32;n);
2160 &#32;&#32;&#32;j-&gt;code_buffer&#32;=&#32;k&#32;&amp;&#32;~stbi__bmask[n];
2161 &#32;&#32;&#32;k&#32;&amp;=&#32;stbi__bmask[n];
2162 &#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;n;
2163 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k&#32;+&#32;(stbi__jbias[n]&#32;&amp;&#32;(sgn&#32;-&#32;1));
2164 }
2165 
2166 <emphasis role="comment">//&#32;get&#32;some&#32;unsigned&#32;bits</emphasis>
2167 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_get_bits(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
2168 {
2169 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
2170 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;n)&#32;stbi__grow_buffer_unsafe(j);
2171 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;ran&#32;out&#32;of&#32;bits&#32;from&#32;stream,&#32;return&#32;0s&#32;intead&#32;of&#32;continuing</emphasis>
2172 &#32;&#32;&#32;k&#32;=&#32;stbi_lrot(j-&gt;code_buffer,&#32;n);
2173 &#32;&#32;&#32;j-&gt;code_buffer&#32;=&#32;k&#32;&amp;&#32;~stbi__bmask[n];
2174 &#32;&#32;&#32;k&#32;&amp;=&#32;stbi__bmask[n];
2175 &#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;n;
2176 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
2177 }
2178 
2179 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_get_bit(stbi__jpeg&#32;*j)
2180 {
2181 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
2182 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;1)&#32;stbi__grow_buffer_unsafe(j);
2183 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;ran&#32;out&#32;of&#32;bits&#32;from&#32;stream,&#32;return&#32;0s&#32;intead&#32;of&#32;continuing</emphasis>
2184 &#32;&#32;&#32;k&#32;=&#32;j-&gt;code_buffer;
2185 &#32;&#32;&#32;j-&gt;code_buffer&#32;&lt;&lt;=&#32;1;
2186 &#32;&#32;&#32;--j-&gt;code_bits;
2187 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k&#32;&amp;&#32;0x80000000;
2188 }
2189 
2190 <emphasis role="comment">//&#32;given&#32;a&#32;value&#32;that&apos;s&#32;at&#32;position&#32;X&#32;in&#32;the&#32;zigzag&#32;stream,</emphasis>
2191 <emphasis role="comment">//&#32;where&#32;does&#32;it&#32;appear&#32;in&#32;the&#32;8x8&#32;matrix&#32;coded&#32;as&#32;row-major?</emphasis>
2192 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__jpeg_dezigzag[64+15]&#32;=
2193 {
2194 &#32;&#32;&#32;&#32;0,&#32;&#32;1,&#32;&#32;8,&#32;16,&#32;&#32;9,&#32;&#32;2,&#32;&#32;3,&#32;10,
2195 &#32;&#32;&#32;17,&#32;24,&#32;32,&#32;25,&#32;18,&#32;11,&#32;&#32;4,&#32;&#32;5,
2196 &#32;&#32;&#32;12,&#32;19,&#32;26,&#32;33,&#32;40,&#32;48,&#32;41,&#32;34,
2197 &#32;&#32;&#32;27,&#32;20,&#32;13,&#32;&#32;6,&#32;&#32;7,&#32;14,&#32;21,&#32;28,
2198 &#32;&#32;&#32;35,&#32;42,&#32;49,&#32;56,&#32;57,&#32;50,&#32;43,&#32;36,
2199 &#32;&#32;&#32;29,&#32;22,&#32;15,&#32;23,&#32;30,&#32;37,&#32;44,&#32;51,
2200 &#32;&#32;&#32;58,&#32;59,&#32;52,&#32;45,&#32;38,&#32;31,&#32;39,&#32;46,
2201 &#32;&#32;&#32;53,&#32;60,&#32;61,&#32;54,&#32;47,&#32;55,&#32;62,&#32;63,
2202 &#32;&#32;&#32;<emphasis role="comment">//&#32;let&#32;corrupt&#32;input&#32;sample&#32;past&#32;end</emphasis>
2203 &#32;&#32;&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,
2204 &#32;&#32;&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,&#32;63,&#32;63
2205 };
2206 
2207 <emphasis role="comment">//&#32;decode&#32;one&#32;64-entry&#32;block--</emphasis>
2208 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_decode_block(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64],&#32;stbi__huffman&#32;*hdc,&#32;stbi__huffman&#32;*hac,&#32;stbi__int16&#32;*fac,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;stbi__uint16&#32;*dequant)
2209 {
2210 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;diff,dc,k;
2211 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t;
2212 
2213 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;16)&#32;stbi__grow_buffer_unsafe(j);
2214 &#32;&#32;&#32;t&#32;=&#32;stbi__jpeg_huff_decode(j,&#32;hdc);
2215 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&lt;&#32;0&#32;||&#32;t&#32;&gt;&#32;15)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2216 
2217 &#32;&#32;&#32;<emphasis role="comment">//&#32;0&#32;all&#32;the&#32;ac&#32;values&#32;now&#32;so&#32;we&#32;can&#32;do&#32;it&#32;32-bits&#32;at&#32;a&#32;time</emphasis>
2218 &#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,0,64*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]));
2219 
2220 &#32;&#32;&#32;diff&#32;=&#32;t&#32;?&#32;stbi__extend_receive(j,&#32;t)&#32;:&#32;0;
2221 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__addints_valid(j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred,&#32;diff))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;delta&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2222 &#32;&#32;&#32;dc&#32;=&#32;j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred&#32;+&#32;diff;
2223 &#32;&#32;&#32;j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred&#32;=&#32;dc;
2224 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mul2shorts_valid(dc,&#32;dequant[0]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;merge&#32;dc&#32;and&#32;ac&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2225 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;=&#32;(short)&#32;(dc&#32;*&#32;dequant[0]);
2226 
2227 &#32;&#32;&#32;<emphasis role="comment">//&#32;decode&#32;AC&#32;components,&#32;see&#32;JPEG&#32;spec</emphasis>
2228 &#32;&#32;&#32;k&#32;=&#32;1;
2229 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
2230 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;zig;
2231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,s;
2232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;16)&#32;stbi__grow_buffer_unsafe(j);
2233 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;(j-&gt;code_buffer&#32;&gt;&gt;&#32;(32&#32;-&#32;FAST_BITS))&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;FAST_BITS)-1);
2234 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;fac[c];
2235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{&#32;<emphasis role="comment">//&#32;fast-AC&#32;path</emphasis>
2236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;15;&#32;<emphasis role="comment">//&#32;run</emphasis>
2237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&amp;&#32;15;&#32;<emphasis role="comment">//&#32;combined&#32;length</emphasis>
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&gt;&#32;j-&gt;code_bits)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Combined&#32;length&#32;longer&#32;than&#32;code&#32;bits&#32;available&quot;</emphasis>);
2239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_buffer&#32;&lt;&lt;=&#32;s;
2240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;s;
2241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;decode&#32;into&#32;unzigzag&apos;d&#32;location</emphasis>
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zig&#32;=&#32;stbi__jpeg_dezigzag[k++];
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[zig]&#32;=&#32;(short)&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;&#32;8)&#32;*&#32;dequant[zig]);
2244 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rs&#32;=&#32;stbi__jpeg_huff_decode(j,&#32;hac);
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rs&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;rs&#32;&amp;&#32;15;
2248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;rs&#32;&gt;&gt;&#32;4;
2249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;==&#32;0)&#32;{
2250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rs&#32;!=&#32;0xf0)&#32;<emphasis role="keywordflow">break</emphasis>;&#32;<emphasis role="comment">//&#32;end&#32;block</emphasis>
2251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;16;
2252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
2254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;decode&#32;into&#32;unzigzag&apos;d&#32;location</emphasis>
2255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zig&#32;=&#32;stbi__jpeg_dezigzag[k++];
2256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[zig]&#32;=&#32;(short)&#32;(stbi__extend_receive(j,s)&#32;*&#32;dequant[zig]);
2257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2258 &#32;&#32;&#32;&#32;&#32;&#32;}
2259 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(k&#32;&lt;&#32;64);
2260 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2261 }
2262 
2263 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_decode_block_prog_dc(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64],&#32;stbi__huffman&#32;*hdc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)
2264 {
2265 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;diff,dc;
2266 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t;
2267 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;spec_end&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;merge&#32;dc&#32;and&#32;ac&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2268 
2269 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;16)&#32;stbi__grow_buffer_unsafe(j);
2270 
2271 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;succ_high&#32;==&#32;0)&#32;{
2272 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;first&#32;scan&#32;for&#32;DC&#32;coefficient,&#32;must&#32;be&#32;first</emphasis>
2273 &#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,0,64*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]));&#32;<emphasis role="comment">//&#32;0&#32;all&#32;the&#32;ac&#32;values&#32;now</emphasis>
2274 &#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;stbi__jpeg_huff_decode(j,&#32;hdc);
2275 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&lt;&#32;0&#32;||&#32;t&#32;&gt;&#32;15)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;merge&#32;dc&#32;and&#32;ac&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2276 &#32;&#32;&#32;&#32;&#32;&#32;diff&#32;=&#32;t&#32;?&#32;stbi__extend_receive(j,&#32;t)&#32;:&#32;0;
2277 
2278 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__addints_valid(j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred,&#32;diff))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;delta&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2279 &#32;&#32;&#32;&#32;&#32;&#32;dc&#32;=&#32;j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred&#32;+&#32;diff;
2280 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;img_comp[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>].dc_pred&#32;=&#32;dc;
2281 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mul2shorts_valid(dc,&#32;1&#32;&lt;&lt;&#32;j-&gt;succ_low))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;merge&#32;dc&#32;and&#32;ac&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2282 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;=&#32;(short)&#32;(dc&#32;*&#32;(1&#32;&lt;&lt;&#32;j-&gt;succ_low));
2283 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;refinement&#32;scan&#32;for&#32;DC&#32;coefficient</emphasis>
2285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_get_bit(j))
2286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[0]&#32;+=&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(1&#32;&lt;&lt;&#32;j-&gt;succ_low);
2287 &#32;&#32;&#32;}
2288 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2289 }
2290 
2291 <emphasis role="comment">//&#32;@OPTIMIZE:&#32;store&#32;non-zigzagged&#32;during&#32;the&#32;decode&#32;passes,</emphasis>
2292 <emphasis role="comment">//&#32;and&#32;only&#32;de-zigzag&#32;when&#32;dequantizing</emphasis>
2293 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_decode_block_prog_ac(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64],&#32;stbi__huffman&#32;*hac,&#32;stbi__int16&#32;*fac)
2294 {
2295 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
2296 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;spec_start&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;merge&#32;dc&#32;and&#32;ac&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2297 
2298 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;succ_high&#32;==&#32;0)&#32;{
2299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift&#32;=&#32;j-&gt;succ_low;
2300 
2301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;eob_run)&#32;{
2302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--j-&gt;eob_run;
2303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2304 &#32;&#32;&#32;&#32;&#32;&#32;}
2305 
2306 &#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;j-&gt;spec_start;
2307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
2308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;zig;
2309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,s;
2310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;code_bits&#32;&lt;&#32;16)&#32;stbi__grow_buffer_unsafe(j);
2311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;(j-&gt;code_buffer&#32;&gt;&gt;&#32;(32&#32;-&#32;FAST_BITS))&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;FAST_BITS)-1);
2312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;fac[c];
2313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{&#32;<emphasis role="comment">//&#32;fast-AC&#32;path</emphasis>
2314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;15;&#32;<emphasis role="comment">//&#32;run</emphasis>
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&amp;&#32;15;&#32;<emphasis role="comment">//&#32;combined&#32;length</emphasis>
2316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&gt;&#32;j-&gt;code_bits)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Combined&#32;length&#32;longer&#32;than&#32;code&#32;bits&#32;available&quot;</emphasis>);
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_buffer&#32;&lt;&lt;=&#32;s;
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;code_bits&#32;-=&#32;s;
2319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zig&#32;=&#32;stbi__jpeg_dezigzag[k++];
2320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[zig]&#32;=&#32;(short)&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;&#32;8)&#32;*&#32;(1&#32;&lt;&lt;&#32;shift));
2321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rs&#32;=&#32;stbi__jpeg_huff_decode(j,&#32;hac);
2323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rs&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;rs&#32;&amp;&#32;15;
2325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;rs&#32;&gt;&gt;&#32;4;
2326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;==&#32;0)&#32;{
2327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&lt;&#32;15)&#32;{
2328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;eob_run&#32;=&#32;(1&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>);
2329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)
2330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;eob_run&#32;+=&#32;stbi__jpeg_get_bits(j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>);
2331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--j-&gt;eob_run;
2332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;16;
2335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
2337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zig&#32;=&#32;stbi__jpeg_dezigzag[k++];
2338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[zig]&#32;=&#32;(short)&#32;(stbi__extend_receive(j,s)&#32;*&#32;(1&#32;&lt;&lt;&#32;shift));
2339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2341 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(k&#32;&lt;=&#32;j-&gt;spec_end);
2342 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2343 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;refinement&#32;scan&#32;for&#32;these&#32;AC&#32;coefficients</emphasis>
2344 
2345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;bit&#32;=&#32;(short)&#32;(1&#32;&lt;&lt;&#32;j-&gt;succ_low);
2346 
2347 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;eob_run)&#32;{
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--j-&gt;eob_run;
2349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;j-&gt;spec_start;&#32;k&#32;&lt;=&#32;j-&gt;spec_end;&#32;++k)&#32;{
2350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*p&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[stbi__jpeg_dezigzag[k]];
2351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*p&#32;!=&#32;0)
2352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_get_bit(j))
2353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*p&#32;&amp;&#32;bit)==0)&#32;{
2354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*p&#32;&gt;&#32;0)
2355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;+=&#32;bit;
2356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;-=&#32;bit;
2358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2360 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;j-&gt;spec_start;
2362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
2363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,s;
2364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rs&#32;=&#32;stbi__jpeg_huff_decode(j,&#32;hac);&#32;<emphasis role="comment">//&#32;@OPTIMIZE&#32;see&#32;if&#32;we&#32;can&#32;use&#32;the&#32;fast&#32;path&#32;here,&#32;advance-by-r&#32;is&#32;so&#32;slow,&#32;eh</emphasis>
2365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rs&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;rs&#32;&amp;&#32;15;
2367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;rs&#32;&gt;&gt;&#32;4;
2368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;==&#32;0)&#32;{
2369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&lt;&#32;15)&#32;{
2370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;eob_run&#32;=&#32;(1&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;-&#32;1;
2371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)
2372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;eob_run&#32;+=&#32;stbi__jpeg_get_bits(j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>);
2373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;64;&#32;<emphasis role="comment">//&#32;force&#32;end&#32;of&#32;block</emphasis>
2374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;r=15&#32;s=0&#32;should&#32;write&#32;16&#32;0s,&#32;so&#32;we&#32;just&#32;do</emphasis>
2376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;run&#32;of&#32;15&#32;0s&#32;and&#32;then&#32;write&#32;s&#32;(which&#32;is&#32;0),</emphasis>
2377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;we&#32;don&apos;t&#32;have&#32;to&#32;do&#32;anything&#32;special&#32;here</emphasis>
2378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;!=&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
2381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sign&#32;bit</emphasis>
2382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_get_bit(j))
2383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;bit;
2384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;-bit;
2386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2387 
2388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;advance&#32;by&#32;r</emphasis>
2389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(k&#32;&lt;=&#32;j-&gt;spec_end)&#32;{
2390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*p&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[stbi__jpeg_dezigzag[k++]];
2391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*p&#32;!=&#32;0)&#32;{
2392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_get_bit(j))
2393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*p&#32;&amp;&#32;bit)==0)&#32;{
2394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*p&#32;&gt;&#32;0)
2395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;+=&#32;bit;
2396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;-=&#32;bit;
2398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;==&#32;0)&#32;{
2401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;(short)&#32;s;
2402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
2405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(k&#32;&lt;=&#32;j-&gt;spec_end);
2408 &#32;&#32;&#32;&#32;&#32;&#32;}
2409 &#32;&#32;&#32;}
2410 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2411 }
2412 
2413 <emphasis role="comment">//&#32;take&#32;a&#32;-128..127&#32;value&#32;and&#32;stbi__clamp&#32;it&#32;and&#32;convert&#32;to&#32;0..255</emphasis>
2414 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__clamp(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)
2415 {
2416 &#32;&#32;&#32;<emphasis role="comment">//&#32;trick&#32;to&#32;use&#32;a&#32;single&#32;test&#32;to&#32;catch&#32;both&#32;cases</emphasis>
2417 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;255)&#32;{
2418 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2419 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;255)&#32;<emphasis role="keywordflow">return</emphasis>&#32;255;
2420 &#32;&#32;&#32;}
2421 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
2422 }
2423 
2424 <emphasis role="preprocessor">#define&#32;stbi__f2f(x)&#32;&#32;((int)&#32;(((x)&#32;*&#32;4096&#32;+&#32;0.5)))</emphasis>
2425 <emphasis role="preprocessor">#define&#32;stbi__fsh(x)&#32;&#32;((x)&#32;*&#32;4096)</emphasis>
2426 
2427 <emphasis role="comment">//&#32;derived&#32;from&#32;jidctint&#32;--&#32;DCT_ISLOW</emphasis>
2428 <emphasis role="preprocessor">#define&#32;STBI__IDCT_1D(s0,s1,s2,s3,s4,s5,s6,s7)&#32;\</emphasis>
2429 <emphasis role="preprocessor">&#32;&#32;&#32;int&#32;t0,t1,t2,t3,p1,p2,p3,p4,p5,x0,x1,x2,x3;&#32;\</emphasis>
2430 <emphasis role="preprocessor">&#32;&#32;&#32;p2&#32;=&#32;s2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2431 <emphasis role="preprocessor">&#32;&#32;&#32;p3&#32;=&#32;s6;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2432 <emphasis role="preprocessor">&#32;&#32;&#32;p1&#32;=&#32;(p2+p3)&#32;*&#32;stbi__f2f(0.5411961f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2433 <emphasis role="preprocessor">&#32;&#32;&#32;t2&#32;=&#32;p1&#32;+&#32;p3*stbi__f2f(-1.847759065f);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2434 <emphasis role="preprocessor">&#32;&#32;&#32;t3&#32;=&#32;p1&#32;+&#32;p2*stbi__f2f(&#32;0.765366865f);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2435 <emphasis role="preprocessor">&#32;&#32;&#32;p2&#32;=&#32;s0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2436 <emphasis role="preprocessor">&#32;&#32;&#32;p3&#32;=&#32;s4;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2437 <emphasis role="preprocessor">&#32;&#32;&#32;t0&#32;=&#32;stbi__fsh(p2+p3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2438 <emphasis role="preprocessor">&#32;&#32;&#32;t1&#32;=&#32;stbi__fsh(p2-p3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2439 <emphasis role="preprocessor">&#32;&#32;&#32;x0&#32;=&#32;t0+t3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2440 <emphasis role="preprocessor">&#32;&#32;&#32;x3&#32;=&#32;t0-t3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2441 <emphasis role="preprocessor">&#32;&#32;&#32;x1&#32;=&#32;t1+t2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2442 <emphasis role="preprocessor">&#32;&#32;&#32;x2&#32;=&#32;t1-t2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2443 <emphasis role="preprocessor">&#32;&#32;&#32;t0&#32;=&#32;s7;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2444 <emphasis role="preprocessor">&#32;&#32;&#32;t1&#32;=&#32;s5;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2445 <emphasis role="preprocessor">&#32;&#32;&#32;t2&#32;=&#32;s3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2446 <emphasis role="preprocessor">&#32;&#32;&#32;t3&#32;=&#32;s1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2447 <emphasis role="preprocessor">&#32;&#32;&#32;p3&#32;=&#32;t0+t2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2448 <emphasis role="preprocessor">&#32;&#32;&#32;p4&#32;=&#32;t1+t3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2449 <emphasis role="preprocessor">&#32;&#32;&#32;p1&#32;=&#32;t0+t3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2450 <emphasis role="preprocessor">&#32;&#32;&#32;p2&#32;=&#32;t1+t2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2451 <emphasis role="preprocessor">&#32;&#32;&#32;p5&#32;=&#32;(p3+p4)*stbi__f2f(&#32;1.175875602f);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2452 <emphasis role="preprocessor">&#32;&#32;&#32;t0&#32;=&#32;t0*stbi__f2f(&#32;0.298631336f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2453 <emphasis role="preprocessor">&#32;&#32;&#32;t1&#32;=&#32;t1*stbi__f2f(&#32;2.053119869f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2454 <emphasis role="preprocessor">&#32;&#32;&#32;t2&#32;=&#32;t2*stbi__f2f(&#32;3.072711026f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2455 <emphasis role="preprocessor">&#32;&#32;&#32;t3&#32;=&#32;t3*stbi__f2f(&#32;1.501321110f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2456 <emphasis role="preprocessor">&#32;&#32;&#32;p1&#32;=&#32;p5&#32;+&#32;p1*stbi__f2f(-0.899976223f);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2457 <emphasis role="preprocessor">&#32;&#32;&#32;p2&#32;=&#32;p5&#32;+&#32;p2*stbi__f2f(-2.562915447f);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2458 <emphasis role="preprocessor">&#32;&#32;&#32;p3&#32;=&#32;p3*stbi__f2f(-1.961570560f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2459 <emphasis role="preprocessor">&#32;&#32;&#32;p4&#32;=&#32;p4*stbi__f2f(-0.390180644f);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2460 <emphasis role="preprocessor">&#32;&#32;&#32;t3&#32;+=&#32;p1+p4;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2461 <emphasis role="preprocessor">&#32;&#32;&#32;t2&#32;+=&#32;p2+p3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2462 <emphasis role="preprocessor">&#32;&#32;&#32;t1&#32;+=&#32;p2+p4;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
2463 <emphasis role="preprocessor">&#32;&#32;&#32;t0&#32;+=&#32;p1+p3;</emphasis>
2464 
2465 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__idct_block(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64])
2466 {
2467 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>[64],*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
2468 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*o;
2469 &#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*d&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>;
2470 
2471 &#32;&#32;&#32;<emphasis role="comment">//&#32;columns</emphasis>
2472 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;8;&#32;++i,++d,&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;{
2473 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;all&#32;zeroes,&#32;shortcut&#32;--&#32;this&#32;avoids&#32;dequantizing&#32;0s&#32;and&#32;IDCTing</emphasis>
2474 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d[&#32;8]==0&#32;&amp;&amp;&#32;d[16]==0&#32;&amp;&amp;&#32;d[24]==0&#32;&amp;&amp;&#32;d[32]==0
2475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;d[40]==0&#32;&amp;&amp;&#32;d[48]==0&#32;&amp;&amp;&#32;d[56]==0)&#32;{
2476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;no&#32;shortcut&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;&#32;&#32;&#32;&#32;seconds</emphasis>
2477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;(1|2|3|4|5|6|7)==0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;&#32;&#32;&#32;&#32;seconds</emphasis>
2478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;all&#32;separate&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-0.047&#32;seconds</emphasis>
2479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;1&#32;&amp;&amp;&#32;2|3&#32;&amp;&amp;&#32;4|5&#32;&amp;&amp;&#32;6|7:&#32;&#32;&#32;&#32;-0.047&#32;seconds</emphasis>
2480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dcterm&#32;=&#32;d[0]*4;
2481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[8]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[16]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[24]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[32]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[40]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[48]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[56]&#32;=&#32;dcterm;
2482 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__IDCT_1D(d[&#32;0],d[&#32;8],d[16],d[24],d[32],d[40],d[48],d[56])
2484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constants&#32;scaled&#32;things&#32;up&#32;by&#32;1&lt;&lt;12;&#32;let&apos;s&#32;bring&#32;them&#32;back</emphasis>
2485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;down,&#32;but&#32;keep&#32;2&#32;extra&#32;bits&#32;of&#32;precision</emphasis>
2486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;+=&#32;512;&#32;x1&#32;+=&#32;512;&#32;x2&#32;+=&#32;512;&#32;x3&#32;+=&#32;512;
2487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[&#32;0]&#32;=&#32;(x0+t3)&#32;&gt;&gt;&#32;10;
2488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[56]&#32;=&#32;(x0-t3)&#32;&gt;&gt;&#32;10;
2489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[&#32;8]&#32;=&#32;(x1+t2)&#32;&gt;&gt;&#32;10;
2490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[48]&#32;=&#32;(x1-t2)&#32;&gt;&gt;&#32;10;
2491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[16]&#32;=&#32;(x2+t1)&#32;&gt;&gt;&#32;10;
2492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[40]&#32;=&#32;(x2-t1)&#32;&gt;&gt;&#32;10;
2493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[24]&#32;=&#32;(x3+t0)&#32;&gt;&gt;&#32;10;
2494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[32]&#32;=&#32;(x3-t0)&#32;&gt;&gt;&#32;10;
2495 &#32;&#32;&#32;&#32;&#32;&#32;}
2496 &#32;&#32;&#32;}
2497 
2498 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>,&#32;o=out;&#32;i&#32;&lt;&#32;8;&#32;++i,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>+=8,o+=out_stride)&#32;{
2499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;fast&#32;case&#32;since&#32;the&#32;first&#32;1D&#32;IDCT&#32;spread&#32;components&#32;out</emphasis>
2500 &#32;&#32;&#32;&#32;&#32;&#32;STBI__IDCT_1D(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[0],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[1],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[2],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[3],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[4],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[5],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[6],<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[7])
2501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;constants&#32;scaled&#32;things&#32;up&#32;by&#32;1&lt;&lt;12,&#32;plus&#32;we&#32;had&#32;1&lt;&lt;2&#32;from&#32;first</emphasis>
2502 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;loop,&#32;plus&#32;horizontal&#32;and&#32;vertical&#32;each&#32;scale&#32;by&#32;sqrt(8)&#32;so&#32;together</emphasis>
2503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&apos;ve&#32;got&#32;an&#32;extra&#32;1&lt;&lt;3,&#32;so&#32;1&lt;&lt;17&#32;total&#32;we&#32;need&#32;to&#32;remove.</emphasis>
2504 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;we&#32;want&#32;to&#32;round&#32;that,&#32;which&#32;means&#32;adding&#32;0.5&#32;*&#32;1&lt;&lt;17,</emphasis>
2505 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;aka&#32;65536.&#32;Also,&#32;we&apos;ll&#32;end&#32;up&#32;with&#32;-128&#32;to&#32;127&#32;that&#32;we&#32;want</emphasis>
2506 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;encode&#32;as&#32;0..255&#32;by&#32;adding&#32;128,&#32;so&#32;we&apos;ll&#32;add&#32;that&#32;before&#32;the&#32;shift</emphasis>
2507 &#32;&#32;&#32;&#32;&#32;&#32;x0&#32;+=&#32;65536&#32;+&#32;(128&lt;&lt;17);
2508 &#32;&#32;&#32;&#32;&#32;&#32;x1&#32;+=&#32;65536&#32;+&#32;(128&lt;&lt;17);
2509 &#32;&#32;&#32;&#32;&#32;&#32;x2&#32;+=&#32;65536&#32;+&#32;(128&lt;&lt;17);
2510 &#32;&#32;&#32;&#32;&#32;&#32;x3&#32;+=&#32;65536&#32;+&#32;(128&lt;&lt;17);
2511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tried&#32;computing&#32;the&#32;shifts&#32;into&#32;temps,&#32;or&apos;ing&#32;the&#32;temps&#32;to&#32;see</emphasis>
2512 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;any&#32;were&#32;out&#32;of&#32;range,&#32;but&#32;that&#32;was&#32;slower</emphasis>
2513 &#32;&#32;&#32;&#32;&#32;&#32;o[0]&#32;=&#32;stbi__clamp((x0+t3)&#32;&gt;&gt;&#32;17);
2514 &#32;&#32;&#32;&#32;&#32;&#32;o[7]&#32;=&#32;stbi__clamp((x0-t3)&#32;&gt;&gt;&#32;17);
2515 &#32;&#32;&#32;&#32;&#32;&#32;o[1]&#32;=&#32;stbi__clamp((x1+t2)&#32;&gt;&gt;&#32;17);
2516 &#32;&#32;&#32;&#32;&#32;&#32;o[6]&#32;=&#32;stbi__clamp((x1-t2)&#32;&gt;&gt;&#32;17);
2517 &#32;&#32;&#32;&#32;&#32;&#32;o[2]&#32;=&#32;stbi__clamp((x2+t1)&#32;&gt;&gt;&#32;17);
2518 &#32;&#32;&#32;&#32;&#32;&#32;o[5]&#32;=&#32;stbi__clamp((x2-t1)&#32;&gt;&gt;&#32;17);
2519 &#32;&#32;&#32;&#32;&#32;&#32;o[3]&#32;=&#32;stbi__clamp((x3+t0)&#32;&gt;&gt;&#32;17);
2520 &#32;&#32;&#32;&#32;&#32;&#32;o[4]&#32;=&#32;stbi__clamp((x3-t0)&#32;&gt;&gt;&#32;17);
2521 &#32;&#32;&#32;}
2522 }
2523 
2524 <emphasis role="preprocessor">#ifdef&#32;STBI_SSE2</emphasis>
2525 <emphasis role="comment">//&#32;sse2&#32;integer&#32;IDCT.&#32;not&#32;the&#32;fastest&#32;possible&#32;implementation&#32;but&#32;it</emphasis>
2526 <emphasis role="comment">//&#32;produces&#32;bit-identical&#32;results&#32;to&#32;the&#32;generic&#32;C&#32;version&#32;so&#32;it&apos;s</emphasis>
2527 <emphasis role="comment">//&#32;fully&#32;&quot;transparent&quot;.</emphasis>
2528 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__idct_simd(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64])
2529 {
2530 &#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;constructed&#32;to&#32;match&#32;our&#32;regular&#32;(generic)&#32;integer&#32;IDCT&#32;exactly.</emphasis>
2531 &#32;&#32;&#32;__m128i&#32;row0,&#32;row1,&#32;row2,&#32;row3,&#32;row4,&#32;row5,&#32;row6,&#32;row7;
2532 &#32;&#32;&#32;__m128i&#32;tmp;
2533 
2534 &#32;&#32;&#32;<emphasis role="comment">//&#32;dot&#32;product&#32;constant:&#32;even&#32;elems=x,&#32;odd&#32;elems=y</emphasis>
2535 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_const(x,y)&#32;&#32;_mm_setr_epi16((x),(y),(x),(y),(x),(y),(x),(y))</emphasis>
2536 
2537 &#32;&#32;&#32;<emphasis role="comment">//&#32;out(0)&#32;=&#32;c0[even]*x&#32;+&#32;c0[odd]*y&#32;&#32;&#32;(c0,&#32;x,&#32;y&#32;16-bit,&#32;out&#32;32-bit)</emphasis>
2538 &#32;&#32;&#32;<emphasis role="comment">//&#32;out(1)&#32;=&#32;c1[even]*x&#32;+&#32;c1[odd]*y</emphasis>
2539 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_rot(out0,out1,&#32;x,y,c0,c1)&#32;\</emphasis>
2540 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;c0##lo&#32;=&#32;_mm_unpacklo_epi16((x),(y));&#32;\</emphasis>
2541 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;c0##hi&#32;=&#32;_mm_unpackhi_epi16((x),(y));&#32;\</emphasis>
2542 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out0##_l&#32;=&#32;_mm_madd_epi16(c0##lo,&#32;c0);&#32;\</emphasis>
2543 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out0##_h&#32;=&#32;_mm_madd_epi16(c0##hi,&#32;c0);&#32;\</emphasis>
2544 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out1##_l&#32;=&#32;_mm_madd_epi16(c0##lo,&#32;c1);&#32;\</emphasis>
2545 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out1##_h&#32;=&#32;_mm_madd_epi16(c0##hi,&#32;c1)</emphasis>
2546 
2547 &#32;&#32;&#32;<emphasis role="comment">//&#32;out&#32;=&#32;in&#32;&lt;&lt;&#32;12&#32;&#32;(in&#32;16-bit,&#32;out&#32;32-bit)</emphasis>
2548 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_widen(out,&#32;in)&#32;\</emphasis>
2549 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_l&#32;=&#32;_mm_srai_epi32(_mm_unpacklo_epi16(_mm_setzero_si128(),&#32;(in)),&#32;4);&#32;\</emphasis>
2550 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_h&#32;=&#32;_mm_srai_epi32(_mm_unpackhi_epi16(_mm_setzero_si128(),&#32;(in)),&#32;4)</emphasis>
2551 
2552 &#32;&#32;&#32;<emphasis role="comment">//&#32;wide&#32;add</emphasis>
2553 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_wadd(out,&#32;a,&#32;b)&#32;\</emphasis>
2554 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_l&#32;=&#32;_mm_add_epi32(a##_l,&#32;b##_l);&#32;\</emphasis>
2555 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_h&#32;=&#32;_mm_add_epi32(a##_h,&#32;b##_h)</emphasis>
2556 
2557 &#32;&#32;&#32;<emphasis role="comment">//&#32;wide&#32;sub</emphasis>
2558 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_wsub(out,&#32;a,&#32;b)&#32;\</emphasis>
2559 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_l&#32;=&#32;_mm_sub_epi32(a##_l,&#32;b##_l);&#32;\</emphasis>
2560 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;out##_h&#32;=&#32;_mm_sub_epi32(a##_h,&#32;b##_h)</emphasis>
2561 
2562 &#32;&#32;&#32;<emphasis role="comment">//&#32;butterfly&#32;a/b,&#32;add&#32;bias,&#32;then&#32;shift&#32;by&#32;&quot;s&quot;&#32;and&#32;pack</emphasis>
2563 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_bfly32o(out0,&#32;out1,&#32;a,b,bias,s)&#32;\</emphasis>
2564 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;{&#32;\</emphasis>
2565 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;abiased_l&#32;=&#32;_mm_add_epi32(a##_l,&#32;bias);&#32;\</emphasis>
2566 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;abiased_h&#32;=&#32;_mm_add_epi32(a##_h,&#32;bias);&#32;\</emphasis>
2567 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sum,&#32;abiased,&#32;b);&#32;\</emphasis>
2568 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(dif,&#32;abiased,&#32;b);&#32;\</emphasis>
2569 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out0&#32;=&#32;_mm_packs_epi32(_mm_srai_epi32(sum_l,&#32;s),&#32;_mm_srai_epi32(sum_h,&#32;s));&#32;\</emphasis>
2570 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out1&#32;=&#32;_mm_packs_epi32(_mm_srai_epi32(dif_l,&#32;s),&#32;_mm_srai_epi32(dif_h,&#32;s));&#32;\</emphasis>
2571 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
2572 
2573 &#32;&#32;&#32;<emphasis role="comment">//&#32;8-bit&#32;interleave&#32;step&#32;(for&#32;transposes)</emphasis>
2574 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_interleave8(a,&#32;b)&#32;\</emphasis>
2575 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;a;&#32;\</emphasis>
2576 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;_mm_unpacklo_epi8(a,&#32;b);&#32;\</emphasis>
2577 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;_mm_unpackhi_epi8(tmp,&#32;b)</emphasis>
2578 
2579 &#32;&#32;&#32;<emphasis role="comment">//&#32;16-bit&#32;interleave&#32;step&#32;(for&#32;transposes)</emphasis>
2580 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_interleave16(a,&#32;b)&#32;\</emphasis>
2581 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;a;&#32;\</emphasis>
2582 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;_mm_unpacklo_epi16(a,&#32;b);&#32;\</emphasis>
2583 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;_mm_unpackhi_epi16(tmp,&#32;b)</emphasis>
2584 
2585 <emphasis role="preprocessor">&#32;&#32;&#32;#define&#32;dct_pass(bias,shift)&#32;\</emphasis>
2586 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;{&#32;\</emphasis>
2587 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;even&#32;part&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
2588 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_rot(t2e,t3e,&#32;row2,row6,&#32;rot0_0,rot0_1);&#32;\</emphasis>
2589 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;sum04&#32;=&#32;_mm_add_epi16(row0,&#32;row4);&#32;\</emphasis>
2590 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;dif04&#32;=&#32;_mm_sub_epi16(row0,&#32;row4);&#32;\</emphasis>
2591 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_widen(t0e,&#32;sum04);&#32;\</emphasis>
2592 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_widen(t1e,&#32;dif04);&#32;\</emphasis>
2593 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x0,&#32;t0e,&#32;t3e);&#32;\</emphasis>
2594 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(x3,&#32;t0e,&#32;t3e);&#32;\</emphasis>
2595 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x1,&#32;t1e,&#32;t2e);&#32;\</emphasis>
2596 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(x2,&#32;t1e,&#32;t2e);&#32;\</emphasis>
2597 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;odd&#32;part&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
2598 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_rot(y0o,y2o,&#32;row7,row3,&#32;rot2_0,rot2_1);&#32;\</emphasis>
2599 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_rot(y1o,y3o,&#32;row5,row1,&#32;rot3_0,rot3_1);&#32;\</emphasis>
2600 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;sum17&#32;=&#32;_mm_add_epi16(row1,&#32;row7);&#32;\</emphasis>
2601 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;sum35&#32;=&#32;_mm_add_epi16(row3,&#32;row5);&#32;\</emphasis>
2602 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_rot(y4o,y5o,&#32;sum17,sum35,&#32;rot1_0,rot1_1);&#32;\</emphasis>
2603 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x4,&#32;y0o,&#32;y4o);&#32;\</emphasis>
2604 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x5,&#32;y1o,&#32;y5o);&#32;\</emphasis>
2605 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x6,&#32;y2o,&#32;y5o);&#32;\</emphasis>
2606 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x7,&#32;y3o,&#32;y4o);&#32;\</emphasis>
2607 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row0,row7,&#32;x0,x7,bias,shift);&#32;\</emphasis>
2608 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row1,row6,&#32;x1,x6,bias,shift);&#32;\</emphasis>
2609 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row2,row5,&#32;x2,x5,bias,shift);&#32;\</emphasis>
2610 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row3,row4,&#32;x3,x4,bias,shift);&#32;\</emphasis>
2611 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
2612 
2613 &#32;&#32;&#32;__m128i&#32;rot0_0&#32;=&#32;dct_const(stbi__f2f(0.5411961f),&#32;stbi__f2f(0.5411961f)&#32;+&#32;stbi__f2f(-1.847759065f));
2614 &#32;&#32;&#32;__m128i&#32;rot0_1&#32;=&#32;dct_const(stbi__f2f(0.5411961f)&#32;+&#32;stbi__f2f(&#32;0.765366865f),&#32;stbi__f2f(0.5411961f));
2615 &#32;&#32;&#32;__m128i&#32;rot1_0&#32;=&#32;dct_const(stbi__f2f(1.175875602f)&#32;+&#32;stbi__f2f(-0.899976223f),&#32;stbi__f2f(1.175875602f));
2616 &#32;&#32;&#32;__m128i&#32;rot1_1&#32;=&#32;dct_const(stbi__f2f(1.175875602f),&#32;stbi__f2f(1.175875602f)&#32;+&#32;stbi__f2f(-2.562915447f));
2617 &#32;&#32;&#32;__m128i&#32;rot2_0&#32;=&#32;dct_const(stbi__f2f(-1.961570560f)&#32;+&#32;stbi__f2f(&#32;0.298631336f),&#32;stbi__f2f(-1.961570560f));
2618 &#32;&#32;&#32;__m128i&#32;rot2_1&#32;=&#32;dct_const(stbi__f2f(-1.961570560f),&#32;stbi__f2f(-1.961570560f)&#32;+&#32;stbi__f2f(&#32;3.072711026f));
2619 &#32;&#32;&#32;__m128i&#32;rot3_0&#32;=&#32;dct_const(stbi__f2f(-0.390180644f)&#32;+&#32;stbi__f2f(&#32;2.053119869f),&#32;stbi__f2f(-0.390180644f));
2620 &#32;&#32;&#32;__m128i&#32;rot3_1&#32;=&#32;dct_const(stbi__f2f(-0.390180644f),&#32;stbi__f2f(-0.390180644f)&#32;+&#32;stbi__f2f(&#32;1.501321110f));
2621 
2622 &#32;&#32;&#32;<emphasis role="comment">//&#32;rounding&#32;biases&#32;in&#32;column/row&#32;passes,&#32;see&#32;stbi__idct_block&#32;for&#32;explanation.</emphasis>
2623 &#32;&#32;&#32;__m128i&#32;bias_0&#32;=&#32;_mm_set1_epi32(512);
2624 &#32;&#32;&#32;__m128i&#32;bias_1&#32;=&#32;_mm_set1_epi32(65536&#32;+&#32;(128&lt;&lt;17));
2625 
2626 &#32;&#32;&#32;<emphasis role="comment">//&#32;load</emphasis>
2627 &#32;&#32;&#32;row0&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;0*8));
2628 &#32;&#32;&#32;row1&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;1*8));
2629 &#32;&#32;&#32;row2&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;2*8));
2630 &#32;&#32;&#32;row3&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;3*8));
2631 &#32;&#32;&#32;row4&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;4*8));
2632 &#32;&#32;&#32;row5&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;5*8));
2633 &#32;&#32;&#32;row6&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;6*8));
2634 &#32;&#32;&#32;row7&#32;=&#32;_mm_load_si128((<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;7*8));
2635 
2636 &#32;&#32;&#32;<emphasis role="comment">//&#32;column&#32;pass</emphasis>
2637 &#32;&#32;&#32;dct_pass(bias_0,&#32;10);
2638 
2639 &#32;&#32;&#32;{
2640 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16bit&#32;8x8&#32;transpose&#32;pass&#32;1</emphasis>
2641 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row0,&#32;row4);
2642 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row1,&#32;row5);
2643 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row2,&#32;row6);
2644 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row3,&#32;row7);
2645 
2646 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transpose&#32;pass&#32;2</emphasis>
2647 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row0,&#32;row2);
2648 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row1,&#32;row3);
2649 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row4,&#32;row6);
2650 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row5,&#32;row7);
2651 
2652 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transpose&#32;pass&#32;3</emphasis>
2653 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row0,&#32;row1);
2654 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row2,&#32;row3);
2655 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row4,&#32;row5);
2656 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave16(row6,&#32;row7);
2657 &#32;&#32;&#32;}
2658 
2659 &#32;&#32;&#32;<emphasis role="comment">//&#32;row&#32;pass</emphasis>
2660 &#32;&#32;&#32;dct_pass(bias_1,&#32;17);
2661 
2662 &#32;&#32;&#32;{
2663 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pack</emphasis>
2664 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;p0&#32;=&#32;_mm_packus_epi16(row0,&#32;row1);&#32;<emphasis role="comment">//&#32;a0a1a2a3...a7b0b1b2b3...b7</emphasis>
2665 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;p1&#32;=&#32;_mm_packus_epi16(row2,&#32;row3);
2666 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;p2&#32;=&#32;_mm_packus_epi16(row4,&#32;row5);
2667 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;p3&#32;=&#32;_mm_packus_epi16(row6,&#32;row7);
2668 
2669 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8bit&#32;8x8&#32;transpose&#32;pass&#32;1</emphasis>
2670 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p0,&#32;p2);&#32;<emphasis role="comment">//&#32;a0e0a1e1...</emphasis>
2671 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p1,&#32;p3);&#32;<emphasis role="comment">//&#32;c0g0c1g1...</emphasis>
2672 
2673 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transpose&#32;pass&#32;2</emphasis>
2674 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p0,&#32;p1);&#32;<emphasis role="comment">//&#32;a0c0e0g0...</emphasis>
2675 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p2,&#32;p3);&#32;<emphasis role="comment">//&#32;b0d0f0h0...</emphasis>
2676 
2677 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transpose&#32;pass&#32;3</emphasis>
2678 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p0,&#32;p2);&#32;<emphasis role="comment">//&#32;a0b0c0d0...</emphasis>
2679 &#32;&#32;&#32;&#32;&#32;&#32;dct_interleave8(p1,&#32;p3);&#32;<emphasis role="comment">//&#32;a4b4c4d4...</emphasis>
2680 
2681 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;store</emphasis>
2682 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;p0);&#32;out&#32;+=&#32;out_stride;
2683 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1ac4e4fd624042288e02f3e842e466ed2c">_mm_shuffle_epi32</link>(p0,&#32;0x4e));&#32;out&#32;+=&#32;out_stride;
2684 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;p2);&#32;out&#32;+=&#32;out_stride;
2685 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1ac4e4fd624042288e02f3e842e466ed2c">_mm_shuffle_epi32</link>(p2,&#32;0x4e));&#32;out&#32;+=&#32;out_stride;
2686 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;p1);&#32;out&#32;+=&#32;out_stride;
2687 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1ac4e4fd624042288e02f3e842e466ed2c">_mm_shuffle_epi32</link>(p1,&#32;0x4e));&#32;out&#32;+=&#32;out_stride;
2688 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;p3);&#32;out&#32;+=&#32;out_stride;
2689 &#32;&#32;&#32;&#32;&#32;&#32;_mm_storel_epi64((__m128i&#32;*)&#32;out,&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1ac4e4fd624042288e02f3e842e466ed2c">_mm_shuffle_epi32</link>(p3,&#32;0x4e));
2690 &#32;&#32;&#32;}
2691 
2692 <emphasis role="preprocessor">#undef&#32;dct_const</emphasis>
2693 <emphasis role="preprocessor">#undef&#32;dct_rot</emphasis>
2694 <emphasis role="preprocessor">#undef&#32;dct_widen</emphasis>
2695 <emphasis role="preprocessor">#undef&#32;dct_wadd</emphasis>
2696 <emphasis role="preprocessor">#undef&#32;dct_wsub</emphasis>
2697 <emphasis role="preprocessor">#undef&#32;dct_bfly32o</emphasis>
2698 <emphasis role="preprocessor">#undef&#32;dct_interleave8</emphasis>
2699 <emphasis role="preprocessor">#undef&#32;dct_interleave16</emphasis>
2700 <emphasis role="preprocessor">#undef&#32;dct_pass</emphasis>
2701 }
2702 
2703 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_SSE2</emphasis>
2704 
2705 <emphasis role="preprocessor">#ifdef&#32;STBI_NEON</emphasis>
2706 
2707 <emphasis role="comment">//&#32;NEON&#32;integer&#32;IDCT.&#32;should&#32;produce&#32;bit-identical</emphasis>
2708 <emphasis role="comment">//&#32;results&#32;to&#32;the&#32;generic&#32;C&#32;version.</emphasis>
2709 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__idct_simd(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_stride,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64])
2710 {
2711 &#32;&#32;&#32;int16x8_t&#32;row0,&#32;row1,&#32;row2,&#32;row3,&#32;row4,&#32;row5,&#32;row6,&#32;row7;
2712 
2713 &#32;&#32;&#32;int16x4_t&#32;rot0_0&#32;=&#32;vdup_n_s16(stbi__f2f(0.5411961f));
2714 &#32;&#32;&#32;int16x4_t&#32;rot0_1&#32;=&#32;vdup_n_s16(stbi__f2f(-1.847759065f));
2715 &#32;&#32;&#32;int16x4_t&#32;rot0_2&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;0.765366865f));
2716 &#32;&#32;&#32;int16x4_t&#32;rot1_0&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;1.175875602f));
2717 &#32;&#32;&#32;int16x4_t&#32;rot1_1&#32;=&#32;vdup_n_s16(stbi__f2f(-0.899976223f));
2718 &#32;&#32;&#32;int16x4_t&#32;rot1_2&#32;=&#32;vdup_n_s16(stbi__f2f(-2.562915447f));
2719 &#32;&#32;&#32;int16x4_t&#32;rot2_0&#32;=&#32;vdup_n_s16(stbi__f2f(-1.961570560f));
2720 &#32;&#32;&#32;int16x4_t&#32;rot2_1&#32;=&#32;vdup_n_s16(stbi__f2f(-0.390180644f));
2721 &#32;&#32;&#32;int16x4_t&#32;rot3_0&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;0.298631336f));
2722 &#32;&#32;&#32;int16x4_t&#32;rot3_1&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;2.053119869f));
2723 &#32;&#32;&#32;int16x4_t&#32;rot3_2&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;3.072711026f));
2724 &#32;&#32;&#32;int16x4_t&#32;rot3_3&#32;=&#32;vdup_n_s16(stbi__f2f(&#32;1.501321110f));
2725 
2726 <emphasis role="preprocessor">#define&#32;dct_long_mul(out,&#32;inq,&#32;coeff)&#32;\</emphasis>
2727 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_l&#32;=&#32;vmull_s16(vget_low_s16(inq),&#32;coeff);&#32;\</emphasis>
2728 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_h&#32;=&#32;vmull_s16(vget_high_s16(inq),&#32;coeff)</emphasis>
2729 
2730 <emphasis role="preprocessor">#define&#32;dct_long_mac(out,&#32;acc,&#32;inq,&#32;coeff)&#32;\</emphasis>
2731 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_l&#32;=&#32;vmlal_s16(acc##_l,&#32;vget_low_s16(inq),&#32;coeff);&#32;\</emphasis>
2732 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_h&#32;=&#32;vmlal_s16(acc##_h,&#32;vget_high_s16(inq),&#32;coeff)</emphasis>
2733 
2734 <emphasis role="preprocessor">#define&#32;dct_widen(out,&#32;inq)&#32;\</emphasis>
2735 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_l&#32;=&#32;vshll_n_s16(vget_low_s16(inq),&#32;12);&#32;\</emphasis>
2736 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_h&#32;=&#32;vshll_n_s16(vget_high_s16(inq),&#32;12)</emphasis>
2737 
2738 <emphasis role="comment">//&#32;wide&#32;add</emphasis>
2739 <emphasis role="preprocessor">#define&#32;dct_wadd(out,&#32;a,&#32;b)&#32;\</emphasis>
2740 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_l&#32;=&#32;vaddq_s32(a##_l,&#32;b##_l);&#32;\</emphasis>
2741 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_h&#32;=&#32;vaddq_s32(a##_h,&#32;b##_h)</emphasis>
2742 
2743 <emphasis role="comment">//&#32;wide&#32;sub</emphasis>
2744 <emphasis role="preprocessor">#define&#32;dct_wsub(out,&#32;a,&#32;b)&#32;\</emphasis>
2745 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_l&#32;=&#32;vsubq_s32(a##_l,&#32;b##_l);&#32;\</emphasis>
2746 <emphasis role="preprocessor">&#32;&#32;&#32;int32x4_t&#32;out##_h&#32;=&#32;vsubq_s32(a##_h,&#32;b##_h)</emphasis>
2747 
2748 <emphasis role="comment">//&#32;butterfly&#32;a/b,&#32;then&#32;shift&#32;using&#32;&quot;shiftop&quot;&#32;by&#32;&quot;s&quot;&#32;and&#32;pack</emphasis>
2749 <emphasis role="preprocessor">#define&#32;dct_bfly32o(out0,out1,&#32;a,b,shiftop,s)&#32;\</emphasis>
2750 <emphasis role="preprocessor">&#32;&#32;&#32;{&#32;\</emphasis>
2751 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sum,&#32;a,&#32;b);&#32;\</emphasis>
2752 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(dif,&#32;a,&#32;b);&#32;\</emphasis>
2753 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;out0&#32;=&#32;vcombine_s16(shiftop(sum_l,&#32;s),&#32;shiftop(sum_h,&#32;s));&#32;\</emphasis>
2754 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;out1&#32;=&#32;vcombine_s16(shiftop(dif_l,&#32;s),&#32;shiftop(dif_h,&#32;s));&#32;\</emphasis>
2755 <emphasis role="preprocessor">&#32;&#32;&#32;}</emphasis>
2756 
2757 <emphasis role="preprocessor">#define&#32;dct_pass(shiftop,&#32;shift)&#32;\</emphasis>
2758 <emphasis role="preprocessor">&#32;&#32;&#32;{&#32;\</emphasis>
2759 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;even&#32;part&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
2760 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum26&#32;=&#32;vaddq_s16(row2,&#32;row6);&#32;\</emphasis>
2761 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mul(p1e,&#32;sum26,&#32;rot0_0);&#32;\</emphasis>
2762 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(t2e,&#32;p1e,&#32;row6,&#32;rot0_1);&#32;\</emphasis>
2763 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(t3e,&#32;p1e,&#32;row2,&#32;rot0_2);&#32;\</emphasis>
2764 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum04&#32;=&#32;vaddq_s16(row0,&#32;row4);&#32;\</emphasis>
2765 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;dif04&#32;=&#32;vsubq_s16(row0,&#32;row4);&#32;\</emphasis>
2766 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_widen(t0e,&#32;sum04);&#32;\</emphasis>
2767 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_widen(t1e,&#32;dif04);&#32;\</emphasis>
2768 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x0,&#32;t0e,&#32;t3e);&#32;\</emphasis>
2769 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(x3,&#32;t0e,&#32;t3e);&#32;\</emphasis>
2770 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(x1,&#32;t1e,&#32;t2e);&#32;\</emphasis>
2771 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wsub(x2,&#32;t1e,&#32;t2e);&#32;\</emphasis>
2772 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;odd&#32;part&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
2773 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum15&#32;=&#32;vaddq_s16(row1,&#32;row5);&#32;\</emphasis>
2774 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum17&#32;=&#32;vaddq_s16(row1,&#32;row7);&#32;\</emphasis>
2775 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum35&#32;=&#32;vaddq_s16(row3,&#32;row5);&#32;\</emphasis>
2776 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sum37&#32;=&#32;vaddq_s16(row3,&#32;row7);&#32;\</emphasis>
2777 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;sumodd&#32;=&#32;vaddq_s16(sum17,&#32;sum35);&#32;\</emphasis>
2778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mul(p5o,&#32;sumodd,&#32;rot1_0);&#32;\</emphasis>
2779 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(p1o,&#32;p5o,&#32;sum17,&#32;rot1_1);&#32;\</emphasis>
2780 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(p2o,&#32;p5o,&#32;sum35,&#32;rot1_2);&#32;\</emphasis>
2781 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mul(p3o,&#32;sum37,&#32;rot2_0);&#32;\</emphasis>
2782 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mul(p4o,&#32;sum15,&#32;rot2_1);&#32;\</emphasis>
2783 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sump13o,&#32;p1o,&#32;p3o);&#32;\</emphasis>
2784 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sump24o,&#32;p2o,&#32;p4o);&#32;\</emphasis>
2785 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sump23o,&#32;p2o,&#32;p3o);&#32;\</emphasis>
2786 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_wadd(sump14o,&#32;p1o,&#32;p4o);&#32;\</emphasis>
2787 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(x4,&#32;sump13o,&#32;row7,&#32;rot3_0);&#32;\</emphasis>
2788 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(x5,&#32;sump24o,&#32;row5,&#32;rot3_1);&#32;\</emphasis>
2789 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(x6,&#32;sump23o,&#32;row3,&#32;rot3_2);&#32;\</emphasis>
2790 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_long_mac(x7,&#32;sump14o,&#32;row1,&#32;rot3_3);&#32;\</emphasis>
2791 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row0,row7,&#32;x0,x7,shiftop,shift);&#32;\</emphasis>
2792 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row1,row6,&#32;x1,x6,shiftop,shift);&#32;\</emphasis>
2793 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row2,row5,&#32;x2,x5,shiftop,shift);&#32;\</emphasis>
2794 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;dct_bfly32o(row3,row4,&#32;x3,x4,shiftop,shift);&#32;\</emphasis>
2795 <emphasis role="preprocessor">&#32;&#32;&#32;}</emphasis>
2796 
2797 &#32;&#32;&#32;<emphasis role="comment">//&#32;load</emphasis>
2798 &#32;&#32;&#32;row0&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;0*8);
2799 &#32;&#32;&#32;row1&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;1*8);
2800 &#32;&#32;&#32;row2&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;2*8);
2801 &#32;&#32;&#32;row3&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;3*8);
2802 &#32;&#32;&#32;row4&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;4*8);
2803 &#32;&#32;&#32;row5&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;5*8);
2804 &#32;&#32;&#32;row6&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;6*8);
2805 &#32;&#32;&#32;row7&#32;=&#32;vld1q_s16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;+&#32;7*8);
2806 
2807 &#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;DC&#32;bias</emphasis>
2808 &#32;&#32;&#32;row0&#32;=&#32;vaddq_s16(row0,&#32;vsetq_lane_s16(1024,&#32;vdupq_n_s16(0),&#32;0));
2809 
2810 &#32;&#32;&#32;<emphasis role="comment">//&#32;column&#32;pass</emphasis>
2811 &#32;&#32;&#32;dct_pass(vrshrn_n_s32,&#32;10);
2812 
2813 &#32;&#32;&#32;<emphasis role="comment">//&#32;16bit&#32;8x8&#32;transpose</emphasis>
2814 &#32;&#32;&#32;{
2815 <emphasis role="comment">//&#32;these&#32;three&#32;map&#32;to&#32;a&#32;single&#32;VTRN.16,&#32;VTRN.32,&#32;and&#32;VSWP,&#32;respectively.</emphasis>
2816 <emphasis role="comment">//&#32;whether&#32;compilers&#32;actually&#32;get&#32;this&#32;is&#32;another&#32;story,&#32;sadly.</emphasis>
2817 <emphasis role="preprocessor">#define&#32;dct_trn16(x,&#32;y)&#32;{&#32;int16x8x2_t&#32;t&#32;=&#32;vtrnq_s16(x,&#32;y);&#32;x&#32;=&#32;t.val[0];&#32;y&#32;=&#32;t.val[1];&#32;}</emphasis>
2818 <emphasis role="preprocessor">#define&#32;dct_trn32(x,&#32;y)&#32;{&#32;int32x4x2_t&#32;t&#32;=&#32;vtrnq_s32(vreinterpretq_s32_s16(x),&#32;vreinterpretq_s32_s16(y));&#32;x&#32;=&#32;vreinterpretq_s16_s32(t.val[0]);&#32;y&#32;=&#32;vreinterpretq_s16_s32(t.val[1]);&#32;}</emphasis>
2819 <emphasis role="preprocessor">#define&#32;dct_trn64(x,&#32;y)&#32;{&#32;int16x8_t&#32;x0&#32;=&#32;x;&#32;int16x8_t&#32;y0&#32;=&#32;y;&#32;x&#32;=&#32;vcombine_s16(vget_low_s16(x0),&#32;vget_low_s16(y0));&#32;y&#32;=&#32;vcombine_s16(vget_high_s16(x0),&#32;vget_high_s16(y0));&#32;}</emphasis>
2820 
2821 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass&#32;1</emphasis>
2822 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn16(row0,&#32;row1);&#32;<emphasis role="comment">//&#32;a0b0a2b2a4b4a6b6</emphasis>
2823 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn16(row2,&#32;row3);
2824 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn16(row4,&#32;row5);
2825 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn16(row6,&#32;row7);
2826 
2827 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass&#32;2</emphasis>
2828 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn32(row0,&#32;row2);&#32;<emphasis role="comment">//&#32;a0b0c0d0a4b4c4d4</emphasis>
2829 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn32(row1,&#32;row3);
2830 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn32(row4,&#32;row6);
2831 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn32(row5,&#32;row7);
2832 
2833 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass&#32;3</emphasis>
2834 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn64(row0,&#32;row4);&#32;<emphasis role="comment">//&#32;a0b0c0d0e0f0g0h0</emphasis>
2835 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn64(row1,&#32;row5);
2836 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn64(row2,&#32;row6);
2837 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn64(row3,&#32;row7);
2838 
2839 <emphasis role="preprocessor">#undef&#32;dct_trn16</emphasis>
2840 <emphasis role="preprocessor">#undef&#32;dct_trn32</emphasis>
2841 <emphasis role="preprocessor">#undef&#32;dct_trn64</emphasis>
2842 &#32;&#32;&#32;}
2843 
2844 &#32;&#32;&#32;<emphasis role="comment">//&#32;row&#32;pass</emphasis>
2845 &#32;&#32;&#32;<emphasis role="comment">//&#32;vrshrn_n_s32&#32;only&#32;supports&#32;shifts&#32;up&#32;to&#32;16,&#32;we&#32;need</emphasis>
2846 &#32;&#32;&#32;<emphasis role="comment">//&#32;17.&#32;so&#32;do&#32;a&#32;non-rounding&#32;shift&#32;of&#32;16&#32;first&#32;then&#32;follow</emphasis>
2847 &#32;&#32;&#32;<emphasis role="comment">//&#32;up&#32;with&#32;a&#32;rounding&#32;shift&#32;by&#32;1.</emphasis>
2848 &#32;&#32;&#32;dct_pass(vshrn_n_s32,&#32;16);
2849 
2850 &#32;&#32;&#32;{
2851 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pack&#32;and&#32;round</emphasis>
2852 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p0&#32;=&#32;vqrshrun_n_s16(row0,&#32;1);
2853 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p1&#32;=&#32;vqrshrun_n_s16(row1,&#32;1);
2854 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p2&#32;=&#32;vqrshrun_n_s16(row2,&#32;1);
2855 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p3&#32;=&#32;vqrshrun_n_s16(row3,&#32;1);
2856 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p4&#32;=&#32;vqrshrun_n_s16(row4,&#32;1);
2857 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p5&#32;=&#32;vqrshrun_n_s16(row5,&#32;1);
2858 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p6&#32;=&#32;vqrshrun_n_s16(row6,&#32;1);
2859 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;p7&#32;=&#32;vqrshrun_n_s16(row7,&#32;1);
2860 
2861 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;again,&#32;these&#32;can&#32;translate&#32;into&#32;one&#32;instruction,&#32;but&#32;often&#32;don&apos;t.</emphasis>
2862 <emphasis role="preprocessor">#define&#32;dct_trn8_8(x,&#32;y)&#32;{&#32;uint8x8x2_t&#32;t&#32;=&#32;vtrn_u8(x,&#32;y);&#32;x&#32;=&#32;t.val[0];&#32;y&#32;=&#32;t.val[1];&#32;}</emphasis>
2863 <emphasis role="preprocessor">#define&#32;dct_trn8_16(x,&#32;y)&#32;{&#32;uint16x4x2_t&#32;t&#32;=&#32;vtrn_u16(vreinterpret_u16_u8(x),&#32;vreinterpret_u16_u8(y));&#32;x&#32;=&#32;vreinterpret_u8_u16(t.val[0]);&#32;y&#32;=&#32;vreinterpret_u8_u16(t.val[1]);&#32;}</emphasis>
2864 <emphasis role="preprocessor">#define&#32;dct_trn8_32(x,&#32;y)&#32;{&#32;uint32x2x2_t&#32;t&#32;=&#32;vtrn_u32(vreinterpret_u32_u8(x),&#32;vreinterpret_u32_u8(y));&#32;x&#32;=&#32;vreinterpret_u8_u32(t.val[0]);&#32;y&#32;=&#32;vreinterpret_u8_u32(t.val[1]);&#32;}</emphasis>
2865 
2866 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sadly&#32;can&apos;t&#32;use&#32;interleaved&#32;stores&#32;here&#32;since&#32;we&#32;only&#32;write</emphasis>
2867 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes&#32;to&#32;each&#32;scan&#32;line!</emphasis>
2868 
2869 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8x8&#32;8-bit&#32;transpose&#32;pass&#32;1</emphasis>
2870 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_8(p0,&#32;p1);
2871 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_8(p2,&#32;p3);
2872 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_8(p4,&#32;p5);
2873 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_8(p6,&#32;p7);
2874 
2875 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass&#32;2</emphasis>
2876 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_16(p0,&#32;p2);
2877 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_16(p1,&#32;p3);
2878 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_16(p4,&#32;p6);
2879 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_16(p5,&#32;p7);
2880 
2881 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass&#32;3</emphasis>
2882 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_32(p0,&#32;p4);
2883 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_32(p1,&#32;p5);
2884 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_32(p2,&#32;p6);
2885 &#32;&#32;&#32;&#32;&#32;&#32;dct_trn8_32(p3,&#32;p7);
2886 
2887 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;store</emphasis>
2888 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p0);&#32;out&#32;+=&#32;out_stride;
2889 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p1);&#32;out&#32;+=&#32;out_stride;
2890 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p2);&#32;out&#32;+=&#32;out_stride;
2891 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p3);&#32;out&#32;+=&#32;out_stride;
2892 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p4);&#32;out&#32;+=&#32;out_stride;
2893 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p5);&#32;out&#32;+=&#32;out_stride;
2894 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p6);&#32;out&#32;+=&#32;out_stride;
2895 &#32;&#32;&#32;&#32;&#32;&#32;vst1_u8(out,&#32;p7);
2896 
2897 <emphasis role="preprocessor">#undef&#32;dct_trn8_8</emphasis>
2898 <emphasis role="preprocessor">#undef&#32;dct_trn8_16</emphasis>
2899 <emphasis role="preprocessor">#undef&#32;dct_trn8_32</emphasis>
2900 &#32;&#32;&#32;}
2901 
2902 <emphasis role="preprocessor">#undef&#32;dct_long_mul</emphasis>
2903 <emphasis role="preprocessor">#undef&#32;dct_long_mac</emphasis>
2904 <emphasis role="preprocessor">#undef&#32;dct_widen</emphasis>
2905 <emphasis role="preprocessor">#undef&#32;dct_wadd</emphasis>
2906 <emphasis role="preprocessor">#undef&#32;dct_wsub</emphasis>
2907 <emphasis role="preprocessor">#undef&#32;dct_bfly32o</emphasis>
2908 <emphasis role="preprocessor">#undef&#32;dct_pass</emphasis>
2909 }
2910 
2911 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NEON</emphasis>
2912 
2913 <emphasis role="preprocessor">#define&#32;STBI__MARKER_none&#32;&#32;0xff</emphasis>
2914 <emphasis role="comment">//&#32;if&#32;there&apos;s&#32;a&#32;pending&#32;marker&#32;from&#32;the&#32;entropy&#32;stream,&#32;return&#32;that</emphasis>
2915 <emphasis role="comment">//&#32;otherwise,&#32;fetch&#32;from&#32;the&#32;stream&#32;and&#32;get&#32;a&#32;marker.&#32;if&#32;there&apos;s&#32;no</emphasis>
2916 <emphasis role="comment">//&#32;marker,&#32;return&#32;0xff,&#32;which&#32;is&#32;never&#32;a&#32;valid&#32;marker&#32;value</emphasis>
2917 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__get_marker(stbi__jpeg&#32;*j)
2918 {
2919 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
2920 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;marker&#32;!=&#32;STBI__MARKER_none)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;j-&gt;marker;&#32;j-&gt;marker&#32;=&#32;STBI__MARKER_none;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;}
2921 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get8(j-&gt;s);
2922 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;!=&#32;0xff)&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBI__MARKER_none;
2923 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;==&#32;0xff)
2924 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get8(j-&gt;s);&#32;<emphasis role="comment">//&#32;consume&#32;repeated&#32;0xff&#32;fill&#32;bytes</emphasis>
2925 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
2926 }
2927 
2928 <emphasis role="comment">//&#32;in&#32;each&#32;scan,&#32;we&apos;ll&#32;have&#32;scan_n&#32;components,&#32;and&#32;the&#32;order</emphasis>
2929 <emphasis role="comment">//&#32;of&#32;the&#32;components&#32;is&#32;specified&#32;by&#32;order[]</emphasis>
2930 <emphasis role="preprocessor">#define&#32;STBI__RESTART(x)&#32;&#32;&#32;&#32;&#32;((x)&#32;&gt;=&#32;0xd0&#32;&amp;&amp;&#32;(x)&#32;&lt;=&#32;0xd7)</emphasis>
2931 
2932 <emphasis role="comment">//&#32;after&#32;a&#32;restart&#32;interval,&#32;stbi__jpeg_reset&#32;the&#32;entropy&#32;decoder&#32;and</emphasis>
2933 <emphasis role="comment">//&#32;the&#32;dc&#32;prediction</emphasis>
2934 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__jpeg_reset(stbi__jpeg&#32;*j)
2935 {
2936 &#32;&#32;&#32;j-&gt;code_bits&#32;=&#32;0;
2937 &#32;&#32;&#32;j-&gt;code_buffer&#32;=&#32;0;
2938 &#32;&#32;&#32;j-&gt;nomore&#32;=&#32;0;
2939 &#32;&#32;&#32;j-&gt;img_comp[0].dc_pred&#32;=&#32;j-&gt;img_comp[1].dc_pred&#32;=&#32;j-&gt;img_comp[2].dc_pred&#32;=&#32;j-&gt;img_comp[3].dc_pred&#32;=&#32;0;
2940 &#32;&#32;&#32;j-&gt;marker&#32;=&#32;STBI__MARKER_none;
2941 &#32;&#32;&#32;j-&gt;todo&#32;=&#32;j-&gt;restart_interval&#32;?&#32;j-&gt;restart_interval&#32;:&#32;0x7fffffff;
2942 &#32;&#32;&#32;j-&gt;eob_run&#32;=&#32;0;
2943 &#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;more&#32;than&#32;1&lt;&lt;31&#32;MCUs&#32;if&#32;no&#32;restart_interal?&#32;that&apos;s&#32;plenty&#32;safe,</emphasis>
2944 &#32;&#32;&#32;<emphasis role="comment">//&#32;since&#32;we&#32;don&apos;t&#32;even&#32;allow&#32;1&lt;&lt;30&#32;pixels</emphasis>
2945 }
2946 
2947 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_entropy_coded_data(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
2948 {
2949 &#32;&#32;&#32;stbi__jpeg_reset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
2950 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;progressive)&#32;{
2951 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;==&#32;1)&#32;{
2952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
2953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_SIMD_ALIGN(<emphasis role="keywordtype">short</emphasis>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64]);
2954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;order[0];
2955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-interleaved&#32;data,&#32;we&#32;just&#32;need&#32;to&#32;process&#32;one&#32;block&#32;at&#32;a&#32;time,</emphasis>
2956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;trivial&#32;scanline&#32;order</emphasis>
2957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;blocks&#32;to&#32;do&#32;just&#32;depends&#32;on&#32;how&#32;many&#32;actual&#32;&quot;pixels&quot;&#32;this</emphasis>
2958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;component&#32;has,&#32;independent&#32;of&#32;interleaved&#32;MCU&#32;blocking&#32;and&#32;such</emphasis>
2959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].x+7)&#32;&gt;&gt;&#32;3;
2960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].y+7)&#32;&gt;&gt;&#32;3;
2961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;h;&#32;++j)&#32;{
2962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
2963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ha&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].ha;
2964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__jpeg_decode_block(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].hd,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac+ha,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast_ac[ha],&#32;n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dequant[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].tq]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idct_block_kernel(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].data+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2*j*8+i*8,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
2966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;every&#32;data&#32;block&#32;is&#32;an&#32;MCU,&#32;so&#32;countdown&#32;the&#32;restart&#32;interval</emphasis>
2967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;todo&#32;&lt;=&#32;0)&#32;{
2968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_bits&#32;&lt;&#32;24)&#32;stbi__grow_buffer_unsafe(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
2969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;it&apos;s&#32;NOT&#32;a&#32;restart,&#32;then&#32;just&#32;bail,&#32;so&#32;we&#32;get&#32;corrupt&#32;data</emphasis>
2970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rather&#32;than&#32;no&#32;data</emphasis>
2971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBI__RESTART(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;marker))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_reset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
2973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
2977 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;interleaved</emphasis>
2978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
2979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_SIMD_ALIGN(<emphasis role="keywordtype">short</emphasis>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[64]);
2980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_y;&#32;++j)&#32;{
2981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_x;&#32;++i)&#32;{
2982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scan&#32;an&#32;interleaved&#32;mcu...&#32;process&#32;scan_n&#32;components&#32;in&#32;order</emphasis>
2983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n;&#32;++k)&#32;{
2984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;order[k];
2985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scan&#32;out&#32;an&#32;mcu&apos;s&#32;worth&#32;of&#32;this&#32;component;&#32;that&apos;s&#32;just&#32;determined</emphasis>
2986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;by&#32;the&#32;basic&#32;H&#32;and&#32;V&#32;specified&#32;for&#32;the&#32;component</emphasis>
2987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].v;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
2988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].h;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;{
2989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x2&#32;=&#32;(i*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].h&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)*8;
2990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y2&#32;=&#32;(j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].v&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)*8;
2991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ha&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].ha;
2992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__jpeg_decode_block(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].hd,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac+ha,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast_ac[ha],&#32;n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dequant[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].tq]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idct_block_kernel(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].data+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2*y2+x2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
2994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;after&#32;all&#32;interleaved&#32;components,&#32;that&apos;s&#32;an&#32;interleaved&#32;MCU,</emphasis>
2998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;now&#32;count&#32;down&#32;the&#32;restart&#32;interval</emphasis>
2999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;todo&#32;&lt;=&#32;0)&#32;{
3000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_bits&#32;&lt;&#32;24)&#32;stbi__grow_buffer_unsafe(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBI__RESTART(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;marker))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_reset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3007 &#32;&#32;&#32;&#32;&#32;&#32;}
3008 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3009 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;==&#32;1)&#32;{
3010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
3011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;order[0];
3012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-interleaved&#32;data,&#32;we&#32;just&#32;need&#32;to&#32;process&#32;one&#32;block&#32;at&#32;a&#32;time,</emphasis>
3013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;trivial&#32;scanline&#32;order</emphasis>
3014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;blocks&#32;to&#32;do&#32;just&#32;depends&#32;on&#32;how&#32;many&#32;actual&#32;&quot;pixels&quot;&#32;this</emphasis>
3015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;component&#32;has,&#32;independent&#32;of&#32;interleaved&#32;MCU&#32;blocking&#32;and&#32;such</emphasis>
3016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].x+7)&#32;&gt;&gt;&#32;3;
3017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].y+7)&#32;&gt;&gt;&#32;3;
3018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;h;&#32;++j)&#32;{
3019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
3020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff&#32;+&#32;64&#32;*&#32;(i&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff_w);
3021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_start&#32;==&#32;0)&#32;{
3022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__jpeg_decode_block_prog_dc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].hd],&#32;n))
3023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ha&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].ha;
3026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__jpeg_decode_block_prog_ac(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac[ha],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast_ac[ha]))
3027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;every&#32;data&#32;block&#32;is&#32;an&#32;MCU,&#32;so&#32;countdown&#32;the&#32;restart&#32;interval</emphasis>
3030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;todo&#32;&lt;=&#32;0)&#32;{
3031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_bits&#32;&lt;&#32;24)&#32;stbi__grow_buffer_unsafe(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBI__RESTART(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;marker))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_reset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3038 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;interleaved</emphasis>
3039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
3040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_y;&#32;++j)&#32;{
3041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_x;&#32;++i)&#32;{
3042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scan&#32;an&#32;interleaved&#32;mcu...&#32;process&#32;scan_n&#32;components&#32;in&#32;order</emphasis>
3043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n;&#32;++k)&#32;{
3044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;order[k];
3045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scan&#32;out&#32;an&#32;mcu&apos;s&#32;worth&#32;of&#32;this&#32;component;&#32;that&apos;s&#32;just&#32;determined</emphasis>
3046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;by&#32;the&#32;basic&#32;H&#32;and&#32;V&#32;specified&#32;for&#32;the&#32;component</emphasis>
3047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].v;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
3048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].h;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;{
3049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x2&#32;=&#32;(i*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].h&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
3050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y2&#32;=&#32;(j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].v&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
3051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff&#32;+&#32;64&#32;*&#32;(x2&#32;+&#32;y2&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff_w);
3052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__jpeg_decode_block_prog_dc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].hd],&#32;n))
3053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;after&#32;all&#32;interleaved&#32;components,&#32;that&apos;s&#32;an&#32;interleaved&#32;MCU,</emphasis>
3058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;now&#32;count&#32;down&#32;the&#32;restart&#32;interval</emphasis>
3059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;todo&#32;&lt;=&#32;0)&#32;{
3060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_bits&#32;&lt;&#32;24)&#32;stbi__grow_buffer_unsafe(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!STBI__RESTART(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;marker))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_reset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3067 &#32;&#32;&#32;&#32;&#32;&#32;}
3068 &#32;&#32;&#32;}
3069 }
3070 
3071 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__jpeg_dequantize(<emphasis role="keywordtype">short</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;stbi__uint16&#32;*dequant)
3072 {
3073 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3074 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;64;&#32;++i)
3075 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>[i]&#32;*=&#32;dequant[i];
3076 }
3077 
3078 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__jpeg_finish(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
3079 {
3080 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;progressive)&#32;{
3081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dequantize&#32;and&#32;idct&#32;the&#32;data</emphasis>
3082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,n;
3083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(n=0;&#32;n&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n;&#32;++n)&#32;{
3084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].x+7)&#32;&gt;&gt;&#32;3;
3085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].y+7)&#32;&gt;&gt;&#32;3;
3086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;h;&#32;++j)&#32;{
3087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
3088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff&#32;+&#32;64&#32;*&#32;(i&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].coeff_w);
3089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_dequantize(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dequant[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].tq]);
3090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idct_block_kernel(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].data+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2*j*8+i*8,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[n].w2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a89ce72163394e6aef63b551a8806e93f">data</link>);
3091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3093 &#32;&#32;&#32;&#32;&#32;&#32;}
3094 &#32;&#32;&#32;}
3095 }
3096 
3097 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__process_marker(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m)
3098 {
3099 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>;
3100 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(m)&#32;{
3101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__MARKER_none:&#32;<emphasis role="comment">//&#32;no&#32;marker&#32;found</emphasis>
3102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;expected&#32;marker&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3103 
3104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0xDD:&#32;<emphasis role="comment">//&#32;DRI&#32;-&#32;specify&#32;restart&#32;interval</emphasis>
3105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)&#32;!=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DRI&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;restart_interval&#32;=&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3108 
3109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0xDB:&#32;<emphasis role="comment">//&#32;DQT&#32;-&#32;define&#32;quantization&#32;table</emphasis>
3110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;=&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)-2;
3111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;&gt;&#32;0)&#32;{
3112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;q&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;q&#32;&gt;&gt;&#32;4,&#32;sixteen&#32;=&#32;(p&#32;!=&#32;0);
3114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;q&#32;&amp;&#32;15,i;
3115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;0&#32;&amp;&amp;&#32;p&#32;!=&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DQT&#32;type&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&gt;&#32;3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DQT&#32;table&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3117 
3118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;64;&#32;++i)
3119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;dequant[t][stbi__jpeg_dezigzag[i]]&#32;=&#32;(stbi__uint16)(sixteen&#32;?&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)&#32;:&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s));
3120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;(sixteen&#32;?&#32;129&#32;:&#32;65);
3121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>==0;
3123 
3124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0xC4:&#32;<emphasis role="comment">//&#32;DHT&#32;-&#32;define&#32;huffman&#32;table</emphasis>
3125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;=&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)-2;
3126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;&gt;&#32;0)&#32;{
3127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;
3128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizes[16],i,n=0;
3129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;q&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tc&#32;=&#32;q&#32;&gt;&gt;&#32;4;
3131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;th&#32;=&#32;q&#32;&amp;&#32;15;
3132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tc&#32;&gt;&#32;1&#32;||&#32;th&#32;&gt;&#32;3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DHT&#32;header&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;16;&#32;++i)&#32;{
3134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sizes[i]&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;sizes[i];
3136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n&#32;&gt;&#32;256)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DHT&#32;header&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;Loop&#32;over&#32;i&#32;&lt;&#32;n&#32;would&#32;write&#32;past&#32;end&#32;of&#32;values!</emphasis>
3138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;17;
3139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tc&#32;==&#32;0)&#32;{
3140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__build_huffman(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc+th,&#32;sizes))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_dc[th].values;
3142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__build_huffman(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac+th,&#32;sizes))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac[th].values;
3145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;n;&#32;++i)
3147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>[i]&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tc&#32;!=&#32;0)
3149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__build_fast_ac(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast_ac[th],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;huff_ac&#32;+&#32;th);
3150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;n;
3151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>==0;
3153 &#32;&#32;&#32;}
3154 
3155 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;for&#32;comment&#32;block&#32;or&#32;APP&#32;blocks</emphasis>
3156 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((m&#32;&gt;=&#32;0xE0&#32;&amp;&amp;&#32;m&#32;&lt;=&#32;0xEF)&#32;||&#32;m&#32;==&#32;0xFE)&#32;{
3157 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;=&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;&lt;&#32;2)&#32;{
3159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;==&#32;0xFE)
3160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;COM&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;APP&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3163 &#32;&#32;&#32;&#32;&#32;&#32;}
3164 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;2;
3165 
3166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;==&#32;0xE0&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;&gt;=&#32;5)&#32;{&#32;<emphasis role="comment">//&#32;JFIF&#32;APP0&#32;segment</emphasis>
3167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;tag[5]&#32;=&#32;{<emphasis role="charliteral">&apos;J&apos;</emphasis>,<emphasis role="charliteral">&apos;F&apos;</emphasis>,<emphasis role="charliteral">&apos;I&apos;</emphasis>,<emphasis role="charliteral">&apos;F&apos;</emphasis>,<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
3168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ok&#32;=&#32;1;
3169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;5;&#32;++i)
3171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)&#32;!=&#32;tag[i])
3172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok&#32;=&#32;0;
3173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;5;
3174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ok)
3175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;jfif&#32;=&#32;1;
3176 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;==&#32;0xEE&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;&gt;=&#32;12)&#32;{&#32;<emphasis role="comment">//&#32;Adobe&#32;APP14&#32;segment</emphasis>
3177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;tag[6]&#32;=&#32;{<emphasis role="charliteral">&apos;A&apos;</emphasis>,<emphasis role="charliteral">&apos;d&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;b&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
3178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ok&#32;=&#32;1;
3179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;6;&#32;++i)
3181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s)&#32;!=&#32;tag[i])
3182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok&#32;=&#32;0;
3183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;6;
3184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ok)&#32;{
3185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);&#32;<emphasis role="comment">//&#32;version</emphasis>
3186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);&#32;<emphasis role="comment">//&#32;flags0</emphasis>
3187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);&#32;<emphasis role="comment">//&#32;flags1</emphasis>
3188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);&#32;<emphasis role="comment">//&#32;color&#32;transform</emphasis>
3189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&#32;-=&#32;6;
3190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3191 &#32;&#32;&#32;&#32;&#32;&#32;}
3192 
3193 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s,&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>);
3194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3195 &#32;&#32;&#32;}
3196 
3197 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;unknown&#32;marker&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3198 }
3199 
3200 <emphasis role="comment">//&#32;after&#32;we&#32;see&#32;SOS</emphasis>
3201 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__process_scan_header(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
3202 {
3203 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3204 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Ls&#32;=&#32;stbi__get16be(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3205 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3206 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;&lt;&#32;1&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;&gt;&#32;4&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n&#32;&gt;&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOS&#32;component&#32;count&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3207 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Ls&#32;!=&#32;6+2*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOS&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3208 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;scan_n;&#32;++i)&#32;{
3209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s),&#32;which;
3210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;q&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(which&#32;=&#32;0;&#32;which&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n;&#32;++which)
3212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[which].id&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)
3213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
3214 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(which&#32;==&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;no&#32;match</emphasis>
3215 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[which].hd&#32;=&#32;q&#32;&gt;&gt;&#32;4;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[which].hd&#32;&gt;&#32;3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DC&#32;huff&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3216 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[which].ha&#32;=&#32;q&#32;&amp;&#32;15;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[which].ha&#32;&gt;&#32;3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;AC&#32;huff&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3217 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;order[i]&#32;=&#32;which;
3218 &#32;&#32;&#32;}
3219 
3220 &#32;&#32;&#32;{
3221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;aa;
3222 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_start&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3223 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_end&#32;&#32;&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);&#32;<emphasis role="comment">//&#32;should&#32;be&#32;63,&#32;but&#32;might&#32;be&#32;0</emphasis>
3224 &#32;&#32;&#32;&#32;&#32;&#32;aa&#32;=&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s);
3225 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_high&#32;=&#32;(aa&#32;&gt;&gt;&#32;4);
3226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_low&#32;&#32;=&#32;(aa&#32;&amp;&#32;15);
3227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;progressive)&#32;{
3228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_start&#32;&gt;&#32;63&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_end&#32;&gt;&#32;63&#32;&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_start&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_end&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_high&#32;&gt;&#32;13&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_low&#32;&gt;&#32;13)
3229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOS&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3230 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_start&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOS&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_high&#32;!=&#32;0&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;succ_low&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOS&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;spec_end&#32;=&#32;63;
3234 &#32;&#32;&#32;&#32;&#32;&#32;}
3235 &#32;&#32;&#32;}
3236 
3237 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3238 }
3239 
3240 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__free_jpeg_components(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncomp,&#32;<emphasis role="keywordtype">int</emphasis>&#32;why)
3241 {
3242 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3243 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;ncomp;&#32;++i)&#32;{
3244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data)&#32;{
3245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data);
3246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3248 &#32;&#32;&#32;&#32;&#32;&#32;}
3249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff)&#32;{
3250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff);
3251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff&#32;=&#32;0;
3252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].coeff&#32;=&#32;0;
3253 &#32;&#32;&#32;&#32;&#32;&#32;}
3254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].linebuf)&#32;{
3255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].linebuf);
3256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].linebuf&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3257 &#32;&#32;&#32;&#32;&#32;&#32;}
3258 &#32;&#32;&#32;}
3259 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;why;
3260 }
3261 
3262 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__process_frame_header(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scan)
3263 {
3264 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s;
3265 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Lf,p,i,q,&#32;h_max=1,v_max=1,c;
3266 &#32;&#32;&#32;Lf&#32;=&#32;stbi__get16be(s);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Lf&#32;&lt;&#32;11)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOF&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;JPEG</emphasis>
3267 &#32;&#32;&#32;p&#32;&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;8)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;only&#32;8-bit&quot;</emphasis>,<emphasis role="stringliteral">&quot;JPEG&#32;format&#32;not&#32;supported:&#32;8-bit&#32;only&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;JPEG&#32;baseline</emphasis>
3268 &#32;&#32;&#32;s-&gt;img_y&#32;=&#32;stbi__get16be(s);&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_y&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;header&#32;height&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;JPEG&#32;format&#32;not&#32;supported:&#32;delayed&#32;height&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;Legal,&#32;but&#32;we&#32;don&apos;t&#32;handle&#32;it--but&#32;neither&#32;does&#32;IJG</emphasis>
3269 &#32;&#32;&#32;s-&gt;img_x&#32;=&#32;stbi__get16be(s);&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_x&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;0&#32;width&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;JPEG&#32;requires</emphasis>
3270 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_y&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
3271 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_x&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
3272 &#32;&#32;&#32;c&#32;=&#32;stbi__get8(s);
3273 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;3&#32;&amp;&amp;&#32;c&#32;!=&#32;1&#32;&amp;&amp;&#32;c&#32;!=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;component&#32;count&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3274 &#32;&#32;&#32;s-&gt;img_n&#32;=&#32;c;
3275 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;c;&#32;++i)&#32;{
3276 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3277 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].linebuf&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3278 &#32;&#32;&#32;}
3279 
3280 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Lf&#32;!=&#32;8+3*s-&gt;img_n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;SOF&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3281 
3282 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;rgb&#32;=&#32;0;
3283 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;s-&gt;img_n;&#32;++i)&#32;{
3284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;rgb[3]&#32;=&#32;{&#32;<emphasis role="charliteral">&apos;R&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;G&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>&#32;};
3285 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].id&#32;=&#32;stbi__get8(s);
3286 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_n&#32;==&#32;3&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].id&#32;==&#32;rgb[i])
3287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;rgb;
3288 &#32;&#32;&#32;&#32;&#32;&#32;q&#32;=&#32;stbi__get8(s);
3289 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;=&#32;(q&#32;&gt;&gt;&#32;4);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;&gt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;H&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3290 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;=&#32;q&#32;&amp;&#32;15;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;||&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;&gt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;V&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3291 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].tq&#32;=&#32;stbi__get8(s);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].tq&#32;&gt;&#32;3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;TQ&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3292 &#32;&#32;&#32;}
3293 
3294 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;!=&#32;STBI__SCAN_load)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3295 
3296 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(s-&gt;img_x,&#32;s-&gt;img_y,&#32;s-&gt;img_n,&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;too&#32;large&#32;to&#32;decode&quot;</emphasis>);
3297 
3298 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;s-&gt;img_n;&#32;++i)&#32;{
3299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;&gt;&#32;h_max)&#32;h_max&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h;
3300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;&gt;&#32;v_max)&#32;v_max&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v;
3301 &#32;&#32;&#32;}
3302 
3303 &#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;that&#32;plane&#32;subsampling&#32;factors&#32;are&#32;integer&#32;ratios;&#32;our&#32;resamplers&#32;can&apos;t&#32;deal&#32;with&#32;fractional&#32;ratios</emphasis>
3304 &#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;I&apos;ve&#32;never&#32;seen&#32;a&#32;non-corrupted&#32;JPEG&#32;file&#32;actually&#32;use&#32;them</emphasis>
3305 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;s-&gt;img_n;&#32;++i)&#32;{
3306 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(h_max&#32;%&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;H&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v_max&#32;%&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;V&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3308 &#32;&#32;&#32;}
3309 
3310 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;interleaved&#32;mcu&#32;info</emphasis>
3311 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_h_max&#32;=&#32;h_max;
3312 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_v_max&#32;=&#32;v_max;
3313 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_w&#32;=&#32;h_max&#32;*&#32;8;
3314 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_h&#32;=&#32;v_max&#32;*&#32;8;
3315 &#32;&#32;&#32;<emphasis role="comment">//&#32;these&#32;sizes&#32;can&apos;t&#32;be&#32;more&#32;than&#32;17&#32;bits</emphasis>
3316 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_x&#32;=&#32;(s-&gt;img_x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_w-1)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_w;
3317 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_y&#32;=&#32;(s-&gt;img_y&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_h-1)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_h;
3318 
3319 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;s-&gt;img_n;&#32;++i)&#32;{
3320 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;effective&#32;pixels&#32;(e.g.&#32;for&#32;non-interleaved&#32;MCU)</emphasis>
3321 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].x&#32;=&#32;(s-&gt;img_x&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;+&#32;h_max-1)&#32;/&#32;h_max;
3322 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].y&#32;=&#32;(s-&gt;img_y&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;+&#32;v_max-1)&#32;/&#32;v_max;
3323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;simplify&#32;generation,&#32;we&apos;ll&#32;allocate&#32;enough&#32;memory&#32;to&#32;decode</emphasis>
3324 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;bogus&#32;oversized&#32;data&#32;from&#32;using&#32;interleaved&#32;MCUs&#32;and&#32;their</emphasis>
3325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;big&#32;blocks&#32;(e.g.&#32;a&#32;16x16&#32;iMCU&#32;on&#32;an&#32;image&#32;of&#32;width&#32;33);&#32;we&#32;won&apos;t</emphasis>
3326 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;discard&#32;the&#32;extra&#32;data&#32;until&#32;colorspace&#32;conversion</emphasis>
3327 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
3328 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;img_mcu_x,&#32;img_mcu_y:&#32;&lt;=17&#32;bits;&#32;comp[i].h&#32;and&#32;.v&#32;are&#32;&lt;=4&#32;(checked&#32;earlier)</emphasis>
3329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;these&#32;muls&#32;can&apos;t&#32;overflow&#32;with&#32;32-bit&#32;ints&#32;(which&#32;we&#32;require)</emphasis>
3330 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].w2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_x&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h&#32;*&#32;8;
3331 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h2&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_mcu_y&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].v&#32;*&#32;8;
3332 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].coeff&#32;=&#32;0;
3333 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff&#32;=&#32;0;
3334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].linebuf&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3335 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data&#32;=&#32;stbi__malloc_mad2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].w2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h2,&#32;15);
3336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
3337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__free_jpeg_components(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;i+1,&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>));
3338 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;align&#32;blocks&#32;for&#32;idct&#32;using&#32;mmx/sse</emphasis>
3339 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].data&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*)&#32;(((<emphasis role="keywordtype">size_t</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_data&#32;+&#32;15)&#32;&amp;&#32;~15);
3340 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;progressive)&#32;{
3341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;w2,&#32;h2&#32;are&#32;multiples&#32;of&#32;8&#32;(see&#32;above)</emphasis>
3342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].coeff_w&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].w2&#32;/&#32;8;
3343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].coeff_h&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h2&#32;/&#32;8;
3344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff&#32;=&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].w2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].h2,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>),&#32;15);
3345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
3346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__free_jpeg_components(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;i+1,&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>));
3347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].coeff&#32;=&#32;(<emphasis role="keywordtype">short</emphasis>*)&#32;(((<emphasis role="keywordtype">size_t</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[i].raw_coeff&#32;+&#32;15)&#32;&amp;&#32;~15);
3348 &#32;&#32;&#32;&#32;&#32;&#32;}
3349 &#32;&#32;&#32;}
3350 
3351 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3352 }
3353 
3354 <emphasis role="comment">//&#32;use&#32;comparisons&#32;since&#32;in&#32;some&#32;cases&#32;we&#32;handle&#32;more&#32;than&#32;one&#32;case&#32;(e.g.&#32;SOF)</emphasis>
3355 <emphasis role="preprocessor">#define&#32;stbi__DNL(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((x)&#32;==&#32;0xdc)</emphasis>
3356 <emphasis role="preprocessor">#define&#32;stbi__SOI(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((x)&#32;==&#32;0xd8)</emphasis>
3357 <emphasis role="preprocessor">#define&#32;stbi__EOI(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((x)&#32;==&#32;0xd9)</emphasis>
3358 <emphasis role="preprocessor">#define&#32;stbi__SOF(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((x)&#32;==&#32;0xc0&#32;||&#32;(x)&#32;==&#32;0xc1&#32;||&#32;(x)&#32;==&#32;0xc2)</emphasis>
3359 <emphasis role="preprocessor">#define&#32;stbi__SOS(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((x)&#32;==&#32;0xda)</emphasis>
3360 
3361 <emphasis role="preprocessor">#define&#32;stbi__SOF_progressive(x)&#32;&#32;&#32;((x)&#32;==&#32;0xc2)</emphasis>
3362 
3363 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__decode_jpeg_header(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scan)
3364 {
3365 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m;
3366 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;jfif&#32;=&#32;0;
3367 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;=&#32;-1;&#32;<emphasis role="comment">//&#32;valid&#32;values&#32;are&#32;0,1,2</emphasis>
3368 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;marker&#32;=&#32;STBI__MARKER_none;&#32;<emphasis role="comment">//&#32;initialize&#32;cached&#32;marker&#32;to&#32;empty</emphasis>
3369 &#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3370 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__SOI(m))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;SOI&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3371 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;==&#32;STBI__SCAN_type)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3372 &#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3373 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__SOF(m))&#32;{
3374 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__process_marker(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,m))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3375 &#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3376 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(m&#32;==&#32;STBI__MARKER_none)&#32;{
3377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;some&#32;files&#32;have&#32;extra&#32;padding&#32;after&#32;their&#32;blocks,&#32;so&#32;ok,&#32;we&apos;ll&#32;scan</emphasis>
3378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;SOF&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
3380 &#32;&#32;&#32;&#32;&#32;&#32;}
3381 &#32;&#32;&#32;}
3382 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;progressive&#32;=&#32;stbi__SOF_progressive(m);
3383 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__process_frame_header(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;scan))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3384 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3385 }
3386 
3387 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__skip_jpeg_junk_at_end(stbi__jpeg&#32;*j)
3388 {
3389 &#32;&#32;&#32;<emphasis role="comment">//&#32;some&#32;JPEGs&#32;have&#32;junk&#32;at&#32;end,&#32;skip&#32;over&#32;it&#32;but&#32;if&#32;we&#32;find&#32;what&#32;looks</emphasis>
3390 &#32;&#32;&#32;<emphasis role="comment">//&#32;like&#32;a&#32;valid&#32;marker,&#32;resume&#32;there</emphasis>
3391 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(j-&gt;s))&#32;{
3392 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get8(j-&gt;s);
3393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;==&#32;255)&#32;{&#32;<emphasis role="comment">//&#32;might&#32;be&#32;a&#32;marker</emphasis>
3394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(j-&gt;s))&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBI__MARKER_none;
3395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get8(j-&gt;s);
3396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;!=&#32;0x00&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;!=&#32;0xff)&#32;{
3397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;a&#32;stuffed&#32;zero&#32;or&#32;lead-in&#32;to&#32;another&#32;marker,&#32;looks</emphasis>
3398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;like&#32;an&#32;actual&#32;marker,&#32;return&#32;it</emphasis>
3399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
3400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stuffed&#32;zero&#32;has&#32;x=0&#32;now&#32;which&#32;ends&#32;the&#32;loop,&#32;meaning&#32;we&#32;go</emphasis>
3402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;back&#32;to&#32;regular&#32;scan&#32;loop.</emphasis>
3403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;repeated&#32;0xff&#32;keeps&#32;trying&#32;to&#32;read&#32;the&#32;next&#32;byte&#32;of&#32;the&#32;marker.</emphasis>
3404 &#32;&#32;&#32;&#32;&#32;&#32;}
3405 &#32;&#32;&#32;}
3406 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;STBI__MARKER_none;
3407 }
3408 
3409 <emphasis role="comment">//&#32;decode&#32;image&#32;to&#32;YCbCr&#32;format</emphasis>
3410 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__decode_jpeg_image(stbi__jpeg&#32;*j)
3411 {
3412 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m;
3413 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(m&#32;=&#32;0;&#32;m&#32;&lt;&#32;4;&#32;m++)&#32;{
3414 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;img_comp[m].raw_data&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3415 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;img_comp[m].raw_coeff&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3416 &#32;&#32;&#32;}
3417 &#32;&#32;&#32;j-&gt;restart_interval&#32;=&#32;0;
3418 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__decode_jpeg_header(j,&#32;STBI__SCAN_load))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3419 &#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(j);
3420 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__EOI(m))&#32;{
3421 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__SOS(m))&#32;{
3422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__process_scan_header(j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__parse_entropy_coded_data(j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;marker&#32;==&#32;STBI__MARKER_none&#32;)&#32;{
3425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j-&gt;marker&#32;=&#32;stbi__skip_jpeg_junk_at_end(j);
3426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;reach&#32;eof&#32;without&#32;hitting&#32;a&#32;marker,&#32;stbi__get_marker()&#32;below&#32;will&#32;fail&#32;and&#32;we&apos;ll&#32;eventually&#32;return&#32;0</emphasis>
3427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(j);
3429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(STBI__RESTART(m))
3430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(j);
3431 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__DNL(m))&#32;{
3432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Ld&#32;=&#32;stbi__get16be(j-&gt;s);
3433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint32&#32;NL&#32;=&#32;stbi__get16be(j-&gt;s);
3434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Ld&#32;!=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DNL&#32;len&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(NL&#32;!=&#32;j-&gt;s-&gt;img_y)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;DNL&#32;height&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;JPEG&quot;</emphasis>);
3436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(j);
3437 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__process_marker(j,&#32;m))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;stbi__get_marker(j);
3440 &#32;&#32;&#32;&#32;&#32;&#32;}
3441 &#32;&#32;&#32;}
3442 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j-&gt;progressive)
3443 &#32;&#32;&#32;&#32;&#32;&#32;stbi__jpeg_finish(j);
3444 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
3445 }
3446 
3447 <emphasis role="comment">//&#32;static&#32;jfif-centered&#32;resampling&#32;(across&#32;block&#32;boundaries)</emphasis>
3448 
3449 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*(*resample_row_func)(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in0,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in1,
3450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs);
3451 
3452 <emphasis role="preprocessor">#define&#32;stbi__div4(x)&#32;((stbi_uc)&#32;((x)&#32;&gt;&gt;&#32;2))</emphasis>
3453 
3454 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*resample_row_1(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3455 {
3456 &#32;&#32;&#32;STBI_NOTUSED(out);
3457 &#32;&#32;&#32;STBI_NOTUSED(in_far);
3458 &#32;&#32;&#32;STBI_NOTUSED(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
3459 &#32;&#32;&#32;STBI_NOTUSED(hs);
3460 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;in_near;
3461 }
3462 
3463 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*&#32;stbi__resample_row_v_2(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3464 {
3465 &#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;generate&#32;two&#32;samples&#32;vertically&#32;for&#32;every&#32;one&#32;in&#32;input</emphasis>
3466 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3467 &#32;&#32;&#32;STBI_NOTUSED(hs);
3468 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)
3469 &#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;stbi__div4(3*in_near[i]&#32;+&#32;in_far[i]&#32;+&#32;2);
3470 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3471 }
3472 
3473 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*&#32;&#32;stbi__resample_row_h_2(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3474 {
3475 &#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;generate&#32;two&#32;samples&#32;horizontally&#32;for&#32;every&#32;one&#32;in&#32;input</emphasis>
3476 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3477 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*input&#32;=&#32;in_near;
3478 
3479 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;1)&#32;{
3480 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;only&#32;one&#32;sample,&#32;can&apos;t&#32;do&#32;any&#32;interpolation</emphasis>
3481 &#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;out[1]&#32;=&#32;input[0];
3482 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3483 &#32;&#32;&#32;}
3484 
3485 &#32;&#32;&#32;out[0]&#32;=&#32;input[0];
3486 &#32;&#32;&#32;out[1]&#32;=&#32;stbi__div4(input[0]*3&#32;+&#32;input[1]&#32;+&#32;2);
3487 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>-1;&#32;++i)&#32;{
3488 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;3*input[i]+2;
3489 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2+0]&#32;=&#32;stbi__div4(n+input[i-1]);
3490 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2+1]&#32;=&#32;stbi__div4(n+input[i+1]);
3491 &#32;&#32;&#32;}
3492 &#32;&#32;&#32;out[i*2+0]&#32;=&#32;stbi__div4(input[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>-2]*3&#32;+&#32;input[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>-1]&#32;+&#32;2);
3493 &#32;&#32;&#32;out[i*2+1]&#32;=&#32;input[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>-1];
3494 
3495 &#32;&#32;&#32;STBI_NOTUSED(in_far);
3496 &#32;&#32;&#32;STBI_NOTUSED(hs);
3497 
3498 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3499 }
3500 
3501 <emphasis role="preprocessor">#define&#32;stbi__div16(x)&#32;((stbi_uc)&#32;((x)&#32;&gt;&gt;&#32;4))</emphasis>
3502 
3503 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__resample_row_hv_2(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3504 {
3505 &#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;generate&#32;2x2&#32;samples&#32;for&#32;every&#32;one&#32;in&#32;input</emphasis>
3506 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,t0,t1;
3507 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;1)&#32;{
3508 &#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;out[1]&#32;=&#32;stbi__div4(3*in_near[0]&#32;+&#32;in_far[0]&#32;+&#32;2);
3509 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3510 &#32;&#32;&#32;}
3511 
3512 &#32;&#32;&#32;t1&#32;=&#32;3*in_near[0]&#32;+&#32;in_far[0];
3513 &#32;&#32;&#32;out[0]&#32;=&#32;stbi__div4(t1+2);
3514 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
3515 &#32;&#32;&#32;&#32;&#32;&#32;t0&#32;=&#32;t1;
3516 &#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;3*in_near[i]+in_far[i];
3517 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2-1]&#32;=&#32;stbi__div16(3*t0&#32;+&#32;t1&#32;+&#32;8);
3518 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2&#32;&#32;]&#32;=&#32;stbi__div16(3*t1&#32;+&#32;t0&#32;+&#32;8);
3519 &#32;&#32;&#32;}
3520 &#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*2-1]&#32;=&#32;stbi__div4(t1+2);
3521 
3522 &#32;&#32;&#32;STBI_NOTUSED(hs);
3523 
3524 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3525 }
3526 
3527 <emphasis role="preprocessor">#if&#32;defined(STBI_SSE2)&#32;||&#32;defined(STBI_NEON)</emphasis>
3528 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__resample_row_hv_2_simd(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3529 {
3530 &#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;generate&#32;2x2&#32;samples&#32;for&#32;every&#32;one&#32;in&#32;input</emphasis>
3531 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=0,t0,t1;
3532 
3533 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;1)&#32;{
3534 &#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;out[1]&#32;=&#32;stbi__div4(3*in_near[0]&#32;+&#32;in_far[0]&#32;+&#32;2);
3535 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3536 &#32;&#32;&#32;}
3537 
3538 &#32;&#32;&#32;t1&#32;=&#32;3*in_near[0]&#32;+&#32;in_far[0];
3539 &#32;&#32;&#32;<emphasis role="comment">//&#32;process&#32;groups&#32;of&#32;8&#32;pixels&#32;for&#32;as&#32;long&#32;as&#32;we&#32;can.</emphasis>
3540 &#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;we&#32;can&apos;t&#32;handle&#32;the&#32;last&#32;pixel&#32;in&#32;a&#32;row&#32;in&#32;this&#32;loop</emphasis>
3541 &#32;&#32;&#32;<emphasis role="comment">//&#32;because&#32;we&#32;need&#32;to&#32;handle&#32;the&#32;filter&#32;boundary&#32;conditions.</emphasis>
3542 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>-1)&#32;&amp;&#32;~7);&#32;i&#32;+=&#32;8)&#32;{
3543 <emphasis role="preprocessor">#if&#32;defined(STBI_SSE2)</emphasis>
3544 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;and&#32;perform&#32;the&#32;vertical&#32;filtering&#32;pass</emphasis>
3545 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;uses&#32;3*x&#32;+&#32;y&#32;=&#32;4*x&#32;+&#32;(y&#32;-&#32;x)</emphasis>
3546 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="_group__gtc__constants_1ga788f5a421fc0f40a1296ebc094cbaa8a">zero</link>&#32;&#32;=&#32;_mm_setzero_si128();
3547 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;farb&#32;&#32;=&#32;_mm_loadl_epi64((__m128i&#32;*)&#32;(in_far&#32;+&#32;i));
3548 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;nearb&#32;=&#32;_mm_loadl_epi64((__m128i&#32;*)&#32;(in_near&#32;+&#32;i));
3549 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;farw&#32;&#32;=&#32;_mm_unpacklo_epi8(farb,&#32;zero);
3550 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;nearw&#32;=&#32;_mm_unpacklo_epi8(nearb,&#32;zero);
3551 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;diff&#32;&#32;=&#32;_mm_sub_epi16(farw,&#32;nearw);
3552 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;nears&#32;=&#32;_mm_slli_epi16(nearw,&#32;2);
3553 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;curr&#32;&#32;=&#32;_mm_add_epi16(nears,&#32;diff);&#32;<emphasis role="comment">//&#32;current&#32;row</emphasis>
3554 
3555 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;horizontal&#32;filter&#32;works&#32;the&#32;same&#32;based&#32;on&#32;shifted&#32;vers&#32;of&#32;current</emphasis>
3556 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;row.&#32;&quot;prev&quot;&#32;is&#32;current&#32;row&#32;shifted&#32;right&#32;by&#32;1&#32;pixel;&#32;we&#32;need&#32;to</emphasis>
3557 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;the&#32;previous&#32;pixel&#32;value&#32;(from&#32;t1).</emphasis>
3558 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;next&quot;&#32;is&#32;current&#32;row&#32;shifted&#32;left&#32;by&#32;1&#32;pixel,&#32;with&#32;first&#32;pixel</emphasis>
3559 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;of&#32;next&#32;block&#32;of&#32;8&#32;pixels&#32;added&#32;in.</emphasis>
3560 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;prv0&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2091290bb42bdb544fbc4c652afc2751">_mm_slli_si128</link>(curr,&#32;2);
3561 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;nxt0&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a6184a7deed3960a115ba3b83ea370d44">_mm_srli_si128</link>(curr,&#32;2);
3562 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;prev&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a0c494fee5f306b83d1a93fca272d5335">_mm_insert_epi16</link>(prv0,&#32;t1,&#32;0);
3563 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;next&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a0c494fee5f306b83d1a93fca272d5335">_mm_insert_epi16</link>(nxt0,&#32;3*in_near[i+8]&#32;+&#32;in_far[i+8],&#32;7);
3564 
3565 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;horizontal&#32;filter,&#32;polyphase&#32;implementation&#32;since&#32;it&apos;s&#32;convenient:</emphasis>
3566 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;even&#32;pixels&#32;=&#32;3*cur&#32;+&#32;prev&#32;=&#32;cur*4&#32;+&#32;(prev&#32;-&#32;cur)</emphasis>
3567 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;odd&#32;&#32;pixels&#32;=&#32;3*cur&#32;+&#32;next&#32;=&#32;cur*4&#32;+&#32;(next&#32;-&#32;cur)</emphasis>
3568 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;the&#32;shared&#32;term.</emphasis>
3569 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;bias&#32;&#32;=&#32;_mm_set1_epi16(8);
3570 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;curs&#32;=&#32;_mm_slli_epi16(curr,&#32;2);
3571 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;prvd&#32;=&#32;_mm_sub_epi16(prev,&#32;curr);
3572 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;nxtd&#32;=&#32;_mm_sub_epi16(next,&#32;curr);
3573 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;curb&#32;=&#32;_mm_add_epi16(curs,&#32;bias);
3574 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;even&#32;=&#32;_mm_add_epi16(prvd,&#32;curb);
3575 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;odd&#32;&#32;=&#32;_mm_add_epi16(nxtd,&#32;curb);
3576 
3577 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;interleave&#32;even&#32;and&#32;odd&#32;pixels,&#32;then&#32;undo&#32;scaling.</emphasis>
3578 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;int0&#32;=&#32;_mm_unpacklo_epi16(even,&#32;odd);
3579 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="_group__gtx__compatibility_1gaba41d7803e4b24c17656d74377b88286">int1</link>&#32;=&#32;_mm_unpackhi_epi16(even,&#32;odd);
3580 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;de0&#32;&#32;=&#32;_mm_srli_epi16(int0,&#32;4);
3581 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;de1&#32;&#32;=&#32;_mm_srli_epi16(int1,&#32;4);
3582 
3583 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pack&#32;and&#32;write&#32;output</emphasis>
3584 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;outv&#32;=&#32;_mm_packus_epi16(de0,&#32;de1);
3585 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8f6a27fe514fda127ff1aa9770de6b3">_mm_storeu_si128</link>((__m128i&#32;*)&#32;(out&#32;+&#32;i*2),&#32;outv);
3586 <emphasis role="preprocessor">#elif&#32;defined(STBI_NEON)</emphasis>
3587 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;and&#32;perform&#32;the&#32;vertical&#32;filtering&#32;pass</emphasis>
3588 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;uses&#32;3*x&#32;+&#32;y&#32;=&#32;4*x&#32;+&#32;(y&#32;-&#32;x)</emphasis>
3589 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;farb&#32;&#32;=&#32;vld1_u8(in_far&#32;+&#32;i);
3590 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;nearb&#32;=&#32;vld1_u8(in_near&#32;+&#32;i);
3591 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;diff&#32;&#32;=&#32;vreinterpretq_s16_u16(vsubl_u8(farb,&#32;nearb));
3592 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;nears&#32;=&#32;vreinterpretq_s16_u16(vshll_n_u8(nearb,&#32;2));
3593 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;curr&#32;&#32;=&#32;vaddq_s16(nears,&#32;diff);&#32;<emphasis role="comment">//&#32;current&#32;row</emphasis>
3594 
3595 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;horizontal&#32;filter&#32;works&#32;the&#32;same&#32;based&#32;on&#32;shifted&#32;vers&#32;of&#32;current</emphasis>
3596 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;row.&#32;&quot;prev&quot;&#32;is&#32;current&#32;row&#32;shifted&#32;right&#32;by&#32;1&#32;pixel;&#32;we&#32;need&#32;to</emphasis>
3597 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;the&#32;previous&#32;pixel&#32;value&#32;(from&#32;t1).</emphasis>
3598 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;next&quot;&#32;is&#32;current&#32;row&#32;shifted&#32;left&#32;by&#32;1&#32;pixel,&#32;with&#32;first&#32;pixel</emphasis>
3599 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;of&#32;next&#32;block&#32;of&#32;8&#32;pixels&#32;added&#32;in.</emphasis>
3600 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;prv0&#32;=&#32;vextq_s16(curr,&#32;curr,&#32;7);
3601 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;nxt0&#32;=&#32;vextq_s16(curr,&#32;curr,&#32;1);
3602 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;prev&#32;=&#32;vsetq_lane_s16(t1,&#32;prv0,&#32;0);
3603 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;next&#32;=&#32;vsetq_lane_s16(3*in_near[i+8]&#32;+&#32;in_far[i+8],&#32;nxt0,&#32;7);
3604 
3605 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;horizontal&#32;filter,&#32;polyphase&#32;implementation&#32;since&#32;it&apos;s&#32;convenient:</emphasis>
3606 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;even&#32;pixels&#32;=&#32;3*cur&#32;+&#32;prev&#32;=&#32;cur*4&#32;+&#32;(prev&#32;-&#32;cur)</emphasis>
3607 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;odd&#32;&#32;pixels&#32;=&#32;3*cur&#32;+&#32;next&#32;=&#32;cur*4&#32;+&#32;(next&#32;-&#32;cur)</emphasis>
3608 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;the&#32;shared&#32;term.</emphasis>
3609 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;curs&#32;=&#32;vshlq_n_s16(curr,&#32;2);
3610 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;prvd&#32;=&#32;vsubq_s16(prev,&#32;curr);
3611 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;nxtd&#32;=&#32;vsubq_s16(next,&#32;curr);
3612 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;even&#32;=&#32;vaddq_s16(curs,&#32;prvd);
3613 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;odd&#32;&#32;=&#32;vaddq_s16(curs,&#32;nxtd);
3614 
3615 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;undo&#32;scaling&#32;and&#32;round,&#32;then&#32;store&#32;with&#32;even/odd&#32;phases&#32;interleaved</emphasis>
3616 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8x2_t&#32;o;
3617 &#32;&#32;&#32;&#32;&#32;&#32;o.val[0]&#32;=&#32;vqrshrun_n_s16(even,&#32;4);
3618 &#32;&#32;&#32;&#32;&#32;&#32;o.val[1]&#32;=&#32;vqrshrun_n_s16(odd,&#32;&#32;4);
3619 &#32;&#32;&#32;&#32;&#32;&#32;vst2_u8(out&#32;+&#32;i*2,&#32;o);
3620 <emphasis role="preprocessor">#endif</emphasis>
3621 
3622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;previous&quot;&#32;value&#32;for&#32;next&#32;iter</emphasis>
3623 &#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;3*in_near[i+7]&#32;+&#32;in_far[i+7];
3624 &#32;&#32;&#32;}
3625 
3626 &#32;&#32;&#32;t0&#32;=&#32;t1;
3627 &#32;&#32;&#32;t1&#32;=&#32;3*in_near[i]&#32;+&#32;in_far[i];
3628 &#32;&#32;&#32;out[i*2]&#32;=&#32;stbi__div16(3*t1&#32;+&#32;t0&#32;+&#32;8);
3629 
3630 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(++i;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)&#32;{
3631 &#32;&#32;&#32;&#32;&#32;&#32;t0&#32;=&#32;t1;
3632 &#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;3*in_near[i]+in_far[i];
3633 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2-1]&#32;=&#32;stbi__div16(3*t0&#32;+&#32;t1&#32;+&#32;8);
3634 &#32;&#32;&#32;&#32;&#32;&#32;out[i*2&#32;&#32;]&#32;=&#32;stbi__div16(3*t1&#32;+&#32;t0&#32;+&#32;8);
3635 &#32;&#32;&#32;}
3636 &#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*2-1]&#32;=&#32;stbi__div4(t1+2);
3637 
3638 &#32;&#32;&#32;STBI_NOTUSED(hs);
3639 
3640 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3641 }
3642 <emphasis role="preprocessor">#endif</emphasis>
3643 
3644 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__resample_row_generic(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_near,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*in_far,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs)
3645 {
3646 &#32;&#32;&#32;<emphasis role="comment">//&#32;resample&#32;with&#32;nearest-neighbor</emphasis>
3647 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
3648 &#32;&#32;&#32;STBI_NOTUSED(in_far);
3649 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;&#32;++i)
3650 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;hs;&#32;++j)
3651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i*hs+j]&#32;=&#32;in_near[i];
3652 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
3653 }
3654 
3655 <emphasis role="comment">//&#32;this&#32;is&#32;a&#32;reduced-precision&#32;calculation&#32;of&#32;YCbCr-to-RGB&#32;introduced</emphasis>
3656 <emphasis role="comment">//&#32;to&#32;make&#32;sure&#32;the&#32;code&#32;produces&#32;the&#32;same&#32;results&#32;in&#32;both&#32;SIMD&#32;and&#32;scalar</emphasis>
3657 <emphasis role="preprocessor">#define&#32;stbi__float2fixed(x)&#32;&#32;(((int)&#32;((x)&#32;*&#32;4096.0f&#32;+&#32;0.5f))&#32;&lt;&lt;&#32;8)</emphasis>
3658 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__YCbCr_to_RGB_row(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*pcb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*pcr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;step)
3659 {
3660 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
3661 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++i)&#32;{
3662 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y_fixed&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i]&#32;&lt;&lt;&#32;20)&#32;+&#32;(1&lt;&lt;19);&#32;<emphasis role="comment">//&#32;rounding</emphasis>
3663 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
3664 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cr&#32;=&#32;pcr[i]&#32;-&#32;128;
3665 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cb&#32;=&#32;pcb[i]&#32;-&#32;128;
3666 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;y_fixed&#32;+&#32;&#32;cr*&#32;stbi__float2fixed(1.40200f);
3667 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;y_fixed&#32;+&#32;(cr*-stbi__float2fixed(0.71414f))&#32;+&#32;((cb*-stbi__float2fixed(0.34414f))&#32;&amp;&#32;0xffff0000);
3668 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;y_fixed&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;&#32;&#32;cb*&#32;stbi__float2fixed(1.77200f);
3669 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;=&#32;20;
3670 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&gt;&gt;=&#32;20;
3671 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;&gt;=&#32;20;
3672 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;255;&#32;}
3673 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;255;&#32;}
3674 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;255;&#32;}
3675 &#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3676 &#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>;
3677 &#32;&#32;&#32;&#32;&#32;&#32;out[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
3678 &#32;&#32;&#32;&#32;&#32;&#32;out[3]&#32;=&#32;255;
3679 &#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
3680 &#32;&#32;&#32;}
3681 }
3682 
3683 <emphasis role="preprocessor">#if&#32;defined(STBI_SSE2)&#32;||&#32;defined(STBI_NEON)</emphasis>
3684 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__YCbCr_to_RGB_simd(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pcb,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pcr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;step)
3685 {
3686 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
3687 
3688 <emphasis role="preprocessor">#ifdef&#32;STBI_SSE2</emphasis>
3689 &#32;&#32;&#32;<emphasis role="comment">//&#32;step&#32;==&#32;3&#32;is&#32;pretty&#32;ugly&#32;on&#32;the&#32;final&#32;interleave,&#32;and&#32;i&apos;m&#32;not&#32;convinced</emphasis>
3690 &#32;&#32;&#32;<emphasis role="comment">//&#32;it&apos;s&#32;useful&#32;in&#32;practice&#32;(you&#32;wouldn&apos;t&#32;use&#32;it&#32;for&#32;textures,&#32;for&#32;example).</emphasis>
3691 &#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;just&#32;accelerate&#32;step&#32;==&#32;4&#32;case.</emphasis>
3692 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;==&#32;4)&#32;{
3693 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;a&#32;fairly&#32;straightforward&#32;implementation&#32;and&#32;not&#32;super-optimized.</emphasis>
3694 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;signflip&#32;&#32;=&#32;_mm_set1_epi8(-0x80);
3695 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr_const0&#32;=&#32;_mm_set1_epi16(&#32;&#32;&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;1.40200f*4096.0f+0.5f));
3696 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr_const1&#32;=&#32;_mm_set1_epi16(&#32;-&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;0.71414f*4096.0f+0.5f));
3697 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb_const0&#32;=&#32;_mm_set1_epi16(&#32;-&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;0.34414f*4096.0f+0.5f));
3698 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb_const1&#32;=&#32;_mm_set1_epi16(&#32;&#32;&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;1.77200f*4096.0f+0.5f));
3699 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;y_bias&#32;=&#32;_mm_set1_epi8((<emphasis role="keywordtype">char</emphasis>)&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>)&#32;128);
3700 &#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="_namespaceglm_1a4a34bd23566ba18cfa7df073a6142286">xw</link>&#32;=&#32;_mm_set1_epi16(255);&#32;<emphasis role="comment">//&#32;alpha&#32;channel</emphasis>
3701 
3702 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i+7&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;i&#32;+=&#32;8)&#32;{
3703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load</emphasis>
3704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;y_bytes&#32;=&#32;_mm_loadl_epi64((__m128i&#32;*)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>+i));
3705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr_bytes&#32;=&#32;_mm_loadl_epi64((__m128i&#32;*)&#32;(pcr+i));
3706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb_bytes&#32;=&#32;_mm_loadl_epi64((__m128i&#32;*)&#32;(pcb+i));
3707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr_biased&#32;=&#32;_mm_xor_si128(cr_bytes,&#32;signflip);&#32;<emphasis role="comment">//&#32;-128</emphasis>
3708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb_biased&#32;=&#32;_mm_xor_si128(cb_bytes,&#32;signflip);&#32;<emphasis role="comment">//&#32;-128</emphasis>
3709 
3710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unpack&#32;to&#32;short&#32;(and&#32;left-shift&#32;cr,&#32;cb&#32;by&#32;8)</emphasis>
3711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;<link linkend="_namespaceglm_1a6292c6498ac872fd1b067a2a407fc590">yw</link>&#32;&#32;=&#32;_mm_unpacklo_epi8(y_bias,&#32;y_bytes);
3712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;crw&#32;=&#32;_mm_unpacklo_epi8(_mm_setzero_si128(),&#32;cr_biased);
3713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cbw&#32;=&#32;_mm_unpacklo_epi8(_mm_setzero_si128(),&#32;cb_biased);
3714 
3715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;color&#32;transform</emphasis>
3716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;yws&#32;=&#32;_mm_srli_epi16(yw,&#32;4);
3717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr0&#32;=&#32;_mm_mulhi_epi16(cr_const0,&#32;crw);
3718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb0&#32;=&#32;_mm_mulhi_epi16(cb_const0,&#32;cbw);
3719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cb1&#32;=&#32;_mm_mulhi_epi16(cbw,&#32;cb_const1);
3720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;cr1&#32;=&#32;_mm_mulhi_epi16(crw,&#32;cr_const1);
3721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;rws&#32;=&#32;_mm_add_epi16(cr0,&#32;yws);
3722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;gwt&#32;=&#32;_mm_add_epi16(cb0,&#32;yws);
3723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;bws&#32;=&#32;_mm_add_epi16(yws,&#32;cb1);
3724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;gws&#32;=&#32;_mm_add_epi16(gwt,&#32;cr1);
3725 
3726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;descale</emphasis>
3727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;rw&#32;=&#32;_mm_srai_epi16(rws,&#32;4);
3728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;bw&#32;=&#32;_mm_srai_epi16(bws,&#32;4);
3729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;gw&#32;=&#32;_mm_srai_epi16(gws,&#32;4);
3730 
3731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;back&#32;to&#32;byte,&#32;set&#32;up&#32;for&#32;transpose</emphasis>
3732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;brb&#32;=&#32;_mm_packus_epi16(rw,&#32;bw);
3733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;gxb&#32;=&#32;_mm_packus_epi16(gw,&#32;xw);
3734 
3735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transpose&#32;to&#32;interleave&#32;channels</emphasis>
3736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;t0&#32;=&#32;_mm_unpacklo_epi8(brb,&#32;gxb);
3737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;t1&#32;=&#32;_mm_unpackhi_epi8(brb,&#32;gxb);
3738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;o0&#32;=&#32;_mm_unpacklo_epi16(t0,&#32;t1);
3739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;o1&#32;=&#32;_mm_unpackhi_epi16(t0,&#32;t1);
3740 
3741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;store</emphasis>
3742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8f6a27fe514fda127ff1aa9770de6b3">_mm_storeu_si128</link>((__m128i&#32;*)&#32;(out&#32;+&#32;0),&#32;o0);
3743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8f6a27fe514fda127ff1aa9770de6b3">_mm_storeu_si128</link>((__m128i&#32;*)&#32;(out&#32;+&#32;16),&#32;o1);
3744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;32;
3745 &#32;&#32;&#32;&#32;&#32;&#32;}
3746 &#32;&#32;&#32;}
3747 <emphasis role="preprocessor">#endif</emphasis>
3748 
3749 <emphasis role="preprocessor">#ifdef&#32;STBI_NEON</emphasis>
3750 &#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;this&#32;version,&#32;step=3&#32;support&#32;would&#32;be&#32;easy&#32;to&#32;add.&#32;but&#32;is&#32;there&#32;demand?</emphasis>
3751 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;==&#32;4)&#32;{
3752 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;a&#32;fairly&#32;straightforward&#32;implementation&#32;and&#32;not&#32;super-optimized.</emphasis>
3753 &#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;signflip&#32;=&#32;vdup_n_u8(0x80);
3754 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cr_const0&#32;=&#32;vdupq_n_s16(&#32;&#32;&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;1.40200f*4096.0f+0.5f));
3755 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cr_const1&#32;=&#32;vdupq_n_s16(&#32;-&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;0.71414f*4096.0f+0.5f));
3756 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cb_const0&#32;=&#32;vdupq_n_s16(&#32;-&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;0.34414f*4096.0f+0.5f));
3757 &#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cb_const1&#32;=&#32;vdupq_n_s16(&#32;&#32;&#32;(<emphasis role="keywordtype">short</emphasis>)&#32;(&#32;1.77200f*4096.0f+0.5f));
3758 
3759 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i+7&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;i&#32;+=&#32;8)&#32;{
3760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load</emphasis>
3761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;y_bytes&#32;&#32;=&#32;vld1_u8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;i);
3762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;cr_bytes&#32;=&#32;vld1_u8(pcr&#32;+&#32;i);
3763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8x8_t&#32;cb_bytes&#32;=&#32;vld1_u8(pcb&#32;+&#32;i);
3764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int8x8_t&#32;cr_biased&#32;=&#32;vreinterpret_s8_u8(vsub_u8(cr_bytes,&#32;signflip));
3765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int8x8_t&#32;cb_biased&#32;=&#32;vreinterpret_s8_u8(vsub_u8(cb_bytes,&#32;signflip));
3766 
3767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;expand&#32;to&#32;s16</emphasis>
3768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;yws&#32;=&#32;vreinterpretq_s16_u16(vshll_n_u8(y_bytes,&#32;4));
3769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;crw&#32;=&#32;vshll_n_s8(cr_biased,&#32;7);
3770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cbw&#32;=&#32;vshll_n_s8(cb_biased,&#32;7);
3771 
3772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;color&#32;transform</emphasis>
3773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cr0&#32;=&#32;vqdmulhq_s16(crw,&#32;cr_const0);
3774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cb0&#32;=&#32;vqdmulhq_s16(cbw,&#32;cb_const0);
3775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cr1&#32;=&#32;vqdmulhq_s16(crw,&#32;cr_const1);
3776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;cb1&#32;=&#32;vqdmulhq_s16(cbw,&#32;cb_const1);
3777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;rws&#32;=&#32;vaddq_s16(yws,&#32;cr0);
3778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;gws&#32;=&#32;vaddq_s16(vaddq_s16(yws,&#32;cb0),&#32;cr1);
3779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16x8_t&#32;bws&#32;=&#32;vaddq_s16(yws,&#32;cb1);
3780 
3781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;undo&#32;scaling,&#32;round,&#32;convert&#32;to&#32;byte</emphasis>
3782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8x8x4_t&#32;o;
3783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.val[0]&#32;=&#32;vqrshrun_n_s16(rws,&#32;4);
3784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.val[1]&#32;=&#32;vqrshrun_n_s16(gws,&#32;4);
3785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.val[2]&#32;=&#32;vqrshrun_n_s16(bws,&#32;4);
3786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.val[3]&#32;=&#32;vdup_n_u8(255);
3787 
3788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;store,&#32;interleaving&#32;r/g/b/a</emphasis>
3789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vst4_u8(out,&#32;o);
3790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;8*4;
3791 &#32;&#32;&#32;&#32;&#32;&#32;}
3792 &#32;&#32;&#32;}
3793 <emphasis role="preprocessor">#endif</emphasis>
3794 
3795 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++i)&#32;{
3796 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y_fixed&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i]&#32;&lt;&lt;&#32;20)&#32;+&#32;(1&lt;&lt;19);&#32;<emphasis role="comment">//&#32;rounding</emphasis>
3797 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
3798 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cr&#32;=&#32;pcr[i]&#32;-&#32;128;
3799 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cb&#32;=&#32;pcb[i]&#32;-&#32;128;
3800 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;y_fixed&#32;+&#32;cr*&#32;stbi__float2fixed(1.40200f);
3801 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;y_fixed&#32;+&#32;cr*-stbi__float2fixed(0.71414f)&#32;+&#32;((cb*-stbi__float2fixed(0.34414f))&#32;&amp;&#32;0xffff0000);
3802 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;y_fixed&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;&#32;&#32;cb*&#32;stbi__float2fixed(1.77200f);
3803 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&gt;=&#32;20;
3804 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&gt;&gt;=&#32;20;
3805 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;&gt;=&#32;20;
3806 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;255;&#32;}
3807 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;255;&#32;}
3808 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">unsigned</emphasis>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;&#32;255)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&lt;&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;0;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;255;&#32;}
3809 &#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
3810 &#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>;
3811 &#32;&#32;&#32;&#32;&#32;&#32;out[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
3812 &#32;&#32;&#32;&#32;&#32;&#32;out[3]&#32;=&#32;255;
3813 &#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
3814 &#32;&#32;&#32;}
3815 }
3816 <emphasis role="preprocessor">#endif</emphasis>
3817 
3818 <emphasis role="comment">//&#32;set&#32;up&#32;the&#32;kernels</emphasis>
3819 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__setup_jpeg(stbi__jpeg&#32;*j)
3820 {
3821 &#32;&#32;&#32;j-&gt;idct_block_kernel&#32;=&#32;stbi__idct_block;
3822 &#32;&#32;&#32;j-&gt;YCbCr_to_RGB_kernel&#32;=&#32;stbi__YCbCr_to_RGB_row;
3823 &#32;&#32;&#32;j-&gt;resample_row_hv_2_kernel&#32;=&#32;stbi__resample_row_hv_2;
3824 
3825 <emphasis role="preprocessor">#ifdef&#32;STBI_SSE2</emphasis>
3826 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__sse2_available())&#32;{
3827 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;idct_block_kernel&#32;=&#32;stbi__idct_simd;
3828 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;YCbCr_to_RGB_kernel&#32;=&#32;stbi__YCbCr_to_RGB_simd;
3829 &#32;&#32;&#32;&#32;&#32;&#32;j-&gt;resample_row_hv_2_kernel&#32;=&#32;stbi__resample_row_hv_2_simd;
3830 &#32;&#32;&#32;}
3831 <emphasis role="preprocessor">#endif</emphasis>
3832 
3833 <emphasis role="preprocessor">#ifdef&#32;STBI_NEON</emphasis>
3834 &#32;&#32;&#32;j-&gt;idct_block_kernel&#32;=&#32;stbi__idct_simd;
3835 &#32;&#32;&#32;j-&gt;YCbCr_to_RGB_kernel&#32;=&#32;stbi__YCbCr_to_RGB_simd;
3836 &#32;&#32;&#32;j-&gt;resample_row_hv_2_kernel&#32;=&#32;stbi__resample_row_hv_2_simd;
3837 <emphasis role="preprocessor">#endif</emphasis>
3838 }
3839 
3840 <emphasis role="comment">//&#32;clean&#32;up&#32;the&#32;temporary&#32;component&#32;buffers</emphasis>
3841 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__cleanup_jpeg(stbi__jpeg&#32;*j)
3842 {
3843 &#32;&#32;&#32;stbi__free_jpeg_components(j,&#32;j-&gt;s-&gt;img_n,&#32;0);
3844 }
3845 
3846 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
3847 {
3848 &#32;&#32;&#32;resample_row_func&#32;resample;
3849 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*line0,*line1;
3850 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hs,vs;&#32;&#32;&#32;<emphasis role="comment">//&#32;expansion&#32;factor&#32;in&#32;each&#32;axis</emphasis>
3851 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;w_lores;&#32;<emphasis role="comment">//&#32;horizontal&#32;pixels&#32;pre-expansion</emphasis>
3852 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ystep;&#32;&#32;&#32;<emphasis role="comment">//&#32;how&#32;far&#32;through&#32;vertical&#32;expansion&#32;we&#32;are</emphasis>
3853 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ypos;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;which&#32;pre-expansion&#32;row&#32;we&apos;re&#32;on</emphasis>
3854 }&#32;stbi__resample;
3855 
3856 <emphasis role="comment">//&#32;fast&#32;0..255&#32;*&#32;0..255&#32;=&gt;&#32;0..255&#32;rounded&#32;multiplication</emphasis>
3857 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__blinn_8x8(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)
3858 {
3859 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;128;
3860 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;((t&#32;+&#32;(t&#32;&gt;&gt;8))&#32;&gt;&gt;&#32;8);
3861 }
3862 
3863 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*load_jpeg_image(stbi__jpeg&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*out_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*out_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
3864 {
3865 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;decode_n,&#32;is_rgb;
3866 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;make&#32;stbi__cleanup_jpeg&#32;safe</emphasis>
3867 
3868 &#32;&#32;&#32;<emphasis role="comment">//&#32;validate&#32;req_comp</emphasis>
3869 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&lt;&#32;0&#32;||&#32;req_comp&#32;&gt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;req_comp&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Internal&#32;error&quot;</emphasis>);
3870 
3871 &#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;a&#32;jpeg&#32;image&#32;from&#32;whichever&#32;source,&#32;but&#32;leave&#32;in&#32;YCbCr&#32;format</emphasis>
3872 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__decode_jpeg_image(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>))&#32;{&#32;stbi__cleanup_jpeg(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;}
3873 
3874 &#32;&#32;&#32;<emphasis role="comment">//&#32;determine&#32;actual&#32;number&#32;of&#32;components&#32;to&#32;generate</emphasis>
3875 &#32;&#32;&#32;n&#32;=&#32;req_comp&#32;?&#32;req_comp&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;&gt;=&#32;3&#32;?&#32;3&#32;:&#32;1;
3876 
3877 &#32;&#32;&#32;is_rgb&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;3&#32;&amp;&amp;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;rgb&#32;==&#32;3&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;==&#32;0&#32;&amp;&amp;&#32;!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;jfif));
3878 
3879 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;3&#32;&amp;&amp;&#32;n&#32;&lt;&#32;3&#32;&amp;&amp;&#32;!is_rgb)
3880 &#32;&#32;&#32;&#32;&#32;&#32;decode_n&#32;=&#32;1;
3881 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3882 &#32;&#32;&#32;&#32;&#32;&#32;decode_n&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n;
3883 
3884 &#32;&#32;&#32;<emphasis role="comment">//&#32;nothing&#32;to&#32;do&#32;if&#32;no&#32;components&#32;requested;&#32;check&#32;this&#32;now&#32;to&#32;avoid</emphasis>
3885 &#32;&#32;&#32;<emphasis role="comment">//&#32;accessing&#32;uninitialized&#32;coutput[0]&#32;later</emphasis>
3886 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(decode_n&#32;&lt;=&#32;0)&#32;{&#32;stbi__cleanup_jpeg(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;}
3887 
3888 &#32;&#32;&#32;<emphasis role="comment">//&#32;resample&#32;and&#32;color-convert</emphasis>
3889 &#32;&#32;&#32;{
3890 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
3891 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
3892 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*output;
3893 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*coutput[4]&#32;=&#32;{&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
3894 
3895 &#32;&#32;&#32;&#32;&#32;&#32;stbi__resample&#32;res_comp[4];
3896 
3897 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;decode_n;&#32;++k)&#32;{
3898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__resample&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;&amp;res_comp[k];
3899 
3900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;allocate&#32;line&#32;buffer&#32;big&#32;enough&#32;for&#32;upsampling&#32;off&#32;the&#32;edges</emphasis>
3901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with&#32;upsample&#32;factor&#32;of&#32;4</emphasis>
3902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].linebuf&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x&#32;+&#32;3);
3903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].linebuf)&#32;{&#32;stbi__cleanup_jpeg(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);&#32;}
3904 
3905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_h_max&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].h;
3906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_v_max&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].v;
3907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ystep&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;&gt;&gt;&#32;1;
3908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w_lores&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs-1)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs;
3909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ypos&#32;&#32;&#32;&#32;=&#32;0;
3910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line0&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line1&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].data;
3911 
3912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs&#32;==&#32;1&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;==&#32;1)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample&#32;=&#32;resample_row_1;
3913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs&#32;==&#32;1&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;==&#32;2)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample&#32;=&#32;stbi__resample_row_v_2;
3914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs&#32;==&#32;2&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;==&#32;1)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample&#32;=&#32;stbi__resample_row_h_2;
3915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs&#32;==&#32;2&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;==&#32;2)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;resample_row_hv_2_kernel;
3916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample&#32;=&#32;stbi__resample_row_generic;
3917 &#32;&#32;&#32;&#32;&#32;&#32;}
3918 
3919 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;can&apos;t&#32;error&#32;after&#32;this&#32;so,&#32;this&#32;is&#32;safe</emphasis>
3920 &#32;&#32;&#32;&#32;&#32;&#32;output&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_y,&#32;1);
3921 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!output)&#32;{&#32;stbi__cleanup_jpeg(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);&#32;}
3922 
3923 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;go&#32;ahead&#32;and&#32;resample</emphasis>
3924 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_y;&#32;++j)&#32;{
3925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out&#32;=&#32;output&#32;+&#32;n&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x&#32;*&#32;j;
3926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;decode_n;&#32;++k)&#32;{
3927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__resample&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;&amp;res_comp[k];
3928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y_bot&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ystep&#32;&gt;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs&#32;&gt;&gt;&#32;1);
3929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coutput[k]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;resample(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].linebuf,
3930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y_bot&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line1&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line0,
3931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y_bot&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line0&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line1,
3932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;w_lores,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;hs);
3933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ystep&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;vs)&#32;{
3934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ystep&#32;=&#32;0;
3935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line0&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line1;
3936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;ypos&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].y)
3937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>-&gt;line1&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;img_comp[k].w2;
3938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&gt;=&#32;3)&#32;{
3941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;coutput[0];
3942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;3)&#32;{
3943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_rgb)&#32;{
3944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
3945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i];
3946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;coutput[1][i];
3947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[2]&#32;=&#32;coutput[2][i];
3948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[3]&#32;=&#32;255;
3949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
3950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;YCbCr_to_RGB_kernel(out,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;coutput[1],&#32;coutput[2],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x,&#32;n);
3953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;4)&#32;{
3955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;==&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;CMYK</emphasis>
3956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
3957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;m&#32;=&#32;coutput[3][i];
3958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;stbi__blinn_8x8(coutput[0][i],&#32;m);
3959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;stbi__blinn_8x8(coutput[1][i],&#32;m);
3960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[2]&#32;=&#32;stbi__blinn_8x8(coutput[2][i],&#32;m);
3961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[3]&#32;=&#32;255;
3962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
3963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;==&#32;2)&#32;{&#32;<emphasis role="comment">//&#32;YCCK</emphasis>
3965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;YCbCr_to_RGB_kernel(out,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;coutput[1],&#32;coutput[2],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x,&#32;n);
3966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
3967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;m&#32;=&#32;coutput[3][i];
3968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;stbi__blinn_8x8(255&#32;-&#32;out[0],&#32;m);
3969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;stbi__blinn_8x8(255&#32;-&#32;out[1],&#32;m);
3970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[2]&#32;=&#32;stbi__blinn_8x8(255&#32;-&#32;out[2],&#32;m);
3971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
3972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;YCbCr&#32;+&#32;alpha?&#32;&#32;Ignore&#32;the&#32;fourth&#32;channel&#32;for&#32;now</emphasis>
3974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;YCbCr_to_RGB_kernel(out,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;coutput[1],&#32;coutput[2],&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x,&#32;n);
3975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
3977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
3978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;out[1]&#32;=&#32;out[2]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i];
3979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[3]&#32;=&#32;255;&#32;<emphasis role="comment">//&#32;not&#32;used&#32;if&#32;n==3</emphasis>
3980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
3981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_rgb)&#32;{
3984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;1)
3985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)
3986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*out++&#32;=&#32;stbi__compute_y(coutput[0][i],&#32;coutput[1][i],&#32;coutput[2][i]);
3987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
3988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i,&#32;out&#32;+=&#32;2)&#32;{
3989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;stbi__compute_y(coutput[0][i],&#32;coutput[1][i],&#32;coutput[2][i]);
3990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;255;
3991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;4&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;==&#32;0)&#32;{
3994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
3995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;m&#32;=&#32;coutput[3][i];
3996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__blinn_8x8(coutput[0][i],&#32;m);
3997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;stbi__blinn_8x8(coutput[1][i],&#32;m);
3998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;stbi__blinn_8x8(coutput[2][i],&#32;m);
3999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;stbi__compute_y(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
4000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;255;
4001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
4002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;==&#32;4&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;app14_color_transform&#32;==&#32;2)&#32;{
4004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{
4005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[0]&#32;=&#32;stbi__blinn_8x8(255&#32;-&#32;coutput[0][i],&#32;coutput[3][i]);
4006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[1]&#32;=&#32;255;
4007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;+=&#32;n;
4008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;coutput[0];
4011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;1)
4012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;out[i]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i];
4013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
4014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;&#32;++i)&#32;{&#32;*out++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>[i];&#32;*out++&#32;=&#32;255;&#32;}
4015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4017 &#32;&#32;&#32;&#32;&#32;&#32;}
4018 &#32;&#32;&#32;&#32;&#32;&#32;stbi__cleanup_jpeg(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
4019 &#32;&#32;&#32;&#32;&#32;&#32;*out_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_x;
4020 &#32;&#32;&#32;&#32;&#32;&#32;*out_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_y;
4021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s-&gt;img_n&#32;&gt;=&#32;3&#32;?&#32;3&#32;:&#32;1;&#32;<emphasis role="comment">//&#32;report&#32;original&#32;components,&#32;not&#32;output</emphasis>
4022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;output;
4023 &#32;&#32;&#32;}
4024 }
4025 
4026 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__jpeg_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
4027 {
4028 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4029 &#32;&#32;&#32;stbi__jpeg*&#32;j&#32;=&#32;(stbi__jpeg*)&#32;stbi__malloc(<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg));
4030 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!j)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4031 &#32;&#32;&#32;memset(j,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg));
4032 &#32;&#32;&#32;STBI_NOTUSED(ri);
4033 &#32;&#32;&#32;j-&gt;s&#32;=&#32;s;
4034 &#32;&#32;&#32;stbi__setup_jpeg(j);
4035 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;load_jpeg_image(j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp);
4036 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(j);
4037 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4038 }
4039 
4040 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_test(stbi__context&#32;*s)
4041 {
4042 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
4043 &#32;&#32;&#32;stbi__jpeg*&#32;j&#32;=&#32;(stbi__jpeg*)stbi__malloc(<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg));
4044 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!j)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4045 &#32;&#32;&#32;memset(j,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg));
4046 &#32;&#32;&#32;j-&gt;s&#32;=&#32;s;
4047 &#32;&#32;&#32;stbi__setup_jpeg(j);
4048 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__decode_jpeg_header(j,&#32;STBI__SCAN_type);
4049 &#32;&#32;&#32;stbi__rewind(s);
4050 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(j);
4051 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
4052 }
4053 
4054 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_info_raw(stbi__jpeg&#32;*j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
4055 {
4056 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__decode_jpeg_header(j,&#32;STBI__SCAN_header))&#32;{
4057 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;j-&gt;s&#32;);
4058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4059 &#32;&#32;&#32;}
4060 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;j-&gt;s-&gt;img_x;
4061 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;j-&gt;s-&gt;img_y;
4062 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;j-&gt;s-&gt;img_n&#32;&gt;=&#32;3&#32;?&#32;3&#32;:&#32;1;
4063 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4064 }
4065 
4066 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__jpeg_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
4067 {
4068 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4069 &#32;&#32;&#32;stbi__jpeg*&#32;j&#32;=&#32;(stbi__jpeg*)&#32;(stbi__malloc(<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg)));
4070 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!j)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4071 &#32;&#32;&#32;memset(j,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(stbi__jpeg));
4072 &#32;&#32;&#32;j-&gt;s&#32;=&#32;s;
4073 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__jpeg_info_raw(j,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
4074 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(j);
4075 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
4076 }
4077 <emphasis role="preprocessor">#endif</emphasis>
4078 
4079 <emphasis role="comment">//&#32;public&#32;domain&#32;zlib&#32;decode&#32;&#32;&#32;&#32;v0.2&#32;&#32;Sean&#32;Barrett&#32;2006-11-18</emphasis>
4080 <emphasis role="comment">//&#32;&#32;&#32;&#32;simple&#32;implementation</emphasis>
4081 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;all&#32;input&#32;must&#32;be&#32;provided&#32;in&#32;an&#32;upfront&#32;buffer</emphasis>
4082 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;all&#32;output&#32;is&#32;written&#32;to&#32;a&#32;single&#32;output&#32;buffer&#32;(can&#32;malloc/realloc)</emphasis>
4083 <emphasis role="comment">//&#32;&#32;&#32;&#32;performance</emphasis>
4084 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;fast&#32;huffman</emphasis>
4085 
4086 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_ZLIB</emphasis>
4087 
4088 <emphasis role="comment">//&#32;fast-way&#32;is&#32;faster&#32;to&#32;check&#32;than&#32;jpeg&#32;huffman,&#32;but&#32;slow&#32;way&#32;is&#32;slower</emphasis>
4089 <emphasis role="preprocessor">#define&#32;STBI__ZFAST_BITS&#32;&#32;9&#32;</emphasis><emphasis role="comment">//&#32;accelerate&#32;all&#32;cases&#32;in&#32;default&#32;tables</emphasis>
4090 <emphasis role="preprocessor">#define&#32;STBI__ZFAST_MASK&#32;&#32;((1&#32;&lt;&lt;&#32;STBI__ZFAST_BITS)&#32;-&#32;1)</emphasis>
4091 <emphasis role="preprocessor">#define&#32;STBI__ZNSYMS&#32;288&#32;</emphasis><emphasis role="comment">//&#32;number&#32;of&#32;symbols&#32;in&#32;literal/length&#32;alphabet</emphasis>
4092 
4093 <emphasis role="comment">//&#32;zlib-style&#32;huffman&#32;encoding</emphasis>
4094 <emphasis role="comment">//&#32;(jpegs&#32;packs&#32;from&#32;left,&#32;zlib&#32;from&#32;right,&#32;so&#32;can&apos;t&#32;share&#32;code)</emphasis>
4095 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
4096 {
4097 &#32;&#32;&#32;stbi__uint16&#32;fast[1&#32;&lt;&lt;&#32;STBI__ZFAST_BITS];
4098 &#32;&#32;&#32;stbi__uint16&#32;firstcode[16];
4099 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxcode[17];
4100 &#32;&#32;&#32;stbi__uint16&#32;firstsymbol[16];
4101 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>[STBI__ZNSYMS];
4102 &#32;&#32;&#32;stbi__uint16&#32;<link linkend="_classvalue">value</link>[STBI__ZNSYMS];
4103 }&#32;stbi__zhuffman;
4104 
4105 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bitreverse16(<emphasis role="keywordtype">int</emphasis>&#32;n)
4106 {
4107 &#32;&#32;n&#32;=&#32;((n&#32;&amp;&#32;0xAAAA)&#32;&gt;&gt;&#32;&#32;1)&#32;|&#32;((n&#32;&amp;&#32;0x5555)&#32;&lt;&lt;&#32;1);
4108 &#32;&#32;n&#32;=&#32;((n&#32;&amp;&#32;0xCCCC)&#32;&gt;&gt;&#32;&#32;2)&#32;|&#32;((n&#32;&amp;&#32;0x3333)&#32;&lt;&lt;&#32;2);
4109 &#32;&#32;n&#32;=&#32;((n&#32;&amp;&#32;0xF0F0)&#32;&gt;&gt;&#32;&#32;4)&#32;|&#32;((n&#32;&amp;&#32;0x0F0F)&#32;&lt;&lt;&#32;4);
4110 &#32;&#32;n&#32;=&#32;((n&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;&#32;8)&#32;|&#32;((n&#32;&amp;&#32;0x00FF)&#32;&lt;&lt;&#32;8);
4111 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;n;
4112 }
4113 
4114 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bit_reverse(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
4115 {
4116 &#32;&#32;&#32;STBI_ASSERT(bits&#32;&lt;=&#32;16);
4117 &#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;bit&#32;reverse&#32;n&#32;bits,&#32;reverse&#32;16&#32;and&#32;shift</emphasis>
4118 &#32;&#32;&#32;<emphasis role="comment">//&#32;e.g.&#32;11&#32;bits,&#32;bit&#32;reverse&#32;and&#32;shift&#32;away&#32;5</emphasis>
4119 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__bitreverse16(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)&#32;&gt;&gt;&#32;(16-bits);
4120 }
4121 
4122 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zbuild_huffman(stbi__zhuffman&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*sizelist,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>)
4123 {
4124 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,k=0;
4125 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;code,&#32;next_code[16],&#32;sizes[17];
4126 
4127 &#32;&#32;&#32;<emphasis role="comment">//&#32;DEFLATE&#32;spec&#32;for&#32;generating&#32;codes</emphasis>
4128 &#32;&#32;&#32;memset(sizes,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sizes));
4129 &#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast));
4130 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>;&#32;++i)
4131 &#32;&#32;&#32;&#32;&#32;&#32;++sizes[sizelist[i]];
4132 &#32;&#32;&#32;sizes[0]&#32;=&#32;0;
4133 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;16;&#32;++i)
4134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sizes[i]&#32;&gt;&#32;(1&#32;&lt;&lt;&#32;i))
4135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;sizes&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4136 &#32;&#32;&#32;code&#32;=&#32;0;
4137 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;16;&#32;++i)&#32;{
4138 &#32;&#32;&#32;&#32;&#32;&#32;next_code[i]&#32;=&#32;code;
4139 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstcode[i]&#32;=&#32;(stbi__uint16)&#32;code;
4140 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstsymbol[i]&#32;=&#32;(stbi__uint16)&#32;k;
4141 &#32;&#32;&#32;&#32;&#32;&#32;code&#32;=&#32;(code&#32;+&#32;sizes[i]);
4142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sizes[i])
4143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code-1&#32;&gt;=&#32;(1&#32;&lt;&lt;&#32;i))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4144 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;maxcode[i]&#32;=&#32;code&#32;&lt;&lt;&#32;(16-i);&#32;<emphasis role="comment">//&#32;preshift&#32;for&#32;inner&#32;loop</emphasis>
4145 &#32;&#32;&#32;&#32;&#32;&#32;code&#32;&lt;&lt;=&#32;1;
4146 &#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;sizes[i];
4147 &#32;&#32;&#32;}
4148 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;maxcode[16]&#32;=&#32;0x10000;&#32;<emphasis role="comment">//&#32;sentinel</emphasis>
4149 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abb50fc1ead3a02a46fb52daa2045f95c">num</link>;&#32;++i)&#32;{
4150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;sizelist[i];
4151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s)&#32;{
4152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;next_code[s]&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstcode[s]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstsymbol[s];
4153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;fastv&#32;=&#32;(stbi__uint16)&#32;((s&#32;&lt;&lt;&#32;9)&#32;|&#32;i);
4154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;size&#32;[c]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;&#32;&#32;&#32;)&#32;s;
4155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;value[c]&#32;=&#32;(stbi__uint16)&#32;i;
4156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&lt;=&#32;STBI__ZFAST_BITS)&#32;{
4157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;stbi__bit_reverse(next_code[s],s);
4158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&lt;&#32;(1&#32;&lt;&lt;&#32;STBI__ZFAST_BITS))&#32;{
4159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast[j]&#32;=&#32;fastv;
4160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;+=&#32;(1&#32;&lt;&lt;&#32;s);
4161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++next_code[s];
4164 &#32;&#32;&#32;&#32;&#32;&#32;}
4165 &#32;&#32;&#32;}
4166 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4167 }
4168 
4169 <emphasis role="comment">//&#32;zlib-from-memory&#32;implementation&#32;for&#32;PNG&#32;reading</emphasis>
4170 <emphasis role="comment">//&#32;&#32;&#32;&#32;because&#32;PNG&#32;allows&#32;splitting&#32;the&#32;zlib&#32;stream&#32;arbitrarily,</emphasis>
4171 <emphasis role="comment">//&#32;&#32;&#32;&#32;and&#32;it&apos;s&#32;annoying&#32;structurally&#32;to&#32;have&#32;PNG&#32;call&#32;ZLIB&#32;call&#32;PNG,</emphasis>
4172 <emphasis role="comment">//&#32;&#32;&#32;&#32;we&#32;require&#32;PNG&#32;read&#32;all&#32;the&#32;IDATs&#32;and&#32;combine&#32;them&#32;into&#32;a&#32;single</emphasis>
4173 <emphasis role="comment">//&#32;&#32;&#32;&#32;memory&#32;buffer</emphasis>
4174 
4175 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
4176 {
4177 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*zbuffer,&#32;*zbuffer_end;
4178 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_bits;
4179 &#32;&#32;&#32;stbi__uint32&#32;code_buffer;
4180 
4181 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zout;
4182 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zout_start;
4183 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zout_end;
4184 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;z_expandable;
4185 
4186 &#32;&#32;&#32;stbi__zhuffman&#32;z_length,&#32;z_distance;
4187 }&#32;stbi__zbuf;
4188 
4189 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zeof(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
4190 {
4191 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zbuffer&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zbuffer_end);
4192 }
4193 
4194 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__zget8(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
4195 {
4196 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__zeof(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;?&#32;0&#32;:&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zbuffer++;
4197 }
4198 
4199 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__fill_bits(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
4200 {
4201 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
4202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_buffer&#32;&gt;=&#32;(1U&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits))&#32;{
4203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zbuffer&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zbuffer_end;&#32;&#32;<emphasis role="comment">/*&#32;treat&#32;this&#32;as&#32;EOF&#32;so&#32;we&#32;fail.&#32;*/</emphasis>
4204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
4205 &#32;&#32;&#32;&#32;&#32;&#32;}
4206 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_buffer&#32;|=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;stbi__zget8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits;
4207 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits&#32;+=&#32;8;
4208 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits&#32;&lt;=&#32;24);
4209 }
4210 
4211 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zreceive(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
4212 {
4213 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
4214 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits&#32;&lt;&#32;n)&#32;stbi__fill_bits(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
4215 &#32;&#32;&#32;k&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_buffer&#32;&amp;&#32;((1&#32;&lt;&lt;&#32;n)&#32;-&#32;1);
4216 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;code_buffer&#32;&gt;&gt;=&#32;n;
4217 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;num_bits&#32;-=&#32;n;
4218 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
4219 }
4220 
4221 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zhuffman_decode_slowpath(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;stbi__zhuffman&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
4222 {
4223 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,s,k;
4224 &#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;resolved&#32;by&#32;fast&#32;table,&#32;so&#32;compute&#32;it&#32;the&#32;slow&#32;way</emphasis>
4225 &#32;&#32;&#32;<emphasis role="comment">//&#32;use&#32;jpeg&#32;approach,&#32;which&#32;requires&#32;MSbits&#32;at&#32;top</emphasis>
4226 &#32;&#32;&#32;k&#32;=&#32;stbi__bit_reverse(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer,&#32;16);
4227 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(s=STBI__ZFAST_BITS+1;&#32;;&#32;++s)
4228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&lt;&#32;z-&gt;maxcode[s])
4229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
4230 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;&gt;=&#32;16)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;<emphasis role="comment">//&#32;invalid&#32;code!</emphasis>
4231 &#32;&#32;&#32;<emphasis role="comment">//&#32;code&#32;size&#32;is&#32;s,&#32;so:</emphasis>
4232 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;(k&#32;&gt;&gt;&#32;(16-s))&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstcode[s]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;firstsymbol[s];
4233 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;=&#32;STBI__ZNSYMS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;<emphasis role="comment">//&#32;some&#32;data&#32;was&#32;corrupt&#32;somewhere!</emphasis>
4234 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;size[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>]&#32;!=&#32;s)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;&#32;<emphasis role="comment">//&#32;was&#32;originally&#32;an&#32;assert,&#32;but&#32;report&#32;failure&#32;instead.</emphasis>
4235 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;&gt;&gt;=&#32;s;
4236 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;-=&#32;s;
4237 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;value[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>];
4238 }
4239 
4240 stbi_inline&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zhuffman_decode(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;stbi__zhuffman&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
4241 {
4242 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,s;
4243 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;&lt;&#32;16)&#32;{
4244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__zeof(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;{
4245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;&#32;&#32;<emphasis role="comment">/*&#32;report&#32;error&#32;for&#32;unexpected&#32;end&#32;of&#32;data.&#32;*/</emphasis>
4246 &#32;&#32;&#32;&#32;&#32;&#32;}
4247 &#32;&#32;&#32;&#32;&#32;&#32;stbi__fill_bits(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4248 &#32;&#32;&#32;}
4249 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;fast[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;&amp;&#32;STBI__ZFAST_MASK];
4250 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>)&#32;{
4251 &#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&gt;&gt;&#32;9;
4252 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;&gt;&gt;=&#32;s;
4253 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;-=&#32;s;
4254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;&amp;&#32;511;
4255 &#32;&#32;&#32;}
4256 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__zhuffman_decode_slowpath(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
4257 }
4258 
4259 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zexpand(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zout,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;make&#32;room&#32;for&#32;n&#32;bytes</emphasis>
4260 {
4261 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*q;
4262 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cur,&#32;limit,&#32;old_limit;
4263 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout&#32;=&#32;zout;
4264 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;z_expandable)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;output&#32;buffer&#32;limit&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4265 &#32;&#32;&#32;cur&#32;&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_start);
4266 &#32;&#32;&#32;limit&#32;=&#32;old_limit&#32;=&#32;(unsigned)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_end&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_start);
4267 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(UINT_MAX&#32;-&#32;cur&#32;&lt;&#32;(<emphasis role="keywordtype">unsigned</emphasis>)&#32;n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4268 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(cur&#32;+&#32;n&#32;&gt;&#32;limit)&#32;{
4269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limit&#32;&gt;&#32;UINT_MAX&#32;/&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4270 &#32;&#32;&#32;&#32;&#32;&#32;limit&#32;*=&#32;2;
4271 &#32;&#32;&#32;}
4272 &#32;&#32;&#32;q&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;STBI_REALLOC_SIZED(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_start,&#32;old_limit,&#32;limit);
4273 &#32;&#32;&#32;STBI_NOTUSED(old_limit);
4274 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(q&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4275 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_start&#32;=&#32;q;
4276 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;q&#32;+&#32;cur;
4277 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;zout_end&#32;&#32;&#32;=&#32;q&#32;+&#32;limit;
4278 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4279 }
4280 
4281 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zlength_base[31]&#32;=&#32;{
4282 &#32;&#32;&#32;3,4,5,6,7,8,9,10,11,13,
4283 &#32;&#32;&#32;15,17,19,23,27,31,35,43,51,59,
4284 &#32;&#32;&#32;67,83,99,115,131,163,195,227,258,0,0&#32;};
4285 
4286 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zlength_extra[31]=
4287 {&#32;0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0&#32;};
4288 
4289 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zdist_base[32]&#32;=&#32;{&#32;1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,
4290 257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0};
4291 
4292 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__zdist_extra[32]&#32;=
4293 {&#32;0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13};
4294 
4295 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_huffman_block(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
4296 {
4297 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zout&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout;
4298 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
4299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__zhuffman_decode(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_length);
4300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;256)&#32;{
4301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;error&#32;in&#32;huffman&#32;codes</emphasis>
4302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zout&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_end)&#32;{
4303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zexpand(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;zout,&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zout&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout;
4305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*zout++&#32;=&#32;(char)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
4307 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p;
4309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,dist;
4310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;==&#32;256)&#32;{
4311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout&#32;=&#32;zout;
4312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;286)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;per&#32;DEFLATE,&#32;length&#32;codes&#32;286&#32;and&#32;287&#32;must&#32;not&#32;appear&#32;in&#32;compressed&#32;data</emphasis>
4315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;-=&#32;257;
4316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__zlength_base[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>];
4317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__zlength_extra[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>])&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;+=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;stbi__zlength_extra[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>]);
4318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;stbi__zhuffman_decode(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_distance);
4319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&lt;&#32;0&#32;||&#32;z&#32;&gt;=&#32;30)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;huffman&#32;code&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;per&#32;DEFLATE,&#32;distance&#32;codes&#32;30&#32;and&#32;31&#32;must&#32;not&#32;appear&#32;in&#32;compressed&#32;data</emphasis>
4320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dist&#32;=&#32;stbi__zdist_base[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>];
4321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__zdist_extra[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>])&#32;dist&#32;+=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;stbi__zdist_extra[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>]);
4322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_start&#32;&lt;&#32;dist)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;dist&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zout&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_end)&#32;{
4324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zexpand(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;zout,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zout&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout;
4326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;(zout&#32;-&#32;dist);
4328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist&#32;==&#32;1)&#32;{&#32;<emphasis role="comment">//&#32;run&#32;of&#32;one&#32;byte;&#32;common&#32;in&#32;images.</emphasis>
4329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;*p;
4330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{&#32;<emphasis role="keywordflow">do</emphasis>&#32;*zout++&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);&#32;}
4331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{&#32;<emphasis role="keywordflow">do</emphasis>&#32;*zout++&#32;=&#32;*p++;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);&#32;}
4333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4334 &#32;&#32;&#32;&#32;&#32;&#32;}
4335 &#32;&#32;&#32;}
4336 }
4337 
4338 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__compute_huffman_codes(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
4339 {
4340 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;length_dezigzag[19]&#32;=&#32;{&#32;16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15&#32;};
4341 &#32;&#32;&#32;stbi__zhuffman&#32;z_codelength;
4342 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;lencodes[286+32+137];<emphasis role="comment">//padding&#32;for&#32;maximum&#32;single&#32;op</emphasis>
4343 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;codelength_sizes[19];
4344 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,n;
4345 
4346 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hlit&#32;&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,5)&#32;+&#32;257;
4347 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hdist&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,5)&#32;+&#32;1;
4348 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hclen&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,4)&#32;+&#32;4;
4349 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ntot&#32;&#32;=&#32;hlit&#32;+&#32;hdist;
4350 
4351 &#32;&#32;&#32;memset(codelength_sizes,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(codelength_sizes));
4352 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;hclen;&#32;++i)&#32;{
4353 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,3);
4354 &#32;&#32;&#32;&#32;&#32;&#32;codelength_sizes[length_dezigzag[i]]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;s;
4355 &#32;&#32;&#32;}
4356 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zbuild_huffman(&amp;z_codelength,&#32;codelength_sizes,&#32;19))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4357 
4358 &#32;&#32;&#32;n&#32;=&#32;0;
4359 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;ntot)&#32;{
4360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;stbi__zhuffman_decode(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;&amp;z_codelength);
4361 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;&#32;0&#32;||&#32;c&#32;&gt;=&#32;19)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4362 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;&#32;16)
4363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lencodes[n++]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;c;
4364 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="_namespacestd_1a9042ae744521b1770e868813f939b4b7">fill</link>&#32;=&#32;0;
4366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;16)&#32;{
4367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,2)+3;
4368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacestd_1a9042ae744521b1770e868813f939b4b7">fill</link>&#32;=&#32;lencodes[n-1];
4370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;17)&#32;{
4371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,3)+3;
4372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;18)&#32;{
4373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,7)+11;
4374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ntot&#32;-&#32;n&#32;&lt;&#32;c)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(lencodes+n,&#32;fill,&#32;c);
4379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;c;
4380 &#32;&#32;&#32;&#32;&#32;&#32;}
4381 &#32;&#32;&#32;}
4382 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;!=&#32;ntot)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;codelengths&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4383 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zbuild_huffman(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_length,&#32;lencodes,&#32;hlit))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4384 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zbuild_huffman(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_distance,&#32;lencodes+hlit,&#32;hdist))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4385 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4386 }
4387 
4388 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_uncompressed_block(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
4389 {
4390 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;header[4];
4391 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,nlen,k;
4392 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;&amp;&#32;7)
4393 &#32;&#32;&#32;&#32;&#32;&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;&amp;&#32;7);&#32;<emphasis role="comment">//&#32;discard</emphasis>
4394 &#32;&#32;&#32;<emphasis role="comment">//&#32;drain&#32;the&#32;bit-packed&#32;data&#32;into&#32;header</emphasis>
4395 &#32;&#32;&#32;k&#32;=&#32;0;
4396 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;&gt;&#32;0)&#32;{
4397 &#32;&#32;&#32;&#32;&#32;&#32;header[k++]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;&amp;&#32;255);&#32;<emphasis role="comment">//&#32;suppress&#32;MSVC&#32;run-time&#32;check</emphasis>
4398 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;&gt;&gt;=&#32;8;
4399 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;-=&#32;8;
4400 &#32;&#32;&#32;}
4401 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;zlib&#32;corrupt&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4402 &#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;fill&#32;header&#32;the&#32;normal&#32;way</emphasis>
4403 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(k&#32;&lt;&#32;4)
4404 &#32;&#32;&#32;&#32;&#32;&#32;header[k++]&#32;=&#32;stbi__zget8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4405 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&#32;=&#32;header[1]&#32;*&#32;256&#32;+&#32;header[0];
4406 &#32;&#32;&#32;nlen&#32;=&#32;header[3]&#32;*&#32;256&#32;+&#32;header[2];
4407 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nlen&#32;!=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;^&#32;0xffff))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;zlib&#32;corrupt&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4408 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zbuffer&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zbuffer_end)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;read&#32;past&#32;buffer&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4409 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_end)
4410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zexpand(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4411 &#32;&#32;&#32;memcpy(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zbuffer,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
4412 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zbuffer&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
4413 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
4414 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4415 }
4416 
4417 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_zlib_header(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
4418 {
4419 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cmf&#32;&#32;&#32;=&#32;stbi__zget8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4420 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cm&#32;&#32;&#32;&#32;=&#32;cmf&#32;&amp;&#32;15;
4421 &#32;&#32;&#32;<emphasis role="comment">/*&#32;int&#32;cinfo&#32;=&#32;cmf&#32;&gt;&gt;&#32;4;&#32;*/</emphasis>
4422 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flg&#32;&#32;&#32;=&#32;stbi__zget8(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4423 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__zeof(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;zlib&#32;header&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;zlib&#32;spec</emphasis>
4424 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cmf*256+flg)&#32;%&#32;31&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;zlib&#32;header&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;zlib&#32;spec</emphasis>
4425 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flg&#32;&amp;&#32;32)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;preset&#32;dict&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;preset&#32;dictionary&#32;not&#32;allowed&#32;in&#32;png</emphasis>
4426 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm&#32;!=&#32;8)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;compression&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;DEFLATE&#32;required&#32;for&#32;png</emphasis>
4427 &#32;&#32;&#32;<emphasis role="comment">//&#32;window&#32;=&#32;1&#32;&lt;&lt;&#32;(8&#32;+&#32;cinfo)...&#32;but&#32;who&#32;cares,&#32;we&#32;fully&#32;buffer&#32;output</emphasis>
4428 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4429 }
4430 
4431 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__zdefault_length[STBI__ZNSYMS]&#32;=
4432 {
4433 &#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4434 &#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4435 &#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4436 &#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4437 &#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4438 &#32;&#32;&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4439 &#32;&#32;&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4440 &#32;&#32;&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,&#32;9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4441 &#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,&#32;7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8
4442 };
4443 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__zdefault_distance[32]&#32;=
4444 {
4445 &#32;&#32;&#32;5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
4446 };
4447 <emphasis role="comment">/*</emphasis>
4448 <emphasis role="comment">Init&#32;algorithm:</emphasis>
4449 <emphasis role="comment">{</emphasis>
4450 <emphasis role="comment">&#32;&#32;&#32;int&#32;i;&#32;&#32;&#32;//&#32;use&#32;&lt;=&#32;to&#32;match&#32;clearly&#32;with&#32;spec</emphasis>
4451 <emphasis role="comment">&#32;&#32;&#32;for&#32;(i=0;&#32;i&#32;&lt;=&#32;143;&#32;++i)&#32;&#32;&#32;&#32;&#32;stbi__zdefault_length[i]&#32;&#32;&#32;=&#32;8;</emphasis>
4452 <emphasis role="comment">&#32;&#32;&#32;for&#32;(&#32;&#32;&#32;;&#32;i&#32;&lt;=&#32;255;&#32;++i)&#32;&#32;&#32;&#32;&#32;stbi__zdefault_length[i]&#32;&#32;&#32;=&#32;9;</emphasis>
4453 <emphasis role="comment">&#32;&#32;&#32;for&#32;(&#32;&#32;&#32;;&#32;i&#32;&lt;=&#32;279;&#32;++i)&#32;&#32;&#32;&#32;&#32;stbi__zdefault_length[i]&#32;&#32;&#32;=&#32;7;</emphasis>
4454 <emphasis role="comment">&#32;&#32;&#32;for&#32;(&#32;&#32;&#32;;&#32;i&#32;&lt;=&#32;287;&#32;++i)&#32;&#32;&#32;&#32;&#32;stbi__zdefault_length[i]&#32;&#32;&#32;=&#32;8;</emphasis>
4455 <emphasis role="comment"></emphasis>
4456 <emphasis role="comment">&#32;&#32;&#32;for&#32;(i=0;&#32;i&#32;&lt;=&#32;&#32;31;&#32;++i)&#32;&#32;&#32;&#32;&#32;stbi__zdefault_distance[i]&#32;=&#32;5;</emphasis>
4457 <emphasis role="comment">}</emphasis>
4458 <emphasis role="comment">*/</emphasis>
4459 
4460 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_zlib(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;parse_header)
4461 {
4462 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">final</emphasis>,&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
4463 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parse_header)
4464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__parse_zlib_header(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4465 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;num_bits&#32;=&#32;0;
4466 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;code_buffer&#32;=&#32;0;
4467 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
4468 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">final</emphasis>&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,1);
4469 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;=&#32;stbi__zreceive(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,2);
4470 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;0)&#32;{
4471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__parse_uncompressed_block(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4472 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;3)&#32;{
4473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4474 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>&#32;==&#32;1)&#32;{
4476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;use&#32;fixed&#32;code&#32;lengths</emphasis>
4477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zbuild_huffman(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_length&#32;&#32;,&#32;stbi__zdefault_length&#32;&#32;,&#32;STBI__ZNSYMS))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__zbuild_huffman(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_distance,&#32;stbi__zdefault_distance,&#32;&#32;32))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__compute_huffman_codes(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__parse_huffman_block(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4483 &#32;&#32;&#32;&#32;&#32;&#32;}
4484 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<emphasis role="keyword">final</emphasis>);
4485 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4486 }
4487 
4488 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__do_zlib(stbi__zbuf&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*obuf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;olen,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;parse_header)
4489 {
4490 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_start&#32;=&#32;obuf;
4491 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;obuf;
4492 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;zout_end&#32;&#32;&#32;=&#32;obuf&#32;+&#32;olen;
4493 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;z_expandable&#32;=&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a15078bfb380de3cfbb83117d459a475b">exp</link>;
4494 
4495 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__parse_zlib(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;parse_header);
4496 }
4497 
4498 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1acba137e5310f3c0fe9bb198e4bee3dce">stbi_zlib_decode_malloc_guesssize</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;initial_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen)
4499 {
4500 &#32;&#32;&#32;stbi__zbuf&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4501 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;stbi__malloc(initial_size);
4502 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4503 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
4504 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
4505 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__do_zlib(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;p,&#32;initial_size,&#32;1,&#32;1))&#32;{
4506 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start;
4508 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4509 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4510 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4511 &#32;&#32;&#32;}
4512 }
4513 
4514 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1afec644d4e1a3cd858dfe0f9c55a1e55c">stbi_zlib_decode_malloc</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen)
4515 {
4516 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1acba137e5310f3c0fe9bb198e4bee3dce">stbi_zlib_decode_malloc_guesssize</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;16384,&#32;outlen);
4517 }
4518 
4519 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1adc3de199aa29f7370a699ad545155541">stbi_zlib_decode_malloc_guesssize_headerflag</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;initial_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen,&#32;<emphasis role="keywordtype">int</emphasis>&#32;parse_header)
4520 {
4521 &#32;&#32;&#32;stbi__zbuf&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4522 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;stbi__malloc(initial_size);
4523 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4524 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
4525 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
4526 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__do_zlib(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;p,&#32;initial_size,&#32;1,&#32;parse_header))&#32;{
4527 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4528 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start;
4529 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4530 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4532 &#32;&#32;&#32;}
4533 }
4534 
4535 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48">stbi_zlib_decode_buffer</link>(<emphasis role="keywordtype">char</emphasis>&#32;*obuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;olen,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*ibuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ilen)
4536 {
4537 &#32;&#32;&#32;stbi__zbuf&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4538 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;ibuffer;
4539 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;ibuffer&#32;+&#32;ilen;
4540 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__do_zlib(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;obuffer,&#32;olen,&#32;0,&#32;1))
4541 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4542 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
4543 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4544 }
4545 
4546 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2external_2stb__image_8h_1ad6b5cd73a89037832ee2b2872a17bd1b">stbi_zlib_decode_noheader_malloc</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*outlen)
4547 {
4548 &#32;&#32;&#32;stbi__zbuf&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4549 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;stbi__malloc(16384);
4550 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4551 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
4552 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
4553 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__do_zlib(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;p,&#32;16384,&#32;1,&#32;0))&#32;{
4554 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4555 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start;
4556 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4557 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4558 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
4559 &#32;&#32;&#32;}
4560 }
4561 
4562 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e">stbi_zlib_decode_noheader_buffer</link>(<emphasis role="keywordtype">char</emphasis>&#32;*obuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;olen,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*ibuffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ilen)
4563 {
4564 &#32;&#32;&#32;stbi__zbuf&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4565 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;ibuffer;
4566 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zbuffer_end&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;ibuffer&#32;+&#32;ilen;
4567 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__do_zlib(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;obuffer,&#32;olen,&#32;0,&#32;0))
4568 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>.zout_start);
4569 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
4570 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
4571 }
4572 <emphasis role="preprocessor">#endif</emphasis>
4573 
4574 <emphasis role="comment">//&#32;public&#32;domain&#32;&quot;baseline&quot;&#32;PNG&#32;decoder&#32;&#32;&#32;v0.10&#32;&#32;Sean&#32;Barrett&#32;2006-11-18</emphasis>
4575 <emphasis role="comment">//&#32;&#32;&#32;&#32;simple&#32;implementation</emphasis>
4576 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;only&#32;8-bit&#32;samples</emphasis>
4577 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;no&#32;CRC&#32;checking</emphasis>
4578 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;allocates&#32;lots&#32;of&#32;intermediate&#32;memory</emphasis>
4579 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;avoids&#32;problem&#32;of&#32;streaming&#32;data&#32;between&#32;subsystems</emphasis>
4580 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;avoids&#32;explicit&#32;window&#32;management</emphasis>
4581 <emphasis role="comment">//&#32;&#32;&#32;&#32;performance</emphasis>
4582 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;-&#32;uses&#32;stb_zlib,&#32;a&#32;PD&#32;zlib&#32;implementation&#32;with&#32;fast&#32;huffman&#32;decoding</emphasis>
4583 
4584 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PNG</emphasis>
4585 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
4586 {
4587 &#32;&#32;&#32;stbi__uint32&#32;<link linkend="_namespacelength">length</link>;
4588 &#32;&#32;&#32;stbi__uint32&#32;<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>;
4589 }&#32;stbi__pngchunk;
4590 
4591 <emphasis role="keyword">static</emphasis>&#32;stbi__pngchunk&#32;stbi__get_chunk_header(stbi__context&#32;*s)
4592 {
4593 &#32;&#32;&#32;stbi__pngchunk&#32;c;
4594 &#32;&#32;&#32;c.length&#32;=&#32;stbi__get32be(s);
4595 &#32;&#32;&#32;c.type&#32;&#32;&#32;=&#32;stbi__get32be(s);
4596 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
4597 }
4598 
4599 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__check_png_header(stbi__context&#32;*s)
4600 {
4601 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;png_sig[8]&#32;=&#32;{&#32;137,80,78,71,13,10,26,10&#32;};
4602 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
4603 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;8;&#32;++i)
4604 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;png_sig[i])&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;png&#32;sig&quot;</emphasis>,<emphasis role="stringliteral">&quot;Not&#32;a&#32;PNG&quot;</emphasis>);
4605 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4606 }
4607 
4608 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
4609 {
4610 &#32;&#32;&#32;stbi__context&#32;*s;
4611 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*idata,&#32;*expanded,&#32;*out;
4612 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;
4613 }&#32;stbi__png;
4614 
4615 
4616 <emphasis role="keyword">enum</emphasis>&#32;{
4617 &#32;&#32;&#32;STBI__F_none=0,
4618 &#32;&#32;&#32;STBI__F_sub=1,
4619 &#32;&#32;&#32;STBI__F_up=2,
4620 &#32;&#32;&#32;STBI__F_avg=3,
4621 &#32;&#32;&#32;STBI__F_paeth=4,
4622 &#32;&#32;&#32;<emphasis role="comment">//&#32;synthetic&#32;filters&#32;used&#32;for&#32;first&#32;scanline&#32;to&#32;avoid&#32;needing&#32;a&#32;dummy&#32;row&#32;of&#32;0s</emphasis>
4623 &#32;&#32;&#32;STBI__F_avg_first,
4624 &#32;&#32;&#32;STBI__F_paeth_first
4625 };
4626 
4627 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;first_row_filter[5]&#32;=
4628 {
4629 &#32;&#32;&#32;STBI__F_none,
4630 &#32;&#32;&#32;STBI__F_sub,
4631 &#32;&#32;&#32;STBI__F_none,
4632 &#32;&#32;&#32;STBI__F_avg_first,
4633 &#32;&#32;&#32;STBI__F_paeth_first
4634 };
4635 
4636 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__paeth(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;c)
4637 {
4638 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;-&#32;c;
4639 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pa&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
4640 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pb&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>);
4641 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pc&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>(p-c);
4642 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pa&#32;&lt;=&#32;pb&#32;&amp;&amp;&#32;pa&#32;&lt;=&#32;pc)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
4643 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pb&#32;&lt;=&#32;pc)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>;
4644 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
4645 }
4646 
4647 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;stbi__depth_scale_table[9]&#32;=&#32;{&#32;0,&#32;0xff,&#32;0x55,&#32;0,&#32;0x11,&#32;0,0,0,&#32;0x01&#32;};
4648 
4649 <emphasis role="comment">//&#32;create&#32;the&#32;png&#32;data&#32;from&#32;post-deflated&#32;data</emphasis>
4650 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__create_png_image_raw(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*raw,&#32;stbi__uint32&#32;raw_len,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_n,&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>)
4651 {
4652 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;16?&#32;2&#32;:&#32;1);
4653 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s;
4654 &#32;&#32;&#32;stbi__uint32&#32;i,j,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*out_n*bytes;
4655 &#32;&#32;&#32;stbi__uint32&#32;img_len,&#32;img_width_bytes;
4656 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
4657 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;img_n&#32;=&#32;s-&gt;img_n;&#32;<emphasis role="comment">//&#32;copy&#32;it&#32;into&#32;a&#32;local&#32;for&#32;later</emphasis>
4658 
4659 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;output_bytes&#32;=&#32;out_n*bytes;
4660 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;filter_bytes&#32;=&#32;img_n*bytes;
4661 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
4662 
4663 &#32;&#32;&#32;STBI_ASSERT(out_n&#32;==&#32;s-&gt;img_n&#32;||&#32;out_n&#32;==&#32;s-&gt;img_n+1);
4664 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;output_bytes,&#32;0);&#32;<emphasis role="comment">//&#32;extra&#32;bytes&#32;to&#32;write&#32;off&#32;the&#32;end&#32;into</emphasis>
4665 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4666 
4667 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(img_n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>,&#32;7))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4668 &#32;&#32;&#32;img_width_bytes&#32;=&#32;(((img_n&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>)&#32;+&#32;7)&#32;&gt;&gt;&#32;3);
4669 &#32;&#32;&#32;img_len&#32;=&#32;(img_width_bytes&#32;+&#32;1)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4670 
4671 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;used&#32;to&#32;check&#32;for&#32;exact&#32;match&#32;between&#32;raw_len&#32;and&#32;img_len&#32;on&#32;non-interlaced&#32;PNGs,</emphasis>
4672 &#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;issue&#32;#276&#32;reported&#32;a&#32;PNG&#32;in&#32;the&#32;wild&#32;that&#32;had&#32;extra&#32;data&#32;at&#32;the&#32;end&#32;(all&#32;zeros),</emphasis>
4673 &#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;just&#32;check&#32;for&#32;raw_len&#32;&lt;&#32;img_len&#32;always.</emphasis>
4674 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(raw_len&#32;&lt;&#32;img_len)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;not&#32;enough&#32;pixels&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4675 
4676 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
4677 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*cur&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>*j;
4678 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*prior;
4679 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>&#32;=&#32;*raw++;
4680 
4681 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>&#32;&gt;&#32;4)
4682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;filter&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4683 
4684 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;&lt;&#32;8)&#32;{
4685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(img_width_bytes&#32;&gt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;width&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
4686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*out_n&#32;-&#32;img_width_bytes;&#32;<emphasis role="comment">//&#32;store&#32;output&#32;to&#32;the&#32;rightmost&#32;img_len&#32;bytes,&#32;so&#32;we&#32;can&#32;decode&#32;in&#32;place</emphasis>
4687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filter_bytes&#32;=&#32;1;
4688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;img_width_bytes;
4689 &#32;&#32;&#32;&#32;&#32;&#32;}
4690 &#32;&#32;&#32;&#32;&#32;&#32;prior&#32;=&#32;cur&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;&#32;<emphasis role="comment">//&#32;bugfix:&#32;need&#32;to&#32;compute&#32;this&#32;after&#32;&apos;cur&#32;+=&apos;&#32;computation&#32;above</emphasis>
4691 
4692 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;first&#32;row,&#32;use&#32;special&#32;filter&#32;that&#32;doesn&apos;t&#32;sample&#32;previous&#32;row</emphasis>
4693 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>&#32;=&#32;first_row_filter[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>];
4694 
4695 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;handle&#32;first&#32;byte&#32;explicitly</emphasis>
4696 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;filter_bytes;&#32;++k)&#32;{
4697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>)&#32;{
4698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_none&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;cur[k]&#32;=&#32;raw[k];&#32;<emphasis role="keywordflow">break</emphasis>;
4699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_sub&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;cur[k]&#32;=&#32;raw[k];&#32;<emphasis role="keywordflow">break</emphasis>;
4700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_up&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;prior[k]);&#32;<emphasis role="keywordflow">break</emphasis>;
4701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_avg&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;(prior[k]&gt;&gt;1));&#32;<emphasis role="keywordflow">break</emphasis>;
4702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_paeth&#32;&#32;&#32;&#32;&#32;&#32;:&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;stbi__paeth(0,prior[k],0));&#32;<emphasis role="keywordflow">break</emphasis>;
4703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_avg_first&#32;&#32;:&#32;cur[k]&#32;=&#32;raw[k];&#32;<emphasis role="keywordflow">break</emphasis>;
4704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_paeth_first:&#32;cur[k]&#32;=&#32;raw[k];&#32;<emphasis role="keywordflow">break</emphasis>;
4705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4706 &#32;&#32;&#32;&#32;&#32;&#32;}
4707 
4708 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;8)&#32;{
4709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(img_n&#32;!=&#32;out_n)
4710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[img_n]&#32;=&#32;255;&#32;<emphasis role="comment">//&#32;first&#32;pixel</emphasis>
4711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw&#32;+=&#32;img_n;
4712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;+=&#32;out_n;
4713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prior&#32;+=&#32;out_n;
4714 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;16)&#32;{
4715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(img_n&#32;!=&#32;out_n)&#32;{
4716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[filter_bytes]&#32;&#32;&#32;=&#32;255;&#32;<emphasis role="comment">//&#32;first&#32;pixel&#32;top&#32;byte</emphasis>
4717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[filter_bytes+1]&#32;=&#32;255;&#32;<emphasis role="comment">//&#32;first&#32;pixel&#32;bottom&#32;byte</emphasis>
4718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw&#32;+=&#32;filter_bytes;
4720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;+=&#32;output_bytes;
4721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prior&#32;+=&#32;output_bytes;
4722 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw&#32;+=&#32;1;
4724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;+=&#32;1;
4725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prior&#32;+=&#32;1;
4726 &#32;&#32;&#32;&#32;&#32;&#32;}
4727 
4728 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;a&#32;little&#32;gross,&#32;so&#32;that&#32;we&#32;don&apos;t&#32;switch&#32;per-pixel&#32;or&#32;per-component</emphasis>
4729 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;&lt;&#32;8&#32;||&#32;img_n&#32;==&#32;out_n)&#32;{
4730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nk&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;-&#32;1)*filter_bytes;
4731 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__CASE(f)&#32;\</emphasis>
4732 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;f:&#32;&#32;&#32;&#32;&#32;\</emphasis>
4733 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(k=0;&#32;k&#32;&lt;&#32;nk;&#32;++k)</emphasis>
4734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>)&#32;{
4735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;none&quot;&#32;filter&#32;turns&#32;into&#32;a&#32;memcpy&#32;here;&#32;make&#32;that&#32;explicit.</emphasis>
4736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__F_none:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(cur,&#32;raw,&#32;nk);&#32;<emphasis role="keywordflow">break</emphasis>;
4737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_sub)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;cur[k-filter_bytes]);&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_up)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;prior[k]);&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_avg)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;((prior[k]&#32;+&#32;cur[k-filter_bytes])&gt;&gt;1));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_paeth)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;stbi__paeth(cur[k-filter_bytes],prior[k],prior[k-filter_bytes]));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_avg_first)&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;(cur[k-filter_bytes]&#32;&gt;&gt;&#32;1));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_paeth_first)&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;stbi__paeth(cur[k-filter_bytes],0,0));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4744 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#undef&#32;STBI__CASE</emphasis>
4745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw&#32;+=&#32;nk;
4746 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ASSERT(img_n+1&#32;==&#32;out_n);
4748 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;STBI__CASE(f)&#32;\</emphasis>
4749 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;f:&#32;&#32;&#32;&#32;&#32;\</emphasis>
4750 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(i=x-1;&#32;i&#32;&gt;=&#32;1;&#32;--i,&#32;cur[filter_bytes]=255,raw+=filter_bytes,cur+=output_bytes,prior+=output_bytes)&#32;\</emphasis>
4751 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(k=0;&#32;k&#32;&lt;&#32;filter_bytes;&#32;++k)</emphasis>
4752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>)&#32;{
4753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_none)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;raw[k];&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_sub)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;cur[k-&#32;output_bytes]);&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_up)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;prior[k]);&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_avg)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;((prior[k]&#32;+&#32;cur[k-&#32;output_bytes])&gt;&gt;1));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_paeth)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;stbi__paeth(cur[k-&#32;output_bytes],prior[k],prior[k-&#32;output_bytes]));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_avg_first)&#32;&#32;&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;(cur[k-&#32;output_bytes]&#32;&gt;&gt;&#32;1));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI__CASE(STBI__F_paeth_first)&#32;&#32;{&#32;cur[k]&#32;=&#32;STBI__BYTECAST(raw[k]&#32;+&#32;stbi__paeth(cur[k-&#32;output_bytes],0,0));&#32;}&#32;<emphasis role="keywordflow">break</emphasis>;
4760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4761 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#undef&#32;STBI__CASE</emphasis>
4762 
4763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;loop&#32;above&#32;sets&#32;the&#32;high&#32;byte&#32;of&#32;the&#32;pixels&apos;&#32;alpha,&#32;but&#32;for</emphasis>
4764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16&#32;bit&#32;png&#32;files&#32;we&#32;also&#32;need&#32;the&#32;low&#32;byte&#32;set.&#32;we&apos;ll&#32;do&#32;that&#32;here.</emphasis>
4765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;16)&#32;{
4766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>*j;&#32;<emphasis role="comment">//&#32;start&#32;at&#32;the&#32;beginning&#32;of&#32;the&#32;row&#32;again</emphasis>
4767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;++i,cur+=output_bytes)&#32;{
4768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[filter_bytes+1]&#32;=&#32;255;
4769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4771 &#32;&#32;&#32;&#32;&#32;&#32;}
4772 &#32;&#32;&#32;}
4773 
4774 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;make&#32;a&#32;separate&#32;pass&#32;to&#32;expand&#32;bits&#32;to&#32;pixels;&#32;for&#32;performance,</emphasis>
4775 &#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;could&#32;run&#32;two&#32;scanlines&#32;behind&#32;the&#32;above&#32;code,&#32;so&#32;it&#32;won&apos;t</emphasis>
4776 &#32;&#32;&#32;<emphasis role="comment">//&#32;intefere&#32;with&#32;filtering&#32;but&#32;will&#32;still&#32;be&#32;in&#32;the&#32;cache.</emphasis>
4777 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;&lt;&#32;8)&#32;{
4778 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
4779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*cur&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>*j;
4780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>*j&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*out_n&#32;-&#32;img_width_bytes;
4781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unpack&#32;1/2/4-bit&#32;into&#32;a&#32;8-bit&#32;buffer.&#32;allows&#32;us&#32;to&#32;keep&#32;the&#32;common&#32;8-bit&#32;path&#32;optimal&#32;at&#32;minimal&#32;cost&#32;for&#32;1/2/4-bit</emphasis>
4782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;png&#32;guarante&#32;byte&#32;alignment,&#32;if&#32;width&#32;is&#32;not&#32;multiple&#32;of&#32;8/4/2&#32;we&apos;ll&#32;decode&#32;dummy&#32;trailing&#32;data&#32;that&#32;will&#32;be&#32;skipped&#32;in&#32;the&#32;later&#32;loop</emphasis>
4783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;==&#32;0)&#32;?&#32;stbi__depth_scale_table[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>]&#32;:&#32;1;&#32;<emphasis role="comment">//&#32;scale&#32;grayscale&#32;values&#32;to&#32;0..255&#32;range</emphasis>
4784 
4785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;that&#32;the&#32;final&#32;byte&#32;might&#32;overshoot&#32;and&#32;write&#32;more&#32;data&#32;than&#32;desired.</emphasis>
4786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;can&#32;allocate&#32;enough&#32;data&#32;that&#32;this&#32;never&#32;writes&#32;out&#32;of&#32;memory,&#32;but&#32;it</emphasis>
4787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;could&#32;also&#32;overwrite&#32;the&#32;next&#32;scanline.&#32;can&#32;it&#32;overwrite&#32;non-empty&#32;data</emphasis>
4788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;the&#32;next&#32;scanline?&#32;yes,&#32;consider&#32;1-pixel-wide&#32;scanlines&#32;with&#32;1-bit-per-pixel.</emphasis>
4789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;we&#32;need&#32;to&#32;explicitly&#32;clamp&#32;the&#32;final&#32;ones</emphasis>
4790 
4791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;4)&#32;{
4792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*img_n;&#32;k&#32;&gt;=&#32;2;&#32;k-=2,&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>)&#32;{
4793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*in&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x0f);
4795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;0)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;2)&#32;{
4798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*img_n;&#32;k&#32;&gt;=&#32;4;&#32;k-=4,&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>)&#32;{
4799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;6)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;0x03);
4801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0x03);
4802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*in&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x03);
4803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;0)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;6)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;1)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;0x03);
4806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;2)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0x03);
4807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;1)&#32;{
4808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*img_n;&#32;k&#32;&gt;=&#32;8;&#32;k-=8,&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>)&#32;{
4809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;7)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;6)&#32;&amp;&#32;0x01);
4811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;0x01);
4812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;0x01);
4813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;0x01);
4814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0x01);
4815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;1)&#32;&amp;&#32;0x01);
4816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*in&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x01);
4817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;0)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;7)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
4819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;1)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;6)&#32;&amp;&#32;0x01);
4820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;2)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;0x01);
4821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;3)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;4)&#32;&amp;&#32;0x01);
4822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;4)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;0x01);
4823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;5)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0x01);
4824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;&#32;6)&#32;*cur++&#32;=&#32;<link linkend="_group__ext__matrix__transform_1gaae2f8b2080622b24b85e1096748599b6">scale</link>&#32;*&#32;((*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>&#32;&gt;&gt;&#32;1)&#32;&amp;&#32;0x01);
4825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(img_n&#32;!=&#32;out_n)&#32;{
4827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;q;
4828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;alpha&#32;=&#32;255</emphasis>
4829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>*j;
4830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(img_n&#32;==&#32;1)&#32;{
4831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(q=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>-1;&#32;q&#32;&gt;=&#32;0;&#32;--q)&#32;{
4832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*2+1]&#32;=&#32;255;
4833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*2+0]&#32;=&#32;cur[q];
4834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ASSERT(img_n&#32;==&#32;3);
4837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(q=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>-1;&#32;q&#32;&gt;=&#32;0;&#32;--q)&#32;{
4838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*4+3]&#32;=&#32;255;
4839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*4+2]&#32;=&#32;cur[q*3+2];
4840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*4+1]&#32;=&#32;cur[q*3+1];
4841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cur[q*4+0]&#32;=&#32;cur[q*3+0];
4842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4845 &#32;&#32;&#32;&#32;&#32;&#32;}
4846 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;16)&#32;{
4847 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;force&#32;the&#32;image&#32;data&#32;from&#32;big-endian&#32;to&#32;platform-native.</emphasis>
4848 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;done&#32;in&#32;a&#32;separate&#32;pass&#32;due&#32;to&#32;the&#32;decoding&#32;relying</emphasis>
4849 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;the&#32;data&#32;being&#32;untouched,&#32;but&#32;could&#32;probably&#32;be&#32;done</emphasis>
4850 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;per-line&#32;during&#32;decode&#32;if&#32;care&#32;is&#32;taken.</emphasis>
4851 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*cur&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out;
4852 &#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*cur16&#32;=&#32;(stbi__uint16*)cur;
4853 
4854 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*out_n;&#32;++i,cur16++,cur+=2)&#32;{
4855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*cur16&#32;=&#32;(cur[0]&#32;&lt;&lt;&#32;8)&#32;|&#32;cur[1];
4856 &#32;&#32;&#32;&#32;&#32;&#32;}
4857 &#32;&#32;&#32;}
4858 
4859 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4860 }
4861 
4862 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__create_png_image(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*image_data,&#32;stbi__uint32&#32;image_data_len,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;interlaced)
4863 {
4864 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;==&#32;16&#32;?&#32;2&#32;:&#32;1);
4865 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_bytes&#32;=&#32;out_n&#32;*&#32;bytes;
4866 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<emphasis role="keyword">final</emphasis>;
4867 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p;
4868 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!interlaced)
4869 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__create_png_image_raw(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;image_data,&#32;image_data_len,&#32;out_n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_y,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>);
4870 
4871 &#32;&#32;&#32;<emphasis role="comment">//&#32;de-interlacing</emphasis>
4872 &#32;&#32;&#32;<emphasis role="keyword">final</emphasis>&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_x,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_y,&#32;out_bytes,&#32;0);
4873 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keyword">final</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4874 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(p=0;&#32;p&#32;&lt;&#32;7;&#32;++p)&#32;{
4875 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xorig[]&#32;=&#32;{&#32;0,4,0,2,0,1,0&#32;};
4876 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;yorig[]&#32;=&#32;{&#32;0,0,4,0,2,0,1&#32;};
4877 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xspc[]&#32;&#32;=&#32;{&#32;8,8,4,4,2,2,1&#32;};
4878 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;yspc[]&#32;&#32;=&#32;{&#32;8,8,8,4,4,2,2&#32;};
4879 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4880 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pass1_x[4]&#32;=&#32;0,&#32;pass1_x[5]&#32;=&#32;1,&#32;pass1_x[12]&#32;=&#32;1</emphasis>
4881 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_x&#32;-&#32;xorig[p]&#32;+&#32;xspc[p]-1)&#32;/&#32;xspc[p];
4882 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_y&#32;-&#32;yorig[p]&#32;+&#32;yspc[p]-1)&#32;/&#32;yspc[p];
4883 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
4884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint32&#32;img_len&#32;=&#32;((((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_n&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>)&#32;+&#32;7)&#32;&gt;&gt;&#32;3)&#32;+&#32;1)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
4885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__create_png_image_raw(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;image_data,&#32;image_data_len,&#32;out_n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>))&#32;{
4886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<emphasis role="keyword">final</emphasis>);
4887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
4888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;&#32;++j)&#32;{
4890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;&#32;++i)&#32;{
4891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_y&#32;=&#32;j*yspc[p]+yorig[p];
4892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_x&#32;=&#32;i*xspc[p]+xorig[p];
4893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(<emphasis role="keyword">final</emphasis>&#32;+&#32;out_y*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_x*out_bytes&#32;+&#32;out_x*out_bytes,
4894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;+&#32;(j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>+i)*out_bytes,&#32;out_bytes);
4895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
4897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out);
4898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data&#32;+=&#32;img_len;
4899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image_data_len&#32;-=&#32;img_len;
4900 &#32;&#32;&#32;&#32;&#32;&#32;}
4901 &#32;&#32;&#32;}
4902 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;=&#32;<emphasis role="keyword">final</emphasis>;
4903 
4904 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4905 }
4906 
4907 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__compute_transparency(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;tc[3],&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_n)
4908 {
4909 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s;
4910 &#32;&#32;&#32;stbi__uint32&#32;i,&#32;pixel_count&#32;=&#32;s-&gt;img_x&#32;*&#32;s-&gt;img_y;
4911 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;out;
4912 
4913 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;color-based&#32;transparency,&#32;assuming&#32;we&apos;ve</emphasis>
4914 &#32;&#32;&#32;<emphasis role="comment">//&#32;already&#32;got&#32;255&#32;as&#32;the&#32;alpha&#32;value&#32;in&#32;the&#32;output</emphasis>
4915 &#32;&#32;&#32;STBI_ASSERT(out_n&#32;==&#32;2&#32;||&#32;out_n&#32;==&#32;4);
4916 
4917 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out_n&#32;==&#32;2)&#32;{
4918 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;(p[0]&#32;==&#32;tc[0]&#32;?&#32;0&#32;:&#32;255);
4920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;2;
4921 &#32;&#32;&#32;&#32;&#32;&#32;}
4922 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4923 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p[0]&#32;==&#32;tc[0]&#32;&amp;&amp;&#32;p[1]&#32;==&#32;tc[1]&#32;&amp;&amp;&#32;p[2]&#32;==&#32;tc[2])
4925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[3]&#32;=&#32;0;
4926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
4927 &#32;&#32;&#32;&#32;&#32;&#32;}
4928 &#32;&#32;&#32;}
4929 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4930 }
4931 
4932 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__compute_transparency16(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;stbi__uint16&#32;tc[3],&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_n)
4933 {
4934 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s;
4935 &#32;&#32;&#32;stbi__uint32&#32;i,&#32;pixel_count&#32;=&#32;s-&gt;img_x&#32;*&#32;s-&gt;img_y;
4936 &#32;&#32;&#32;stbi__uint16&#32;*p&#32;=&#32;(stbi__uint16*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;out;
4937 
4938 &#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;color-based&#32;transparency,&#32;assuming&#32;we&apos;ve</emphasis>
4939 &#32;&#32;&#32;<emphasis role="comment">//&#32;already&#32;got&#32;65535&#32;as&#32;the&#32;alpha&#32;value&#32;in&#32;the&#32;output</emphasis>
4940 &#32;&#32;&#32;STBI_ASSERT(out_n&#32;==&#32;2&#32;||&#32;out_n&#32;==&#32;4);
4941 
4942 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out_n&#32;==&#32;2)&#32;{
4943 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;(p[0]&#32;==&#32;tc[0]&#32;?&#32;0&#32;:&#32;65535);
4945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;2;
4946 &#32;&#32;&#32;&#32;&#32;&#32;}
4947 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4948 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p[0]&#32;==&#32;tc[0]&#32;&amp;&amp;&#32;p[1]&#32;==&#32;tc[1]&#32;&amp;&amp;&#32;p[2]&#32;==&#32;tc[2])
4950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[3]&#32;=&#32;0;
4951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
4952 &#32;&#32;&#32;&#32;&#32;&#32;}
4953 &#32;&#32;&#32;}
4954 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4955 }
4956 
4957 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__expand_png_palette(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*palette,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pal_img_n)
4958 {
4959 &#32;&#32;&#32;stbi__uint32&#32;i,&#32;pixel_count&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_x&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;s-&gt;img_y;
4960 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p,&#32;*temp_out,&#32;*orig&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out;
4961 
4962 &#32;&#32;&#32;p&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad2(pixel_count,&#32;pal_img_n,&#32;0);
4963 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
4964 
4965 &#32;&#32;&#32;<emphasis role="comment">//&#32;between&#32;here&#32;and&#32;free(out)&#32;below,&#32;exitting&#32;would&#32;leak</emphasis>
4966 &#32;&#32;&#32;temp_out&#32;=&#32;p;
4967 
4968 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_img_n&#32;==&#32;3)&#32;{
4969 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;orig[i]*4;
4971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;palette[n&#32;&#32;];
4972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;palette[n+1];
4973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;palette[n+2];
4974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;3;
4975 &#32;&#32;&#32;&#32;&#32;&#32;}
4976 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
4977 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
4978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;orig[i]*4;
4979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;palette[n&#32;&#32;];
4980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;palette[n+1];
4981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;palette[n+2];
4982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[3]&#32;=&#32;palette[n+3];
4983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
4984 &#32;&#32;&#32;&#32;&#32;&#32;}
4985 &#32;&#32;&#32;}
4986 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out);
4987 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>-&gt;out&#32;=&#32;temp_out;
4988 
4989 &#32;&#32;&#32;STBI_NOTUSED(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
4990 
4991 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
4992 }
4993 
4994 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__unpremultiply_on_load_global&#32;=&#32;0;
4995 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__de_iphone_flag_global&#32;=&#32;0;
4996 
4997 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9">stbi_set_unpremultiply_on_load</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_unpremultiply)
4998 {
4999 &#32;&#32;&#32;stbi__unpremultiply_on_load_global&#32;=&#32;flag_true_if_should_unpremultiply;
5000 }
5001 
5002 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b">stbi_convert_iphone_png_to_rgb</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_convert)
5003 {
5004 &#32;&#32;&#32;stbi__de_iphone_flag_global&#32;=&#32;flag_true_if_should_convert;
5005 }
5006 
5007 <emphasis role="preprocessor">#ifndef&#32;STBI_THREAD_LOCAL</emphasis>
5008 <emphasis role="preprocessor">#define&#32;stbi__unpremultiply_on_load&#32;&#32;stbi__unpremultiply_on_load_global</emphasis>
5009 <emphasis role="preprocessor">#define&#32;stbi__de_iphone_flag&#32;&#32;stbi__de_iphone_flag_global</emphasis>
5010 <emphasis role="preprocessor">#else</emphasis>
5011 <emphasis role="keyword">static</emphasis>&#32;STBI_THREAD_LOCAL&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__unpremultiply_on_load_local,&#32;stbi__unpremultiply_on_load_set;
5012 <emphasis role="keyword">static</emphasis>&#32;STBI_THREAD_LOCAL&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__de_iphone_flag_local,&#32;stbi__de_iphone_flag_set;
5013 
5014 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca">stbi_set_unpremultiply_on_load_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_unpremultiply)
5015 {
5016 &#32;&#32;&#32;stbi__unpremultiply_on_load_local&#32;=&#32;flag_true_if_should_unpremultiply;
5017 &#32;&#32;&#32;stbi__unpremultiply_on_load_set&#32;=&#32;1;
5018 }
5019 
5020 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aff26696e30b62a40dd00bc12415343f6">stbi_convert_iphone_png_to_rgb_thread</link>(<emphasis role="keywordtype">int</emphasis>&#32;flag_true_if_should_convert)
5021 {
5022 &#32;&#32;&#32;stbi__de_iphone_flag_local&#32;=&#32;flag_true_if_should_convert;
5023 &#32;&#32;&#32;stbi__de_iphone_flag_set&#32;=&#32;1;
5024 }
5025 
5026 <emphasis role="preprocessor">#define&#32;stbi__unpremultiply_on_load&#32;&#32;(stbi__unpremultiply_on_load_set&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
5027 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;stbi__unpremultiply_on_load_local&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
5028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;stbi__unpremultiply_on_load_global)</emphasis>
5029 <emphasis role="preprocessor">#define&#32;stbi__de_iphone_flag&#32;&#32;(stbi__de_iphone_flag_set&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
5030 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;stbi__de_iphone_flag_local&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
5031 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;stbi__de_iphone_flag_global)</emphasis>
5032 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_THREAD_LOCAL</emphasis>
5033 
5034 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__de_iphone(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
5035 {
5036 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s;
5037 &#32;&#32;&#32;stbi__uint32&#32;i,&#32;pixel_count&#32;=&#32;s-&gt;img_x&#32;*&#32;s-&gt;img_y;
5038 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;out;
5039 
5040 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_out_n&#32;==&#32;3)&#32;{&#32;&#32;<emphasis role="comment">//&#32;convert&#32;bgr&#32;to&#32;rgb</emphasis>
5041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
5042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;t&#32;=&#32;p[0];
5043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;p[2];
5044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;t;
5045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;3;
5046 &#32;&#32;&#32;&#32;&#32;&#32;}
5047 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5048 &#32;&#32;&#32;&#32;&#32;&#32;STBI_ASSERT(s-&gt;img_out_n&#32;==&#32;4);
5049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__unpremultiply_on_load)&#32;{
5050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;bgr&#32;to&#32;rgb&#32;and&#32;unpremultiply</emphasis>
5051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
5052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;p[3];
5053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;t&#32;=&#32;p[0];
5054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)&#32;{
5055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;half&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;/&#32;2;
5056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;(p[2]&#32;*&#32;255&#32;+&#32;half)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;(p[1]&#32;*&#32;255&#32;+&#32;half)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;(&#32;t&#32;&#32;&#32;*&#32;255&#32;+&#32;half)&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;p[2];
5061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;t;
5062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
5064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5065 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;bgr&#32;to&#32;rgb</emphasis>
5067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pixel_count;&#32;++i)&#32;{
5068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;t&#32;=&#32;p[0];
5069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;p[2];
5070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;t;
5071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
5072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5073 &#32;&#32;&#32;&#32;&#32;&#32;}
5074 &#32;&#32;&#32;}
5075 }
5076 
5077 <emphasis role="preprocessor">#define&#32;STBI__PNG_TYPE(a,b,c,d)&#32;&#32;(((unsigned)&#32;(a)&#32;&lt;&lt;&#32;24)&#32;+&#32;((unsigned)&#32;(b)&#32;&lt;&lt;&#32;16)&#32;+&#32;((unsigned)&#32;(c)&#32;&lt;&lt;&#32;8)&#32;+&#32;(unsigned)&#32;(d))</emphasis>
5078 
5079 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__parse_png_file(stbi__png&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scan,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
5080 {
5081 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;palette[1024],&#32;pal_img_n=0;
5082 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;has_trans=0,&#32;tc[3]={0};
5083 &#32;&#32;&#32;stbi__uint16&#32;tc16[3];
5084 &#32;&#32;&#32;stbi__uint32&#32;ioff=0,&#32;idata_limit=0,&#32;i,&#32;pal_len=0;
5085 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>=1,k,interlace=0,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>=0,&#32;is_iphone=0;
5086 &#32;&#32;&#32;stbi__context&#32;*s&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;s;
5087 
5088 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5089 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5090 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;out&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5091 
5092 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__check_png_header(s))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5093 
5094 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;==&#32;STBI__SCAN_type)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5095 
5096 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
5097 &#32;&#32;&#32;&#32;&#32;&#32;stbi__pngchunk&#32;c&#32;=&#32;stbi__get_chunk_header(s);
5098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(c.type)&#32;{
5099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;C&apos;</emphasis>,<emphasis role="charliteral">&apos;g&apos;</emphasis>,<emphasis role="charliteral">&apos;B&apos;</emphasis>,<emphasis role="charliteral">&apos;I&apos;</emphasis>):
5100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_iphone&#32;=&#32;1;
5101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;c.length);
5102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;I&apos;</emphasis>,<emphasis role="charliteral">&apos;H&apos;</emphasis>,<emphasis role="charliteral">&apos;D&apos;</emphasis>,<emphasis role="charliteral">&apos;R&apos;</emphasis>):&#32;{
5104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>;
5105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;multiple&#32;IHDR&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;=&#32;0;
5107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.length&#32;!=&#32;13)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;IHDR&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_x&#32;=&#32;stbi__get32be(s);
5109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_y&#32;=&#32;stbi__get32be(s);
5110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_y&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_x&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;=&#32;stbi__get8(s);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;!=&#32;1&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;!=&#32;2&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;!=&#32;4&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;!=&#32;8&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;!=&#32;16)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;1/2/4/8/16-bit&#32;only&quot;</emphasis>,<emphasis role="stringliteral">&quot;PNG&#32;not&#32;supported:&#32;1/2/4/8/16-bit&#32;only&quot;</emphasis>);
5113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;=&#32;stbi__get8(s);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;&gt;&#32;6)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;ctype&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;==&#32;3&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;==&#32;16)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;ctype&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;==&#32;3)&#32;pal_img_n&#32;=&#32;3;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;&amp;&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;ctype&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;&#32;=&#32;stbi__get8(s);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;comp&#32;method&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>=&#32;stbi__get8(s);&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a8bed50656d87c3eeed9d8f5e539c6b3e">filter</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;filter&#32;method&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interlace&#32;=&#32;stbi__get8(s);&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interlace&gt;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;interlace&#32;method&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!s-&gt;img_x&#32;||&#32;!s-&gt;img_y)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;0-pixel&#32;image&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pal_img_n)&#32;{
5121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;&amp;&#32;2&#32;?&#32;3&#32;:&#32;1)&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;&amp;&#32;4&#32;?&#32;1&#32;:&#32;0);
5122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((1&#32;&lt;&lt;&#32;30)&#32;/&#32;s-&gt;img_x&#32;/&#32;s-&gt;img_n&#32;&lt;&#32;s-&gt;img_y)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;too&#32;large&#32;to&#32;decode&quot;</emphasis>);
5123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;paletted,&#32;then&#32;pal_n&#32;is&#32;our&#32;final&#32;components,&#32;and</emphasis>
5125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;img_n&#32;is&#32;#&#32;components&#32;to&#32;decompress/filter.</emphasis>
5126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;1;
5127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((1&#32;&lt;&lt;&#32;30)&#32;/&#32;s-&gt;img_x&#32;/&#32;4&#32;&lt;&#32;s-&gt;img_y)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;even&#32;with&#32;SCAN_header,&#32;have&#32;to&#32;scan&#32;to&#32;see&#32;if&#32;we&#32;have&#32;a&#32;tRNS</emphasis>
5130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5132 
5133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;P&apos;</emphasis>,<emphasis role="charliteral">&apos;L&apos;</emphasis>,<emphasis role="charliteral">&apos;T&apos;</emphasis>,<emphasis role="charliteral">&apos;E&apos;</emphasis>):&#32;&#32;{
5134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;first&#32;not&#32;IHDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.length&#32;&gt;&#32;256*3)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;PLTE&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal_len&#32;=&#32;c.length&#32;/&#32;3;
5137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_len&#32;*&#32;3&#32;!=&#32;c.length)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;PLTE&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;pal_len;&#32;++i)&#32;{
5139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palette[i*4+0]&#32;=&#32;stbi__get8(s);
5140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palette[i*4+1]&#32;=&#32;stbi__get8(s);
5141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palette[i*4+2]&#32;=&#32;stbi__get8(s);
5142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palette[i*4+3]&#32;=&#32;255;
5143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5146 
5147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;t&apos;</emphasis>,<emphasis role="charliteral">&apos;R&apos;</emphasis>,<emphasis role="charliteral">&apos;N&apos;</emphasis>,<emphasis role="charliteral">&apos;S&apos;</emphasis>):&#32;{
5148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;first&#32;not&#32;IHDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;tRNS&#32;after&#32;IDAT&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_img_n)&#32;{
5151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;==&#32;STBI__SCAN_header)&#32;{&#32;s-&gt;img_n&#32;=&#32;4;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;}
5152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_len&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;tRNS&#32;before&#32;PLTE&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.length&#32;&gt;&#32;pal_len)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;tRNS&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal_img_n&#32;=&#32;4;
5155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;c.length;&#32;++i)
5156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palette[i*4+3]&#32;=&#32;stbi__get8(s);
5157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(s-&gt;img_n&#32;&amp;&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;tRNS&#32;with&#32;alpha&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.length&#32;!=&#32;(stbi__uint32)&#32;s-&gt;img_n*2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;bad&#32;tRNS&#32;len&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_trans&#32;=&#32;1;
5161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-paletted&#32;with&#32;tRNS&#32;=&#32;constant&#32;alpha.&#32;if&#32;header-scanning,&#32;we&#32;can&#32;stop&#32;now.</emphasis>
5162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;==&#32;STBI__SCAN_header)&#32;{&#32;++s-&gt;img_n;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;}
5163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;==&#32;16)&#32;{
5164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;s-&gt;img_n;&#32;++k)&#32;tc16[k]&#32;=&#32;(stbi__uint16)stbi__get16be(s);&#32;<emphasis role="comment">//&#32;copy&#32;the&#32;values&#32;as-is</emphasis>
5165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;s-&gt;img_n;&#32;++k)&#32;tc[k]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)(stbi__get16be(s)&#32;&amp;&#32;255)&#32;*&#32;stbi__depth_scale_table[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth];&#32;<emphasis role="comment">//&#32;non&#32;8-bit&#32;images&#32;will&#32;be&#32;larger</emphasis>
5167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5171 
5172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;I&apos;</emphasis>,<emphasis role="charliteral">&apos;D&apos;</emphasis>,<emphasis role="charliteral">&apos;A&apos;</emphasis>,<emphasis role="charliteral">&apos;T&apos;</emphasis>):&#32;{
5173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;first&#32;not&#32;IHDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_img_n&#32;&amp;&amp;&#32;!pal_len)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;PLTE&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;==&#32;STBI__SCAN_header)&#32;{
5176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;header&#32;scan&#32;definitely&#32;stops&#32;at&#32;first&#32;IDAT</emphasis>
5177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_img_n)
5178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;pal_img_n;
5179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.length&#32;&gt;&#32;(1u&#32;&lt;&lt;&#32;30))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;IDAT&#32;size&#32;limit&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;IDAT&#32;section&#32;larger&#32;than&#32;2^30&#32;bytes&quot;</emphasis>);
5182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)(ioff&#32;+&#32;c.length)&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)ioff)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioff&#32;+&#32;c.length&#32;&gt;&#32;idata_limit)&#32;{
5184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint32&#32;idata_limit_old&#32;=&#32;idata_limit;
5185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p;
5186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(idata_limit&#32;==&#32;0)&#32;idata_limit&#32;=&#32;c.length&#32;&gt;&#32;4096&#32;?&#32;c.length&#32;:&#32;4096;
5187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(ioff&#32;+&#32;c.length&#32;&gt;&#32;idata_limit)
5188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idata_limit&#32;*=&#32;2;
5189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NOTUSED(idata_limit_old);
5190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;STBI_REALLOC_SIZED(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata,&#32;idata_limit_old,&#32;idata_limit);&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
5191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata&#32;=&#32;p;
5192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__getn(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata+ioff,c.length))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofdata&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ioff&#32;+=&#32;c.length;
5195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5197 
5198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;STBI__PNG_TYPE(<emphasis role="charliteral">&apos;I&apos;</emphasis>,<emphasis role="charliteral">&apos;E&apos;</emphasis>,<emphasis role="charliteral">&apos;N&apos;</emphasis>,<emphasis role="charliteral">&apos;D&apos;</emphasis>):&#32;{
5199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint32&#32;raw_len,&#32;bpl;
5200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;first&#32;not&#32;IHDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scan&#32;!=&#32;STBI__SCAN_load)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;no&#32;IDAT&quot;</emphasis>,<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;initial&#32;guess&#32;for&#32;decoded&#32;data&#32;size&#32;to&#32;avoid&#32;unnecessary&#32;reallocs</emphasis>
5204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bpl&#32;=&#32;(s-&gt;img_x&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;+&#32;7)&#32;/&#32;8;&#32;<emphasis role="comment">//&#32;bytes&#32;per&#32;line,&#32;per&#32;component</emphasis>
5205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_len&#32;=&#32;bpl&#32;*&#32;s-&gt;img_y&#32;*&#32;s-&gt;img_n&#32;<emphasis role="comment">/*&#32;pixels&#32;*/</emphasis>&#32;+&#32;s-&gt;img_y&#32;<emphasis role="comment">/*&#32;filter&#32;mode&#32;per&#32;row&#32;*/</emphasis>;
5206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1adc3de199aa29f7370a699ad545155541">stbi_zlib_decode_malloc_guesssize_headerflag</link>((<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata,&#32;ioff,&#32;raw_len,&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;&amp;raw_len,&#32;!is_iphone);
5207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;zlib&#32;should&#32;set&#32;error</emphasis>
5208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata);&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;idata&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((req_comp&#32;==&#32;s-&gt;img_n+1&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;3&#32;&amp;&amp;&#32;!pal_img_n)&#32;||&#32;has_trans)
5210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_out_n&#32;=&#32;s-&gt;img_n+1;
5211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_out_n&#32;=&#32;s-&gt;img_n;
5213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__create_png_image(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded,&#32;raw_len,&#32;s-&gt;img_out_n,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>,&#32;interlace))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(has_trans)&#32;{
5215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;depth&#32;==&#32;16)&#32;{
5216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__compute_transparency16(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;tc16,&#32;s-&gt;img_out_n))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__compute_transparency(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;tc,&#32;s-&gt;img_out_n))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_iphone&#32;&amp;&amp;&#32;stbi__de_iphone_flag&#32;&amp;&amp;&#32;s-&gt;img_out_n&#32;&gt;&#32;2)
5222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__de_iphone(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
5223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pal_img_n)&#32;{
5224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pal_img_n&#32;==&#32;3&#32;or&#32;4</emphasis>
5225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;pal_img_n;&#32;<emphasis role="comment">//&#32;record&#32;the&#32;actual&#32;colors&#32;we&#32;had</emphasis>
5226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_out_n&#32;=&#32;pal_img_n;
5227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&gt;=&#32;3)&#32;s-&gt;img_out_n&#32;=&#32;req_comp;
5228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__expand_png_palette(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;palette,&#32;pal_len,&#32;s-&gt;img_out_n))
5229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(has_trans)&#32;{
5231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-paletted&#32;image&#32;with&#32;tRNS&#32;-&gt;&#32;source&#32;image&#32;has&#32;(constant)&#32;alpha</emphasis>
5232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++s-&gt;img_n;
5233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded);&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>-&gt;expanded&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;end&#32;of&#32;PNG&#32;chunk,&#32;read&#32;and&#32;skip&#32;CRC</emphasis>
5236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32be(s);
5237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5239 
5240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
5241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;critical,&#32;fail</emphasis>
5242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;first&#32;not&#32;IHDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PNG&quot;</emphasis>);
5243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c.type&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;29))&#32;==&#32;0)&#32;{
5244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;STBI_NO_FAILURE_STRINGS</emphasis>
5245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;threadsafe</emphasis>
5246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;invalid_chunk[]&#32;=&#32;<emphasis role="stringliteral">&quot;XXXX&#32;PNG&#32;chunk&#32;not&#32;known&quot;</emphasis>;
5247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invalid_chunk[0]&#32;=&#32;STBI__BYTECAST(c.type&#32;&gt;&gt;&#32;24);
5248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invalid_chunk[1]&#32;=&#32;STBI__BYTECAST(c.type&#32;&gt;&gt;&#32;16);
5249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invalid_chunk[2]&#32;=&#32;STBI__BYTECAST(c.type&#32;&gt;&gt;&#32;&#32;8);
5250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invalid_chunk[3]&#32;=&#32;STBI__BYTECAST(c.type&#32;&gt;&gt;&#32;&#32;0);
5251 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
5252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(invalid_chunk,&#32;<emphasis role="stringliteral">&quot;PNG&#32;not&#32;supported:&#32;unknown&#32;PNG&#32;chunk&#32;type&quot;</emphasis>);
5253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;c.length);
5255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
5256 &#32;&#32;&#32;&#32;&#32;&#32;}
5257 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;end&#32;of&#32;PNG&#32;chunk,&#32;read&#32;and&#32;skip&#32;CRC</emphasis>
5258 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32be(s);
5259 &#32;&#32;&#32;}
5260 }
5261 
5262 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__do_png(stbi__png&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
5263 {
5264 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>=<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5265 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&lt;&#32;0&#32;||&#32;req_comp&#32;&gt;&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;req_comp&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Internal&#32;error&quot;</emphasis>);
5266 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__parse_png_file(p,&#32;STBI__SCAN_load,&#32;req_comp))&#32;{
5267 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p-&gt;depth&#32;&lt;=&#32;8)
5268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ri-&gt;bits_per_channel&#32;=&#32;8;
5269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p-&gt;depth&#32;==&#32;16)
5270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ri-&gt;bits_per_channel&#32;=&#32;16;
5271 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;bits_per_channel&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PNG&#32;not&#32;supported:&#32;unsupported&#32;color&#32;depth&quot;</emphasis>);
5273 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;p-&gt;out;
5274 &#32;&#32;&#32;&#32;&#32;&#32;p-&gt;out&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5275 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;p-&gt;s-&gt;img_out_n)&#32;{
5276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;8)
5277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__convert_format((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;p-&gt;s-&gt;img_out_n,&#32;req_comp,&#32;p-&gt;s-&gt;img_x,&#32;p-&gt;s-&gt;img_y);
5278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;stbi__convert_format16((stbi__uint16&#32;*)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;p-&gt;s-&gt;img_out_n,&#32;req_comp,&#32;p-&gt;s-&gt;img_x,&#32;p-&gt;s-&gt;img_y);
5280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;s-&gt;img_out_n&#32;=&#32;req_comp;
5281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
5282 &#32;&#32;&#32;&#32;&#32;&#32;}
5283 &#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;p-&gt;s-&gt;img_x;
5284 &#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;p-&gt;s-&gt;img_y;
5285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n)&#32;*n&#32;=&#32;p-&gt;s-&gt;img_n;
5286 &#32;&#32;&#32;}
5287 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(p-&gt;out);&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;out&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5288 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(p-&gt;expanded);&#32;p-&gt;expanded&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5289 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(p-&gt;idata);&#32;&#32;&#32;&#32;p-&gt;idata&#32;&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5290 
5291 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
5292 }
5293 
5294 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__png_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
5295 {
5296 &#32;&#32;&#32;stbi__png&#32;p;
5297 &#32;&#32;&#32;p.s&#32;=&#32;s;
5298 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__do_png(&amp;p,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,req_comp,&#32;ri);
5299 }
5300 
5301 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__png_test(stbi__context&#32;*s)
5302 {
5303 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
5304 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__check_png_header(s);
5305 &#32;&#32;&#32;stbi__rewind(s);
5306 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
5307 }
5308 
5309 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__png_info_raw(stbi__png&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
5310 {
5311 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__parse_png_file(p,&#32;STBI__SCAN_header,&#32;0))&#32;{
5312 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;p-&gt;s&#32;);
5313 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5314 &#32;&#32;&#32;}
5315 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;p-&gt;s-&gt;img_x;
5316 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;p-&gt;s-&gt;img_y;
5317 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;p-&gt;s-&gt;img_n;
5318 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5319 }
5320 
5321 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__png_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
5322 {
5323 &#32;&#32;&#32;stbi__png&#32;p;
5324 &#32;&#32;&#32;p.s&#32;=&#32;s;
5325 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__png_info_raw(&amp;p,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
5326 }
5327 
5328 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__png_is16(stbi__context&#32;*s)
5329 {
5330 &#32;&#32;&#32;stbi__png&#32;p;
5331 &#32;&#32;&#32;p.s&#32;=&#32;s;
5332 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__png_info_raw(&amp;p,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))
5333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5334 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.depth&#32;!=&#32;16)&#32;{
5335 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(p.s);
5336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5337 &#32;&#32;&#32;}
5338 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5339 }
5340 <emphasis role="preprocessor">#endif</emphasis>
5341 
5342 <emphasis role="comment">//&#32;Microsoft/Windows&#32;BMP&#32;image</emphasis>
5343 
5344 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_BMP</emphasis>
5345 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bmp_test_raw(stbi__context&#32;*s)
5346 {
5347 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
5348 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz;
5349 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5350 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5351 &#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;filesize</emphasis>
5352 &#32;&#32;&#32;stbi__get16le(s);&#32;<emphasis role="comment">//&#32;discard&#32;reserved</emphasis>
5353 &#32;&#32;&#32;stbi__get16le(s);&#32;<emphasis role="comment">//&#32;discard&#32;reserved</emphasis>
5354 &#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;data&#32;offset</emphasis>
5355 &#32;&#32;&#32;sz&#32;=&#32;stbi__get32le(s);
5356 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;(sz&#32;==&#32;12&#32;||&#32;sz&#32;==&#32;40&#32;||&#32;sz&#32;==&#32;56&#32;||&#32;sz&#32;==&#32;108&#32;||&#32;sz&#32;==&#32;124);
5357 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
5358 }
5359 
5360 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bmp_test(stbi__context&#32;*s)
5361 {
5362 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__bmp_test_raw(s);
5363 &#32;&#32;&#32;stbi__rewind(s);
5364 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
5365 }
5366 
5367 
5368 <emphasis role="comment">//&#32;returns&#32;0..31&#32;for&#32;the&#32;highest&#32;set&#32;bit</emphasis>
5369 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__high_bit(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
5370 {
5371 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=0;
5372 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
5373 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;0x10000)&#32;{&#32;n&#32;+=&#32;16;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&gt;=&#32;16;&#32;}
5374 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;0x00100)&#32;{&#32;n&#32;+=&#32;&#32;8;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&gt;=&#32;&#32;8;&#32;}
5375 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;0x00010)&#32;{&#32;n&#32;+=&#32;&#32;4;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&gt;=&#32;&#32;4;&#32;}
5376 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;0x00004)&#32;{&#32;n&#32;+=&#32;&#32;2;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;&gt;=&#32;&#32;2;&#32;}
5377 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&gt;=&#32;0x00002)&#32;{&#32;n&#32;+=&#32;&#32;1;<emphasis role="comment">/*&#32;&gt;&gt;=&#32;&#32;1;*/</emphasis>&#32;}
5378 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;n;
5379 }
5380 
5381 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bitcount(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>)
5382 {
5383 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&amp;&#32;0x55555555)&#32;+&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;&gt;&#32;&#32;1)&#32;&amp;&#32;0x55555555);&#32;<emphasis role="comment">//&#32;max&#32;2</emphasis>
5384 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&amp;&#32;0x33333333)&#32;+&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;&gt;&#32;&#32;2)&#32;&amp;&#32;0x33333333);&#32;<emphasis role="comment">//&#32;max&#32;4</emphasis>
5385 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;&gt;&#32;4))&#32;&amp;&#32;0x0f0f0f0f;&#32;<emphasis role="comment">//&#32;max&#32;8&#32;per&#32;4,&#32;now&#32;8&#32;bits</emphasis>
5386 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;&gt;&#32;8));&#32;<emphasis role="comment">//&#32;max&#32;16&#32;per&#32;8&#32;bits</emphasis>
5387 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&gt;&gt;&#32;16));&#32;<emphasis role="comment">//&#32;max&#32;32&#32;per&#32;8&#32;bits</emphasis>
5388 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;&amp;&#32;0xff;
5389 }
5390 
5391 <emphasis role="comment">//&#32;extract&#32;an&#32;arbitrarily-aligned&#32;N-bit&#32;value&#32;(N=bits)</emphasis>
5392 <emphasis role="comment">//&#32;from&#32;v,&#32;and&#32;then&#32;make&#32;it&#32;8-bits&#32;long&#32;and&#32;fractionally</emphasis>
5393 <emphasis role="comment">//&#32;extend&#32;it&#32;to&#32;full&#32;full&#32;range.</emphasis>
5394 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__shiftsigned(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
5395 {
5396 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mul_table[9]&#32;=&#32;{
5397 &#32;&#32;&#32;&#32;&#32;&#32;0,
5398 &#32;&#32;&#32;&#32;&#32;&#32;0xff<emphasis role="comment">/*0b11111111*/</emphasis>,&#32;0x55<emphasis role="comment">/*0b01010101*/</emphasis>,&#32;0x49<emphasis role="comment">/*0b01001001*/</emphasis>,&#32;0x11<emphasis role="comment">/*0b00010001*/</emphasis>,
5399 &#32;&#32;&#32;&#32;&#32;&#32;0x21<emphasis role="comment">/*0b00100001*/</emphasis>,&#32;0x41<emphasis role="comment">/*0b01000001*/</emphasis>,&#32;0x81<emphasis role="comment">/*0b10000001*/</emphasis>,&#32;0x01<emphasis role="comment">/*0b00000001*/</emphasis>,
5400 &#32;&#32;&#32;};
5401 &#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;shift_table[9]&#32;=&#32;{
5402 &#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,0,1,0,2,4,6,0,
5403 &#32;&#32;&#32;};
5404 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shift&#32;&lt;&#32;0)
5405 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&lt;&lt;=&#32;-shift;
5406 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5407 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&gt;&gt;=&#32;shift;
5408 &#32;&#32;&#32;STBI_ASSERT(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&lt;&#32;256);
5409 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&gt;&gt;=&#32;(8-bits);
5410 &#32;&#32;&#32;STBI_ASSERT(bits&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;bits&#32;&lt;=&#32;8);
5411 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;((unsigned)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;*&#32;mul_table[bits])&#32;&gt;&gt;&#32;shift_table[bits];
5412 }
5413 
5414 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
5415 {
5416 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ae60229696c2ec17c9e00af4899bf738e">offset</link>,&#32;hsz;
5417 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mr,mg,mb,ma,&#32;all_a;
5418 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;extra_read;
5419 }&#32;stbi__bmp_data;
5420 
5421 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bmp_set_mask_defaults(stbi__bmp_data&#32;*info,&#32;<emphasis role="keywordtype">int</emphasis>&#32;compress)
5422 {
5423 &#32;&#32;&#32;<emphasis role="comment">//&#32;BI_BITFIELDS&#32;specifies&#32;masks&#32;explicitly,&#32;don&apos;t&#32;override</emphasis>
5424 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;3)
5425 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5426 
5427 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;0)&#32;{
5428 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;bpp&#32;==&#32;16)&#32;{
5429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mr&#32;=&#32;31u&#32;&lt;&lt;&#32;10;
5430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mg&#32;=&#32;31u&#32;&lt;&lt;&#32;&#32;5;
5431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mb&#32;=&#32;31u&#32;&lt;&lt;&#32;&#32;0;
5432 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;bpp&#32;==&#32;32)&#32;{
5433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mr&#32;=&#32;0xffu&#32;&lt;&lt;&#32;16;
5434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mg&#32;=&#32;0xffu&#32;&lt;&lt;&#32;&#32;8;
5435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mb&#32;=&#32;0xffu&#32;&lt;&lt;&#32;&#32;0;
5436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;ma&#32;=&#32;0xffu&#32;&lt;&lt;&#32;24;
5437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;all_a&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;if&#32;all_a&#32;is&#32;0&#32;at&#32;end,&#32;then&#32;we&#32;loaded&#32;alpha&#32;channel&#32;but&#32;it&#32;was&#32;all&#32;0</emphasis>
5438 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;otherwise,&#32;use&#32;defaults,&#32;which&#32;is&#32;all-0</emphasis>
5440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mr&#32;=&#32;info-&gt;mg&#32;=&#32;info-&gt;mb&#32;=&#32;info-&gt;ma&#32;=&#32;0;
5441 &#32;&#32;&#32;&#32;&#32;&#32;}
5442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
5443 &#32;&#32;&#32;}
5444 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;error</emphasis>
5445 }
5446 
5447 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__bmp_parse_header(stbi__context&#32;*s,&#32;stbi__bmp_data&#32;*info)
5448 {
5449 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hsz;
5450 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;M&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;not&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);
5451 &#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;filesize</emphasis>
5452 &#32;&#32;&#32;stbi__get16le(s);&#32;<emphasis role="comment">//&#32;discard&#32;reserved</emphasis>
5453 &#32;&#32;&#32;stbi__get16le(s);&#32;<emphasis role="comment">//&#32;discard&#32;reserved</emphasis>
5454 &#32;&#32;&#32;info-&gt;offset&#32;=&#32;stbi__get32le(s);
5455 &#32;&#32;&#32;info-&gt;hsz&#32;=&#32;hsz&#32;=&#32;stbi__get32le(s);
5456 &#32;&#32;&#32;info-&gt;mr&#32;=&#32;info-&gt;mg&#32;=&#32;info-&gt;mb&#32;=&#32;info-&gt;ma&#32;=&#32;0;
5457 &#32;&#32;&#32;info-&gt;extra_read&#32;=&#32;14;
5458 
5459 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;offset&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);
5460 
5461 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;!=&#32;12&#32;&amp;&amp;&#32;hsz&#32;!=&#32;40&#32;&amp;&amp;&#32;hsz&#32;!=&#32;56&#32;&amp;&amp;&#32;hsz&#32;!=&#32;108&#32;&amp;&amp;&#32;hsz&#32;!=&#32;124)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unknown&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;BMP&#32;type&#32;not&#32;supported:&#32;unknown&quot;</emphasis>);
5462 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;==&#32;12)&#32;{
5463 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_x&#32;=&#32;stbi__get16le(s);
5464 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_y&#32;=&#32;stbi__get16le(s);
5465 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5466 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_x&#32;=&#32;stbi__get32le(s);
5467 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_y&#32;=&#32;stbi__get32le(s);
5468 &#32;&#32;&#32;}
5469 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16le(s)&#32;!=&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);
5470 &#32;&#32;&#32;info-&gt;bpp&#32;=&#32;stbi__get16le(s);
5471 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;!=&#32;12)&#32;{
5472 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;compress&#32;=&#32;stbi__get32le(s);
5473 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;1&#32;||&#32;compress&#32;==&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;BMP&#32;RLE&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;BMP&#32;type&#32;not&#32;supported:&#32;RLE&quot;</emphasis>);
5474 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;&gt;=&#32;4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;BMP&#32;JPEG/PNG&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;BMP&#32;type&#32;not&#32;supported:&#32;unsupported&#32;compression&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;this&#32;includes&#32;PNG/JPEG&#32;modes</emphasis>
5475 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;3&#32;&amp;&amp;&#32;info-&gt;bpp&#32;!=&#32;16&#32;&amp;&amp;&#32;info-&gt;bpp&#32;!=&#32;32)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;bitfields&#32;requires&#32;16&#32;or&#32;32&#32;bits/pixel</emphasis>
5476 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;sizeof</emphasis>
5477 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;hres</emphasis>
5478 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;vres</emphasis>
5479 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;colorsused</emphasis>
5480 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;max&#32;important</emphasis>
5481 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;==&#32;40&#32;||&#32;hsz&#32;==&#32;56)&#32;{
5482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;==&#32;56)&#32;{
5483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);
5484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);
5485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);
5486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);
5487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;bpp&#32;==&#32;16&#32;||&#32;info-&gt;bpp&#32;==&#32;32)&#32;{
5489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;0)&#32;{
5490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__bmp_set_mask_defaults(info,&#32;compress);
5491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;==&#32;3)&#32;{
5492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mr&#32;=&#32;stbi__get32le(s);
5493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mg&#32;=&#32;stbi__get32le(s);
5494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mb&#32;=&#32;stbi__get32le(s);
5495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;extra_read&#32;+=&#32;12;
5496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;documented,&#32;but&#32;generated&#32;by&#32;photoshop&#32;and&#32;handled&#32;by&#32;mspaint</emphasis>
5497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info-&gt;mr&#32;==&#32;info-&gt;mg&#32;&amp;&amp;&#32;info-&gt;mg&#32;==&#32;info-&gt;mb)&#32;{
5498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;?!?!?</emphasis>
5499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);
5500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
5502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);
5503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5504 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;V4/V5&#32;header</emphasis>
5506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
5507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;!=&#32;108&#32;&amp;&amp;&#32;hsz&#32;!=&#32;124)
5508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;BMP&quot;</emphasis>);
5509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mr&#32;=&#32;stbi__get32le(s);
5510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mg&#32;=&#32;stbi__get32le(s);
5511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;mb&#32;=&#32;stbi__get32le(s);
5512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info-&gt;ma&#32;=&#32;stbi__get32le(s);
5513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compress&#32;!=&#32;3)&#32;<emphasis role="comment">//&#32;override&#32;mr/mg/mb&#32;unless&#32;in&#32;BI_BITFIELDS&#32;mode,&#32;as&#32;per&#32;docs</emphasis>
5514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__bmp_set_mask_defaults(info,&#32;compress);
5515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;color&#32;space</emphasis>
5516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;12;&#32;++i)
5517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;color&#32;space&#32;parameters</emphasis>
5518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsz&#32;==&#32;124)&#32;{
5519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;rendering&#32;intent</emphasis>
5520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;offset&#32;of&#32;profile&#32;data</emphasis>
5521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;size&#32;of&#32;profile&#32;data</emphasis>
5522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__get32le(s);&#32;<emphasis role="comment">//&#32;discard&#32;reserved</emphasis>
5523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5524 &#32;&#32;&#32;&#32;&#32;&#32;}
5525 &#32;&#32;&#32;}
5526 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;1;
5527 }
5528 
5529 
5530 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__bmp_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
5531 {
5532 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out;
5533 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mr=0,mg=0,mb=0,ma=0,&#32;all_a;
5534 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;pal[256][4];
5535 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;psize=0,i,j,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
5536 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flip_vertically,&#32;pad,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>;
5537 &#32;&#32;&#32;stbi__bmp_data&#32;info;
5538 &#32;&#32;&#32;STBI_NOTUSED(ri);
5539 
5540 &#32;&#32;&#32;info.all_a&#32;=&#32;255;
5541 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__bmp_parse_header(s,&#32;&amp;info)&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
5542 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;<emphasis role="comment">//&#32;error&#32;code&#32;already&#32;set</emphasis>
5543 
5544 &#32;&#32;&#32;flip_vertically&#32;=&#32;((int)&#32;s-&gt;img_y)&#32;&gt;&#32;0;
5545 &#32;&#32;&#32;s-&gt;img_y&#32;=&#32;<link linkend="_group__core__func__common_1ga439e60a72eadecfeda2df5449c613a64">abs</link>((<emphasis role="keywordtype">int</emphasis>)&#32;s-&gt;img_y);
5546 
5547 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_y&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5548 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_x&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5549 
5550 &#32;&#32;&#32;mr&#32;=&#32;info.mr;
5551 &#32;&#32;&#32;mg&#32;=&#32;info.mg;
5552 &#32;&#32;&#32;mb&#32;=&#32;info.mb;
5553 &#32;&#32;&#32;ma&#32;=&#32;info.ma;
5554 &#32;&#32;&#32;all_a&#32;=&#32;info.all_a;
5555 
5556 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.hsz&#32;==&#32;12)&#32;{
5557 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;&lt;&#32;24)
5558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;psize&#32;=&#32;(info.offset&#32;-&#32;info.extra_read&#32;-&#32;24)&#32;/&#32;3;
5559 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5560 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;&lt;&#32;16)
5561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;psize&#32;=&#32;(info.offset&#32;-&#32;info.extra_read&#32;-&#32;info.hsz)&#32;&gt;&gt;&#32;2;
5562 &#32;&#32;&#32;}
5563 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(psize&#32;==&#32;0)&#32;{
5564 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;accept&#32;some&#32;number&#32;of&#32;extra&#32;bytes&#32;after&#32;the&#32;header,&#32;but&#32;if&#32;the&#32;offset&#32;points&#32;either&#32;to&#32;before</emphasis>
5565 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;header&#32;ends&#32;or&#32;implies&#32;a&#32;large&#32;amount&#32;of&#32;extra&#32;data,&#32;reject&#32;the&#32;file&#32;as&#32;malformed</emphasis>
5566 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes_read_so_far&#32;=&#32;s-&gt;callback_already_read&#32;+&#32;(int)(s-&gt;img_buffer&#32;-&#32;s-&gt;img_buffer_original);
5567 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;header_limit&#32;=&#32;1024;&#32;<emphasis role="comment">//&#32;max&#32;we&#32;actually&#32;read&#32;is&#32;below&#32;256&#32;bytes&#32;currently.</emphasis>
5568 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;extra_data_limit&#32;=&#32;256*4;&#32;<emphasis role="comment">//&#32;what&#32;ordinarily&#32;goes&#32;here&#32;is&#32;a&#32;palette;&#32;256&#32;entries*4&#32;bytes&#32;is&#32;its&#32;max&#32;size.</emphasis>
5569 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytes_read_so_far&#32;&lt;=&#32;0&#32;||&#32;bytes_read_so_far&#32;&gt;&#32;header_limit)&#32;{
5570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;header&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);
5571 &#32;&#32;&#32;&#32;&#32;&#32;}
5572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;established&#32;that&#32;bytes_read_so_far&#32;is&#32;positive&#32;and&#32;sensible.</emphasis>
5573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;first&#32;half&#32;of&#32;this&#32;test&#32;rejects&#32;offsets&#32;that&#32;are&#32;either&#32;too&#32;small&#32;positives,&#32;or</emphasis>
5574 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;negative,&#32;and&#32;guarantees&#32;that&#32;info.offset&#32;&gt;=&#32;bytes_read_so_far&#32;&gt;&#32;0.&#32;this&#32;in&#32;turn</emphasis>
5575 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ensures&#32;the&#32;number&#32;computed&#32;in&#32;the&#32;second&#32;half&#32;of&#32;the&#32;test&#32;can&apos;t&#32;overflow.</emphasis>
5576 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.offset&#32;&lt;&#32;bytes_read_so_far&#32;||&#32;info.offset&#32;-&#32;bytes_read_so_far&#32;&gt;&#32;extra_data_limit)&#32;{
5577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;offset&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);
5578 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;info.offset&#32;-&#32;bytes_read_so_far);
5580 &#32;&#32;&#32;&#32;&#32;&#32;}
5581 &#32;&#32;&#32;}
5582 
5583 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;24&#32;&amp;&amp;&#32;ma&#32;==&#32;0xff000000)
5584 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;3;
5585 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5586 &#32;&#32;&#32;&#32;&#32;&#32;s-&gt;img_n&#32;=&#32;ma&#32;?&#32;4&#32;:&#32;3;
5587 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;&gt;=&#32;3)&#32;<emphasis role="comment">//&#32;we&#32;can&#32;directly&#32;decode&#32;3&#32;or&#32;4</emphasis>
5588 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;=&#32;req_comp;
5589 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
5590 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;=&#32;s-&gt;img_n;&#32;<emphasis role="comment">//&#32;if&#32;they&#32;want&#32;monochrome,&#32;we&apos;ll&#32;post-convert</emphasis>
5591 
5592 &#32;&#32;&#32;<emphasis role="comment">//&#32;sanity-check&#32;size</emphasis>
5593 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;s-&gt;img_x,&#32;s-&gt;img_y,&#32;0))
5594 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);
5595 
5596 &#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;s-&gt;img_x,&#32;s-&gt;img_y,&#32;0);
5597 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!out)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
5598 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;&lt;&#32;16)&#32;{
5599 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>=0;
5600 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(psize&#32;==&#32;0&#32;||&#32;psize&#32;&gt;&#32;256)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;invalid&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);&#32;}
5601 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;psize;&#32;++i)&#32;{
5602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal[i][2]&#32;=&#32;stbi__get8(s);
5603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal[i][1]&#32;=&#32;stbi__get8(s);
5604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal[i][0]&#32;=&#32;stbi__get8(s);
5605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.hsz&#32;!=&#32;12)&#32;stbi__get8(s);
5606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal[i][3]&#32;=&#32;255;
5607 &#32;&#32;&#32;&#32;&#32;&#32;}
5608 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;info.offset&#32;-&#32;info.extra_read&#32;-&#32;info.hsz&#32;-&#32;psize&#32;*&#32;(info.hsz&#32;==&#32;12&#32;?&#32;3&#32;:&#32;4));
5609 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;1)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;(s-&gt;img_x&#32;+&#32;7)&#32;&gt;&gt;&#32;3;
5610 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;4)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;(s-&gt;img_x&#32;+&#32;1)&#32;&gt;&gt;&#32;1;
5611 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;8)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;s-&gt;img_x;
5612 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;bpp&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);&#32;}
5613 &#32;&#32;&#32;&#32;&#32;&#32;pad&#32;=&#32;(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&amp;3;
5614 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;1)&#32;{
5615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;s-&gt;img_y;&#32;++j)&#32;{
5616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bit_offset&#32;=&#32;7,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;stbi__get8(s);
5617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(int)&#32;s-&gt;img_x;&#32;++i)&#32;{
5618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&gt;&gt;bit_offset)&amp;0x1;
5619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>][0];
5620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>][1];
5621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a69995a929d818b8b467d4593c24d98bc">color</link>][2];
5622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4)&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;255;
5623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+1&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;s-&gt;img_x)&#32;<emphasis role="keywordflow">break</emphasis>;
5624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((--bit_offset)&#32;&lt;&#32;0)&#32;{
5625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bit_offset&#32;=&#32;7;
5626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;stbi__get8(s);
5627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;pad);
5630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5631 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;s-&gt;img_y;&#32;++j)&#32;{
5633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(int)&#32;s-&gt;img_x;&#32;i&#32;+=&#32;2)&#32;{
5634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>=stbi__get8(s),<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>=0;
5635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;4)&#32;{
5636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;15;
5637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&gt;&gt;=&#32;4;
5638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][0];
5640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][1];
5641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][2];
5642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4)&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;255;
5643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i+1&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;s-&gt;img_x)&#32;<emphasis role="keywordflow">break</emphasis>;
5644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(info.bpp&#32;==&#32;8)&#32;?&#32;stbi__get8(s)&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>;
5645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][0];
5646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][1];
5647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>][2];
5648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4)&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;255;
5649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;pad);
5651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5652 &#32;&#32;&#32;&#32;&#32;&#32;}
5653 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5654 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rshift=0,gshift=0,bshift=0,ashift=0,rcount=0,gcount=0,bcount=0,acount=0;
5655 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0;
5656 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;easy=0;
5657 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;info.offset&#32;-&#32;info.extra_read&#32;-&#32;info.hsz);
5658 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;24)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;3&#32;*&#32;s-&gt;img_x;
5659 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;16)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;2*s-&gt;img_x;
5660 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">/*&#32;bpp&#32;=&#32;32&#32;and&#32;pad&#32;=&#32;0&#32;*/</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>=0;
5661 &#32;&#32;&#32;&#32;&#32;&#32;pad&#32;=&#32;(-<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;&amp;&#32;3;
5662 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;24)&#32;{
5663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;easy&#32;=&#32;1;
5664 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;32)&#32;{
5665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mb&#32;==&#32;0xff&#32;&amp;&amp;&#32;mg&#32;==&#32;0xff00&#32;&amp;&amp;&#32;mr&#32;==&#32;0x00ff0000&#32;&amp;&amp;&#32;ma&#32;==&#32;0xff000000)
5666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;easy&#32;=&#32;2;
5667 &#32;&#32;&#32;&#32;&#32;&#32;}
5668 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!easy)&#32;{
5669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!mr&#32;||&#32;!mg&#32;||&#32;!mb)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;masks&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);&#32;}
5670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;right&#32;shift&#32;amt&#32;to&#32;put&#32;high&#32;bit&#32;in&#32;position&#32;#7</emphasis>
5671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rshift&#32;=&#32;stbi__high_bit(mr)-7;&#32;rcount&#32;=&#32;stbi__bitcount(mr);
5672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gshift&#32;=&#32;stbi__high_bit(mg)-7;&#32;gcount&#32;=&#32;stbi__bitcount(mg);
5673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bshift&#32;=&#32;stbi__high_bit(mb)-7;&#32;bcount&#32;=&#32;stbi__bitcount(mb);
5674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ashift&#32;=&#32;stbi__high_bit(ma)-7;&#32;acount&#32;=&#32;stbi__bitcount(ma);
5675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rcount&#32;&gt;&#32;8&#32;||&#32;gcount&#32;&gt;&#32;8&#32;||&#32;bcount&#32;&gt;&#32;8&#32;||&#32;acount&#32;&gt;&#32;8)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;masks&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;BMP&quot;</emphasis>);&#32;}
5676 &#32;&#32;&#32;&#32;&#32;&#32;}
5677 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;s-&gt;img_y;&#32;++j)&#32;{
5678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(easy)&#32;{
5679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(int)&#32;s-&gt;img_x;&#32;++i)&#32;{
5680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>+2]&#32;=&#32;stbi__get8(s);
5682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>+1]&#32;=&#32;stbi__get8(s);
5683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>+0]&#32;=&#32;stbi__get8(s);
5684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;+=&#32;3;
5685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(easy&#32;==&#32;2&#32;?&#32;stbi__get8(s)&#32;:&#32;255);
5686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;all_a&#32;|=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4)&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpp&#32;=&#32;info.bpp;
5691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(int)&#32;s-&gt;img_x;&#32;++i)&#32;{
5692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;=&#32;(bpp&#32;==&#32;16&#32;?&#32;(stbi__uint32)&#32;stbi__get16le(s)&#32;:&#32;stbi__get32le(s));
5693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;STBI__BYTECAST(stbi__shiftsigned(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;mr,&#32;rshift,&#32;rcount));
5695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;STBI__BYTECAST(stbi__shiftsigned(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;mg,&#32;gshift,&#32;gcount));
5696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;STBI__BYTECAST(stbi__shiftsigned(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;mb,&#32;bshift,&#32;bcount));
5697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;(ma&#32;?&#32;stbi__shiftsigned(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>&#32;&amp;&#32;ma,&#32;ashift,&#32;acount)&#32;:&#32;255);
5698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;all_a&#32;|=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
5699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4)&#32;out[<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>++]&#32;=&#32;STBI__BYTECAST(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>);
5700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;pad);
5703 &#32;&#32;&#32;&#32;&#32;&#32;}
5704 &#32;&#32;&#32;}
5705 
5706 &#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;alpha&#32;channel&#32;is&#32;all&#32;0s,&#32;replace&#32;with&#32;all&#32;255s</emphasis>
5707 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>&#32;==&#32;4&#32;&amp;&amp;&#32;all_a&#32;==&#32;0)
5708 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=4*s-&gt;img_x*s-&gt;img_y-1;&#32;i&#32;&gt;=&#32;0;&#32;i&#32;-=&#32;4)
5709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[i]&#32;=&#32;255;
5710 
5711 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flip_vertically)&#32;{
5712 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;t;
5713 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;(int)&#32;s-&gt;img_y&gt;&gt;1;&#32;++j)&#32;{
5714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p1&#32;=&#32;out&#32;+&#32;&#32;&#32;&#32;&#32;&#32;j&#32;&#32;&#32;&#32;&#32;*s-&gt;img_x*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>;
5715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p2&#32;=&#32;out&#32;+&#32;(s-&gt;img_y-1-j)*s-&gt;img_x*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>;
5716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;(int)&#32;s-&gt;img_x*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>;&#32;++i)&#32;{
5717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;p1[i];&#32;p1[i]&#32;=&#32;p2[i];&#32;p2[i]&#32;=&#32;t;
5718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5719 &#32;&#32;&#32;&#32;&#32;&#32;}
5720 &#32;&#32;&#32;}
5721 
5722 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>)&#32;{
5723 &#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;stbi__convert_format(out,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;req_comp,&#32;s-&gt;img_x,&#32;s-&gt;img_y);
5724 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;&#32;<emphasis role="comment">//&#32;stbi__convert_format&#32;frees&#32;input&#32;on&#32;failure</emphasis>
5725 &#32;&#32;&#32;}
5726 
5727 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;s-&gt;img_x;
5728 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;s-&gt;img_y;
5729 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;s-&gt;img_n;
5730 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
5731 }
5732 <emphasis role="preprocessor">#endif</emphasis>
5733 
5734 <emphasis role="comment">//&#32;Targa&#32;Truevision&#32;-&#32;TGA</emphasis>
5735 <emphasis role="comment">//&#32;by&#32;Jonathan&#32;Dummer</emphasis>
5736 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_TGA</emphasis>
5737 <emphasis role="comment">//&#32;returns&#32;STBI_rgb&#32;or&#32;whatever,&#32;0&#32;on&#32;error</emphasis>
5738 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__tga_get_comp(<emphasis role="keywordtype">int</emphasis>&#32;bits_per_pixel,&#32;<emphasis role="keywordtype">int</emphasis>&#32;is_grey,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;is_rgb16)
5739 {
5740 &#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;RGB&#32;or&#32;RGBA&#32;(incl.&#32;16bit)&#32;or&#32;grey&#32;allowed</emphasis>
5741 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_rgb16)&#32;*is_rgb16&#32;=&#32;0;
5742 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(bits_per_pixel)&#32;{
5743 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;8:&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbad1eb95ca1fa7706bf732bf35a0ed40aa">STBI_grey</link>;
5744 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;16:&#32;<emphasis role="keywordflow">if</emphasis>(is_grey)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaf5829d16d4cca6077465c5abd346e2f8">STBI_grey_alpha</link>;
5745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fallthrough</emphasis>
5746 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;15:&#32;<emphasis role="keywordflow">if</emphasis>(is_rgb16)&#32;*is_rgb16&#32;=&#32;1;
5747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link>;
5748 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;24:&#32;<emphasis role="comment">//&#32;fallthrough</emphasis>
5749 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;32:&#32;<emphasis role="keywordflow">return</emphasis>&#32;bits_per_pixel/8;
5750 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5751 &#32;&#32;&#32;}
5752 }
5753 
5754 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__tga_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
5755 {
5756 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_w,&#32;tga_h,&#32;tga_comp,&#32;tga_image_type,&#32;tga_bits_per_pixel,&#32;tga_colormap_bpp;
5757 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz,&#32;tga_colormap_type;
5758 &#32;&#32;&#32;&#32;stbi__get8(s);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;discard&#32;Offset</emphasis>
5759 &#32;&#32;&#32;&#32;tga_colormap_type&#32;=&#32;stbi__get8(s);&#32;<emphasis role="comment">//&#32;colormap&#32;type</emphasis>
5760 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;tga_colormap_type&#32;&gt;&#32;1&#32;)&#32;{
5761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;RGB&#32;or&#32;indexed&#32;allowed</emphasis>
5763 &#32;&#32;&#32;&#32;}
5764 &#32;&#32;&#32;&#32;tga_image_type&#32;=&#32;stbi__get8(s);&#32;<emphasis role="comment">//&#32;image&#32;type</emphasis>
5765 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_colormap_type&#32;==&#32;1&#32;)&#32;{&#32;<emphasis role="comment">//&#32;colormapped&#32;(paletted)&#32;image</emphasis>
5766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_image_type&#32;!=&#32;1&#32;&amp;&amp;&#32;tga_image_type&#32;!=&#32;9)&#32;{
5767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;index&#32;of&#32;first&#32;colormap&#32;entry&#32;and&#32;number&#32;of&#32;entries</emphasis>
5771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sz&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;check&#32;bits&#32;per&#32;palette&#32;color&#32;entry</emphasis>
5772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(sz&#32;!=&#32;8)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;15)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;16)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;24)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;32)&#32;)&#32;{
5773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;image&#32;x&#32;and&#32;y&#32;origin</emphasis>
5777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_colormap_bpp&#32;=&#32;sz;
5778 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;&quot;normal&quot;&#32;image&#32;w/o&#32;colormap&#32;-&#32;only&#32;RGB&#32;or&#32;grey&#32;allowed,&#32;+/-&#32;RLE</emphasis>
5779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(tga_image_type&#32;!=&#32;2)&#32;&amp;&amp;&#32;(tga_image_type&#32;!=&#32;3)&#32;&amp;&amp;&#32;(tga_image_type&#32;!=&#32;10)&#32;&amp;&amp;&#32;(tga_image_type&#32;!=&#32;11)&#32;)&#32;{
5780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;only&#32;RGB&#32;or&#32;grey&#32;allowed,&#32;+/-&#32;RLE</emphasis>
5782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,9);&#32;<emphasis role="comment">//&#32;skip&#32;colormap&#32;specification&#32;and&#32;image&#32;x/y&#32;origin</emphasis>
5784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_colormap_bpp&#32;=&#32;0;
5785 &#32;&#32;&#32;&#32;}
5786 &#32;&#32;&#32;&#32;tga_w&#32;=&#32;stbi__get16le(s);
5787 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;tga_w&#32;&lt;&#32;1&#32;)&#32;{
5788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;width</emphasis>
5790 &#32;&#32;&#32;&#32;}
5791 &#32;&#32;&#32;&#32;tga_h&#32;=&#32;stbi__get16le(s);
5792 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;tga_h&#32;&lt;&#32;1&#32;)&#32;{
5793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;height</emphasis>
5795 &#32;&#32;&#32;&#32;}
5796 &#32;&#32;&#32;&#32;tga_bits_per_pixel&#32;=&#32;stbi__get8(s);&#32;<emphasis role="comment">//&#32;bits&#32;per&#32;pixel</emphasis>
5797 &#32;&#32;&#32;&#32;stbi__get8(s);&#32;<emphasis role="comment">//&#32;ignore&#32;alpha&#32;bits</emphasis>
5798 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_colormap_bpp&#32;!=&#32;0)&#32;{
5799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((tga_bits_per_pixel&#32;!=&#32;8)&#32;&amp;&amp;&#32;(tga_bits_per_pixel&#32;!=&#32;16))&#32;{
5800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;using&#32;a&#32;colormap,&#32;tga_bits_per_pixel&#32;is&#32;the&#32;size&#32;of&#32;the&#32;indexes</emphasis>
5801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;I&#32;don&apos;t&#32;think&#32;anything&#32;but&#32;8&#32;or&#32;16bit&#32;indexes&#32;makes&#32;sense</emphasis>
5802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_comp&#32;=&#32;stbi__tga_get_comp(tga_colormap_bpp,&#32;0,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
5806 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
5807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_comp&#32;=&#32;stbi__tga_get_comp(tga_bits_per_pixel,&#32;(tga_image_type&#32;==&#32;3)&#32;||&#32;(tga_image_type&#32;==&#32;11),&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
5808 &#32;&#32;&#32;&#32;}
5809 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!tga_comp)&#32;{
5810 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
5811 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
5812 &#32;&#32;&#32;&#32;}
5813 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;tga_w;
5814 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;tga_h;
5815 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;tga_comp;
5816 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;seems&#32;to&#32;have&#32;passed&#32;everything</emphasis>
5817 }
5818 
5819 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__tga_test(stbi__context&#32;*s)
5820 {
5821 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;0;
5822 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz,&#32;tga_color_type;
5823 &#32;&#32;&#32;stbi__get8(s);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;discard&#32;Offset</emphasis>
5824 &#32;&#32;&#32;tga_color_type&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;color&#32;type</emphasis>
5825 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_color_type&#32;&gt;&#32;1&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;only&#32;RGB&#32;or&#32;indexed&#32;allowed</emphasis>
5826 &#32;&#32;&#32;sz&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;image&#32;type</emphasis>
5827 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_color_type&#32;==&#32;1&#32;)&#32;{&#32;<emphasis role="comment">//&#32;colormapped&#32;(paletted)&#32;image</emphasis>
5828 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sz&#32;!=&#32;1&#32;&amp;&amp;&#32;sz&#32;!=&#32;9)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;<emphasis role="comment">//&#32;colortype&#32;1&#32;demands&#32;image&#32;type&#32;1&#32;or&#32;9</emphasis>
5829 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;index&#32;of&#32;first&#32;colormap&#32;entry&#32;and&#32;number&#32;of&#32;entries</emphasis>
5830 &#32;&#32;&#32;&#32;&#32;&#32;sz&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;check&#32;bits&#32;per&#32;palette&#32;color&#32;entry</emphasis>
5831 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(sz&#32;!=&#32;8)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;15)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;16)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;24)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;32)&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;
5832 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;image&#32;x&#32;and&#32;y&#32;origin</emphasis>
5833 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;&quot;normal&quot;&#32;image&#32;w/o&#32;colormap</emphasis>
5834 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(sz&#32;!=&#32;2)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;3)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;10)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;11)&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;<emphasis role="comment">//&#32;only&#32;RGB&#32;or&#32;grey&#32;allowed,&#32;+/-&#32;RLE</emphasis>
5835 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,9);&#32;<emphasis role="comment">//&#32;skip&#32;colormap&#32;specification&#32;and&#32;image&#32;x/y&#32;origin</emphasis>
5836 &#32;&#32;&#32;}
5837 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stbi__get16le(s)&#32;&lt;&#32;1&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;test&#32;width</emphasis>
5838 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stbi__get16le(s)&#32;&lt;&#32;1&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;test&#32;height</emphasis>
5839 &#32;&#32;&#32;sz&#32;=&#32;stbi__get8(s);&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;bits&#32;per&#32;pixel</emphasis>
5840 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(tga_color_type&#32;==&#32;1)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;8)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;16)&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;&#32;<emphasis role="comment">//&#32;for&#32;colormapped&#32;images,&#32;bpp&#32;is&#32;size&#32;of&#32;an&#32;index</emphasis>
5841 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(sz&#32;!=&#32;8)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;15)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;16)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;24)&#32;&amp;&amp;&#32;(sz&#32;!=&#32;32)&#32;)&#32;<emphasis role="keywordflow">goto</emphasis>&#32;errorEnd;
5842 
5843 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;got&#32;this&#32;far,&#32;everything&apos;s&#32;good&#32;and&#32;we&#32;can&#32;return&#32;1&#32;instead&#32;of&#32;0</emphasis>
5844 
5845 errorEnd:
5846 &#32;&#32;&#32;stbi__rewind(s);
5847 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a1dbb21208b9047cc8031ca9c840d3c2f">res</link>;
5848 }
5849 
5850 <emphasis role="comment">//&#32;read&#32;16bit&#32;value&#32;and&#32;convert&#32;to&#32;24bit&#32;RGB</emphasis>
5851 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__tga_read_rgb16(stbi__context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*&#32;out)
5852 {
5853 &#32;&#32;&#32;stbi__uint16&#32;px&#32;=&#32;(stbi__uint16)stbi__get16le(s);
5854 &#32;&#32;&#32;stbi__uint16&#32;fiveBitMask&#32;=&#32;31;
5855 &#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;3&#32;channels&#32;with&#32;5bits&#32;each</emphasis>
5856 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;(px&#32;&gt;&gt;&#32;10)&#32;&amp;&#32;fiveBitMask;
5857 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;(px&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;fiveBitMask;
5858 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;=&#32;px&#32;&amp;&#32;fiveBitMask;
5859 &#32;&#32;&#32;<emphasis role="comment">//&#32;Note&#32;that&#32;this&#32;saves&#32;the&#32;data&#32;in&#32;RGB(A)&#32;order,&#32;so&#32;it&#32;doesn&apos;t&#32;need&#32;to&#32;be&#32;swapped&#32;later</emphasis>
5860 &#32;&#32;&#32;out[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;*&#32;255)/31);
5861 &#32;&#32;&#32;out[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;*&#32;255)/31);
5862 &#32;&#32;&#32;out[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a6eba317e3cf44d6d26c04a5a8f197dcb">b</link>&#32;*&#32;255)/31);
5863 
5864 &#32;&#32;&#32;<emphasis role="comment">//&#32;some&#32;people&#32;claim&#32;that&#32;the&#32;most&#32;significant&#32;bit&#32;might&#32;be&#32;used&#32;for&#32;alpha</emphasis>
5865 &#32;&#32;&#32;<emphasis role="comment">//&#32;(possibly&#32;if&#32;an&#32;alpha-bit&#32;is&#32;set&#32;in&#32;the&#32;&quot;image&#32;descriptor&#32;byte&quot;)</emphasis>
5866 &#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;that&#32;only&#32;made&#32;16bit&#32;test&#32;images&#32;completely&#32;translucent..</emphasis>
5867 &#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;let&apos;s&#32;treat&#32;all&#32;15&#32;and&#32;16bit&#32;TGAs&#32;as&#32;RGB&#32;with&#32;no&#32;alpha.</emphasis>
5868 }
5869 
5870 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__tga_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
5871 {
5872 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;read&#32;in&#32;the&#32;TGA&#32;header&#32;stuff</emphasis>
5873 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_offset&#32;=&#32;stbi__get8(s);
5874 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_indexed&#32;=&#32;stbi__get8(s);
5875 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_image_type&#32;=&#32;stbi__get8(s);
5876 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_is_RLE&#32;=&#32;0;
5877 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_palette_start&#32;=&#32;stbi__get16le(s);
5878 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_palette_len&#32;=&#32;stbi__get16le(s);
5879 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_palette_bits&#32;=&#32;stbi__get8(s);
5880 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_x_origin&#32;=&#32;stbi__get16le(s);
5881 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_y_origin&#32;=&#32;stbi__get16le(s);
5882 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_width&#32;=&#32;stbi__get16le(s);
5883 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_height&#32;=&#32;stbi__get16le(s);
5884 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_bits_per_pixel&#32;=&#32;stbi__get8(s);
5885 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_comp,&#32;tga_rgb16=0;
5886 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tga_inverted&#32;=&#32;stbi__get8(s);
5887 &#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;tga_alpha_bits&#32;=&#32;tga_inverted&#32;&amp;&#32;15;&#32;//&#32;the&#32;4&#32;lowest&#32;bits&#32;-&#32;unused&#32;(useless?)</emphasis>
5888 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;image&#32;data</emphasis>
5889 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tga_data;
5890 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tga_palette&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
5891 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
5892 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;raw_data[4]&#32;=&#32;{0};
5893 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;RLE_count&#32;=&#32;0;
5894 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;RLE_repeating&#32;=&#32;0;
5895 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;read_next_pixel&#32;=&#32;1;
5896 &#32;&#32;&#32;STBI_NOTUSED(ri);
5897 &#32;&#32;&#32;STBI_NOTUSED(tga_x_origin);&#32;<emphasis role="comment">//&#32;@TODO</emphasis>
5898 &#32;&#32;&#32;STBI_NOTUSED(tga_y_origin);&#32;<emphasis role="comment">//&#32;@TODO</emphasis>
5899 
5900 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_height&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5901 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_width&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
5902 
5903 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;do&#32;a&#32;tiny&#32;bit&#32;of&#32;precessing</emphasis>
5904 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_image_type&#32;&gt;=&#32;8&#32;)
5905 &#32;&#32;&#32;{
5906 &#32;&#32;&#32;&#32;&#32;&#32;tga_image_type&#32;-=&#32;8;
5907 &#32;&#32;&#32;&#32;&#32;&#32;tga_is_RLE&#32;=&#32;1;
5908 &#32;&#32;&#32;}
5909 &#32;&#32;&#32;tga_inverted&#32;=&#32;1&#32;-&#32;((tga_inverted&#32;&gt;&gt;&#32;5)&#32;&amp;&#32;1);
5910 
5911 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;If&#32;I&apos;m&#32;paletted,&#32;then&#32;I&apos;ll&#32;use&#32;the&#32;number&#32;of&#32;bits&#32;from&#32;the&#32;palette</emphasis>
5912 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_indexed&#32;)&#32;tga_comp&#32;=&#32;stbi__tga_get_comp(tga_palette_bits,&#32;0,&#32;&amp;tga_rgb16);
5913 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;tga_comp&#32;=&#32;stbi__tga_get_comp(tga_bits_per_pixel,&#32;(tga_image_type&#32;==&#32;3),&#32;&amp;tga_rgb16);
5914 
5915 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!tga_comp)&#32;<emphasis role="comment">//&#32;shouldn&apos;t&#32;really&#32;happen,&#32;stbi__tga_test()&#32;should&#32;have&#32;ensured&#32;basic&#32;consistency</emphasis>
5916 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;format&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;find&#32;out&#32;TGA&#32;pixelformat&quot;</emphasis>);
5917 
5918 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;tga&#32;info</emphasis>
5919 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;tga_width;
5920 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;tga_height;
5921 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;tga_comp;
5922 
5923 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(tga_width,&#32;tga_height,&#32;tga_comp,&#32;0))
5924 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;TGA&quot;</emphasis>);
5925 
5926 &#32;&#32;&#32;tga_data&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)stbi__malloc_mad3(tga_width,&#32;tga_height,&#32;tga_comp,&#32;0);
5927 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tga_data)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
5928 
5929 &#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;to&#32;the&#32;data&apos;s&#32;starting&#32;position&#32;(offset&#32;usually&#32;=&#32;0)</emphasis>
5930 &#32;&#32;&#32;stbi__skip(s,&#32;tga_offset&#32;);
5931 
5932 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!tga_indexed&#32;&amp;&amp;&#32;!tga_is_RLE&#32;&amp;&amp;&#32;!tga_rgb16&#32;)&#32;{
5933 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;tga_height;&#32;++i)&#32;{
5934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>&#32;=&#32;tga_inverted&#32;?&#32;tga_height&#32;-i&#32;-&#32;1&#32;:&#32;i;
5935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*tga_row&#32;=&#32;tga_data&#32;+&#32;<link linkend="_group__gtc__matrix__access_1ga259e5ebd0f31ec3f83440f8cae7f5dba">row</link>*tga_width*tga_comp;
5936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__getn(s,&#32;tga_row,&#32;tga_width&#32;*&#32;tga_comp);
5937 &#32;&#32;&#32;&#32;&#32;&#32;}
5938 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
5939 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;do&#32;I&#32;need&#32;to&#32;load&#32;a&#32;palette?</emphasis>
5940 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_indexed)
5941 &#32;&#32;&#32;&#32;&#32;&#32;{
5942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_palette_len&#32;==&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;you&#32;have&#32;to&#32;have&#32;at&#32;least&#32;one&#32;entry!&#32;*/</emphasis>
5943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(tga_data);
5944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;palette&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;TGA&quot;</emphasis>);
5945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5946 
5947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;any&#32;data&#32;to&#32;skip?&#32;(offset&#32;usually&#32;=&#32;0)</emphasis>
5948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;tga_palette_start&#32;);
5949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;load&#32;the&#32;palette</emphasis>
5950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_palette&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)stbi__malloc_mad2(tga_palette_len,&#32;tga_comp,&#32;0);
5951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tga_palette)&#32;{
5952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(tga_data);
5953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
5954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_rgb16)&#32;{
5956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*pal_entry&#32;=&#32;tga_palette;
5957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ASSERT(tga_comp&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link>);
5958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;tga_palette_len;&#32;++i)&#32;{
5959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__tga_read_rgb16(s,&#32;pal_entry);
5960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal_entry&#32;+=&#32;tga_comp;
5961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__getn(s,&#32;tga_palette,&#32;tga_palette_len&#32;*&#32;tga_comp))&#32;{
5963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(tga_data);
5964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(tga_palette);
5965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;palette&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;TGA&quot;</emphasis>);
5966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5967 &#32;&#32;&#32;&#32;&#32;&#32;}
5968 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;load&#32;the&#32;data</emphasis>
5969 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;tga_width&#32;*&#32;tga_height;&#32;++i)
5970 &#32;&#32;&#32;&#32;&#32;&#32;{
5971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;if&#32;I&apos;m&#32;in&#32;RLE&#32;mode,&#32;do&#32;I&#32;need&#32;to&#32;get&#32;a&#32;RLE&#32;stbi__pngchunk?</emphasis>
5972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_is_RLE&#32;)
5973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;RLE_count&#32;==&#32;0&#32;)
5975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;yep,&#32;get&#32;the&#32;next&#32;byte&#32;as&#32;a&#32;RLE&#32;command</emphasis>
5977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;RLE_cmd&#32;=&#32;stbi__get8(s);
5978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RLE_count&#32;=&#32;1&#32;+&#32;(RLE_cmd&#32;&amp;&#32;127);
5979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RLE_repeating&#32;=&#32;RLE_cmd&#32;&gt;&gt;&#32;7;
5980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_next_pixel&#32;=&#32;1;
5981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!RLE_repeating&#32;)
5982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_next_pixel&#32;=&#32;1;
5984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
5986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_next_pixel&#32;=&#32;1;
5988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
5989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;OK,&#32;if&#32;I&#32;need&#32;to&#32;read&#32;a&#32;pixel,&#32;do&#32;it&#32;now</emphasis>
5990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;read_next_pixel&#32;)
5991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;load&#32;however&#32;much&#32;data&#32;we&#32;did&#32;have</emphasis>
5993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_indexed&#32;)
5994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
5995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;in&#32;index,&#32;then&#32;perform&#32;the&#32;lookup</emphasis>
5996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pal_idx&#32;=&#32;(tga_bits_per_pixel&#32;==&#32;8)&#32;?&#32;stbi__get8(s)&#32;:&#32;stbi__get16le(s);
5997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;pal_idx&#32;&gt;=&#32;tga_palette_len&#32;)&#32;{
5998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;invalid&#32;index</emphasis>
5999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal_idx&#32;=&#32;0;
6000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pal_idx&#32;*=&#32;tga_comp;
6002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;tga_comp;&#32;++j)&#32;{
6003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data[j]&#32;=&#32;tga_palette[pal_idx+j];
6004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(tga_rgb16)&#32;{
6006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_ASSERT(tga_comp&#32;==&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a0a28cf10bf72f80c90de5e5e1e698bfbaa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link>);
6007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__tga_read_rgb16(s,&#32;raw_data);
6008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;read&#32;in&#32;the&#32;data&#32;raw</emphasis>
6010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;tga_comp;&#32;++j)&#32;{
6011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data[j]&#32;=&#32;stbi__get8(s);
6012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;clear&#32;the&#32;reading&#32;flag&#32;for&#32;the&#32;next&#32;pixel</emphasis>
6015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_next_pixel&#32;=&#32;0;
6016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;end&#32;of&#32;reading&#32;a&#32;pixel</emphasis>
6017 
6018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;copy&#32;data</emphasis>
6019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;tga_comp;&#32;++j)
6020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_data[i*tga_comp+j]&#32;=&#32;raw_data[j];
6021 
6022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;in&#32;case&#32;we&apos;re&#32;in&#32;RLE&#32;mode,&#32;keep&#32;counting&#32;down</emphasis>
6023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--RLE_count;
6024 &#32;&#32;&#32;&#32;&#32;&#32;}
6025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;do&#32;I&#32;need&#32;to&#32;invert&#32;the&#32;image?</emphasis>
6026 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_inverted&#32;)
6027 &#32;&#32;&#32;&#32;&#32;&#32;{
6028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j*2&#32;&lt;&#32;tga_height;&#32;++j)
6029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
6030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index1&#32;=&#32;j&#32;*&#32;tga_width&#32;*&#32;tga_comp;
6031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index2&#32;=&#32;(tga_height&#32;-&#32;1&#32;-&#32;j)&#32;*&#32;tga_width&#32;*&#32;tga_comp;
6032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;tga_width&#32;*&#32;tga_comp;&#32;i&#32;&gt;&#32;0;&#32;--i)
6033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
6034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp&#32;=&#32;tga_data[index1];
6035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_data[index1]&#32;=&#32;tga_data[index2];
6036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_data[index2]&#32;=&#32;temp;
6037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index1;
6038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index2;
6039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6041 &#32;&#32;&#32;&#32;&#32;&#32;}
6042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;clear&#32;my&#32;palette,&#32;if&#32;I&#32;had&#32;one</emphasis>
6043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;tga_palette&#32;!=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
6044 &#32;&#32;&#32;&#32;&#32;&#32;{
6045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(&#32;tga_palette&#32;);
6046 &#32;&#32;&#32;&#32;&#32;&#32;}
6047 &#32;&#32;&#32;}
6048 
6049 &#32;&#32;&#32;<emphasis role="comment">//&#32;swap&#32;RGB&#32;-&#32;if&#32;the&#32;source&#32;data&#32;was&#32;RGB16,&#32;it&#32;already&#32;is&#32;in&#32;the&#32;right&#32;order</emphasis>
6050 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tga_comp&#32;&gt;=&#32;3&#32;&amp;&amp;&#32;!tga_rgb16)
6051 &#32;&#32;&#32;{
6052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;tga_pixel&#32;=&#32;tga_data;
6053 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;tga_width&#32;*&#32;tga_height;&#32;++i)
6054 &#32;&#32;&#32;&#32;&#32;&#32;{
6055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp&#32;=&#32;tga_pixel[0];
6056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_pixel[0]&#32;=&#32;tga_pixel[2];
6057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_pixel[2]&#32;=&#32;temp;
6058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_pixel&#32;+=&#32;tga_comp;
6059 &#32;&#32;&#32;&#32;&#32;&#32;}
6060 &#32;&#32;&#32;}
6061 
6062 &#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;to&#32;target&#32;component&#32;count</emphasis>
6063 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;tga_comp)
6064 &#32;&#32;&#32;&#32;&#32;&#32;tga_data&#32;=&#32;stbi__convert_format(tga_data,&#32;tga_comp,&#32;req_comp,&#32;tga_width,&#32;tga_height);
6065 
6066 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;the&#32;things&#32;I&#32;do&#32;to&#32;get&#32;rid&#32;of&#32;an&#32;error&#32;message,&#32;and&#32;yet&#32;keep</emphasis>
6067 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;Microsoft&apos;s&#32;C&#32;compilers&#32;happy...&#32;[8^(</emphasis>
6068 &#32;&#32;&#32;tga_palette_start&#32;=&#32;tga_palette_len&#32;=&#32;tga_palette_bits&#32;=
6069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tga_x_origin&#32;=&#32;tga_y_origin&#32;=&#32;0;
6070 &#32;&#32;&#32;STBI_NOTUSED(tga_palette_start);
6071 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;OK,&#32;done</emphasis>
6072 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tga_data;
6073 }
6074 <emphasis role="preprocessor">#endif</emphasis>
6075 
6076 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
6077 <emphasis role="comment">//&#32;Photoshop&#32;PSD&#32;loader&#32;--&#32;PD&#32;by&#32;Thatcher&#32;Ulrich,&#32;integration&#32;by&#32;Nicolas&#32;Schulz,&#32;tweaked&#32;by&#32;STB</emphasis>
6078 
6079 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PSD</emphasis>
6080 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__psd_test(stbi__context&#32;*s)
6081 {
6082 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;(stbi__get32be(s)&#32;==&#32;0x38425053);
6083 &#32;&#32;&#32;stbi__rewind(s);
6084 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
6085 }
6086 
6087 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__psd_decode_rle(stbi__context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pixelCount)
6088 {
6089 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;nleft,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6090 
6091 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;0;
6092 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((nleft&#32;=&#32;pixelCount&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>)&#32;&gt;&#32;0)&#32;{
6093 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s);
6094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;==&#32;128)&#32;{
6095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No-op.</emphasis>
6096 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&lt;&#32;128)&#32;{
6097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;next&#32;len+1&#32;bytes&#32;literally.</emphasis>
6098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>++;
6099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;nleft)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;corrupt&#32;data</emphasis>
6100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{
6102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;stbi__get8(s);
6103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
6104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>--;
6105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6106 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;128)&#32;{
6107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
6108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;-len+1&#32;bytes&#32;in&#32;the&#32;dest&#32;are&#32;replicated&#32;from&#32;next&#32;source&#32;byte.</emphasis>
6109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(Interpret&#32;len&#32;as&#32;a&#32;negative&#32;8-bit&#32;int.)</emphasis>
6110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;257&#32;-&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&gt;&#32;nleft)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;corrupt&#32;data</emphasis>
6112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;stbi__get8(s);
6113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)&#32;{
6115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
6116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;+=&#32;4;
6117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>--;
6118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6119 &#32;&#32;&#32;&#32;&#32;&#32;}
6120 &#32;&#32;&#32;}
6121 
6122 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6123 }
6124 
6125 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__psd_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bpc)
6126 {
6127 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pixelCount;
6128 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channelCount,&#32;compression;
6129 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structchannel">channel</link>,&#32;i;
6130 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitdepth;
6131 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,h;
6132 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out;
6133 &#32;&#32;&#32;STBI_NOTUSED(ri);
6134 
6135 &#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;identifier</emphasis>
6136 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get32be(s)&#32;!=&#32;0x38425053)&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;8BPS&quot;</emphasis>
6137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;not&#32;PSD&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PSD&#32;image&quot;</emphasis>);
6138 
6139 &#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;file&#32;type&#32;version.</emphasis>
6140 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(s)&#32;!=&#32;1)
6141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;wrong&#32;version&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;version&#32;of&#32;PSD&#32;image&quot;</emphasis>);
6142 
6143 &#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;6&#32;reserved&#32;bytes.</emphasis>
6144 &#32;&#32;&#32;stbi__skip(s,&#32;6&#32;);
6145 
6146 &#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;number&#32;of&#32;channels&#32;(R,&#32;G,&#32;B,&#32;A,&#32;etc).</emphasis>
6147 &#32;&#32;&#32;channelCount&#32;=&#32;stbi__get16be(s);
6148 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelCount&#32;&lt;&#32;0&#32;||&#32;channelCount&#32;&gt;&#32;16)
6149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;wrong&#32;channel&#32;count&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;number&#32;of&#32;channels&#32;in&#32;PSD&#32;image&quot;</emphasis>);
6150 
6151 &#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;rows&#32;and&#32;columns&#32;of&#32;the&#32;image.</emphasis>
6152 &#32;&#32;&#32;h&#32;=&#32;stbi__get32be(s);
6153 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;stbi__get32be(s);
6154 
6155 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(h&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6156 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6157 
6158 &#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;the&#32;depth&#32;is&#32;8&#32;bits.</emphasis>
6159 &#32;&#32;&#32;bitdepth&#32;=&#32;stbi__get16be(s);
6160 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bitdepth&#32;!=&#32;8&#32;&amp;&amp;&#32;bitdepth&#32;!=&#32;16)
6161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unsupported&#32;bit&#32;depth&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PSD&#32;bit&#32;depth&#32;is&#32;not&#32;8&#32;or&#32;16&#32;bit&quot;</emphasis>);
6162 
6163 &#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;the&#32;color&#32;mode&#32;is&#32;RGB.</emphasis>
6164 &#32;&#32;&#32;<emphasis role="comment">//&#32;Valid&#32;options&#32;are:</emphasis>
6165 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;0:&#32;Bitmap</emphasis>
6166 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;1:&#32;Grayscale</emphasis>
6167 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;2:&#32;Indexed&#32;color</emphasis>
6168 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;3:&#32;RGB&#32;color</emphasis>
6169 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;4:&#32;CMYK&#32;color</emphasis>
6170 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;7:&#32;Multichannel</emphasis>
6171 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;8:&#32;Duotone</emphasis>
6172 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;9:&#32;Lab&#32;color</emphasis>
6173 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(s)&#32;!=&#32;3)
6174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;wrong&#32;color&#32;format&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PSD&#32;is&#32;not&#32;in&#32;RGB&#32;color&#32;format&quot;</emphasis>);
6175 
6176 &#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;the&#32;Mode&#32;Data.&#32;&#32;(It&apos;s&#32;the&#32;palette&#32;for&#32;indexed&#32;color;&#32;other&#32;info&#32;for&#32;other&#32;modes.)</emphasis>
6177 &#32;&#32;&#32;stbi__skip(s,stbi__get32be(s)&#32;);
6178 
6179 &#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;the&#32;image&#32;resources.&#32;&#32;(resolution,&#32;pen&#32;tool&#32;paths,&#32;etc)</emphasis>
6180 &#32;&#32;&#32;stbi__skip(s,&#32;stbi__get32be(s)&#32;);
6181 
6182 &#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;the&#32;reserved&#32;data.</emphasis>
6183 &#32;&#32;&#32;stbi__skip(s,&#32;stbi__get32be(s)&#32;);
6184 
6185 &#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;out&#32;if&#32;the&#32;data&#32;is&#32;compressed.</emphasis>
6186 &#32;&#32;&#32;<emphasis role="comment">//&#32;Known&#32;values:</emphasis>
6187 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;0:&#32;no&#32;compression</emphasis>
6188 &#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;1:&#32;RLE&#32;compressed</emphasis>
6189 &#32;&#32;&#32;compression&#32;=&#32;stbi__get16be(s);
6190 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compression&#32;&gt;&#32;1)
6191 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;compression&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PSD&#32;has&#32;an&#32;unknown&#32;compression&#32;format&quot;</emphasis>);
6192 
6193 &#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;size</emphasis>
6194 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(4,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h,&#32;0))
6195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;PSD&quot;</emphasis>);
6196 
6197 &#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;destination&#32;image.</emphasis>
6198 
6199 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!compression&#32;&amp;&amp;&#32;bitdepth&#32;==&#32;16&#32;&amp;&amp;&#32;bpc&#32;==&#32;16)&#32;{
6200 &#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(8,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h,&#32;0);
6201 &#32;&#32;&#32;&#32;&#32;&#32;ri-&gt;bits_per_channel&#32;=&#32;16;
6202 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
6203 &#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(4&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*h);
6204 
6205 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!out)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
6206 &#32;&#32;&#32;pixelCount&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*h;
6207 
6208 &#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;the&#32;data&#32;to&#32;zero.</emphasis>
6209 &#32;&#32;&#32;<emphasis role="comment">//memset(&#32;out,&#32;0,&#32;pixelCount&#32;*&#32;4&#32;);</emphasis>
6210 
6211 &#32;&#32;&#32;<emphasis role="comment">//&#32;Finally,&#32;the&#32;image&#32;data.</emphasis>
6212 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(compression)&#32;{
6213 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RLE&#32;as&#32;used&#32;by&#32;.PSD&#32;and&#32;.TIFF</emphasis>
6214 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;until&#32;you&#32;get&#32;the&#32;number&#32;of&#32;unpacked&#32;bytes&#32;you&#32;are&#32;expecting:</emphasis>
6215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;Read&#32;the&#32;next&#32;source&#32;byte&#32;into&#32;n.</emphasis>
6216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;If&#32;n&#32;is&#32;between&#32;0&#32;and&#32;127&#32;inclusive,&#32;copy&#32;the&#32;next&#32;n+1&#32;bytes&#32;literally.</emphasis>
6217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;Else&#32;if&#32;n&#32;is&#32;between&#32;-127&#32;and&#32;-1&#32;inclusive,&#32;copy&#32;the&#32;next&#32;byte&#32;-n+1&#32;times.</emphasis>
6218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;Else&#32;if&#32;n&#32;is&#32;128,&#32;noop.</emphasis>
6219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Endloop</emphasis>
6220 
6221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;RLE-compressed&#32;data&#32;is&#32;preceded&#32;by&#32;a&#32;2-byte&#32;data&#32;count&#32;for&#32;each&#32;row&#32;in&#32;the&#32;data,</emphasis>
6222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;which&#32;we&apos;re&#32;going&#32;to&#32;just&#32;skip.</emphasis>
6223 &#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;h&#32;*&#32;channelCount&#32;*&#32;2&#32;);
6224 
6225 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;RLE&#32;data&#32;by&#32;channel.</emphasis>
6226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_structchannel">channel</link>&#32;=&#32;0;&#32;<link linkend="_structchannel">channel</link>&#32;&lt;&#32;4;&#32;<link linkend="_structchannel">channel</link>++)&#32;{
6227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p;
6228 
6229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;out+<link linkend="_structchannel">channel</link>;
6230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structchannel">channel</link>&#32;&gt;=&#32;channelCount)&#32;{
6231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;this&#32;channel&#32;with&#32;default&#32;data.</emphasis>
6232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;p&#32;+=&#32;4)
6233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;(<link linkend="_structchannel">channel</link>&#32;==&#32;3&#32;?&#32;255&#32;:&#32;0);
6234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;RLE&#32;data.</emphasis>
6236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__psd_decode_rle(s,&#32;p,&#32;pixelCount))&#32;{
6237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);
6238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;corrupt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;RLE&#32;data&quot;</emphasis>);
6239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6241 &#32;&#32;&#32;&#32;&#32;&#32;}
6242 
6243 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&apos;re&#32;at&#32;the&#32;raw&#32;image&#32;data.&#32;&#32;It&apos;s&#32;each&#32;channel&#32;in&#32;order&#32;(Red,&#32;Green,&#32;Blue,&#32;Alpha,&#32;...)</emphasis>
6245 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;each&#32;channel&#32;consists&#32;of&#32;an&#32;8-bit&#32;(or&#32;16-bit)&#32;value&#32;for&#32;each&#32;pixel&#32;in&#32;the&#32;image.</emphasis>
6246 
6247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;data&#32;by&#32;channel.</emphasis>
6248 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_structchannel">channel</link>&#32;=&#32;0;&#32;<link linkend="_structchannel">channel</link>&#32;&lt;&#32;4;&#32;<link linkend="_structchannel">channel</link>++)&#32;{
6249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structchannel">channel</link>&#32;&gt;=&#32;channelCount)&#32;{
6250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;this&#32;channel&#32;with&#32;default&#32;data.</emphasis>
6251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bitdepth&#32;==&#32;16&#32;&amp;&amp;&#32;bpc&#32;==&#32;16)&#32;{
6252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*q&#32;=&#32;((stbi__uint16&#32;*)&#32;out)&#32;+&#32;<link linkend="_structchannel">channel</link>;
6253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;<link linkend="_structchannel">channel</link>&#32;==&#32;3&#32;?&#32;65535&#32;:&#32;0;
6254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;q&#32;+=&#32;4)
6255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*q&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
6256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p&#32;=&#32;out+<link linkend="_structchannel">channel</link>;
6258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>&#32;=&#32;<link linkend="_structchannel">channel</link>&#32;==&#32;3&#32;?&#32;255&#32;:&#32;0;
6259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;p&#32;+=&#32;4)
6260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1aa857b95cc76669c2a9109239ef40a47c">val</link>;
6261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;16)&#32;{&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;output&#32;bpc</emphasis>
6264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*q&#32;=&#32;((stbi__uint16&#32;*)&#32;out)&#32;+&#32;<link linkend="_structchannel">channel</link>;
6265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;q&#32;+=&#32;4)
6266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*q&#32;=&#32;(stbi__uint16)&#32;stbi__get16be(s);
6267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p&#32;=&#32;out+<link linkend="_structchannel">channel</link>;
6269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bitdepth&#32;==&#32;16)&#32;{&#32;&#32;<emphasis role="comment">//&#32;input&#32;bpc</emphasis>
6270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;p&#32;+=&#32;4)
6271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;(stbi__get16be(s)&#32;&gt;&gt;&#32;8);
6272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pixelCount;&#32;i++,&#32;p&#32;+=&#32;4)
6274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;stbi__get8(s);
6275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6278 &#32;&#32;&#32;&#32;&#32;&#32;}
6279 &#32;&#32;&#32;}
6280 
6281 &#32;&#32;&#32;<emphasis role="comment">//&#32;remove&#32;weird&#32;white&#32;matte&#32;from&#32;PSD</emphasis>
6282 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelCount&#32;&gt;=&#32;4)&#32;{
6283 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;16)&#32;{
6284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*h;&#32;++i)&#32;{
6285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__uint16&#32;*pixel&#32;=&#32;(stbi__uint16&#32;*)&#32;out&#32;+&#32;4*i;
6286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pixel[3]&#32;!=&#32;0&#32;&amp;&amp;&#32;pixel[3]&#32;!=&#32;65535)&#32;{
6287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;pixel[3]&#32;/&#32;65535.0f;
6288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ra&#32;=&#32;1.0f&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
6289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inv_a&#32;=&#32;65535.0f&#32;*&#32;(1&#32;-&#32;ra);
6290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[0]&#32;=&#32;(stbi__uint16)&#32;(pixel[0]*ra&#32;+&#32;inv_a);
6291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[1]&#32;=&#32;(stbi__uint16)&#32;(pixel[1]*ra&#32;+&#32;inv_a);
6292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[2]&#32;=&#32;(stbi__uint16)&#32;(pixel[2]*ra&#32;+&#32;inv_a);
6293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6295 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>*h;&#32;++i)&#32;{
6297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pixel&#32;=&#32;out&#32;+&#32;4*i;
6298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pixel[3]&#32;!=&#32;0&#32;&amp;&amp;&#32;pixel[3]&#32;!=&#32;255)&#32;{
6299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;pixel[3]&#32;/&#32;255.0f;
6300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ra&#32;=&#32;1.0f&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>;
6301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inv_a&#32;=&#32;255.0f&#32;*&#32;(1&#32;-&#32;ra);
6302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[0]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(pixel[0]*ra&#32;+&#32;inv_a);
6303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[1]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(pixel[1]*ra&#32;+&#32;inv_a);
6304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixel[2]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;char)&#32;(pixel[2]*ra&#32;+&#32;inv_a);
6305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6307 &#32;&#32;&#32;&#32;&#32;&#32;}
6308 &#32;&#32;&#32;}
6309 
6310 &#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;to&#32;desired&#32;output&#32;format</emphasis>
6311 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;4)&#32;{
6312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;16)
6313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__convert_format16((stbi__uint16&#32;*)&#32;out,&#32;4,&#32;req_comp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h);
6314 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
6315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;stbi__convert_format(out,&#32;4,&#32;req_comp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h);
6316 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;&#32;<emphasis role="comment">//&#32;stbi__convert_format&#32;frees&#32;input&#32;on&#32;failure</emphasis>
6317 &#32;&#32;&#32;}
6318 
6319 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;4;
6320 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;h;
6321 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>;
6322 
6323 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
6324 }
6325 <emphasis role="preprocessor">#endif</emphasis>
6326 
6327 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
6328 <emphasis role="comment">//&#32;Softimage&#32;PIC&#32;loader</emphasis>
6329 <emphasis role="comment">//&#32;by&#32;Tom&#32;Seddon</emphasis>
6330 <emphasis role="comment">//</emphasis>
6331 <emphasis role="comment">//&#32;See&#32;http://softimage.wiki.softimage.com/index.php/INFO:_PIC_file_format</emphasis>
6332 <emphasis role="comment">//&#32;See&#32;http://ozviz.wasp.uwa.edu.au/~pbourke/dataformats/softimagepic/</emphasis>
6333 
6334 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PIC</emphasis>
6335 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__pic_is4(stbi__context&#32;*s,<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str)
6336 {
6337 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
6338 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&lt;4;&#32;++i)
6339 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)str[i])
6340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6341 
6342 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6343 }
6344 
6345 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__pic_test_core(stbi__context&#32;*s)
6346 {
6347 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
6348 
6349 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__pic_is4(s,<emphasis role="stringliteral">&quot;\x53\x80\xF6\x34&quot;</emphasis>))
6350 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6351 
6352 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;84;++i)
6353 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get8(s);
6354 
6355 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__pic_is4(s,<emphasis role="stringliteral">&quot;PICT&quot;</emphasis>))
6356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6357 
6358 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6359 }
6360 
6361 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
6362 {
6363 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,<link linkend="__classes_2_gameobj_8h_1a890efa53b3d7deeeced6f3a0d6653ed3">type</link>,<link linkend="_structchannel">channel</link>;
6364 }&#32;stbi__pic_packet;
6365 
6366 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__readval(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structchannel">channel</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*dest)
6367 {
6368 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacemask">mask</link>=0x80,&#32;i;
6369 
6370 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&lt;4;&#32;++i,&#32;mask&gt;&gt;=1)&#32;{
6371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structchannel">channel</link>&#32;&amp;&#32;<link linkend="_namespacemask">mask</link>)&#32;{
6372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;PIC&#32;file&#32;too&#32;short&quot;</emphasis>);
6373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dest[i]=stbi__get8(s);
6374 &#32;&#32;&#32;&#32;&#32;&#32;}
6375 &#32;&#32;&#32;}
6376 
6377 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dest;
6378 }
6379 
6380 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__copyval(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structchannel">channel</link>,<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*dest,<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>)
6381 {
6382 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacemask">mask</link>=0x80,i;
6383 
6384 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;i&lt;4;&#32;++i,&#32;mask&gt;&gt;=1)
6385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structchannel">channel</link>&amp;<link linkend="_namespacemask">mask</link>)
6386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dest[i]=<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>[i];
6387 }
6388 
6389 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__pic_load_core(stbi__context&#32;*s,<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)
6390 {
6391 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;act_comp=0,num_packets=0,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,chained;
6392 &#32;&#32;&#32;stbi__pic_packet&#32;packets[10];
6393 
6394 &#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;will&#32;(should...)&#32;cater&#32;for&#32;even&#32;some&#32;bizarre&#32;stuff&#32;like&#32;having&#32;data</emphasis>
6395 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;the&#32;same&#32;channel&#32;in&#32;multiple&#32;packets.</emphasis>
6396 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
6397 &#32;&#32;&#32;&#32;&#32;&#32;stbi__pic_packet&#32;*packet;
6398 
6399 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_packets==<emphasis role="keyword">sizeof</emphasis>(packets)/<emphasis role="keyword">sizeof</emphasis>(packets[0]))
6400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;format&quot;</emphasis>,<emphasis role="stringliteral">&quot;too&#32;many&#32;packets&quot;</emphasis>);
6401 
6402 &#32;&#32;&#32;&#32;&#32;&#32;packet&#32;=&#32;&amp;packets[num_packets++];
6403 
6404 &#32;&#32;&#32;&#32;&#32;&#32;chained&#32;=&#32;stbi__get8(s);
6405 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;size&#32;&#32;&#32;&#32;=&#32;stbi__get8(s);
6406 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;type&#32;&#32;&#32;&#32;=&#32;stbi__get8(s);
6407 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;channel&#32;=&#32;stbi__get8(s);
6408 
6409 &#32;&#32;&#32;&#32;&#32;&#32;act_comp&#32;|=&#32;packet-&gt;channel;
6410 
6411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;file&#32;too&#32;short&#32;(reading&#32;packets)&quot;</emphasis>);
6412 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(packet-&gt;size&#32;!=&#32;8)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;format&quot;</emphasis>,<emphasis role="stringliteral">&quot;packet&#32;isn&apos;t&#32;8bpp&quot;</emphasis>);
6413 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(chained);
6414 
6415 &#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;(act_comp&#32;&amp;&#32;0x10&#32;?&#32;4&#32;:&#32;3);&#32;<emphasis role="comment">//&#32;has&#32;alpha&#32;channel?</emphasis>
6416 
6417 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>=0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;{
6418 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;packet_idx;
6419 
6420 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(packet_idx=0;&#32;packet_idx&#32;&lt;&#32;num_packets;&#32;++packet_idx)&#32;{
6421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__pic_packet&#32;*packet&#32;=&#32;&amp;packets[packet_idx];
6422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*dest&#32;=&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>+<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>*4;
6423 
6424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(packet-&gt;type)&#32;{
6425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
6426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;format&quot;</emphasis>,<emphasis role="stringliteral">&quot;packet&#32;has&#32;bad&#32;compression&#32;type&quot;</emphasis>);
6427 
6428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:&#32;{<emphasis role="comment">//uncompressed</emphasis>
6429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
6430 
6431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>=0;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;dest+=4)
6432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__readval(s,packet-&gt;channel,dest))
6433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
6435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6436 
6437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:<emphasis role="comment">//Pure&#32;RLE</emphasis>
6438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
6439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;left=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;i;
6440 
6441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(left&gt;0)&#32;{
6442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,<link linkend="_classvalue">value</link>[4];
6443 
6444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>=stbi__get8(s);
6445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;file&#32;too&#32;short&#32;(pure&#32;read&#32;count)&quot;</emphasis>);
6446 
6447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;&#32;left)
6448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;left;
6449 
6450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__readval(s,packet-&gt;channel,<link linkend="_classvalue">value</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6451 
6452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++i,dest+=4)
6453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__copyval(packet-&gt;channel,dest,<link linkend="_classvalue">value</link>);
6454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;-=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;
6455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
6458 
6459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{<emphasis role="comment">//Mixed&#32;RLE</emphasis>
6460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;left=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
6461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(left&gt;0)&#32;{
6462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbi__get8(s),&#32;i;
6463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;file&#32;too&#32;short&#32;(mixed&#32;read&#32;count)&quot;</emphasis>);
6464 
6465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;=&#32;128)&#32;{&#32;<emphasis role="comment">//&#32;Repeated</emphasis>
6466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="_classvalue">value</link>[4];
6467 
6468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>==128)
6469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbi__get16be(s);
6470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
6471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;-=&#32;127;
6472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;&#32;left)
6473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;scanline&#32;overrun&quot;</emphasis>);
6474 
6475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__readval(s,packet-&gt;channel,<link linkend="_classvalue">value</link>))
6476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6477 
6478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;++i,&#32;dest&#32;+=&#32;4)
6479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__copyval(packet-&gt;channel,dest,<link linkend="_classvalue">value</link>);
6480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;Raw</emphasis>
6481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;
6482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&gt;left)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;scanline&#32;overrun&quot;</emphasis>);
6483 
6484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;++i,&#32;dest+=4)
6485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__readval(s,packet-&gt;channel,dest))
6486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left-=<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;
6489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
6491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6493 &#32;&#32;&#32;&#32;&#32;&#32;}
6494 &#32;&#32;&#32;}
6495 
6496 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
6497 }
6498 
6499 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__pic_load(stbi__context&#32;*s,<emphasis role="keywordtype">int</emphasis>&#32;*px,<emphasis role="keywordtype">int</emphasis>&#32;*py,<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
6500 {
6501 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
6502 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;internal_comp;
6503 &#32;&#32;&#32;STBI_NOTUSED(ri);
6504 
6505 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;internal_comp;
6506 
6507 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&lt;92;&#32;++i)
6508 &#32;&#32;&#32;&#32;&#32;&#32;stbi__get8(s);
6509 
6510 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get16be(s);
6511 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;stbi__get16be(s);
6512 
6513 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6514 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6515 
6516 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;file&quot;</emphasis>,<emphasis role="stringliteral">&quot;file&#32;too&#32;short&#32;(pic&#32;header)&quot;</emphasis>);
6517 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;4,&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PIC&#32;image&#32;too&#32;large&#32;to&#32;decode&quot;</emphasis>);
6518 
6519 &#32;&#32;&#32;stbi__get32be(s);&#32;<emphasis role="comment">//skip&#32;`ratio&apos;</emphasis>
6520 &#32;&#32;&#32;stbi__get16be(s);&#32;<emphasis role="comment">//skip&#32;`fields&apos;</emphasis>
6521 &#32;&#32;&#32;stbi__get16be(s);&#32;<emphasis role="comment">//skip&#32;`pad&apos;</emphasis>
6522 
6523 &#32;&#32;&#32;<emphasis role="comment">//&#32;intermediate&#32;buffer&#32;is&#32;RGBA</emphasis>
6524 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad3(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;4,&#32;0);
6525 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
6526 &#32;&#32;&#32;memset(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,&#32;0xff,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>*4);
6527 
6528 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__pic_load_core(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>))&#32;{
6529 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>);
6530 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>=0;
6531 &#32;&#32;&#32;}
6532 &#32;&#32;&#32;*px&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>;
6533 &#32;&#32;&#32;*py&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>;
6534 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;0)&#32;req_comp&#32;=&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>;
6535 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>=stbi__convert_format(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>,4,req_comp,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
6536 
6537 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
6538 }
6539 
6540 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__pic_test(stbi__context&#32;*s)
6541 {
6542 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__pic_test_core(s);
6543 &#32;&#32;&#32;stbi__rewind(s);
6544 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
6545 }
6546 <emphasis role="preprocessor">#endif</emphasis>
6547 
6548 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
6549 <emphasis role="comment">//&#32;GIF&#32;loader&#32;--&#32;public&#32;domain&#32;by&#32;Jean-Marc&#32;Lienher&#32;--&#32;simplified/shrunk&#32;by&#32;stb</emphasis>
6550 
6551 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_GIF</emphasis>
6552 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
6553 {
6554 &#32;&#32;&#32;stbi__int16&#32;prefix;
6555 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>;
6556 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;suffix;
6557 }&#32;stbi__gif_lzw;
6558 
6559 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
6560 {
6561 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,h;
6562 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;output&#32;buffer&#32;(always&#32;4&#32;components)</emphasis>
6563 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*background;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;current&#32;&quot;background&quot;&#32;as&#32;far&#32;as&#32;a&#32;gif&#32;is&#32;concerned</emphasis>
6564 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*history;
6565 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3d4f56e54693280c6d9b1177c12c867d">flags</link>,&#32;bgindex,&#32;ratio,&#32;transparent,&#32;eflags;
6566 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;&#32;pal[256][4];
6567 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;lpal[256][4];
6568 &#32;&#32;&#32;stbi__gif_lzw&#32;codes[8192];
6569 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*color_table;
6570 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_parser_8h_1a6b22a2b999bcc2d61e471470a4ef8e96">parse</link>,&#32;<link linkend="_group__core__func__common_1ga015a1261ff23e12650211aa872863cce">step</link>;
6571 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lflags;
6572 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;start_x,&#32;start_y;
6573 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_x,&#32;max_y;
6574 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cur_x,&#32;cur_y;
6575 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;line_size;
6576 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;delay;
6577 }&#32;stbi__gif;
6578 
6579 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__gif_test_raw(stbi__context&#32;*s)
6580 {
6581 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz;
6582 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;G&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6583 &#32;&#32;&#32;sz&#32;=&#32;stbi__get8(s);
6584 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sz&#32;!=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>&#32;&amp;&amp;&#32;sz&#32;!=&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6585 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6586 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6587 }
6588 
6589 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__gif_test(stbi__context&#32;*s)
6590 {
6591 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__gif_test_raw(s);
6592 &#32;&#32;&#32;stbi__rewind(s);
6593 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
6594 }
6595 
6596 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__gif_parse_colortable(stbi__context&#32;*s,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;pal[256][4],&#32;<emphasis role="keywordtype">int</emphasis>&#32;num_entries,&#32;<emphasis role="keywordtype">int</emphasis>&#32;transp)
6597 {
6598 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
6599 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;num_entries;&#32;++i)&#32;{
6600 &#32;&#32;&#32;&#32;&#32;&#32;pal[i][2]&#32;=&#32;stbi__get8(s);
6601 &#32;&#32;&#32;&#32;&#32;&#32;pal[i][1]&#32;=&#32;stbi__get8(s);
6602 &#32;&#32;&#32;&#32;&#32;&#32;pal[i][0]&#32;=&#32;stbi__get8(s);
6603 &#32;&#32;&#32;&#32;&#32;&#32;pal[i][3]&#32;=&#32;transp&#32;==&#32;i&#32;?&#32;0&#32;:&#32;255;
6604 &#32;&#32;&#32;}
6605 }
6606 
6607 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__gif_header(stbi__context&#32;*s,&#32;stbi__gif&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;is_info)
6608 {
6609 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<link linkend="_namespaceversion">version</link>;
6610 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;G&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>&#32;||&#32;stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>)
6611 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;not&#32;GIF&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6612 
6613 &#32;&#32;&#32;<link linkend="_namespaceversion">version</link>&#32;=&#32;stbi__get8(s);
6614 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespaceversion">version</link>&#32;!=&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>&#32;&amp;&amp;&#32;<link linkend="_namespaceversion">version</link>&#32;!=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;not&#32;GIF&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6615 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;not&#32;GIF&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6616 
6617 &#32;&#32;&#32;stbi__g_failure_reason&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
6618 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;=&#32;stbi__get16le(s);
6619 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h&#32;=&#32;stbi__get16le(s);
6620 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;flags&#32;=&#32;stbi__get8(s);
6621 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;bgindex&#32;=&#32;stbi__get8(s);
6622 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;ratio&#32;=&#32;stbi__get8(s);
6623 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;=&#32;-1;
6624 
6625 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6626 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
6627 
6628 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;!=&#32;0)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;4;&#32;&#32;<emphasis role="comment">//&#32;can&apos;t&#32;actually&#32;tell&#32;whether&#32;it&apos;s&#32;3&#32;or&#32;4&#32;until&#32;we&#32;parse&#32;the&#32;comments</emphasis>
6629 
6630 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_info)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6631 
6632 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;flags&#32;&amp;&#32;0x80)
6633 &#32;&#32;&#32;&#32;&#32;&#32;stbi__gif_parse_colortable(s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal,&#32;2&#32;&lt;&lt;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;flags&#32;&amp;&#32;7),&#32;-1);
6634 
6635 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6636 }
6637 
6638 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__gif_info_raw(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
6639 {
6640 &#32;&#32;&#32;stbi__gif*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>&#32;=&#32;(stbi__gif*)&#32;stbi__malloc(<emphasis role="keyword">sizeof</emphasis>(stbi__gif));
6641 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
6642 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__gif_header(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;1))&#32;{
6643 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
6644 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
6645 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
6646 &#32;&#32;&#32;}
6647 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w;
6648 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h;
6649 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
6650 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
6651 }
6652 
6653 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__out_gif_code(stbi__gif&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;stbi__uint16&#32;code)
6654 {
6655 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*p,&#32;*c;
6656 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx;
6657 
6658 &#32;&#32;&#32;<emphasis role="comment">//&#32;recurse&#32;to&#32;decode&#32;the&#32;prefixes,&#32;since&#32;the&#32;linked-list&#32;is&#32;backwards,</emphasis>
6659 &#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;working&#32;backwards&#32;through&#32;an&#32;interleaved&#32;image&#32;would&#32;be&#32;nasty</emphasis>
6660 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[code].prefix&#32;&gt;=&#32;0)
6661 &#32;&#32;&#32;&#32;&#32;&#32;stbi__out_gif_code(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[code].prefix);
6662 
6663 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_y)&#32;<emphasis role="keywordflow">return</emphasis>;
6664 
6665 &#32;&#32;&#32;idx&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y;
6666 &#32;&#32;&#32;p&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out[idx];
6667 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history[idx&#32;/&#32;4]&#32;=&#32;1;
6668 
6669 &#32;&#32;&#32;c&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;color_table[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[code].suffix&#32;*&#32;4];
6670 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c[3]&#32;&gt;&#32;128)&#32;{&#32;<emphasis role="comment">//&#32;don&apos;t&#32;render&#32;transparent&#32;pixels;</emphasis>
6671 &#32;&#32;&#32;&#32;&#32;&#32;p[0]&#32;=&#32;c[2];
6672 &#32;&#32;&#32;&#32;&#32;&#32;p[1]&#32;=&#32;c[1];
6673 &#32;&#32;&#32;&#32;&#32;&#32;p[2]&#32;=&#32;c[0];
6674 &#32;&#32;&#32;&#32;&#32;&#32;p[3]&#32;=&#32;c[3];
6675 &#32;&#32;&#32;}
6676 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_x&#32;+=&#32;4;
6677 
6678 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_x&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_x)&#32;{
6679 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_x;
6680 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;+=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;step;
6681 
6682 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;&gt;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_y&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;parse&#32;&gt;&#32;0)&#32;{
6683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;step&#32;=&#32;(1&#32;&lt;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;parse)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size;
6684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_y&#32;+&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;step&#32;&gt;&gt;&#32;1);
6685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;parse;
6686 &#32;&#32;&#32;&#32;&#32;&#32;}
6687 &#32;&#32;&#32;}
6688 }
6689 
6690 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__process_gif_raster(stbi__context&#32;*s,&#32;stbi__gif&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>)
6691 {
6692 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;lzw_cs;
6693 &#32;&#32;&#32;stbi__int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;init_code;
6694 &#32;&#32;&#32;stbi__uint32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>;
6695 &#32;&#32;&#32;stbi__int32&#32;codesize,&#32;codemask,&#32;avail,&#32;oldcode,&#32;bits,&#32;valid_bits,&#32;clear;
6696 &#32;&#32;&#32;stbi__gif_lzw&#32;*p;
6697 
6698 &#32;&#32;&#32;lzw_cs&#32;=&#32;stbi__get8(s);
6699 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lzw_cs&#32;&gt;&#32;12)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
6700 &#32;&#32;&#32;clear&#32;=&#32;1&#32;&lt;&lt;&#32;lzw_cs;
6701 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;=&#32;1;
6702 &#32;&#32;&#32;codesize&#32;=&#32;lzw_cs&#32;+&#32;1;
6703 &#32;&#32;&#32;codemask&#32;=&#32;(1&#32;&lt;&lt;&#32;codesize)&#32;-&#32;1;
6704 &#32;&#32;&#32;bits&#32;=&#32;0;
6705 &#32;&#32;&#32;valid_bits&#32;=&#32;0;
6706 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(init_code&#32;=&#32;0;&#32;init_code&#32;&lt;&#32;clear;&#32;init_code++)&#32;{
6707 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[init_code].prefix&#32;=&#32;-1;
6708 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[init_code].first&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;init_code;
6709 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[init_code].suffix&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;init_code;
6710 &#32;&#32;&#32;}
6711 
6712 &#32;&#32;&#32;<emphasis role="comment">//&#32;support&#32;no&#32;starting&#32;clear&#32;code</emphasis>
6713 &#32;&#32;&#32;avail&#32;=&#32;clear+2;
6714 &#32;&#32;&#32;oldcode&#32;=&#32;-1;
6715 
6716 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;0;
6717 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
6718 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valid_bits&#32;&lt;&#32;codesize)&#32;{
6719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;==&#32;0)&#32;{
6720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s);&#32;<emphasis role="comment">//&#32;start&#32;new&#32;block</emphasis>
6721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;==&#32;0)
6722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out;
6723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bits&#32;|=&#32;(stbi__int32)&#32;stbi__get8(s)&#32;&lt;&lt;&#32;valid_bits;
6726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid_bits&#32;+=&#32;8;
6727 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__int32&#32;code&#32;=&#32;bits&#32;&amp;&#32;codemask;
6729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bits&#32;&gt;&gt;=&#32;codesize;
6730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid_bits&#32;-=&#32;codesize;
6731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@OPTIMIZE:&#32;is&#32;there&#32;some&#32;way&#32;we&#32;can&#32;accelerate&#32;the&#32;non-clear&#32;path?</emphasis>
6732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code&#32;==&#32;clear)&#32;{&#32;&#32;<emphasis role="comment">//&#32;clear&#32;code</emphasis>
6733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codesize&#32;=&#32;lzw_cs&#32;+&#32;1;
6734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codemask&#32;=&#32;(1&#32;&lt;&lt;&#32;codesize)&#32;-&#32;1;
6735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail&#32;=&#32;clear&#32;+&#32;2;
6736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldcode&#32;=&#32;-1;
6737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>&#32;=&#32;0;
6738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code&#32;==&#32;clear&#32;+&#32;1)&#32;{&#32;<emphasis role="comment">//&#32;end&#32;of&#32;stream&#32;code</emphasis>
6739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
6740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s))&#32;&gt;&#32;0)
6741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
6742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out;
6743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code&#32;&lt;=&#32;avail)&#32;{
6744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>)&#32;{
6745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;no&#32;clear&#32;code&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6747 
6748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(oldcode&#32;&gt;=&#32;0)&#32;{
6749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[avail++];
6750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(avail&#32;&gt;&#32;8192)&#32;{
6751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;many&#32;codes&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6753 
6754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;prefix&#32;=&#32;(stbi__int16)&#32;oldcode;
6755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;first&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[oldcode].first;
6756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p-&gt;suffix&#32;=&#32;(code&#32;==&#32;avail)&#32;?&#32;p-&gt;first&#32;:&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;codes[code].<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ada771a798be00a696d20928c9a3371e7">first</link>;
6757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(code&#32;==&#32;avail)
6758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;illegal&#32;code&#32;in&#32;raster&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6759 
6760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__out_gif_code(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;(stbi__uint16)&#32;code);
6761 
6762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((avail&#32;&amp;&#32;codemask)&#32;==&#32;0&#32;&amp;&amp;&#32;avail&#32;&lt;=&#32;0x0FFF)&#32;{
6763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codesize++;
6764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;codemask&#32;=&#32;(1&#32;&lt;&lt;&#32;codesize)&#32;-&#32;1;
6765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6766 
6767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldcode&#32;=&#32;code;
6768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;illegal&#32;code&#32;in&#32;raster&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6771 &#32;&#32;&#32;&#32;&#32;&#32;}
6772 &#32;&#32;&#32;}
6773 }
6774 
6775 <emphasis role="comment">//&#32;this&#32;function&#32;is&#32;designed&#32;to&#32;support&#32;animated&#32;gifs,&#32;although&#32;stb_image&#32;doesn&apos;t&#32;support&#32;it</emphasis>
6776 <emphasis role="comment">//&#32;two&#32;back&#32;is&#32;the&#32;image&#32;from&#32;two&#32;frames&#32;ago,&#32;used&#32;for&#32;a&#32;very&#32;specific&#32;disposal&#32;format</emphasis>
6777 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*stbi__gif_load_next(stbi__context&#32;*s,&#32;stbi__gif&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*two_back)
6778 {
6779 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dispose;
6780 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;first_frame;
6781 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>;
6782 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcount;
6783 &#32;&#32;&#32;STBI_NOTUSED(req_comp);
6784 
6785 &#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;first&#32;frame,&#32;any&#32;non-written&#32;pixels&#32;get&#32;the&#32;background&#32;colour&#32;(non-transparent)</emphasis>
6786 &#32;&#32;&#32;first_frame&#32;=&#32;0;
6787 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out&#32;==&#32;0)&#32;{
6788 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__gif_header(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;stbi__g_failure_reason&#32;set&#32;by&#32;stbi__gif_header</emphasis>
6789 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad3sizes_valid(4,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h,&#32;0))
6790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;GIF&#32;image&#32;is&#32;too&#32;large&quot;</emphasis>);
6791 &#32;&#32;&#32;&#32;&#32;&#32;pcount&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h;
6792 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(4&#32;*&#32;pcount);
6793 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(4&#32;*&#32;pcount);
6794 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc(pcount);
6795 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out&#32;||&#32;!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background&#32;||&#32;!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history)
6796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
6797 
6798 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;image&#32;is&#32;treated&#32;as&#32;&quot;transparent&quot;&#32;at&#32;the&#32;start&#32;-&#32;ie,&#32;nothing&#32;overwrites&#32;the&#32;current&#32;background;</emphasis>
6799 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;background&#32;colour&#32;is&#32;only&#32;used&#32;for&#32;pixels&#32;that&#32;are&#32;not&#32;rendered&#32;first&#32;frame,&#32;after&#32;that&#32;&quot;background&quot;</emphasis>
6800 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;color&#32;refers&#32;to&#32;the&#32;color&#32;that&#32;was&#32;there&#32;the&#32;previous&#32;frame.</emphasis>
6801 &#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out,&#32;0x00,&#32;4&#32;*&#32;pcount);
6802 &#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background,&#32;0x00,&#32;4&#32;*&#32;pcount);&#32;<emphasis role="comment">//&#32;state&#32;of&#32;the&#32;background&#32;(starts&#32;transparent)</emphasis>
6803 &#32;&#32;&#32;&#32;&#32;&#32;memset(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history,&#32;0x00,&#32;pcount);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pixels&#32;that&#32;were&#32;affected&#32;previous&#32;frame</emphasis>
6804 &#32;&#32;&#32;&#32;&#32;&#32;first_frame&#32;=&#32;1;
6805 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6806 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;second&#32;frame&#32;-&#32;how&#32;do&#32;we&#32;dispose&#32;of&#32;the&#32;previous&#32;one?</emphasis>
6807 &#32;&#32;&#32;&#32;&#32;&#32;dispose&#32;=&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;eflags&#32;&amp;&#32;0x1C)&#32;&gt;&gt;&#32;2;
6808 &#32;&#32;&#32;&#32;&#32;&#32;pcount&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h;
6809 
6810 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((dispose&#32;==&#32;3)&#32;&amp;&amp;&#32;(two_back&#32;==&#32;0))&#32;{
6811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispose&#32;=&#32;2;&#32;<emphasis role="comment">//&#32;if&#32;I&#32;don&apos;t&#32;have&#32;an&#32;image&#32;to&#32;revert&#32;back&#32;to,&#32;default&#32;to&#32;the&#32;old&#32;background</emphasis>
6812 &#32;&#32;&#32;&#32;&#32;&#32;}
6813 
6814 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dispose&#32;==&#32;3)&#32;{&#32;<emphasis role="comment">//&#32;use&#32;previous&#32;graphic</emphasis>
6815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(pi&#32;=&#32;0;&#32;<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>&#32;&lt;&#32;pcount;&#32;++<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>)&#32;{
6816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history[pi])&#32;{
6817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out[pi&#32;*&#32;4],&#32;&amp;two_back[pi&#32;*&#32;4],&#32;4&#32;);
6818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6820 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dispose&#32;==&#32;2)&#32;{
6821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;restore&#32;what&#32;was&#32;changed&#32;last&#32;frame&#32;to&#32;background&#32;before&#32;that&#32;frame;</emphasis>
6822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(pi&#32;=&#32;0;&#32;<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>&#32;&lt;&#32;pcount;&#32;++<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>)&#32;{
6823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history[pi])&#32;{
6824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out[pi&#32;*&#32;4],&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background[pi&#32;*&#32;4],&#32;4&#32;);
6825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6827 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;a&#32;non-disposal&#32;case&#32;eithe&#32;way,&#32;so&#32;just</emphasis>
6829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;leave&#32;the&#32;pixels&#32;as&#32;is,&#32;and&#32;they&#32;will&#32;become&#32;the&#32;new&#32;background</emphasis>
6830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1:&#32;do&#32;not&#32;dispose</emphasis>
6831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;0:&#32;&#32;not&#32;specified.</emphasis>
6832 &#32;&#32;&#32;&#32;&#32;&#32;}
6833 
6834 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;background&#32;is&#32;what&#32;out&#32;is&#32;after&#32;the&#32;undoing&#32;of&#32;the&#32;previou&#32;frame;</emphasis>
6835 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out,&#32;4&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h&#32;);
6836 &#32;&#32;&#32;}
6837 
6838 &#32;&#32;&#32;<emphasis role="comment">//&#32;clear&#32;my&#32;history;</emphasis>
6839 &#32;&#32;&#32;memset(&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history,&#32;0x00,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pixels&#32;that&#32;were&#32;affected&#32;previous&#32;frame</emphasis>
6840 
6841 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
6842 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tag&#32;=&#32;stbi__get8(s);
6843 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(tag)&#32;{
6844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x2C:&#32;<emphasis role="comment">/*&#32;Image&#32;Descriptor&#32;*/</emphasis>
6845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
6846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__int32&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;h;
6847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*o;
6848 
6849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get16le(s);
6850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;stbi__get16le(s);
6851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;stbi__get16le(s);
6852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;stbi__get16le(s);
6853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;&gt;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w))&#32;||&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;+&#32;h)&#32;&gt;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h)))
6854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;Image&#32;Descriptor&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6855 
6856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;4;
6857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_x&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;*&#32;4;
6858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size;
6859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_x&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_x&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;*&#32;4;
6860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_y&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_y&#32;+&#32;h&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size;
6861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_x&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_x;
6862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;&#32;&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;start_y;
6863 
6864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;width&#32;of&#32;the&#32;specified&#32;rectangle&#32;is&#32;0,&#32;that&#32;means</emphasis>
6865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;may&#32;not&#32;see&#32;*any*&#32;pixels&#32;or&#32;the&#32;image&#32;is&#32;malformed;</emphasis>
6866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;make&#32;sure&#32;this&#32;is&#32;caught,&#32;move&#32;the&#32;current&#32;y&#32;down&#32;to</emphasis>
6867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;max_y&#32;(which&#32;is&#32;what&#32;out_gif_code&#32;checks).</emphasis>
6868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;==&#32;0)
6869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;cur_y&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;max_y;
6870 
6871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lflags&#32;=&#32;stbi__get8(s);
6872 
6873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lflags&#32;&amp;&#32;0x40)&#32;{
6874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;step&#32;=&#32;8&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size;&#32;<emphasis role="comment">//&#32;first&#32;interlaced&#32;spacing</emphasis>
6875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;parse&#32;=&#32;3;
6876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;step&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;line_size;
6878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;parse&#32;=&#32;0;
6879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6880 
6881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lflags&#32;&amp;&#32;0x80)&#32;{
6882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__gif_parse_colortable(s,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lpal,&#32;2&#32;&lt;&lt;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lflags&#32;&amp;&#32;7),&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;eflags&#32;&amp;&#32;0x01&#32;?&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;:&#32;-1);
6883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;color_table&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;lpal;
6884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;flags&#32;&amp;&#32;0x80)&#32;{
6885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;color_table&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal;
6886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
6887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;missing&#32;color&#32;table&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6888 
6889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o&#32;=&#32;stbi__process_gif_raster(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>);
6890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!o)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
6891 
6892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;this&#32;was&#32;the&#32;first&#32;frame,</emphasis>
6893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcount&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;h;
6894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(first_frame&#32;&amp;&amp;&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;bgindex&#32;&gt;&#32;0))&#32;{
6895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;first&#32;frame,&#32;any&#32;pixel&#32;not&#32;drawn&#32;to&#32;gets&#32;the&#32;background&#32;color</emphasis>
6896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(pi&#32;=&#32;0;&#32;<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>&#32;&lt;&#32;pcount;&#32;++<link linkend="_group__ext__scalar__constants_1ga94bafeb2a0f23ab6450fed1f98ee4e45">pi</link>)&#32;{
6897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history[pi]&#32;==&#32;0)&#32;{
6898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;bgindex][3]&#32;=&#32;255;&#32;<emphasis role="comment">//&#32;just&#32;in&#32;case&#32;it&#32;was&#32;made&#32;transparent,&#32;undo&#32;that;&#32;It&#32;will&#32;be&#32;reset&#32;next&#32;frame&#32;if&#32;need&#32;be;</emphasis>
6899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out[pi&#32;*&#32;4],&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;bgindex],&#32;4&#32;);
6900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6903 
6904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;o;
6905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6906 
6907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x21:&#32;<emphasis role="comment">//&#32;Comment&#32;Extension.</emphasis>
6908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
6909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
6910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ext&#32;=&#32;stbi__get8(s);
6911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ext&#32;==&#32;0xF9)&#32;{&#32;<emphasis role="comment">//&#32;Graphic&#32;Control&#32;Extension.</emphasis>
6912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s);
6913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;==&#32;4)&#32;{
6914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;eflags&#32;=&#32;stbi__get8(s);
6915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;delay&#32;=&#32;10&#32;*&#32;stbi__get16le(s);&#32;<emphasis role="comment">//&#32;delay&#32;-&#32;1/100th&#32;of&#32;a&#32;second,&#32;saving&#32;as&#32;1/1000ths.</emphasis>
6916 
6917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unset&#32;old&#32;transparent</emphasis>
6918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;&gt;=&#32;0)&#32;{
6919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent][3]&#32;=&#32;255;
6920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;eflags&#32;&amp;&#32;0x01)&#32;{
6922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;=&#32;stbi__get8(s);
6923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;&gt;=&#32;0)&#32;{
6924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;pal[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent][3]&#32;=&#32;0;
6925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;don&apos;t&#32;need&#32;transparent</emphasis>
6928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;1);
6929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;transparent&#32;=&#32;-1;
6930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
6933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
6934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s))&#32;!=&#32;0)&#32;{
6937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__skip(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
6938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
6940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
6941 
6942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0x3B:&#32;<emphasis role="comment">//&#32;gif&#32;stream&#32;termination&#32;code</emphasis>
6943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;s;&#32;<emphasis role="comment">//&#32;using&#32;&apos;1&apos;&#32;causes&#32;warning&#32;on&#32;some&#32;compilers</emphasis>
6944 
6945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
6946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;unknown&#32;code&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;GIF&quot;</emphasis>);
6947 &#32;&#32;&#32;&#32;&#32;&#32;}
6948 &#32;&#32;&#32;}
6949 }
6950 
6951 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__load_gif_main_outofmem(stbi__gif&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**delays)
6952 {
6953 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;out);
6954 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;history);
6955 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>-&gt;background);
6956 
6957 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);
6958 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delays&#32;&amp;&amp;&#32;*delays)&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(*delays);
6959 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
6960 }
6961 
6962 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__load_gif_main(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;**delays,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
6963 {
6964 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__gif_test(s))&#32;{
6965 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layers&#32;=&#32;0;
6966 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;0;
6967 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out&#32;=&#32;0;
6968 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*two_back&#32;=&#32;0;
6969 &#32;&#32;&#32;&#32;&#32;&#32;stbi__gif&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>;
6970 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;
6971 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_size&#32;=&#32;0;
6972 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;delays_size&#32;=&#32;0;
6973 
6974 &#32;&#32;&#32;&#32;&#32;&#32;STBI_NOTUSED(out_size);
6975 &#32;&#32;&#32;&#32;&#32;&#32;STBI_NOTUSED(delays_size);
6976 
6977 &#32;&#32;&#32;&#32;&#32;&#32;memset(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>));
6978 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delays)&#32;{
6979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*delays&#32;=&#32;0;
6980 &#32;&#32;&#32;&#32;&#32;&#32;}
6981 
6982 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
6983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;stbi__gif_load_next(s,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp,&#32;two_back);
6984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;==&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;s)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">//&#32;end&#32;of&#32;animated&#32;gif&#32;marker</emphasis>
6985 
6986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>)&#32;{
6987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.w;
6988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.h;
6989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++layers;
6990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.w&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.h&#32;*&#32;4;
6991 
6992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out)&#32;{
6993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*tmp&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*)&#32;STBI_REALLOC_SIZED(&#32;out,&#32;out_size,&#32;layers&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>&#32;);
6994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tmp)
6995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_gif_main_outofmem(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;out,&#32;delays);
6996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
6997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*)&#32;tmp;
6998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_size&#32;=&#32;layers&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;
6999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7000 
7001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delays)&#32;{
7002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*new_delays&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>*)&#32;STBI_REALLOC_SIZED(&#32;*delays,&#32;delays_size,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>)&#32;*&#32;layers&#32;);
7003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!new_delays)
7004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_gif_main_outofmem(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;out,&#32;delays);
7005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*delays&#32;=&#32;new_delays;
7006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delays_size&#32;=&#32;layers&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(int);
7007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>*)stbi__malloc(&#32;layers&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>&#32;);
7010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!out)
7011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_gif_main_outofmem(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;out,&#32;delays);
7012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_size&#32;=&#32;layers&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;
7013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delays)&#32;{
7014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*delays&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>*)&#32;stbi__malloc(&#32;layers&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>)&#32;);
7015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*delays)
7016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__load_gif_main_outofmem(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;out,&#32;delays);
7017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delays_size&#32;=&#32;layers&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(int);
7018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;out&#32;+&#32;((layers&#32;-&#32;1)&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>),&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>&#32;);
7021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layers&#32;&gt;=&#32;2)&#32;{
7022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;two_back&#32;=&#32;out&#32;-&#32;2&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1af167f0227db62527e3f6b3685385aa8e">stride</link>;
7023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7024 
7025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delays)&#32;{
7026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*delays)[layers&#32;-&#32;1U]&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.delay;
7027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7029 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;!=&#32;0);
7030 
7031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;free&#32;temp&#32;buffer;</emphasis>
7032 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.out);
7033 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.history);
7034 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.background);
7035 
7036 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;do&#32;the&#32;final&#32;conversion&#32;after&#32;loading&#32;everything;</emphasis>
7037 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;4)
7038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;stbi__convert_format(out,&#32;4,&#32;req_comp,&#32;layers&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.h);
7039 
7040 &#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;layers;
7041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
7042 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;not&#32;GIF&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;was&#32;not&#32;as&#32;a&#32;gif&#32;type.&quot;</emphasis>);
7044 &#32;&#32;&#32;}
7045 }
7046 
7047 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__gif_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
7048 {
7049 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;0;
7050 &#32;&#32;&#32;stbi__gif&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>;
7051 &#32;&#32;&#32;memset(&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>));
7052 &#32;&#32;&#32;STBI_NOTUSED(ri);
7053 
7054 &#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;stbi__gif_load_next(s,&#32;&amp;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;req_comp,&#32;0);
7055 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;==&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;s)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">//&#32;end&#32;of&#32;animated&#32;gif&#32;marker</emphasis>
7056 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>)&#32;{
7057 &#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.w;
7058 &#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.h;
7059 
7060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;moved&#32;conversion&#32;to&#32;after&#32;successful&#32;load&#32;so&#32;that&#32;the&#32;same</emphasis>
7061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;can&#32;be&#32;done&#32;for&#32;multiple&#32;frames.</emphasis>
7062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;4)
7063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>&#32;=&#32;stbi__convert_format(<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>,&#32;4,&#32;req_comp,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.w,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.h);
7064 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.out)&#32;{
7065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&#32;was&#32;an&#32;error&#32;and&#32;we&#32;allocated&#32;an&#32;image&#32;buffer,&#32;free&#32;it!</emphasis>
7066 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.out);
7067 &#32;&#32;&#32;}
7068 
7069 &#32;&#32;&#32;<emphasis role="comment">//&#32;free&#32;buffers&#32;needed&#32;for&#32;multiple&#32;frame&#32;loading;</emphasis>
7070 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.history);
7071 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9cd653b1648845554169fbc3a3f6d37a">g</link>.background);
7072 
7073 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer__find__lsb_8cpp_1a1f9aca42e2010bb82488684dee1a66ea">u</link>;
7074 }
7075 
7076 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__gif_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7077 {
7078 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__gif_info_raw(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
7079 }
7080 <emphasis role="preprocessor">#endif</emphasis>
7081 
7082 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
7083 <emphasis role="comment">//&#32;Radiance&#32;RGBE&#32;HDR&#32;loader</emphasis>
7084 <emphasis role="comment">//&#32;originally&#32;by&#32;Nicolas&#32;Schulz</emphasis>
7085 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_HDR</emphasis>
7086 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__hdr_test_core(stbi__context&#32;*s,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*signature)
7087 {
7088 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
7089 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;signature[i];&#32;++i)
7090 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get8(s)&#32;!=&#32;signature[i])
7091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7092 &#32;&#32;&#32;stbi__rewind(s);
7093 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7094 }
7095 
7096 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__hdr_test(stbi__context*&#32;s)
7097 {
7098 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__hdr_test_core(s,&#32;<emphasis role="stringliteral">&quot;#?RADIANCE\n&quot;</emphasis>);
7099 &#32;&#32;&#32;stbi__rewind(s);
7100 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>)&#32;{
7101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__hdr_test_core(s,&#32;<emphasis role="stringliteral">&quot;#?RGBE\n&quot;</emphasis>);
7102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
7103 &#32;&#32;&#32;}
7104 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
7105 }
7106 
7107 <emphasis role="preprocessor">#define&#32;STBI__HDR_BUFLEN&#32;&#32;1024</emphasis>
7108 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*stbi__hdr_gettoken(stbi__context&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>)
7109 {
7110 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>=0;
7111 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
7112 
7113 &#32;&#32;&#32;c&#32;=&#32;(char)&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
7114 
7115 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;&amp;&amp;&#32;c&#32;!=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>)&#32;{
7116 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>++]&#32;=&#32;c;
7117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;==&#32;STBI__HDR_BUFLEN-1)&#32;{
7118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;flush&#32;to&#32;end&#32;of&#32;line</emphasis>
7119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;&amp;&amp;&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;!=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>)
7120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;;
7121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
7122 &#32;&#32;&#32;&#32;&#32;&#32;}
7123 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;(char)&#32;stbi__get8(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
7124 &#32;&#32;&#32;}
7125 
7126 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>]&#32;=&#32;0;
7127 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>;
7128 }
7129 
7130 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;stbi__hdr_convert(<emphasis role="keywordtype">float</emphasis>&#32;*output,&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*input,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp)
7131 {
7132 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;input[3]&#32;!=&#32;0&#32;)&#32;{
7133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;f1;
7134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exponent</emphasis>
7135 &#32;&#32;&#32;&#32;&#32;&#32;f1&#32;=&#32;(float)&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1ac39e838c245bd16537685b14924d7a6d">ldexp</link>(1.0f,&#32;input[3]&#32;-&#32;(<emphasis role="keywordtype">int</emphasis>)(128&#32;+&#32;8));
7136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&lt;=&#32;2)
7137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[0]&#32;=&#32;(input[0]&#32;+&#32;input[1]&#32;+&#32;input[2])&#32;*&#32;f1&#32;/&#32;3;
7138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[0]&#32;=&#32;input[0]&#32;*&#32;f1;
7140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[1]&#32;=&#32;input[1]&#32;*&#32;f1;
7141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[2]&#32;=&#32;input[2]&#32;*&#32;f1;
7142 &#32;&#32;&#32;&#32;&#32;&#32;}
7143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;2)&#32;output[1]&#32;=&#32;1;
7144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;4)&#32;output[3]&#32;=&#32;1;
7145 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(req_comp)&#32;{
7147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;output[3]&#32;=&#32;1;&#32;<emphasis role="comment">/*&#32;fallthrough&#32;*/</emphasis>
7148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;output[0]&#32;=&#32;output[1]&#32;=&#32;output[2]&#32;=&#32;0;
7149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
7150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;output[1]&#32;=&#32;1;&#32;<emphasis role="comment">/*&#32;fallthrough&#32;*/</emphasis>
7151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;output[0]&#32;=&#32;0;
7152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
7153 &#32;&#32;&#32;&#32;&#32;&#32;}
7154 &#32;&#32;&#32;}
7155 }
7156 
7157 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*stbi__hdr_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
7158 {
7159 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[STBI__HDR_BUFLEN];
7160 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token;
7161 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;valid&#32;=&#32;0;
7162 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
7163 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*scanline;
7164 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*hdr_data;
7165 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
7166 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>,&#32;<link linkend="_classvalue">value</link>;
7167 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j,&#32;k,&#32;c1,c2,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>;
7168 &#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*headerToken;
7169 &#32;&#32;&#32;STBI_NOTUSED(ri);
7170 
7171 &#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;identifier</emphasis>
7172 &#32;&#32;&#32;headerToken&#32;=&#32;stbi__hdr_gettoken(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
7173 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(headerToken,&#32;<emphasis role="stringliteral">&quot;#?RADIANCE&quot;</emphasis>)&#32;!=&#32;0&#32;&amp;&amp;&#32;strcmp(headerToken,&#32;<emphasis role="stringliteral">&quot;#?RGBE&quot;</emphasis>)&#32;!=&#32;0)
7174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;not&#32;HDR&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Corrupt&#32;HDR&#32;image&quot;</emphasis>);
7175 
7176 &#32;&#32;&#32;<emphasis role="comment">//&#32;Parse&#32;header</emphasis>
7177 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
7178 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;stbi__hdr_gettoken(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
7179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token[0]&#32;==&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
7180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(token,&#32;<emphasis role="stringliteral">&quot;FORMAT=32-bit_rle_rgbe&quot;</emphasis>)&#32;==&#32;0)&#32;valid&#32;=&#32;1;
7181 &#32;&#32;&#32;}
7182 
7183 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!valid)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;unsupported&#32;format&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;HDR&#32;format&quot;</emphasis>);
7184 
7185 &#32;&#32;&#32;<emphasis role="comment">//&#32;Parse&#32;width&#32;and&#32;height</emphasis>
7186 &#32;&#32;&#32;<emphasis role="comment">//&#32;can&apos;t&#32;use&#32;sscanf()&#32;if&#32;we&apos;re&#32;not&#32;using&#32;stdio!</emphasis>
7187 &#32;&#32;&#32;token&#32;=&#32;stbi__hdr_gettoken(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
7188 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strncmp(token,&#32;<emphasis role="stringliteral">&quot;-Y&#32;&quot;</emphasis>,&#32;3))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;unsupported&#32;data&#32;layout&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;HDR&#32;format&quot;</emphasis>);
7189 &#32;&#32;&#32;token&#32;+=&#32;3;
7190 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;=&#32;(int)&#32;strtol(token,&#32;&amp;token,&#32;10);
7191 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*token&#32;==&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)&#32;++token;
7192 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strncmp(token,&#32;<emphasis role="stringliteral">&quot;+X&#32;&quot;</emphasis>,&#32;3))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;unsupported&#32;data&#32;layout&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unsupported&#32;HDR&#32;format&quot;</emphasis>);
7193 &#32;&#32;&#32;token&#32;+=&#32;3;
7194 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;=&#32;(int)&#32;strtol(token,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;10);
7195 
7196 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
7197 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
7198 
7199 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;
7200 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;
7201 
7202 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;3;
7203 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;==&#32;0)&#32;req_comp&#32;=&#32;3;
7204 
7205 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad4sizes_valid(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;req_comp,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>),&#32;0))
7206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;HDR&#32;image&#32;is&#32;too&#32;large&quot;</emphasis>);
7207 
7208 &#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;data</emphasis>
7209 &#32;&#32;&#32;hdr_data&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)&#32;stbi__malloc_mad4(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>,&#32;req_comp,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">float</emphasis>),&#32;0);
7210 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!hdr_data)
7211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
7212 
7213 &#32;&#32;&#32;<emphasis role="comment">//&#32;Load&#32;image&#32;data</emphasis>
7214 &#32;&#32;&#32;<emphasis role="comment">//&#32;image&#32;data&#32;is&#32;stored&#32;as&#32;some&#32;number&#32;of&#32;sca</emphasis>
7215 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;width&#32;&lt;&#32;8&#32;||&#32;width&#32;&gt;=&#32;32768)&#32;{
7216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;flat&#32;data</emphasis>
7217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;++j)&#32;{
7218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;++i)&#32;{
7219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;rgbe[4];
7220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;main_decode_loop:
7221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__getn(s,&#32;rgbe,&#32;4);
7222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__hdr_convert(hdr_data&#32;+&#32;j&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;*&#32;req_comp&#32;+&#32;i&#32;*&#32;req_comp,&#32;rgbe,&#32;req_comp);
7223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7224 &#32;&#32;&#32;&#32;&#32;&#32;}
7225 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;RLE-encoded&#32;data</emphasis>
7227 &#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
7228 
7229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1aedd0ea77029b98ce91e47c19addcb68f">height</link>;&#32;++j)&#32;{
7230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c1&#32;=&#32;stbi__get8(s);
7231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c2&#32;=&#32;stbi__get8(s);
7232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;=&#32;stbi__get8(s);
7233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c1&#32;!=&#32;2&#32;||&#32;c2&#32;!=&#32;2&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&amp;&#32;0x80))&#32;{
7234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;run-length&#32;encoded,&#32;so&#32;we&#32;have&#32;to&#32;actually&#32;use&#32;THIS&#32;data&#32;as&#32;a&#32;decoded</emphasis>
7235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pixel&#32;(note&#32;this&#32;can&apos;t&#32;be&#32;a&#32;valid&#32;pixel--one&#32;of&#32;RGB&#32;must&#32;be&#32;&gt;=&#32;128)</emphasis>
7236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;rgbe[4];
7237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgbe[0]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;c1;
7238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgbe[1]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;c2;
7239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgbe[2]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>;
7240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgbe[3]&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>)&#32;stbi__get8(s);
7241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__hdr_convert(hdr_data,&#32;rgbe,&#32;req_comp);
7242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;1;
7243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;0;
7244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(scanline);
7245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;main_decode_loop;&#32;<emphasis role="comment">//&#32;yes,&#32;this&#32;makes&#32;no&#32;sense</emphasis>
7246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;&lt;&lt;=&#32;8;
7248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;|=&#32;stbi__get8(s);
7249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>&#32;!=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>)&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(hdr_data);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(scanline);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;invalid&#32;decoded&#32;scanline&#32;length&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;corrupt&#32;HDR&quot;</emphasis>);&#32;}
7250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scanline&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
7251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad2(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>,&#32;4,&#32;0);
7252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!scanline)&#32;{
7253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(hdr_data);
7254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
7255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7257 
7258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k&#32;=&#32;0;&#32;k&#32;&lt;&#32;4;&#32;++k)&#32;{
7259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nleft;
7260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
7261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((nleft&#32;=&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;-&#32;i)&#32;&gt;&#32;0)&#32;{
7262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;=&#32;stbi__get8(s);
7263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;&#32;128)&#32;{
7264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Run</emphasis>
7265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;stbi__get8(s);
7266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;-=&#32;128;
7267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;0)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;&#32;nleft))&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(hdr_data);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(scanline);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;corrupt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;RLE&#32;data&#32;in&#32;HDR&quot;</emphasis>);&#32;}
7268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
7269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[i++&#32;*&#32;4&#32;+&#32;k]&#32;=&#32;<link linkend="_classvalue">value</link>;
7270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Dump</emphasis>
7272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;==&#32;0)&#32;||&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>&#32;&gt;&#32;nleft))&#32;{&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(hdr_data);&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(scanline);&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpf(<emphasis role="stringliteral">&quot;corrupt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;bad&#32;RLE&#32;data&#32;in&#32;HDR&quot;</emphasis>);&#32;}
7273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;0;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a22486c0c8d9f7d79a07bf22ecffeeb2f">count</link>;&#32;++<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)
7274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scanline[i++&#32;*&#32;4&#32;+&#32;k]&#32;=&#32;stbi__get8(s);
7275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
7278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>;&#32;++i)
7279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__hdr_convert(hdr_data+(j*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a3ce386e55bbeb900c1b23e064b89bd04">width</link>&#32;+&#32;i)*req_comp,&#32;scanline&#32;+&#32;i*4,&#32;req_comp);
7280 &#32;&#32;&#32;&#32;&#32;&#32;}
7281 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scanline)
7282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(scanline);
7283 &#32;&#32;&#32;}
7284 
7285 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hdr_data;
7286 }
7287 
7288 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__hdr_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7289 {
7290 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>[STBI__HDR_BUFLEN];
7291 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*token;
7292 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;valid&#32;=&#32;0;
7293 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dummy;
7294 
7295 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;&amp;dummy;
7296 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;&amp;dummy;
7297 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;dummy;
7298 
7299 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__hdr_test(s)&#32;==&#32;0)&#32;{
7300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7302 &#32;&#32;&#32;}
7303 
7304 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
7305 &#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;stbi__hdr_gettoken(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
7306 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token[0]&#32;==&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
7307 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(token,&#32;<emphasis role="stringliteral">&quot;FORMAT=32-bit_rle_rgbe&quot;</emphasis>)&#32;==&#32;0)&#32;valid&#32;=&#32;1;
7308 &#32;&#32;&#32;}
7309 
7310 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!valid)&#32;{
7311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7313 &#32;&#32;&#32;}
7314 &#32;&#32;&#32;token&#32;=&#32;stbi__hdr_gettoken(s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>);
7315 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strncmp(token,&#32;<emphasis role="stringliteral">&quot;-Y&#32;&quot;</emphasis>,&#32;3))&#32;{
7316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7318 &#32;&#32;&#32;}
7319 &#32;&#32;&#32;token&#32;+=&#32;3;
7320 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;(int)&#32;strtol(token,&#32;&amp;token,&#32;10);
7321 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*token&#32;==&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)&#32;++token;
7322 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strncmp(token,&#32;<emphasis role="stringliteral">&quot;+X&#32;&quot;</emphasis>,&#32;3))&#32;{
7323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7325 &#32;&#32;&#32;}
7326 &#32;&#32;&#32;token&#32;+=&#32;3;
7327 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;(int)&#32;strtol(token,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;10);
7328 &#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;3;
7329 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7330 }
7331 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STBI_NO_HDR</emphasis>
7332 
7333 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_BMP</emphasis>
7334 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__bmp_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7335 {
7336 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p;
7337 &#32;&#32;&#32;stbi__bmp_data&#32;info;
7338 
7339 &#32;&#32;&#32;info.all_a&#32;=&#32;255;
7340 &#32;&#32;&#32;p&#32;=&#32;stbi__bmp_parse_header(s,&#32;&amp;info);
7341 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
7342 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7343 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7344 &#32;&#32;&#32;}
7345 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;s-&gt;img_x;
7346 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;s-&gt;img_y;
7347 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;{
7348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.bpp&#32;==&#32;24&#32;&amp;&amp;&#32;info.ma&#32;==&#32;0xff000000)
7349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;3;
7350 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
7351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;info.ma&#32;?&#32;4&#32;:&#32;3;
7352 &#32;&#32;&#32;}
7353 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7354 }
7355 <emphasis role="preprocessor">#endif</emphasis>
7356 
7357 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PSD</emphasis>
7358 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__psd_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7359 {
7360 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channelCount,&#32;dummy,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;
7361 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;&amp;dummy;
7362 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;&amp;dummy;
7363 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;dummy;
7364 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get32be(s)&#32;!=&#32;0x38425053)&#32;{
7365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7367 &#32;&#32;&#32;}
7368 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(s)&#32;!=&#32;1)&#32;{
7369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7371 &#32;&#32;&#32;}
7372 &#32;&#32;&#32;stbi__skip(s,&#32;6);
7373 &#32;&#32;&#32;channelCount&#32;=&#32;stbi__get16be(s);
7374 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelCount&#32;&lt;&#32;0&#32;||&#32;channelCount&#32;&gt;&#32;16)&#32;{
7375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7377 &#32;&#32;&#32;}
7378 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;stbi__get32be(s);
7379 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get32be(s);
7380 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;=&#32;stbi__get16be(s);
7381 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;!=&#32;8&#32;&amp;&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;!=&#32;16)&#32;{
7382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7384 &#32;&#32;&#32;}
7385 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(s)&#32;!=&#32;3)&#32;{
7386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7388 &#32;&#32;&#32;}
7389 &#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;4;
7390 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7391 }
7392 
7393 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__psd_is16(stbi__context&#32;*s)
7394 {
7395 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;channelCount,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>;
7396 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get32be(s)&#32;!=&#32;0x38425053)&#32;{
7397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7399 &#32;&#32;&#32;}
7400 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__get16be(s)&#32;!=&#32;1)&#32;{
7401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7403 &#32;&#32;&#32;}
7404 &#32;&#32;&#32;stbi__skip(s,&#32;6);
7405 &#32;&#32;&#32;channelCount&#32;=&#32;stbi__get16be(s);
7406 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelCount&#32;&lt;&#32;0&#32;||&#32;channelCount&#32;&gt;&#32;16)&#32;{
7407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7409 &#32;&#32;&#32;}
7410 &#32;&#32;&#32;STBI_NOTUSED(stbi__get32be(s));
7411 &#32;&#32;&#32;STBI_NOTUSED(stbi__get32be(s));
7412 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;=&#32;stbi__get16be(s);
7413 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1aa8bd8cf1eef34712fdb6ad58b540a2ee">depth</link>&#32;!=&#32;16)&#32;{
7414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7416 &#32;&#32;&#32;}
7417 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7418 }
7419 <emphasis role="preprocessor">#endif</emphasis>
7420 
7421 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PIC</emphasis>
7422 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__pic_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7423 {
7424 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;act_comp=0,num_packets=0,chained,dummy;
7425 &#32;&#32;&#32;stbi__pic_packet&#32;packets[10];
7426 
7427 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;&amp;dummy;
7428 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;&amp;dummy;
7429 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;dummy;
7430 
7431 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__pic_is4(s,<emphasis role="stringliteral">&quot;\x53\x80\xF6\x34&quot;</emphasis>))&#32;{
7432 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
7433 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7434 &#32;&#32;&#32;}
7435 
7436 &#32;&#32;&#32;stbi__skip(s,&#32;88);
7437 
7438 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__get16be(s);
7439 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;stbi__get16be(s);
7440 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;{
7441 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s);
7442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7443 &#32;&#32;&#32;}
7444 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;!=&#32;0&#32;&amp;&amp;&#32;(1&#32;&lt;&lt;&#32;28)&#32;/&#32;(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;&lt;&#32;(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>))&#32;{
7445 &#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7446 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7447 &#32;&#32;&#32;}
7448 
7449 &#32;&#32;&#32;stbi__skip(s,&#32;8);
7450 
7451 &#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
7452 &#32;&#32;&#32;&#32;&#32;&#32;stbi__pic_packet&#32;*packet;
7453 
7454 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num_packets==<emphasis role="keyword">sizeof</emphasis>(packets)/<emphasis role="keyword">sizeof</emphasis>(packets[0]))
7455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7456 
7457 &#32;&#32;&#32;&#32;&#32;&#32;packet&#32;=&#32;&amp;packets[num_packets++];
7458 &#32;&#32;&#32;&#32;&#32;&#32;chained&#32;=&#32;stbi__get8(s);
7459 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;size&#32;&#32;&#32;&#32;=&#32;stbi__get8(s);
7460 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;type&#32;&#32;&#32;&#32;=&#32;stbi__get8(s);
7461 &#32;&#32;&#32;&#32;&#32;&#32;packet-&gt;channel&#32;=&#32;stbi__get8(s);
7462 &#32;&#32;&#32;&#32;&#32;&#32;act_comp&#32;|=&#32;packet-&gt;channel;
7463 
7464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s))&#32;{
7465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7467 &#32;&#32;&#32;&#32;&#32;&#32;}
7468 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(packet-&gt;size&#32;!=&#32;8)&#32;{
7469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7471 &#32;&#32;&#32;&#32;&#32;&#32;}
7472 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(chained);
7473 
7474 &#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;(act_comp&#32;&amp;&#32;0x10&#32;?&#32;4&#32;:&#32;3);
7475 
7476 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7477 }
7478 <emphasis role="preprocessor">#endif</emphasis>
7479 
7480 <emphasis role="comment">//&#32;*************************************************************************************************</emphasis>
7481 <emphasis role="comment">//&#32;Portable&#32;Gray&#32;Map&#32;and&#32;Portable&#32;Pixel&#32;Map&#32;loader</emphasis>
7482 <emphasis role="comment">//&#32;by&#32;Ken&#32;Miller</emphasis>
7483 <emphasis role="comment">//</emphasis>
7484 <emphasis role="comment">//&#32;PGM:&#32;http://netpbm.sourceforge.net/doc/pgm.html</emphasis>
7485 <emphasis role="comment">//&#32;PPM:&#32;http://netpbm.sourceforge.net/doc/ppm.html</emphasis>
7486 <emphasis role="comment">//</emphasis>
7487 <emphasis role="comment">//&#32;Known&#32;limitations:</emphasis>
7488 <emphasis role="comment">//&#32;&#32;&#32;&#32;Does&#32;not&#32;support&#32;comments&#32;in&#32;the&#32;header&#32;section</emphasis>
7489 <emphasis role="comment">//&#32;&#32;&#32;&#32;Does&#32;not&#32;support&#32;ASCII&#32;image&#32;data&#32;(formats&#32;P2&#32;and&#32;P3)</emphasis>
7490 
7491 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_PNM</emphasis>
7492 
7493 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_test(stbi__context&#32;*s)
7494 {
7495 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;p,&#32;t;
7496 &#32;&#32;&#32;p&#32;=&#32;(char)&#32;stbi__get8(s);
7497 &#32;&#32;&#32;t&#32;=&#32;(char)&#32;stbi__get8(s);
7498 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>&#32;||&#32;(t&#32;!=&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>&#32;&amp;&amp;&#32;t&#32;!=&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>))&#32;{
7499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(&#32;s&#32;);
7500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7501 &#32;&#32;&#32;}
7502 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7503 }
7504 
7505 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*stbi__pnm_load(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;req_comp,&#32;stbi__result_info&#32;*ri)
7506 {
7507 &#32;&#32;&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*out;
7508 &#32;&#32;&#32;STBI_NOTUSED(ri);
7509 
7510 &#32;&#32;&#32;ri-&gt;bits_per_channel&#32;=&#32;stbi__pnm_info(s,&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&amp;s-&gt;img_x,&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&amp;s-&gt;img_y,&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&amp;s-&gt;img_n);
7511 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;0)
7512 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7513 
7514 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_y&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
7515 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s-&gt;img_x&#32;&gt;&#32;STBI_MAX_DIMENSIONS)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,<emphasis role="stringliteral">&quot;Very&#32;large&#32;image&#32;(corrupt?)&quot;</emphasis>);
7516 
7517 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;s-&gt;img_x;
7518 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;s-&gt;img_y;
7519 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;s-&gt;img_n;
7520 
7521 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__mad4sizes_valid(s-&gt;img_n,&#32;s-&gt;img_x,&#32;s-&gt;img_y,&#32;ri-&gt;bits_per_channel&#32;/&#32;8,&#32;0))
7522 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;too&#32;large&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PNM&#32;too&#32;large&quot;</emphasis>);
7523 
7524 &#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__malloc_mad4(s-&gt;img_n,&#32;s-&gt;img_x,&#32;s-&gt;img_y,&#32;ri-&gt;bits_per_channel&#32;/&#32;8,&#32;0);
7525 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!out)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;outofmem&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Out&#32;of&#32;memory&quot;</emphasis>);
7526 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!stbi__getn(s,&#32;out,&#32;s-&gt;img_n&#32;*&#32;s-&gt;img_x&#32;*&#32;s-&gt;img_y&#32;*&#32;(ri-&gt;bits_per_channel&#32;/&#32;8)))&#32;{
7527 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2textures_8c_1aa2cc2cce48ec90c087c78c1f1d0ecf36">STBI_FREE</link>(out);
7528 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__errpuc(<emphasis role="stringliteral">&quot;bad&#32;PNM&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PNM&#32;file&#32;truncated&quot;</emphasis>);
7529 &#32;&#32;&#32;}
7530 
7531 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(req_comp&#32;&amp;&amp;&#32;req_comp&#32;!=&#32;s-&gt;img_n)&#32;{
7532 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ri-&gt;bits_per_channel&#32;==&#32;16)&#32;{
7533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;*)&#32;stbi__convert_format16((stbi__uint16&#32;*)&#32;out,&#32;s-&gt;img_n,&#32;req_comp,&#32;s-&gt;img_x,&#32;s-&gt;img_y);
7534 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
7535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;=&#32;stbi__convert_format(out,&#32;s-&gt;img_n,&#32;req_comp,&#32;s-&gt;img_x,&#32;s-&gt;img_y);
7536 &#32;&#32;&#32;&#32;&#32;&#32;}
7537 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out&#32;==&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;&#32;<emphasis role="comment">//&#32;stbi__convert_format&#32;frees&#32;input&#32;on&#32;failure</emphasis>
7538 &#32;&#32;&#32;}
7539 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;out;
7540 }
7541 
7542 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_isspace(<emphasis role="keywordtype">char</emphasis>&#32;c)
7543 {
7544 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\v&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\f&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>;
7545 }
7546 
7547 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;stbi__pnm_skip_whitespace(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*c)
7548 {
7549 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
7550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(s)&#32;&amp;&amp;&#32;stbi__pnm_isspace(*c))
7551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;=&#32;(char)&#32;stbi__get8(s);
7552 
7553 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__at_eof(s)&#32;||&#32;*c&#32;!=&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>)
7554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
7555 
7556 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(s)&#32;&amp;&amp;&#32;*c&#32;!=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;&amp;&amp;&#32;*c&#32;!=&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>&#32;)
7557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>)&#32;stbi__get8(s);
7558 &#32;&#32;&#32;}
7559 }
7560 
7561 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_isdigit(<emphasis role="keywordtype">char</emphasis>&#32;c)
7562 {
7563 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;&gt;=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;&amp;&amp;&#32;c&#32;&lt;=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>;
7564 }
7565 
7566 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_getinteger(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*c)
7567 {
7568 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classvalue">value</link>&#32;=&#32;0;
7569 
7570 &#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stbi__at_eof(s)&#32;&amp;&amp;&#32;stbi__pnm_isdigit(*c))&#32;{
7571 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classvalue">value</link>&#32;=&#32;<link linkend="_classvalue">value</link>*10&#32;+&#32;(*c&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
7572 &#32;&#32;&#32;&#32;&#32;&#32;*c&#32;=&#32;(char)&#32;stbi__get8(s);
7573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((<link linkend="_classvalue">value</link>&#32;&gt;&#32;214748364)&#32;||&#32;(<link linkend="_classvalue">value</link>&#32;==&#32;214748364&#32;&amp;&amp;&#32;*c&#32;&gt;&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>))
7574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;integer&#32;parse&#32;overflow&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Parsing&#32;an&#32;integer&#32;in&#32;the&#32;PPM&#32;header&#32;overflowed&#32;a&#32;32-bit&#32;int&quot;</emphasis>);
7575 &#32;&#32;&#32;}
7576 
7577 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classvalue">value</link>;
7578 }
7579 
7580 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;stbi__pnm_info(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7581 {
7582 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxv,&#32;dummy;
7583 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c,&#32;p,&#32;t;
7584 
7585 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;&amp;dummy;
7586 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>)&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;&amp;dummy;
7587 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;&amp;dummy;
7588 
7589 &#32;&#32;&#32;stbi__rewind(s);
7590 
7591 &#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;identifier</emphasis>
7592 &#32;&#32;&#32;p&#32;=&#32;(char)&#32;stbi__get8(s);
7593 &#32;&#32;&#32;t&#32;=&#32;(char)&#32;stbi__get8(s);
7594 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>&#32;||&#32;(t&#32;!=&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>&#32;&amp;&amp;&#32;t&#32;!=&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>))&#32;{
7595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi__rewind(s);
7596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7597 &#32;&#32;&#32;}
7598 
7599 &#32;&#32;&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>&#32;=&#32;(t&#32;==&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>)&#32;?&#32;3&#32;:&#32;1;&#32;&#32;<emphasis role="comment">//&#32;&apos;5&apos;&#32;is&#32;1-component&#32;.pgm;&#32;&apos;6&apos;&#32;is&#32;3-component&#32;.ppm</emphasis>
7600 
7601 &#32;&#32;&#32;c&#32;=&#32;(char)&#32;stbi__get8(s);
7602 &#32;&#32;&#32;stbi__pnm_skip_whitespace(s,&#32;&amp;c);
7603 
7604 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;stbi__pnm_getinteger(s,&#32;&amp;c);&#32;<emphasis role="comment">//&#32;read&#32;width</emphasis>
7605 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;==&#32;0)
7606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;width&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PPM&#32;image&#32;header&#32;had&#32;zero&#32;or&#32;overflowing&#32;width&quot;</emphasis>);
7607 &#32;&#32;&#32;stbi__pnm_skip_whitespace(s,&#32;&amp;c);
7608 
7609 &#32;&#32;&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;stbi__pnm_getinteger(s,&#32;&amp;c);&#32;<emphasis role="comment">//&#32;read&#32;height</emphasis>
7610 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;==&#32;0)
7611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;invalid&#32;width&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PPM&#32;image&#32;header&#32;had&#32;zero&#32;or&#32;overflowing&#32;width&quot;</emphasis>);
7612 &#32;&#32;&#32;stbi__pnm_skip_whitespace(s,&#32;&amp;c);
7613 
7614 &#32;&#32;&#32;maxv&#32;=&#32;stbi__pnm_getinteger(s,&#32;&amp;c);&#32;&#32;<emphasis role="comment">//&#32;read&#32;max&#32;value</emphasis>
7615 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxv&#32;&gt;&#32;65535)
7616 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;max&#32;value&#32;&gt;&#32;65535&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;PPM&#32;image&#32;supports&#32;only&#32;8-bit&#32;and&#32;16-bit&#32;images&quot;</emphasis>);
7617 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxv&#32;&gt;&#32;255)
7618 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;16;
7619 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
7620 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8;
7621 }
7622 
7623 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__pnm_is16(stbi__context&#32;*s)
7624 {
7625 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pnm_info(s,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__classes_2lib_2external_2miniaudio_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;==&#32;16)
7626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7627 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7628 }
7629 <emphasis role="preprocessor">#endif</emphasis>
7630 
7631 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__info_main(stbi__context&#32;*s,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7632 {
7633 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_JPEG</emphasis>
7634 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__jpeg_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7635 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7636 
7637 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNG</emphasis>
7638 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__png_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7639 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7640 
7641 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_GIF</emphasis>
7642 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__gif_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7643 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7644 
7645 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_BMP</emphasis>
7646 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__bmp_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7647 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7648 
7649 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PSD</emphasis>
7650 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__psd_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7651 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7652 
7653 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PIC</emphasis>
7654 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pic_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7655 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7656 
7657 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNM</emphasis>
7658 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pnm_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7659 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7660 
7661 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
7662 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__hdr_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7663 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7664 
7665 &#32;&#32;&#32;<emphasis role="comment">//&#32;test&#32;tga&#32;last&#32;because&#32;it&apos;s&#32;a&#32;crappy&#32;test!</emphasis>
7666 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_TGA</emphasis>
7667 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__tga_info(s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>))
7668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7669 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7670 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;unknown&#32;image&#32;type&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Image&#32;not&#32;of&#32;any&#32;known&#32;type,&#32;or&#32;corrupt&quot;</emphasis>);
7671 }
7672 
7673 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;stbi__is_16_main(stbi__context&#32;*s)
7674 {
7675 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNG</emphasis>
7676 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__png_is16(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7677 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7678 
7679 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PSD</emphasis>
7680 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__psd_is16(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7681 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7682 
7683 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_PNM</emphasis>
7684 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stbi__pnm_is16(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
7685 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
7686 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
7687 }
7688 
7689 <emphasis role="preprocessor">#ifndef&#32;STBI_NO_STDIO</emphasis>
7690 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70">stbi_info</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7691 {
7692 &#32;&#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
7693 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
7694 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
7695 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28abedef4a0a93909332080df6be0021">stbi_info_from_file</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
7696 &#32;&#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7697 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
7698 }
7699 
7700 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a28abedef4a0a93909332080df6be0021">stbi_info_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7701 {
7702 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
7703 &#32;&#32;&#32;stbi__context&#32;s;
7704 &#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pos&#32;=&#32;ftell(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7705 &#32;&#32;&#32;stbi__start_file(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7706 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__info_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
7707 &#32;&#32;&#32;fseek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,pos,SEEK_SET);
7708 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
7709 }
7710 
7711 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af">stbi_is_16_bit</link>(<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>)
7712 {
7713 &#32;&#32;&#32;&#32;FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>&#32;=&#32;stbi__fopen(<link linkend="__classes_2lib_2m_i_n_i-master_2tests_2testhuge_8cpp_1a42a21beb8018ac623f4d09db1343b9cf">filename</link>,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
7714 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
7715 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__err(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
7716 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>&#32;=&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62">stbi_is_16_bit_from_file</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7717 &#32;&#32;&#32;&#32;fclose(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7718 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2glm_2test_2core_2core__func__integer_8cpp_1a937d4dd628a8858b443a399410d2600b">result</link>;
7719 }
7720 
7721 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62">stbi_is_16_bit_from_file</link>(FILE&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>)
7722 {
7723 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
7724 &#32;&#32;&#32;stbi__context&#32;s;
7725 &#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pos&#32;=&#32;ftell(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7726 &#32;&#32;&#32;stbi__start_file(&amp;s,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>);
7727 &#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>&#32;=&#32;stbi__is_16_main(&amp;s);
7728 &#32;&#32;&#32;fseek(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0fdda94b8b7e64884690244028f455ba">f</link>,pos,SEEK_SET);
7729 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1abe08814c2f72843fde4d8df41440d5a0">r</link>;
7730 }
7731 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!STBI_NO_STDIO</emphasis>
7732 
7733 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1acfef077febce3bc3f1f339de478f3315">stbi_info_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7734 {
7735 &#32;&#32;&#32;stbi__context&#32;s;
7736 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
7737 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__info_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
7738 }
7739 
7740 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a86291c64cb663f41a34647d5e1abf363">stbi_info_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*c,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>)
7741 {
7742 &#32;&#32;&#32;stbi__context&#32;s;
7743 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;c,&#32;user);
7744 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__info_main(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,<link linkend="__classes_2lib_2glm_2test_2core_2core__type__vec4_8cpp_1a50b69e8e55167990c85f65e0a656e294">comp</link>);
7745 }
7746 
7747 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f">stbi_is_16_bit_from_memory</link>(<link linkend="__classes_2lib_2external_2stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)
7748 {
7749 &#32;&#32;&#32;stbi__context&#32;s;
7750 &#32;&#32;&#32;stbi__start_mem(&amp;s,<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a7bd7b5e409950ac3449c78baf3205f4b">buffer</link>,<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>);
7751 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__is_16_main(&amp;s);
7752 }
7753 
7754 <link linkend="__classes_2lib_2external_2stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2external_2stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f">stbi_is_16_bit_from_callbacks</link>(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*c,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*user)
7755 {
7756 &#32;&#32;&#32;stbi__context&#32;s;
7757 &#32;&#32;&#32;stbi__start_callbacks(&amp;s,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;c,&#32;user);
7758 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi__is_16_main(&amp;s);
7759 }
7760 
7761 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;STB_IMAGE_IMPLEMENTATION</emphasis>
7762 
7763 <emphasis role="comment">/*</emphasis>
7764 <emphasis role="comment">&#32;&#32;&#32;revision&#32;history:</emphasis>
7765 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.20&#32;&#32;(2019-02-07)&#32;support&#32;utf8&#32;filenames&#32;in&#32;Windows;&#32;fix&#32;warnings&#32;and&#32;platform&#32;ifdefs</emphasis>
7766 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.19&#32;&#32;(2018-02-11)&#32;fix&#32;warning</emphasis>
7767 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.18&#32;&#32;(2018-01-30)&#32;fix&#32;warnings</emphasis>
7768 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.17&#32;&#32;(2018-01-29)&#32;change&#32;sbti__shiftsigned&#32;to&#32;avoid&#32;clang&#32;-O2&#32;bug</emphasis>
7769 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1-bit&#32;BMP</emphasis>
7770 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*_is_16_bit&#32;api</emphasis>
7771 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avoid&#32;warnings</emphasis>
7772 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.16&#32;&#32;(2017-07-23)&#32;all&#32;functions&#32;have&#32;16-bit&#32;variants;</emphasis>
7773 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_STDIO&#32;works&#32;again;</emphasis>
7774 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compilation&#32;fixes;</emphasis>
7775 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;rounding&#32;in&#32;unpremultiply;</emphasis>
7776 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;vertical&#32;flip;</emphasis>
7777 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disable&#32;raw_len&#32;validation;</emphasis>
7778 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;documentation&#32;fixes</emphasis>
7779 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.15&#32;&#32;(2017-03-18)&#32;fix&#32;png-1,2,4&#32;bug;&#32;now&#32;all&#32;Imagenet&#32;JPGs&#32;decode;</emphasis>
7780 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;fixes;&#32;disable&#32;run-time&#32;SSE&#32;detection&#32;on&#32;gcc;</emphasis>
7781 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uniform&#32;handling&#32;of&#32;optional&#32;&quot;return&quot;&#32;values;</emphasis>
7782 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thread-safe&#32;initialization&#32;of&#32;zlib&#32;tables</emphasis>
7783 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.14&#32;&#32;(2017-03-03)&#32;remove&#32;deprecated&#32;STBI_JPEG_OLD;&#32;fixes&#32;for&#32;Imagenet&#32;JPGs</emphasis>
7784 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.13&#32;&#32;(2016-11-29)&#32;add&#32;16-bit&#32;API,&#32;only&#32;supported&#32;for&#32;PNG&#32;right&#32;now</emphasis>
7785 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.12&#32;&#32;(2016-04-02)&#32;fix&#32;typo&#32;in&#32;2.11&#32;PSD&#32;fix&#32;that&#32;caused&#32;crashes</emphasis>
7786 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.11&#32;&#32;(2016-04-02)&#32;allocate&#32;large&#32;structures&#32;on&#32;the&#32;stack</emphasis>
7787 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove&#32;white&#32;matting&#32;for&#32;transparent&#32;PSD</emphasis>
7788 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;reported&#32;channel&#32;count&#32;for&#32;PNG&#32;&amp;&#32;BMP</emphasis>
7789 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;re-enable&#32;SSE2&#32;in&#32;non-gcc&#32;64-bit</emphasis>
7790 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;support&#32;RGB-formatted&#32;JPEG</emphasis>
7791 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read&#32;16-bit&#32;PNGs&#32;(only&#32;as&#32;8-bit)</emphasis>
7792 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.10&#32;&#32;(2016-01-22)&#32;avoid&#32;warning&#32;introduced&#32;in&#32;2.09&#32;by&#32;STBI_REALLOC_SIZED</emphasis>
7793 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.09&#32;&#32;(2016-01-16)&#32;allow&#32;comments&#32;in&#32;PNM&#32;files</emphasis>
7794 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;16-bit-per-pixel&#32;TGA&#32;(not&#32;bit-per-component)</emphasis>
7795 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info()&#32;for&#32;TGA&#32;could&#32;break&#32;due&#32;to&#32;.hdr&#32;handling</emphasis>
7796 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info()&#32;for&#32;BMP&#32;to&#32;shares&#32;code&#32;instead&#32;of&#32;sloppy&#32;parse</emphasis>
7797 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;use&#32;STBI_REALLOC_SIZED&#32;if&#32;allocator&#32;doesn&apos;t&#32;support&#32;realloc</emphasis>
7798 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;code&#32;cleanup</emphasis>
7799 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.08&#32;&#32;(2015-09-13)&#32;fix&#32;to&#32;2.07&#32;cleanup,&#32;reading&#32;RGB&#32;PSD&#32;as&#32;RGBA</emphasis>
7800 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.07&#32;&#32;(2015-09-13)&#32;fix&#32;compiler&#32;warnings</emphasis>
7801 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;partial&#32;animated&#32;GIF&#32;support</emphasis>
7802 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limited&#32;16-bpc&#32;PSD&#32;support</emphasis>
7803 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;unused&#32;functions</emphasis>
7804 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bug&#32;with&#32;&lt;&#32;92&#32;byte&#32;PIC,PNM,HDR,TGA</emphasis>
7805 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.06&#32;&#32;(2015-04-19)&#32;fix&#32;bug&#32;where&#32;PSD&#32;returns&#32;wrong&#32;&apos;*comp&apos;&#32;value</emphasis>
7806 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.05&#32;&#32;(2015-04-19)&#32;fix&#32;bug&#32;in&#32;progressive&#32;JPEG&#32;handling,&#32;fix&#32;warning</emphasis>
7807 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.04&#32;&#32;(2015-04-15)&#32;try&#32;to&#32;re-enable&#32;SIMD&#32;on&#32;MinGW&#32;64-bit</emphasis>
7808 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.03&#32;&#32;(2015-04-12)&#32;extra&#32;corruption&#32;checking&#32;(mmozeiko)</emphasis>
7809 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi_set_flip_vertically_on_load&#32;(nguillemot)</emphasis>
7810 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;NEON&#32;support;&#32;fix&#32;mingw&#32;support</emphasis>
7811 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.02&#32;&#32;(2015-01-19)&#32;fix&#32;incorrect&#32;assert,&#32;fix&#32;warning</emphasis>
7812 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.01&#32;&#32;(2015-01-17)&#32;fix&#32;various&#32;warnings;&#32;suppress&#32;SIMD&#32;on&#32;gcc&#32;32-bit&#32;without&#32;-msse2</emphasis>
7813 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.00b&#32;(2014-12-25)&#32;fix&#32;STBI_MALLOC&#32;in&#32;progressive&#32;JPEG</emphasis>
7814 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;2.00&#32;&#32;(2014-12-25)&#32;optimize&#32;JPG,&#32;including&#32;x86&#32;SSE2&#32;&amp;&#32;NEON&#32;SIMD&#32;(ryg)</emphasis>
7815 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressive&#32;JPEG&#32;(stb)</emphasis>
7816 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PGM/PPM&#32;support&#32;(Ken&#32;Miller)</emphasis>
7817 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_MALLOC,STBI_REALLOC,STBI_FREE</emphasis>
7818 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GIF&#32;bugfix&#32;--&#32;seemingly&#32;never&#32;worked</emphasis>
7819 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STBI_NO_*,&#32;STBI_ONLY_*</emphasis>
7820 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.48&#32;&#32;(2014-12-14)&#32;fix&#32;incorrectly-named&#32;assert()</emphasis>
7821 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.47&#32;&#32;(2014-12-14)&#32;1/2/4-bit&#32;PNG&#32;support,&#32;both&#32;direct&#32;and&#32;paletted&#32;(Omar&#32;Cornut&#32;&amp;&#32;stb)</emphasis>
7822 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;PNG&#32;(ryg)</emphasis>
7823 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;bug&#32;in&#32;interlaced&#32;PNG&#32;with&#32;user-specified&#32;channel&#32;count&#32;(stb)</emphasis>
7824 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.46&#32;&#32;(2014-08-26)</emphasis>
7825 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;broken&#32;tRNS&#32;chunk&#32;(colorkey-style&#32;transparency)&#32;in&#32;non-paletted&#32;PNG</emphasis>
7826 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.45&#32;&#32;(2014-08-16)</emphasis>
7827 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;MSVC-ARM&#32;internal&#32;compiler&#32;error&#32;by&#32;wrapping&#32;malloc</emphasis>
7828 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.44&#32;&#32;(2014-08-07)</emphasis>
7829 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;various&#32;warning&#32;fixes&#32;from&#32;Ronny&#32;Chevalier</emphasis>
7830 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.43&#32;&#32;(2014-07-15)</emphasis>
7831 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;MSVC-only&#32;compiler&#32;problem&#32;in&#32;code&#32;changed&#32;in&#32;1.42</emphasis>
7832 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.42&#32;&#32;(2014-07-09)</emphasis>
7833 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;don&apos;t&#32;define&#32;_CRT_SECURE_NO_WARNINGS&#32;(affects&#32;user&#32;code)</emphasis>
7834 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixes&#32;to&#32;stbi__cleanup_jpeg&#32;path</emphasis>
7835 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;added&#32;STBI_ASSERT&#32;to&#32;avoid&#32;requiring&#32;assert.h</emphasis>
7836 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.41&#32;&#32;(2014-06-25)</emphasis>
7837 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;search&amp;replace&#32;from&#32;1.36&#32;that&#32;messed&#32;up&#32;comments/error&#32;messages</emphasis>
7838 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.40&#32;&#32;(2014-06-22)</emphasis>
7839 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;gcc&#32;struct-initialization&#32;warning</emphasis>
7840 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.39&#32;&#32;(2014-06-15)</emphasis>
7841 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;to&#32;TGA&#32;optimization&#32;when&#32;req_comp&#32;!=&#32;number&#32;of&#32;components&#32;in&#32;TGA;</emphasis>
7842 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;to&#32;GIF&#32;loading&#32;because&#32;BMP&#32;wasn&apos;t&#32;rewinding&#32;(whoops,&#32;no&#32;GIFs&#32;in&#32;my&#32;test&#32;suite)</emphasis>
7843 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;add&#32;support&#32;for&#32;BMP&#32;version&#32;5&#32;(more&#32;ignored&#32;fields)</emphasis>
7844 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.38&#32;&#32;(2014-06-06)</emphasis>
7845 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suppress&#32;MSVC&#32;warnings&#32;on&#32;integer&#32;casts&#32;truncating&#32;values</emphasis>
7846 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;accidental&#32;rename&#32;of&#32;&apos;skip&apos;&#32;field&#32;of&#32;I/O</emphasis>
7847 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.37&#32;&#32;(2014-06-04)</emphasis>
7848 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove&#32;duplicate&#32;typedef</emphasis>
7849 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.36&#32;&#32;(2014-06-03)</emphasis>
7850 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;convert&#32;to&#32;header&#32;file&#32;single-file&#32;library</emphasis>
7851 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;de-iphone&#32;isn&apos;t&#32;set,&#32;load&#32;iphone&#32;images&#32;color-swapped&#32;instead&#32;of&#32;returning&#32;NULL</emphasis>
7852 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.35&#32;&#32;(2014-05-27)</emphasis>
7853 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;various&#32;warnings</emphasis>
7854 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;broken&#32;STBI_SIMD&#32;path</emphasis>
7855 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;bug&#32;where&#32;stbi_load_from_file&#32;no&#32;longer&#32;left&#32;file&#32;pointer&#32;in&#32;correct&#32;place</emphasis>
7856 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;broken&#32;non-easy&#32;path&#32;for&#32;32-bit&#32;BMP&#32;(possibly&#32;never&#32;used)</emphasis>
7857 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TGA&#32;optimization&#32;by&#32;Arseny&#32;Kapoulkine</emphasis>
7858 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.34&#32;&#32;(unknown)</emphasis>
7859 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use&#32;STBI_NOTUSED&#32;in&#32;stbi__resample_row_generic(),&#32;fix&#32;one&#32;more&#32;leak&#32;in&#32;tga&#32;failure&#32;case</emphasis>
7860 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.33&#32;&#32;(2011-07-14)</emphasis>
7861 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;stbi_is_hdr&#32;work&#32;in&#32;STBI_NO_HDR&#32;(as&#32;specified),&#32;minor&#32;compiler-friendly&#32;improvements</emphasis>
7862 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.32&#32;&#32;(2011-07-13)</emphasis>
7863 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;support&#32;for&#32;&quot;info&quot;&#32;function&#32;for&#32;all&#32;supported&#32;filetypes&#32;(SpartanJ)</emphasis>
7864 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.31&#32;&#32;(2011-06-20)</emphasis>
7865 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;few&#32;more&#32;leak&#32;fixes,&#32;bug&#32;in&#32;PNG&#32;handling&#32;(SpartanJ)</emphasis>
7866 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.30&#32;&#32;(2011-06-11)</emphasis>
7867 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;added&#32;ability&#32;to&#32;load&#32;files&#32;via&#32;callbacks&#32;to&#32;accomidate&#32;custom&#32;input&#32;streams&#32;(Ben&#32;Wenger)</emphasis>
7868 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;removed&#32;deprecated&#32;format-specific&#32;test/load&#32;functions</emphasis>
7869 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;removed&#32;support&#32;for&#32;installable&#32;file&#32;formats&#32;(stbi_loader)&#32;--&#32;would&#32;have&#32;been&#32;broken&#32;for&#32;IO&#32;callbacks&#32;anyway</emphasis>
7870 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error&#32;cases&#32;in&#32;bmp&#32;and&#32;tga&#32;give&#32;messages&#32;and&#32;don&apos;t&#32;leak&#32;(Raymond&#32;Barbiero,&#32;grisha)</emphasis>
7871 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;inefficiency&#32;in&#32;decoding&#32;32-bit&#32;BMP&#32;(David&#32;Woo)</emphasis>
7872 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.29&#32;&#32;(2010-08-16)</emphasis>
7873 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;various&#32;warning&#32;fixes&#32;from&#32;Aurelien&#32;Pocheville</emphasis>
7874 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.28&#32;&#32;(2010-08-01)</emphasis>
7875 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;bug&#32;in&#32;GIF&#32;palette&#32;transparency&#32;(SpartanJ)</emphasis>
7876 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.27&#32;&#32;(2010-08-01)</emphasis>
7877 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cast-to-stbi_uc&#32;to&#32;fix&#32;warnings</emphasis>
7878 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.26&#32;&#32;(2010-07-24)</emphasis>
7879 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;bug&#32;in&#32;file&#32;buffering&#32;for&#32;PNG&#32;reported&#32;by&#32;SpartanJ</emphasis>
7880 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.25&#32;&#32;(2010-07-17)</emphasis>
7881 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refix&#32;trans_data&#32;warning&#32;(Won&#32;Chun)</emphasis>
7882 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.24&#32;&#32;(2010-07-12)</emphasis>
7883 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perf&#32;improvements&#32;reading&#32;from&#32;files&#32;on&#32;platforms&#32;with&#32;lock-heavy&#32;fgetc()</emphasis>
7884 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minor&#32;perf&#32;improvements&#32;for&#32;jpeg</emphasis>
7885 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deprecated&#32;type-specific&#32;functions&#32;so&#32;we&apos;ll&#32;get&#32;feedback&#32;if&#32;they&apos;re&#32;needed</emphasis>
7886 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attempt&#32;to&#32;fix&#32;trans_data&#32;warning&#32;(Won&#32;Chun)</emphasis>
7887 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.23&#32;&#32;&#32;&#32;fixed&#32;bug&#32;in&#32;iPhone&#32;support</emphasis>
7888 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.22&#32;&#32;(2010-07-10)</emphasis>
7889 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;removed&#32;image&#32;*writing*&#32;support</emphasis>
7890 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stbi_info&#32;support&#32;from&#32;Jetro&#32;Lauha</emphasis>
7891 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GIF&#32;support&#32;from&#32;Jean-Marc&#32;Lienher</emphasis>
7892 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iPhone&#32;PNG-extensions&#32;from&#32;James&#32;Brown</emphasis>
7893 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning-fixes&#32;from&#32;Nicolas&#32;Schulz&#32;and&#32;Janez&#32;Zemva&#32;(i.stbi__err.&#32;Janez&#32;(U+017D)emva)</emphasis>
7894 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.21&#32;&#32;&#32;&#32;fix&#32;use&#32;of&#32;&apos;stbi_uc&apos;&#32;in&#32;header&#32;(reported&#32;by&#32;jon&#32;blow)</emphasis>
7895 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.20&#32;&#32;&#32;&#32;added&#32;support&#32;for&#32;Softimage&#32;PIC,&#32;by&#32;Tom&#32;Seddon</emphasis>
7896 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.19&#32;&#32;&#32;&#32;bug&#32;in&#32;interlaced&#32;PNG&#32;corruption&#32;check&#32;(found&#32;by&#32;ryg)</emphasis>
7897 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.18&#32;&#32;(2008-08-02)</emphasis>
7898 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;a&#32;threading&#32;bug&#32;(local&#32;mutable&#32;static)</emphasis>
7899 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.17&#32;&#32;&#32;&#32;support&#32;interlaced&#32;PNG</emphasis>
7900 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.16&#32;&#32;&#32;&#32;major&#32;bugfix&#32;-&#32;stbi__convert_format&#32;converted&#32;one&#32;too&#32;many&#32;pixels</emphasis>
7901 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.15&#32;&#32;&#32;&#32;initialize&#32;some&#32;fields&#32;for&#32;thread&#32;safety</emphasis>
7902 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.14&#32;&#32;&#32;&#32;fix&#32;threadsafe&#32;conversion&#32;bug</emphasis>
7903 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header-file-only&#32;version&#32;(#define&#32;STBI_HEADER_FILE_ONLY&#32;before&#32;including)</emphasis>
7904 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.13&#32;&#32;&#32;&#32;threadsafe</emphasis>
7905 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.12&#32;&#32;&#32;&#32;const&#32;qualifiers&#32;in&#32;the&#32;API</emphasis>
7906 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.11&#32;&#32;&#32;&#32;Support&#32;installable&#32;IDCT,&#32;colorspace&#32;conversion&#32;routines</emphasis>
7907 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.10&#32;&#32;&#32;&#32;Fixes&#32;for&#32;64-bit&#32;(don&apos;t&#32;use&#32;&quot;unsigned&#32;long&quot;)</emphasis>
7908 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimized&#32;upsampling&#32;by&#32;Fabian&#32;&quot;ryg&quot;&#32;Giesen</emphasis>
7909 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.09&#32;&#32;&#32;&#32;Fix&#32;format-conversion&#32;for&#32;PSD&#32;code&#32;(bad&#32;global&#32;variables!)</emphasis>
7910 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.08&#32;&#32;&#32;&#32;Thatcher&#32;Ulrich&apos;s&#32;PSD&#32;code&#32;integrated&#32;by&#32;Nicolas&#32;Schulz</emphasis>
7911 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.07&#32;&#32;&#32;&#32;attempt&#32;to&#32;fix&#32;C++&#32;warning/errors&#32;again</emphasis>
7912 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.06&#32;&#32;&#32;&#32;attempt&#32;to&#32;fix&#32;C++&#32;warning/errors&#32;again</emphasis>
7913 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.05&#32;&#32;&#32;&#32;fix&#32;TGA&#32;loading&#32;to&#32;return&#32;correct&#32;*comp&#32;and&#32;use&#32;good&#32;luminance&#32;calc</emphasis>
7914 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.04&#32;&#32;&#32;&#32;default&#32;float&#32;alpha&#32;is&#32;1,&#32;not&#32;255;&#32;use&#32;&apos;void&#32;*&apos;&#32;for&#32;stbi_image_free</emphasis>
7915 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.03&#32;&#32;&#32;&#32;bugfixes&#32;to&#32;STBI_NO_STDIO,&#32;STBI_NO_HDR</emphasis>
7916 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.02&#32;&#32;&#32;&#32;support&#32;for&#32;(subset&#32;of)&#32;HDR&#32;files,&#32;float&#32;interface&#32;for&#32;preferred&#32;access&#32;to&#32;them</emphasis>
7917 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.01&#32;&#32;&#32;&#32;fix&#32;bug:&#32;possible&#32;bug&#32;in&#32;handling&#32;right-side&#32;up&#32;bmps...&#32;not&#32;sure</emphasis>
7918 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fix&#32;bug:&#32;the&#32;stbi__bmp_load()&#32;and&#32;stbi__tga_load()&#32;functions&#32;didn&apos;t&#32;work&#32;at&#32;all</emphasis>
7919 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;1.00&#32;&#32;&#32;&#32;interface&#32;to&#32;zlib&#32;that&#32;skips&#32;zlib&#32;header</emphasis>
7920 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.99&#32;&#32;&#32;&#32;correct&#32;handling&#32;of&#32;alpha&#32;in&#32;palette</emphasis>
7921 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.98&#32;&#32;&#32;&#32;TGA&#32;loader&#32;by&#32;lonesock;&#32;dynamically&#32;add&#32;loaders&#32;(untested)</emphasis>
7922 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.97&#32;&#32;&#32;&#32;jpeg&#32;errors&#32;on&#32;too&#32;large&#32;a&#32;file;&#32;also&#32;catch&#32;another&#32;malloc&#32;failure</emphasis>
7923 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.96&#32;&#32;&#32;&#32;fix&#32;detection&#32;of&#32;invalid&#32;v&#32;value&#32;-&#32;particleman@mollyrocket&#32;forum</emphasis>
7924 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.95&#32;&#32;&#32;&#32;during&#32;header&#32;scan,&#32;seek&#32;to&#32;markers&#32;in&#32;case&#32;of&#32;padding</emphasis>
7925 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.94&#32;&#32;&#32;&#32;STBI_NO_STDIO&#32;to&#32;disable&#32;stdio&#32;usage;&#32;rename&#32;all&#32;#defines&#32;the&#32;same</emphasis>
7926 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.93&#32;&#32;&#32;&#32;handle&#32;jpegtran&#32;output;&#32;verbose&#32;errors</emphasis>
7927 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.92&#32;&#32;&#32;&#32;read&#32;4,8,16,24,32-bit&#32;BMP&#32;files&#32;of&#32;several&#32;formats</emphasis>
7928 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.91&#32;&#32;&#32;&#32;output&#32;24-bit&#32;Windows&#32;3.0&#32;BMP&#32;files</emphasis>
7929 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.90&#32;&#32;&#32;&#32;fix&#32;a&#32;few&#32;more&#32;warnings;&#32;bump&#32;version&#32;number&#32;to&#32;approach&#32;1.0</emphasis>
7930 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.61&#32;&#32;&#32;&#32;bugfixes&#32;due&#32;to&#32;Marc&#32;LeBlanc,&#32;Christopher&#32;Lloyd</emphasis>
7931 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.60&#32;&#32;&#32;&#32;fix&#32;compiling&#32;as&#32;c++</emphasis>
7932 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.59&#32;&#32;&#32;&#32;fix&#32;warnings:&#32;merge&#32;Dave&#32;Moore&apos;s&#32;-Wall&#32;fixes</emphasis>
7933 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.58&#32;&#32;&#32;&#32;fix&#32;bug:&#32;zlib&#32;uncompressed&#32;mode&#32;len/nlen&#32;was&#32;wrong&#32;endian</emphasis>
7934 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.57&#32;&#32;&#32;&#32;fix&#32;bug:&#32;jpg&#32;last&#32;huffman&#32;symbol&#32;before&#32;marker&#32;was&#32;&gt;9&#32;bits&#32;but&#32;less&#32;than&#32;16&#32;available</emphasis>
7935 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.56&#32;&#32;&#32;&#32;fix&#32;bug:&#32;zlib&#32;uncompressed&#32;mode&#32;len&#32;vs.&#32;nlen</emphasis>
7936 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.55&#32;&#32;&#32;&#32;fix&#32;bug:&#32;restart_interval&#32;not&#32;initialized&#32;to&#32;0</emphasis>
7937 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.54&#32;&#32;&#32;&#32;allow&#32;NULL&#32;for&#32;&apos;int&#32;*comp&apos;</emphasis>
7938 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.53&#32;&#32;&#32;&#32;fix&#32;bug&#32;in&#32;png&#32;3-&gt;4;&#32;speedup&#32;png&#32;decoding</emphasis>
7939 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.52&#32;&#32;&#32;&#32;png&#32;handles&#32;req_comp=3,4&#32;directly;&#32;minor&#32;cleanup;&#32;jpeg&#32;comments</emphasis>
7940 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.51&#32;&#32;&#32;&#32;obey&#32;req_comp&#32;requests,&#32;1-component&#32;jpegs&#32;return&#32;as&#32;1-component,</emphasis>
7941 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;on&#32;&apos;test&apos;&#32;only&#32;check&#32;type,&#32;not&#32;whether&#32;we&#32;support&#32;this&#32;variant</emphasis>
7942 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;0.50&#32;&#32;(2006-11-19)</emphasis>
7943 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;first&#32;released&#32;version</emphasis>
7944 <emphasis role="comment">*/</emphasis>
7945 
7946 
7947 <emphasis role="comment">/*</emphasis>
7948 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
7949 <emphasis role="comment">This&#32;software&#32;is&#32;available&#32;under&#32;2&#32;licenses&#32;--&#32;choose&#32;whichever&#32;you&#32;prefer.</emphasis>
7950 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
7951 <emphasis role="comment">ALTERNATIVE&#32;A&#32;-&#32;MIT&#32;License</emphasis>
7952 <emphasis role="comment">Copyright&#32;(c)&#32;2017&#32;Sean&#32;Barrett</emphasis>
7953 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
7954 <emphasis role="comment">this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
7955 <emphasis role="comment">the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
7956 <emphasis role="comment">use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies</emphasis>
7957 <emphasis role="comment">of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do</emphasis>
7958 <emphasis role="comment">so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
7959 <emphasis role="comment">The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
7960 <emphasis role="comment">copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
7961 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
7962 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
7963 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
7964 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
7965 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
7966 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
7967 <emphasis role="comment">SOFTWARE.</emphasis>
7968 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
7969 <emphasis role="comment">ALTERNATIVE&#32;B&#32;-&#32;Public&#32;Domain&#32;(www.unlicense.org)</emphasis>
7970 <emphasis role="comment">This&#32;is&#32;free&#32;and&#32;unencumbered&#32;software&#32;released&#32;into&#32;the&#32;public&#32;domain.</emphasis>
7971 <emphasis role="comment">Anyone&#32;is&#32;free&#32;to&#32;copy,&#32;modify,&#32;publish,&#32;use,&#32;compile,&#32;sell,&#32;or&#32;distribute&#32;this</emphasis>
7972 <emphasis role="comment">software,&#32;either&#32;in&#32;source&#32;code&#32;form&#32;or&#32;as&#32;a&#32;compiled&#32;binary,&#32;for&#32;any&#32;purpose,</emphasis>
7973 <emphasis role="comment">commercial&#32;or&#32;non-commercial,&#32;and&#32;by&#32;any&#32;means.</emphasis>
7974 <emphasis role="comment">In&#32;jurisdictions&#32;that&#32;recognize&#32;copyright&#32;laws,&#32;the&#32;author&#32;or&#32;authors&#32;of&#32;this</emphasis>
7975 <emphasis role="comment">software&#32;dedicate&#32;any&#32;and&#32;all&#32;copyright&#32;interest&#32;in&#32;the&#32;software&#32;to&#32;the&#32;public</emphasis>
7976 <emphasis role="comment">domain.&#32;We&#32;make&#32;this&#32;dedication&#32;for&#32;the&#32;benefit&#32;of&#32;the&#32;public&#32;at&#32;large&#32;and&#32;to</emphasis>
7977 <emphasis role="comment">the&#32;detriment&#32;of&#32;our&#32;heirs&#32;and&#32;successors.&#32;We&#32;intend&#32;this&#32;dedication&#32;to&#32;be&#32;an</emphasis>
7978 <emphasis role="comment">overt&#32;act&#32;of&#32;relinquishment&#32;in&#32;perpetuity&#32;of&#32;all&#32;present&#32;and&#32;future&#32;rights&#32;to</emphasis>
7979 <emphasis role="comment">this&#32;software&#32;under&#32;copyright&#32;law.</emphasis>
7980 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
7981 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
7982 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
7983 <emphasis role="comment">AUTHORS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN</emphasis>
7984 <emphasis role="comment">ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION</emphasis>
7985 <emphasis role="comment">WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
7986 <emphasis role="comment">------------------------------------------------------------------------------</emphasis>
7987 <emphasis role="comment">*/</emphasis>
</programlisting></section>
