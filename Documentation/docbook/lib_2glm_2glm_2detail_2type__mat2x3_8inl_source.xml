<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2detail_2type__mat2x3_8inl_source" xml:lang="en-US">
<title>type_mat2x3.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/detail/type_mat2x3.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>
2 {
3 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Constructors&#32;--</emphasis>
4 
5 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;GLM_CONFIG_DEFAULTED_FUNCTIONS&#32;==&#32;GLM_DISABLE</emphasis>
6 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat()
8 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALIZER_LIST</emphasis>
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(1,&#32;0,&#32;0),&#32;col_type(0,&#32;1,&#32;0)}
10 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
12 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_CONFIG_CTOR_INIT&#32;==&#32;GLM_CTOR_INITIALISATION</emphasis>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(1,&#32;0,&#32;0);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;1,&#32;0);
15 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
17 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
18 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;qualifier&#32;P&gt;
21 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;3,&#32;T,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
22 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{m.value[0],&#32;m.value[1]}
24 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
25 &#32;&#32;&#32;&#32;{
26 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m.value[0];
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m.value[1];
29 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
30 &#32;&#32;&#32;&#32;}
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
33 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(T&#32;scalar)
34 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(scalar,&#32;0,&#32;0),&#32;col_type(0,&#32;scalar,&#32;0)}
36 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
37 &#32;&#32;&#32;&#32;{
38 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(scalar,&#32;0,&#32;0);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(0,&#32;scalar,&#32;0);
41 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
42 &#32;&#32;&#32;&#32;}
43 
44 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
45 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat
46 &#32;&#32;&#32;&#32;(
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x0,&#32;T&#32;y0,&#32;T&#32;z0,
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;x1,&#32;T&#32;y1,&#32;T&#32;z1
49 &#32;&#32;&#32;&#32;)
50 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x0,&#32;y0,&#32;z0),&#32;col_type(x1,&#32;y1,&#32;z1)}
52 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
53 &#32;&#32;&#32;&#32;{
54 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x0,&#32;y0,&#32;z0);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1);
57 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
58 &#32;&#32;&#32;&#32;}
59 
60 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
61 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,&#32;col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>)
62 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>)}
64 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
65 &#32;&#32;&#32;&#32;{
66 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>);
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
69 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
70 &#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Conversion&#32;constructors&#32;--</emphasis>
73 
74 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
75 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y1,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z1,
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;X2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Y2,&#32;<emphasis role="keyword">typename</emphasis>&#32;Z2&gt;
78 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat
79 &#32;&#32;&#32;&#32;(
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;x1,&#32;Y1&#32;y1,&#32;Z1&#32;z1,
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;x2,&#32;Y2&#32;y2,&#32;Z2&#32;z2
82 &#32;&#32;&#32;&#32;)
83 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(x1,&#32;y1,&#32;z1),&#32;col_type(x2,&#32;y2,&#32;z2)}
85 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
86 &#32;&#32;&#32;&#32;{
87 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(x1,&#32;y1,&#32;z1);
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(x2,&#32;y2,&#32;z2);
90 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
91 &#32;&#32;&#32;&#32;}
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;V1,&#32;<emphasis role="keyword">typename</emphasis>&#32;V2&gt;
95 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(vec&lt;3,&#32;V1,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>,&#32;vec&lt;3,&#32;V2,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)
96 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>),&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>)}
98 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
99 &#32;&#32;&#32;&#32;{
100 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a0779c3b73f9aa3a0ac5b0139b5d291d9">v1</link>);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a9a09a1837922b2b806f4589096a52049">v2</link>);
103 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
104 &#32;&#32;&#32;&#32;}
105 
106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Matrix&#32;conversions&#32;--</emphasis>
107 
108 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
109 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U,&#32;qualifier&#32;P&gt;
110 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;3,&#32;U,&#32;P&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
111 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
113 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
114 &#32;&#32;&#32;&#32;{
115 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
118 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
119 &#32;&#32;&#32;&#32;}
120 
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
122 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
123 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0],&#32;0),&#32;col_type(m[1],&#32;0)}
125 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
126 &#32;&#32;&#32;&#32;{
127 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
130 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
131 &#32;&#32;&#32;&#32;}
132 
133 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
134 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
135 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
137 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
138 &#32;&#32;&#32;&#32;{
139 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
142 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
143 &#32;&#32;&#32;&#32;}
144 
145 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
146 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
147 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
149 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
150 &#32;&#32;&#32;&#32;{
151 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
154 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
155 &#32;&#32;&#32;&#32;}
156 
157 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
158 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;2,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
159 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
161 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
162 &#32;&#32;&#32;&#32;{
163 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
166 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
167 &#32;&#32;&#32;&#32;}
168 
169 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
170 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
171 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0],&#32;0),&#32;col_type(m[1],&#32;0)}
173 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
174 &#32;&#32;&#32;&#32;{
175 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
178 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
179 &#32;&#32;&#32;&#32;}
180 
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
182 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;3,&#32;4,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
183 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
185 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
186 &#32;&#32;&#32;&#32;{
187 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
190 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
191 &#32;&#32;&#32;&#32;}
192 
193 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
194 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
195 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0],&#32;0),&#32;col_type(m[1],&#32;0)}
197 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
198 &#32;&#32;&#32;&#32;{
199 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0],&#32;0);
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1],&#32;0);
202 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
203 &#32;&#32;&#32;&#32;}
204 
205 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
206 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::mat(mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
207 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;GLM_HAS_INITIALIZER_LISTS</emphasis>
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classvalue">value</link>{col_type(m[0]),&#32;col_type(m[1])}
209 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
210 &#32;&#32;&#32;&#32;{
211 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!GLM_HAS_INITIALIZER_LISTS</emphasis>
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;col_type(m[0]);
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;col_type(m[1]);
214 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
215 &#32;&#32;&#32;&#32;}
216 
217 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Accesses&#32;--</emphasis>
218 
219 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
220 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::length_type&#32;i)
221 &#32;&#32;&#32;&#32;{
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
224 &#32;&#32;&#32;&#32;}
225 
226 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
227 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a08b807947b47031d3a511f03f89645ad">GLM_CONSTEXPR</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator[](<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::length_type&#32;i)<emphasis role="keyword">&#32;const</emphasis>
228 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(i&#32;&lt;&#32;this-&gt;<link linkend="_namespacelength">length</link>());
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_classvalue">value</link>[i];
231 &#32;&#32;&#32;&#32;}
232 
233 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;updatable&#32;operators&#32;--</emphasis>
234 
235 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
236 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
237 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator=(mat&lt;2,&#32;3,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
238 &#32;&#32;&#32;&#32;{
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;=&#32;m[0];
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;=&#32;m[1];
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
242 &#32;&#32;&#32;&#32;}
243 
244 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
245 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
246 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator+=(U&#32;s)
247 &#32;&#32;&#32;&#32;{
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;s;
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;s;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
251 &#32;&#32;&#32;&#32;}
252 
253 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
254 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
255 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator+=(mat&lt;2,&#32;3,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
256 &#32;&#32;&#32;&#32;{
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;+=&#32;m[0];
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;+=&#32;m[1];
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
260 &#32;&#32;&#32;&#32;}
261 
262 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
263 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
264 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator-=(U&#32;s)
265 &#32;&#32;&#32;&#32;{
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;s;
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;s;
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
269 &#32;&#32;&#32;&#32;}
270 
271 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
272 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
273 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator-=(mat&lt;2,&#32;3,&#32;U,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
274 &#32;&#32;&#32;&#32;{
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;-=&#32;m[0];
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;-=&#32;m[1];
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
278 &#32;&#32;&#32;&#32;}
279 
280 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
281 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
282 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator*=(U&#32;s)
283 &#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;*=&#32;s;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;*=&#32;s;
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
287 &#32;&#32;&#32;&#32;}
288 
289 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
290 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
291 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator/=(U&#32;s)
292 &#32;&#32;&#32;&#32;{
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[0]&#32;/=&#32;s;
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classvalue">value</link>[1]&#32;/=&#32;s;
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
296 &#32;&#32;&#32;&#32;}
297 
298 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Increment&#32;and&#32;decrement&#32;operators&#32;--</emphasis>
299 
300 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
301 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator++()
302 &#32;&#32;&#32;&#32;{
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[0];
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++this-&gt;<link linkend="_classvalue">value</link>[1];
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
306 &#32;&#32;&#32;&#32;}
307 
308 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
309 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;&amp;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator--()
310 &#32;&#32;&#32;&#32;{
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[0];
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--this-&gt;<link linkend="_classvalue">value</link>[1];
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
314 &#32;&#32;&#32;&#32;}
315 
316 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
317 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator++(<emphasis role="keywordtype">int</emphasis>)
318 &#32;&#32;&#32;&#32;{
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++*<emphasis role="keyword">this</emphasis>;
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
322 &#32;&#32;&#32;&#32;}
323 
324 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
325 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::operator--(<emphasis role="keywordtype">int</emphasis>)
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;Result(*<emphasis role="keyword">this</emphasis>);
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--*<emphasis role="keyword">this</emphasis>;
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
330 &#32;&#32;&#32;&#32;}
331 
332 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Unary&#32;arithmetic&#32;operators&#32;--</emphasis>
333 
334 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
335 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
336 &#32;&#32;&#32;&#32;{
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
338 &#32;&#32;&#32;&#32;}
339 
340 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
341 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
342 &#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[0],
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-m[1]);
346 &#32;&#32;&#32;&#32;}
347 
348 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Binary&#32;arithmetic&#32;operators&#32;--</emphasis>
349 
350 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
351 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
352 &#32;&#32;&#32;&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;+&#32;scalar,
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;+&#32;scalar);
356 &#32;&#32;&#32;&#32;}
357 
358 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
359 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1aa2d5ac154a92b4704cbb5ff147d2502d">operator+</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
360 &#32;&#32;&#32;&#32;{
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;+&#32;m2[0],
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;+&#32;m2[1]);
364 &#32;&#32;&#32;&#32;}
365 
366 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
367 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
368 &#32;&#32;&#32;&#32;{
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;-&#32;scalar,
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;-&#32;scalar);
372 &#32;&#32;&#32;&#32;}
373 
374 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
375 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a773876155d1503e9901e13f073e4947d">operator-</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
376 &#32;&#32;&#32;&#32;{
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0]&#32;-&#32;m2[0],
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[1]&#32;-&#32;m2[1]);
380 &#32;&#32;&#32;&#32;}
381 
382 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
383 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
384 &#32;&#32;&#32;&#32;{
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar);
388 &#32;&#32;&#32;&#32;}
389 
390 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
391 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(T&#32;scalar,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
392 &#32;&#32;&#32;&#32;{
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;*&#32;scalar,
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;*&#32;scalar);
396 &#32;&#32;&#32;&#32;}
397 
398 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
399 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">operator</emphasis>*
400 &#32;&#32;&#32;&#32;(
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::row_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>)
403 &#32;&#32;&#32;&#32;{
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::col_type(
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][0]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][1]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y,
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;+&#32;m[1][2]&#32;*&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y);
408 &#32;&#32;&#32;&#32;}
409 
410 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
411 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::row_type&#32;<emphasis role="keyword">operator</emphasis>*
412 &#32;&#32;&#32;&#32;(
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::col_type&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>,
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
415 &#32;&#32;&#32;&#32;{
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;::row_type(
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[0][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[0][1]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;*&#32;m[0][2],
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.x&#32;*&#32;m[1][0]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.y&#32;*&#32;m[1][1]&#32;+&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a14cfbe2fc2234f5504618905b69d1e06">v</link>.z&#32;*&#32;m[1][2]);
419 &#32;&#32;&#32;&#32;}
420 
421 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
422 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
423 &#32;&#32;&#32;&#32;{
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1],
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1],
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1],
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1],
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1],
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1]);
431 &#32;&#32;&#32;&#32;}
432 
433 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
434 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;3,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
435 &#32;&#32;&#32;&#32;{
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA00&#32;=&#32;m1[0][0];
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA01&#32;=&#32;m1[0][1];
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA02&#32;=&#32;m1[0][2];
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA10&#32;=&#32;m1[1][0];
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA11&#32;=&#32;m1[1][1];
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcA12&#32;=&#32;m1[1][2];
442 
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB00&#32;=&#32;m2[0][0];
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB01&#32;=&#32;m2[0][1];
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB10&#32;=&#32;m2[1][0];
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB11&#32;=&#32;m2[1][1];
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB20&#32;=&#32;m2[2][0];
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;SrcB21&#32;=&#32;m2[2][1];
449 
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&lt;3,&#32;3,&#32;T,&#32;Q&gt;&#32;Result;
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB00&#32;+&#32;SrcA10&#32;*&#32;SrcB01;
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB00&#32;+&#32;SrcA11&#32;*&#32;SrcB01;
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[0][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB00&#32;+&#32;SrcA12&#32;*&#32;SrcB01;
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB10&#32;+&#32;SrcA10&#32;*&#32;SrcB11;
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB10&#32;+&#32;SrcA11&#32;*&#32;SrcB11;
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[1][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB10&#32;+&#32;SrcA12&#32;*&#32;SrcB11;
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][0]&#32;=&#32;SrcA00&#32;*&#32;SrcB20&#32;+&#32;SrcA10&#32;*&#32;SrcB21;
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][1]&#32;=&#32;SrcA01&#32;*&#32;SrcB20&#32;+&#32;SrcA11&#32;*&#32;SrcB21;
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result[2][2]&#32;=&#32;SrcA02&#32;*&#32;SrcB20&#32;+&#32;SrcA12&#32;*&#32;SrcB21;
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
461 &#32;&#32;&#32;&#32;}
462 
463 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
464 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1af22e465f8f6bc7d70648c93e05fb7247">operator*</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;4,&#32;2,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
465 &#32;&#32;&#32;&#32;{
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;4,&#32;3,&#32;T,&#32;Q&gt;(
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[0][1],
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[0][1],
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[0][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[0][1],
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[1][1],
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[1][1],
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[1][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[1][1],
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[2][1],
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[2][1],
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[2][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[2][1],
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][0]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][0]&#32;*&#32;m2[3][1],
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][1]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][1]&#32;*&#32;m2[3][1],
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1[0][2]&#32;*&#32;m2[3][0]&#32;+&#32;m1[1][2]&#32;*&#32;m2[3][1]);
479 &#32;&#32;&#32;&#32;}
480 
481 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
482 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m,&#32;T&#32;scalar)
483 &#32;&#32;&#32;&#32;{
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[0]&#32;/&#32;scalar,
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m[1]&#32;/&#32;scalar);
487 &#32;&#32;&#32;&#32;}
488 
489 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
490 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<link linkend="_namespaceglm_1a3d4e77a9763e858fed5eed89a6f2637f">operator/</link>(T&#32;scalar,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m)
491 &#32;&#32;&#32;&#32;{
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;(
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[0],
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;/&#32;m[1]);
495 &#32;&#32;&#32;&#32;}
496 
497 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&#32;Boolean&#32;operators&#32;--</emphasis>
498 
499 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
500 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a4cf995a375755c1ce8062e09922d9c09">operator==</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
501 &#32;&#32;&#32;&#32;{
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;==&#32;m2[0])&#32;&amp;&amp;&#32;(m1[1]&#32;==&#32;m2[1]);
503 &#32;&#32;&#32;&#32;}
504 
505 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
506 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespaceglm_1a44659562d92c84a40cea8ae00c4ce7e0">operator!=</link>(mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m1,&#32;mat&lt;2,&#32;3,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;m2)
507 &#32;&#32;&#32;&#32;{
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m1[0]&#32;!=&#32;m2[0])&#32;||&#32;(m1[1]&#32;!=&#32;m2[1]);
509 &#32;&#32;&#32;&#32;}
510 }&#32;<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
