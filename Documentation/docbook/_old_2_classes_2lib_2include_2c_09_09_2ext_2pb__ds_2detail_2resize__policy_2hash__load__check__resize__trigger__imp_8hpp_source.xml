<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2resize__policy_2hash__load__check__resize__trigger__imp_8hpp_source" xml:lang="en-US">
<title>hash_load_check_resize_trigger_imp.hpp</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2005-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the&#32;terms</emphasis>
7 <emphasis role="comment">//&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software</emphasis>
8 <emphasis role="comment">//&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later</emphasis>
9 <emphasis role="comment">//&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but</emphasis>
12 <emphasis role="comment">//&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU</emphasis>
14 <emphasis role="comment">//&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
25 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2004&#32;Ami&#32;Tavory&#32;and&#32;Vladimir&#32;Dreizin,&#32;IBM-HRL.</emphasis>
26 
27 <emphasis role="comment">//&#32;Permission&#32;to&#32;use,&#32;copy,&#32;modify,&#32;sell,&#32;and&#32;distribute&#32;this&#32;software</emphasis>
28 <emphasis role="comment">//&#32;is&#32;hereby&#32;granted&#32;without&#32;fee,&#32;provided&#32;that&#32;the&#32;above&#32;copyright</emphasis>
29 <emphasis role="comment">//&#32;notice&#32;appears&#32;in&#32;all&#32;copies,&#32;and&#32;that&#32;both&#32;that&#32;copyright&#32;notice</emphasis>
30 <emphasis role="comment">//&#32;and&#32;this&#32;permission&#32;notice&#32;appear&#32;in&#32;supporting&#32;documentation.&#32;None</emphasis>
31 <emphasis role="comment">//&#32;of&#32;the&#32;above&#32;authors,&#32;nor&#32;IBM&#32;Haifa&#32;Research&#32;Laboratories,&#32;make&#32;any</emphasis>
32 <emphasis role="comment">//&#32;representation&#32;about&#32;the&#32;suitability&#32;of&#32;this&#32;software&#32;for&#32;any</emphasis>
33 <emphasis role="comment">//&#32;purpose.&#32;It&#32;is&#32;provided&#32;&quot;as&#32;is&quot;&#32;without&#32;express&#32;or&#32;implied</emphasis>
34 <emphasis role="comment">//&#32;warranty.</emphasis>
35 
41 <emphasis role="preprocessor">#ifdef&#32;PB_DS_CLASS_C_DEC</emphasis>
42 
43 <emphasis role="preprocessor">#define&#32;PB_DS_ASSERT_VALID(X)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
44 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__,&#32;__LINE__);)</emphasis>
45 
46 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
47 PB_DS_CLASS_C_DEC::
48 hash_load_check_resize_trigger(<emphasis role="keywordtype">float</emphasis>&#32;load_min,&#32;<emphasis role="keywordtype">float</emphasis>&#32;load_max)
49 :&#32;m_load_min(load_min),&#32;m_load_max(load_max),&#32;m_next_shrink_size(0),
50 &#32;&#32;m_next_grow_size(0),&#32;m_resize_needed(<link linkend="__classes_2lib_2include_2stdbool_8h_1a65e9886d74aaee76545e83dd09011727">false</link>)
51 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
52 
53 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
54 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
55 PB_DS_CLASS_C_DEC::
56 notify_find_search_start()
57 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
58 
59 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
60 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
61 PB_DS_CLASS_C_DEC::
62 notify_find_search_collision()
63 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
64 
65 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
66 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
67 PB_DS_CLASS_C_DEC::
68 notify_find_search_end()
69 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
70 
71 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
72 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
73 PB_DS_CLASS_C_DEC::
74 notify_insert_search_start()
75 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
76 
77 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
78 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
79 PB_DS_CLASS_C_DEC::
80 notify_insert_search_collision()
81 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
82 
83 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
84 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
85 PB_DS_CLASS_C_DEC::
86 notify_insert_search_end()
87 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
88 
89 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
90 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
91 PB_DS_CLASS_C_DEC::
92 notify_erase_search_start()
93 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
94 
95 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
96 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
97 PB_DS_CLASS_C_DEC::
98 notify_erase_search_collision()
99 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
100 
101 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
102 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
103 PB_DS_CLASS_C_DEC::
104 notify_erase_search_end()
105 {&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))&#32;}
106 
107 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
108 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
109 PB_DS_CLASS_C_DEC::
110 notify_inserted(size_type&#32;num_entries)
111 {
112 &#32;&#32;m_resize_needed&#32;=&#32;(num_entries&#32;&gt;=&#32;m_next_grow_size);
113 &#32;&#32;size_base::set_size(num_entries);
114 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
115 }
116 
117 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
118 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
119 PB_DS_CLASS_C_DEC::
120 notify_erased(size_type&#32;num_entries)
121 {
122 &#32;&#32;size_base::set_size(num_entries);
123 &#32;&#32;m_resize_needed&#32;=&#32;num_entries&#32;&lt;=&#32;m_next_shrink_size;
124 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
125 }
126 
127 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
128 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
129 PB_DS_CLASS_C_DEC::
130 is_resize_needed()<emphasis role="keyword">&#32;const</emphasis>
131 <emphasis role="keyword"></emphasis>{
132 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
133 &#32;&#32;<link linkend="__classes_2lib_2include_2avx512bwintrin_8h_1a43575ca181bb42c5fbdbe6c81c9b7cad">return</link>&#32;m_resize_needed;
134 }
135 
136 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
137 inline&#32;<emphasis role="keywordtype">bool</emphasis>
138 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
139 is_grow_needed(size_type&#32;<emphasis role="comment">/*size*/</emphasis>,&#32;size_type&#32;num_entries)<emphasis role="keyword">&#32;const</emphasis>
140 <emphasis role="keyword"></emphasis>{
141 &#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(m_resize_needed);
142 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num_entries&#32;&gt;=&#32;m_next_grow_size;
143 }
144 
145 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
146 PB_DS_CLASS_C_DEC::
147 ~hash_load_check_resize_trigger()&#32;{&#32;}
148 
149 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
150 <emphasis role="keywordtype">void</emphasis>
151 PB_DS_CLASS_C_DEC::
152 notify_resized(size_type&#32;new_size)
153 {
154 &#32;&#32;m_resize_needed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
155 &#32;&#32;m_next_grow_size&#32;=&#32;size_type(m_load_max&#32;*&#32;new_size&#32;-&#32;1);
156 &#32;&#32;m_next_shrink_size&#32;=&#32;size_type(m_load_min&#32;*&#32;new_size);
157 
158 <emphasis role="preprocessor">#ifdef&#32;PB_DS_HT_MAP_RESIZE_TRACE_</emphasis>
159 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;hlcrt::notify_resized&#32;&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;std::endl
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;1&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;new_size&#32;&lt;&lt;&#32;std::endl
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;2&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_load_min&#32;&lt;&lt;&#32;std::endl
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;3&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_load_max&#32;&lt;&lt;&#32;std::endl
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;4&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_next_shrink_size&#32;&lt;&lt;&#32;std::endl
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;5&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_next_grow_size&#32;&lt;&lt;&#32;std::endl;
165 <emphasis role="preprocessor">#endif</emphasis>
166 
167 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
168 }
169 
170 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
171 <emphasis role="keywordtype">void</emphasis>
172 PB_DS_CLASS_C_DEC::
173 notify_externally_resized(size_type&#32;new_size)
174 {
175 &#32;&#32;m_resize_needed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
176 &#32;&#32;size_type&#32;new_grow_size&#32;=&#32;size_type(m_load_max&#32;*&#32;new_size&#32;-&#32;1);
177 &#32;&#32;size_type&#32;new_shrink_size&#32;=&#32;size_type(m_load_min&#32;*&#32;new_size);
178 
179 <emphasis role="preprocessor">#ifdef&#32;PB_DS_HT_MAP_RESIZE_TRACE_</emphasis>
180 &#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;hlcrt::notify_externally_resized&#32;&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;std::endl
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;1&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;new_size&#32;&lt;&lt;&#32;std::endl
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;2&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_load_min&#32;&lt;&lt;&#32;std::endl
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;3&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_load_max&#32;&lt;&lt;&#32;std::endl
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;4&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_next_shrink_size&#32;&lt;&lt;&#32;std::endl
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;5&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_next_grow_size&#32;&lt;&lt;&#32;std::endl
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;6&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;new_shrink_size&#32;&lt;&lt;&#32;std::endl
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;7&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;new_grow_size&#32;&lt;&lt;&#32;std::endl;
188 <emphasis role="preprocessor">#endif</emphasis>
189 
190 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(new_grow_size&#32;&gt;=&#32;m_next_grow_size)
191 &#32;&#32;&#32;&#32;{
192 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(new_shrink_size&#32;&gt;=&#32;m_next_shrink_size);
193 &#32;&#32;&#32;&#32;&#32;&#32;m_next_grow_size&#32;=&#32;new_grow_size;
194 &#32;&#32;&#32;&#32;}
195 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
196 &#32;&#32;&#32;&#32;{
197 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lib_2include_2c_09_09_2debug_2assertions_8h_1aa2bfb4e74c7be93673913edf15f85504">_GLIBCXX_DEBUG_ASSERT</link>(new_shrink_size&#32;&lt;=&#32;m_next_shrink_size);
198 &#32;&#32;&#32;&#32;&#32;&#32;m_next_shrink_size&#32;=&#32;new_shrink_size;
199 &#32;&#32;&#32;&#32;}
200 
201 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
202 }
203 
204 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
205 <emphasis role="keywordtype">void</emphasis>
206 PB_DS_CLASS_C_DEC::
207 notify_cleared()
208 {
209 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
210 &#32;&#32;size_base::set_size(0);
211 &#32;&#32;m_resize_needed&#32;=&#32;(0&#32;&lt;&#32;m_next_shrink_size);
212 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
213 }
214 
215 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
216 <emphasis role="keywordtype">void</emphasis>
217 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
218 swap(<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>&amp;&#32;other)
219 {
220 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*<emphasis role="keyword">this</emphasis>))
221 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
222 
223 &#32;&#32;size_base::swap(other);
224 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_load_min,&#32;other.m_load_min);
225 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_load_max,&#32;other.m_load_max);
226 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_resize_needed,&#32;other.m_resize_needed);
227 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_next_grow_size,&#32;other.m_next_grow_size);
228 &#32;&#32;<link linkend="_namespacestd">std</link>::swap(m_next_shrink_size,&#32;other.m_next_shrink_size);
229 
230 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>((*this))
231 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1aee3eacf80388cda3950a668bc1e40110">PB_DS_ASSERT_VALID</link>(other)
232 }
233 
234 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
235 inline&#32;<link linkend="_namespacestd">std</link>::pair&lt;<emphasis role="keywordtype">float</emphasis>,&#32;<emphasis role="keywordtype">float</emphasis>&gt;
236 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a304b8b73a11afe64bfca54576b91263b">PB_DS_CLASS_C_DEC</link>::
237 get_loads()<emphasis role="keyword">&#32;const</emphasis>
238 <emphasis role="keyword"></emphasis>{
239 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33">PB_DS_STATIC_ASSERT</link>(access,&#32;external_load_access);
240 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_pair(m_load_min,&#32;m_load_max);
241 }
242 
243 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
244 <emphasis role="keywordtype">void</emphasis>
245 PB_DS_CLASS_C_DEC::
246 set_loads(std::pair&lt;float,&#32;float&gt;&#32;load_pair)
247 {
248 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2type__utils_8hpp_1a0610a49e32a86da761a7bd14b8fddc33">PB_DS_STATIC_ASSERT</link>(access,&#32;external_load_access);
249 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;old_load_min&#32;=&#32;m_load_min;
250 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;old_load_max&#32;=&#32;m_load_max;
251 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;old_next_shrink_size&#32;=&#32;m_next_shrink_size;
252 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;size_type&#32;old_next_grow_size&#32;=&#32;m_next_grow_size;
253 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;old_resize_needed&#32;=&#32;m_resize_needed;
254 
255 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a130bf0cd31a0783cd03563f46b46915b">__try</link>
256 &#32;&#32;&#32;&#32;{
257 &#32;&#32;&#32;&#32;&#32;&#32;m_load_min&#32;=&#32;load_pair.first;
258 &#32;&#32;&#32;&#32;&#32;&#32;m_load_max&#32;=&#32;load_pair.second;
259 &#32;&#32;&#32;&#32;&#32;&#32;do_resize(<emphasis role="keyword">static_cast&lt;</emphasis>size_type<emphasis role="keyword">&gt;</emphasis>(size_base::get_size()&#32;/&#32;((m_load_min&#32;+&#32;m_load_max)&#32;/&#32;2)));
260 &#32;&#32;&#32;&#32;}
261 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(...)
262 &#32;&#32;&#32;&#32;{
263 &#32;&#32;&#32;&#32;&#32;&#32;m_load_min&#32;=&#32;old_load_min;
264 &#32;&#32;&#32;&#32;&#32;&#32;m_load_max&#32;=&#32;old_load_max;
265 &#32;&#32;&#32;&#32;&#32;&#32;m_next_shrink_size&#32;=&#32;old_next_shrink_size;
266 &#32;&#32;&#32;&#32;&#32;&#32;m_next_grow_size&#32;=&#32;old_next_grow_size;
267 &#32;&#32;&#32;&#32;&#32;&#32;m_resize_needed&#32;=&#32;old_resize_needed;
268 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a92ef03a5310b10a4243a6ec8f43494b5">__throw_exception_again</link>;
269 &#32;&#32;&#32;&#32;}
270 }
271 
272 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
273 <emphasis role="keywordtype">void</emphasis>
274 PB_DS_CLASS_C_DEC::
275 do_resize(size_type)
276 {&#32;std::abort();&#32;}
277 
278 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_DEBUG</emphasis>
279 <emphasis role="preprocessor">#&#32;define&#32;PB_DS_DEBUG_VERIFY(_Cond)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
280 <emphasis role="preprocessor">&#32;&#32;_GLIBCXX_DEBUG_VERIFY_AT(_Cond,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
281 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_M_message(#_Cond&quot;&#32;assertion&#32;from&#32;%1;:%2;&quot;)&#32;&#32;\</emphasis>
282 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;._M_string(__FILE__)._M_integer(__LINE__)&#32;&#32;&#32;&#32;\</emphasis>
283 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,__file,__line)</emphasis>
284 
285 <link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2bin__search__tree___2bin__search__tree___8hpp_1a6fa497162e8fb54f6d8e2259d4ebd8ff">PB_DS_CLASS_T_DEC</link>
286 <emphasis role="keywordtype">void</emphasis>
287 PB_DS_CLASS_C_DEC::
288 assert_valid(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__file,&#32;<emphasis role="keywordtype">int</emphasis>&#32;__line)<emphasis role="keyword">&#32;const</emphasis>
289 <emphasis role="keyword"></emphasis>{
290 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_load_max&#32;&gt;&#32;m_load_min);
291 &#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2ext_2pb__ds_2detail_2binary__heap___2binary__heap___8hpp_1a60a4cde43600043cf4bcfa1ecd9f5e44">PB_DS_DEBUG_VERIFY</link>(m_next_grow_size&#32;&gt;=&#32;m_next_shrink_size);
292 }
293 <emphasis role="preprocessor">#&#32;undef&#32;PB_DS_DEBUG_VERIFY</emphasis>
294 <emphasis role="preprocessor">#endif</emphasis>
295 <emphasis role="preprocessor">#undef&#32;PB_DS_ASSERT_VALID</emphasis>
296 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
