<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2_smooth-_infinite-_voxel-_terrain-master_2_simplex_noise_b_p_library_8h_source" xml:lang="en-US">
<title>SimplexNoiseBPLibrary.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/Smooth-Infinite-Voxel-Terrain-master/SimplexNoiseBPLibrary.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">SimplexNoise&#32;1.0.0</emphasis>
3 <emphasis role="comment">-----</emphasis>
4 <emphasis role="comment">DevDad&#32;-&#32;Afan&#32;Olovcic&#32;@&#32;www.art-and-code.com&#32;-&#32;08/12/2015</emphasis>
5 <emphasis role="comment"></emphasis>
6 <emphasis role="comment">This&#32;algorithm&#32;was&#32;originally&#32;designed&#32;by&#32;Ken&#32;Perlin,&#32;but&#32;my&#32;code&#32;has&#32;been</emphasis>
7 <emphasis role="comment">adapted&#32;and&#32;extended&#32;from&#32;the&#32;implementation&#32;written&#32;by&#32;Stefan&#32;Gustavson&#32;(stegu@itn.liu.se)</emphasis>
8 <emphasis role="comment">and&#32;modified&#32;to&#32;fit&#32;to&#32;Unreal&#32;Engine&#32;4</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment"></emphasis>
11 <emphasis role="comment">*&#32;This&#32;is&#32;a&#32;clean,&#32;fast,&#32;modern&#32;and&#32;free&#32;Perlin&#32;Simplex&#32;noise&#32;function.</emphasis>
12 <emphasis role="comment">*&#32;If&#32;we&#32;change&#32;float&#32;to&#32;double&#32;it&#32;could&#32;be&#32;even&#32;faster&#32;but&#32;there&#32;is&#32;no&#32;double&#32;type&#32;in&#32;Blueprint</emphasis>
13 <emphasis role="comment">*&#32;All&#32;Public&#32;Functions&#32;are&#32;BlueprintCallable&#32;so&#32;they&#32;can&#32;be&#32;used&#32;in&#32;every&#32;blueprint</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment"></emphasis>
16 <emphasis role="comment">From&#32;DevDad&#32;and&#32;Dedicated&#32;to&#32;you&#32;and&#32;Unreal&#32;Community</emphasis>
17 <emphasis role="comment">Use&#32;it&#32;free&#32;for&#32;what&#32;ever&#32;you&#32;want</emphasis>
18 <emphasis role="comment">I&#32;only&#32;request&#32;that&#32;you&#32;mention&#32;me&#32;in&#32;the&#32;credits&#32;for&#32;your&#32;game&#32;in&#32;the&#32;way&#32;that&#32;feels&#32;most&#32;appropriate&#32;to&#32;you.</emphasis>
19 <emphasis role="comment"></emphasis>
20 <emphasis role="comment">*/</emphasis>
21 
22 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
23 
24 <emphasis role="preprocessor">#include&#32;&quot;SimplexNoiseBPLibrary.generated.h&quot;</emphasis>
25 
26 
27 UCLASS()
28 class&#32;SIMPLEXNOISE_API&#32;<link linkend="_class_u_simplex_noise_b_p_library">USimplexNoiseBPLibrary</link>&#32;:&#32;public&#32;UBlueprintFunctionLibrary
29 {
30 &#32;&#32;&#32;&#32;GENERATED_UCLASS_BODY()
31 private:
32 
33 &#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;perm[];
34 &#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;grad(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
35 &#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;grad(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
36 &#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;grad(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
37 &#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;grad(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t);
38 
39 public:
40 
41 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">void</emphasis>&#32;setNoiseSeed(const&#32;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1a43d43196463bde49cb067f5c20ab8481">int32</link>&amp;&#32;newSeed);
43 
44 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoise1D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>);
46 
47 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoise2D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>);
49 
50 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoise3D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>);
52 
53 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoise4D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>);
55 
56 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scaled&#32;by&#32;float&#32;value</emphasis>
57 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseScaled1D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;,&#32;<emphasis role="keywordtype">float</emphasis>&#32;s);
59 &#32;&#32;&#32;&#32;
60 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseScaled2D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;s);
62 
63 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseScaled3D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;s);
65 
66 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseScaled4D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;s);
68 
69 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;value&#32;in&#32;Range&#32;between&#32;two&#32;float&#32;numbers</emphasis>
70 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;Value&#32;is&#32;scaled&#32;by&#32;difference&#32;between&#32;rangeMin&#32;&amp;&#32;rangeMax&#32;value</emphasis>
71 
72 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseInRange1D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMin,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMax);
74 
75 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseInRange2D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMin,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMax);
77 
78 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseInRange3D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMin,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMax);
80 
81 &#32;&#32;&#32;&#32;UFUNCTION(BlueprintCallable,&#32;Category&#32;=&#32;&quot;SimplexNoise&quot;)
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keywordtype">float</emphasis>&#32;SimplexNoiseInRange4D(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMin,&#32;<emphasis role="keywordtype">float</emphasis>&#32;rangeMax);
83 
84 };
85 
</programlisting></section>
