<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1" xml:lang="en-US">
<title>README</title>
<indexterm><primary>README</primary></indexterm>

<para><link xlink:href="https://marzer.github.io/tomlplusplus/"></link> <link xlink:href="https://github.com/marzer/tomlplusplus/releases"></link> <link xlink:href="https://en.cppreference.com/w/cpp/compiler_support"></link> <link xlink:href="https://toml.io/en/v1.0.0"></link> <link xlink:href="./LICENSE"></link> <link xlink:href="https://github.com/marzer/tomlplusplus/actions/workflows/ci.yaml"></link> <link xlink:href="https://github.com/fffaraz/awesome-cpp"></link> <link xlink:href="https://github.com/sponsors/marzer"></link> </para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md119">
<title>&lt;a href=&quot;https://gitter.im/marzer/tomlplusplus&quot; &gt;&lt;img src=&quot;docs/images/badge-gitter.svg&quot; alt=&quot;Gitter&quot;/&gt;&lt;/a&gt;</title>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md120">
<title>toml++ homepage</title>

<para><emphasis role="bold">‚ú®&amp;#xFE0F; This README is fine, but the <link xlink:href="https://marzer.github.io/tomlplusplus/">toml++ homepage</link> is better. ‚ú®&amp;#xFE0F;</emphasis> </para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md121">
<title>Library features</title>

<para><itemizedlist>
<listitem>
<para>Header-only (optional!)</para>
</listitem><listitem>
<para>Supports the latest <link xlink:href="https://toml.io/">TOML</link> release (<link xlink:href="https://toml.io/en/v1.0.0">v1.0.0</link>), plus optional support for some unreleased TOML features</para>
</listitem><listitem>
<para>Passes all tests in the <link xlink:href="https://github.com/BurntSushi/toml-test">toml-test</link> suite</para>
</listitem><listitem>
<para>Supports serializing to JSON and YAML</para>
</listitem><listitem>
<para>Proper UTF-8 handling (incl. BOM)</para>
</listitem><listitem>
<para>C++17 (plus some C++20 features where available, e.g. experimental support for <link xlink:href="https://en.cppreference.com/w/cpp/keyword/char8_t">char8_t</link> strings)</para>
</listitem><listitem>
<para>Doesn&apos;t require RTTI</para>
</listitem><listitem>
<para>Works with or without exceptions</para>
</listitem><listitem>
<para>Tested on Clang (6+), GCC (7+) and MSVC (VS2019)</para>
</listitem><listitem>
<para>Tested on x64, x86 and ARM</para>
</listitem></itemizedlist>
</para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md122">
<title>Basic usage</title>

<para><blockquote>
<para>&#8205;‚Ñπ&amp;#xFE0F; _The following example favours brevity. If you&apos;d prefer full API documentation and lots of specific code snippets </para>
</blockquote>instead, visit the project <link xlink:href="https://marzer.github.io/tomlplusplus/">homepage</link>_</para>

<para>Given a <link xlink:href="https://toml.io/">TOML</link> file <computeroutput>configuration.toml</computeroutput> containing the following:</para>

<para><literallayout><computeroutput>[library]
name&#32;=&#32;&quot;toml++&quot;
authors&#32;=&#32;[&quot;Mark&#32;Gillard&#32;&lt;mark.gillard@outlook.com.au&gt;&quot;]

[dependencies]
cpp&#32;=&#32;17
</computeroutput></literallayout></para>

<para>Reading it in C++ is easy with toml++:</para>

<para><literallayout><computeroutput>#include&#32;&lt;toml.hpp&gt;

auto&#32;config&#32;=&#32;toml::parse_file(&#32;&quot;configuration.toml&quot;&#32;);

//&#32;get&#32;key-value&#32;pairs
std::string_view&#32;library_name&#32;=&#32;config[&quot;library&quot;][&quot;name&quot;].value_or(&quot;&quot;sv);
std::string_view&#32;library_author&#32;=&#32;config[&quot;library&quot;][&quot;authors&quot;][0].value_or(&quot;&quot;sv);
int64_t&#32;depends_on_cpp_version&#32;=&#32;config[&quot;dependencies&quot;][&quot;cpp&quot;].value_or(0);

//&#32;modify&#32;the&#32;data
config.insert_or_assign(&quot;alternatives&quot;,&#32;toml::array{
&#32;&#32;&#32;&#32;&quot;cpptoml&quot;,
&#32;&#32;&#32;&#32;&quot;toml11&quot;,
&#32;&#32;&#32;&#32;&quot;Boost.TOML&quot;
});

//&#32;use&#32;a&#32;visitor&#32;to&#32;iterate&#32;over&#32;heterogenous&#32;data
config.for_each([](auto&amp;&#32;key,&#32;auto&amp;&#32;value)
{
&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;value&#32;&lt;&lt;&#32;&quot;\n&quot;;
&#32;&#32;&#32;&#32;if&#32;constexpr&#32;(toml::is_string&lt;decltype(value)&gt;)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do_something_with_string_values(value);
});

//&#32;you&#32;can&#32;also&#32;iterate&#32;more&#32;&apos;traditionally&apos;&#32;using&#32;a&#32;ranged-for
for&#32;(auto&amp;&amp;&#32;[k,&#32;v]&#32;:&#32;config)
{
&#32;&#32;&#32;&#32;//&#32;...
}

//&#32;re-serialize&#32;as&#32;TOML
std::cout&#32;&lt;&lt;&#32;config&#32;&lt;&lt;&#32;&quot;\n&quot;;

//&#32;re-serialize&#32;as&#32;JSON
std::cout&#32;&lt;&lt;&#32;toml::json_formatter{&#32;config&#32;}&#32;&lt;&lt;&#32;&quot;\n&quot;;

//&#32;re-serialize&#32;as&#32;YAML
std::cout&#32;&lt;&lt;&#32;toml::yaml_formatter{&#32;config&#32;}&#32;&lt;&lt;&#32;&quot;\n&quot;;
</computeroutput></literallayout></para>

<para>You&apos;ll find some more code examples in the <computeroutput>examples</computeroutput> directory, and plenty more as part of the <link xlink:href="https://marzer.github.io/tomlplusplus/">API documentation</link>.</para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md123">
<title>Adding toml++ to your project</title>

<para><computeroutput>toml++</computeroutput> comes in two flavours: Single-header and Regular. The API is the same for both.</para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md124">
<title>üç¶&amp;#xFE0F; Single-header flavour</title>

<para><orderedlist>
<listitem>
<para>Drop <link xlink:href="https://raw.githubusercontent.com/marzer/tomlplusplus/master/toml.hpp"><computeroutput>toml.hpp</computeroutput></link> wherever you like in your source tree</para>
</listitem><listitem>
<para>There is no step two</para>
</listitem></orderedlist>
</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md125">
<title>üç®&amp;#xFE0F; Regular flavour</title>

<para><orderedlist>
<listitem>
<para>Clone the repository</para>
</listitem><listitem>
<para>Add <computeroutput>tomlplusplus/include</computeroutput> to your include paths</para>
</listitem><listitem>
<para><computeroutput>#include &lt;toml++/toml.h&gt;</computeroutput></para>
</listitem></orderedlist>
</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md126">
<title>Conan</title>

<para>Add <computeroutput>tomlplusplus/3.3.0</computeroutput> to your conanfile.</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md127">
<title>DDS</title>

<para>Add <computeroutput>tomlpp</computeroutput> to your <computeroutput>package.json5</computeroutput>, e.g.:</para>

<para><literallayout><computeroutput>depends:&#32;[
&#32;&#32;&#32;&#32;&apos;tomlpp^3.3.0&apos;,
]
</computeroutput></literallayout></para>

<para><blockquote>
<para>&#8205;‚Ñπ&amp;#xFE0F; <emphasis><link xlink:href="https://dds.pizza/">What is DDS?</link></emphasis> </para>
</blockquote></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md128">
<title>Tipi.build</title>

<para><computeroutput>tomlplusplus</computeroutput> can be easily used in <link xlink:href="https://tipi.build">tipi.build</link> projects by adding the following entry to your <computeroutput>.tipi/deps</computeroutput>:</para>

<para><literallayout><computeroutput>{
&#32;&#32;&#32;&#32;&quot;marzer/tomlplusplus&quot;:&#32;{&#32;}
}
</computeroutput></literallayout></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md129">
<title>Vcpkg</title>

<para><literallayout><computeroutput>vcpkg&#32;install&#32;tomlplusplus
</computeroutput></literallayout></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md130">
<title>Meson</title>

<para>You can install the wrap with:</para>

<para><literallayout><computeroutput>meson&#32;wrap&#32;install&#32;tomlplusplus
</computeroutput></literallayout></para>

<para>After that, you can use it like a regular dependency:</para>

<para><literallayout><computeroutput>tomlplusplus_dep&#32;=&#32;dependency(&apos;tomlplusplus&apos;)
</computeroutput></literallayout></para>

<para>You can also add it as a subproject directly.</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md131">
<title>CMake FetchContent</title>

<para><literallayout><computeroutput>include(FetchContent)
FetchContent_Declare(
&#32;&#32;&#32;&#32;tomlplusplus
&#32;&#32;&#32;&#32;GIT_REPOSITORY&#32;https://github.com/marzer/tomlplusplus.git
&#32;&#32;&#32;&#32;GIT_TAG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v3.3.0
)
FetchContent_MakeAvailable(tomlplusplus)
</computeroutput></literallayout></para>

<para><blockquote>
<para>&#8205;‚Ñπ&amp;#xFE0F; <emphasis><link xlink:href="https://cmake.org/cmake/help/latest/module/FetchContent.html">What is FetchContent?</link></emphasis> </para>
</blockquote></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md132">
<title>Git submodules</title>

<para><literallayout><computeroutput>git&#32;submodule&#32;add&#32;--depth&#32;1&#32;https://github.com/marzer/tomlplusplus.git&#32;tomlplusplus
git&#32;config&#32;-f&#32;.gitmodules&#32;submodule.tomlplusplus.shallow&#32;true
</computeroutput></literallayout></para>

<para><blockquote>
<para>&#8205;‚ö†&amp;#xFE0F; The toml++ repository has some submodules of its own, but <emphasis role="bold">they are only used for testing</emphasis>! You should <emphasis role="bold">not</emphasis> use the <computeroutput>--recursive</computeroutput> option for regular library consumption. </para>
</blockquote></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md133">
<title>Other environments and package managers</title>

<para>The C++ tooling ecosystem is a fractal nightmare of unbridled chaos so naturally I&apos;m not up-to-speed with all of the available packaging and integration options. I&apos;m always happy to see new ones supported, though! If there&apos;s some integration you&apos;d like to see and have the technical know-how to make it happen, feel free to <link linkend="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430">make a pull request</link>.</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md134">
<title>What about dependencies?</title>

<para>If you just want to consume <computeroutput>toml++</computeroutput> as a regular library then you don&apos;t have any dependencies to worry about. There&apos;s a few test-related dependencies to be aware of if you&apos;re working on the library, though. See <link linkend="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430">CONTRIBUTING</link> for information.</para>

<para><?linebreak?></para>
</section>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md135">
<title>Configuration</title>

<para>A number of configurable options are exposed in the form of preprocessor <computeroutput>#defines</computeroutput> Most likely you won&apos;t need to mess with these at all, but if you do, set them before including toml++.</para>

<para><informaltable frame="all">
    <tgroup cols="4" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
      <colspec colname='c3'/>
      <colspec colname='c4'/>
<thead>
      <row  class='markdownTableHead'>
<entry>
<para>Option   </para>
</entry><entry align='center'>
<para>Type   </para>
</entry><entry>
<para>Description   </para>
</entry><entry>
<para>Default    </para>
</entry></row>
</thead><tbody>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput><link linkend="_group__configuration_1ga8c407a8f6fe52a795db35be3f00393f8">TOML_ASSERT(expr)</link></computeroutput>   </para>
</entry><entry align='center'>
<para>function macro   </para>
</entry><entry>
<para>Sets the assert function used by the library.   </para>
</entry><entry>
<para><computeroutput>assert()</computeroutput>    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_CALLCONV</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>Calling convention to apply to exported free/static functions.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_CONFIG_HEADER</computeroutput>   </para>
</entry><entry align='center'>
<para>string literal   </para>
</entry><entry>
<para>Includes the given header file before the rest of the library.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_ENABLE_FORMATTERS</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Enables the formatters. Set to <computeroutput>0</computeroutput> if you don&apos;t need them to improve compile times and binary size.   </para>
</entry><entry>
<para><computeroutput>1</computeroutput>    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_ENABLE_FLOAT16</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Enables support for the built-in <computeroutput>_Float16</computeroutput> type.   </para>
</entry><entry>
<para>per compiler settings    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_ENABLE_PARSER</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Enables the parser. Set to <computeroutput>0</computeroutput> if you don&apos;t need it to improve compile times and binary size.   </para>
</entry><entry>
<para><computeroutput>1</computeroutput>    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_ENABLE_UNRELEASED_FEATURES</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Enables support for unreleased TOML language features.   </para>
</entry><entry>
<para><computeroutput>0</computeroutput>    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_ENABLE_WINDOWS_COMPAT</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Enables support for transparent conversion between wide and narrow strings.   </para>
</entry><entry>
<para><computeroutput>1</computeroutput> on Windows    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_EXCEPTIONS</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Sets whether the library uses exceptions.   </para>
</entry><entry>
<para>per compiler settings    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_EXPORTED_CLASS</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>API export annotation to add to classes.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_EXPORTED_MEMBER_FUNCTION</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>API export annotation to add to non-static class member functions.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_EXPORTED_FREE_FUNCTION</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>API export annotation to add to free functions.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_EXPORTED_STATIC_FUNCTION</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>API export annotation to add to static functions.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_HEADER_ONLY</computeroutput>   </para>
</entry><entry align='center'>
<para>boolean   </para>
</entry><entry>
<para>Disable this to explicitly control where toml++&apos;s implementation is compiled (e.g. as part of a library).   </para>
</entry><entry>
<para><computeroutput>1</computeroutput>    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_IMPLEMENTATION</computeroutput>   </para>
</entry><entry align='center'>
<para>define   </para>
</entry><entry>
<para>Define this to enable compilation of the library&apos;s implementation when <computeroutput>TOML_HEADER_ONLY</computeroutput> == <computeroutput>0</computeroutput>.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_OPTIONAL_TYPE</computeroutput>   </para>
</entry><entry align='center'>
<para>type name   </para>
</entry><entry>
<para>Overrides the <computeroutput>optional&lt;T&gt;</computeroutput> type used by the library if you need <link xlink:href="https://github.com/TartanLlama/optional">something better than std::optional</link>.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para><computeroutput>TOML_SMALL_FLOAT_TYPE</computeroutput>   </para>
</entry><entry align='center'>
<para>type name   </para>
</entry><entry>
<para>If your codebase has a custom &apos;small float&apos; type (e.g. half-precision), this tells toml++ about it.   </para>
</entry><entry>
<para>undefined    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para><computeroutput>TOML_SMALL_INT_TYPE</computeroutput>   </para>
</entry><entry align='center'>
<para>type name   </para>
</entry><entry>
<para>If your codebase has a custom &apos;small integer&apos; type (e.g. 24-bits), this tells toml++ about it.   </para>
</entry><entry>
<para>undefined   </para>
</entry></row>
    </tbody>
    </tgroup>
</informaltable>
</para>

<para><blockquote>
<para>&#8205;‚Ñπ&amp;#xFE0F; _A number of these have ABI implications; the library uses inline namespaces to prevent you from accidentally </para>
</blockquote>linking incompatible combinations together._</para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md136">
<title>TOML Language Support</title>

<para>At any given time the library aims to support whatever the <link xlink:href="https://github.com/toml-lang/toml/releases">most recently-released version</link> of TOML is, with opt-in support for a number of unreleased features from the <link xlink:href="https://github.com/toml-lang/toml/blob/master/README.md">TOML master</link> and some sane cherry-picks from the <link xlink:href="https://github.com/toml-lang/toml/issues">TOML issues list</link> where the discussion strongly indicates inclusion in a near-future release.</para>

<para>The library advertises the most recent numbered language version it fully supports via the preprocessor defines <computeroutput>TOML_LANG_MAJOR</computeroutput>, <computeroutput>TOML_LANG_MINOR</computeroutput> and <computeroutput>TOML_LANG_PATCH</computeroutput>.</para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md137">
<title>&lt;strong&gt;Unreleased language features:&lt;/strong&gt;</title>

<para><itemizedlist>
<listitem>
<para>[#516]: Allow newlines and trailing commas in inline tables</para>
</listitem><listitem>
<para>[#562]: Allow hex floating-point values</para>
</listitem><listitem>
<para>[#644]: Support <computeroutput>+</computeroutput> in key names</para>
</listitem><listitem>
<para>[#671]: Local time of day format should support <computeroutput>09:30</computeroutput> as opposed to <computeroutput>09:30:00</computeroutput></para>
</listitem><listitem>
<para>[#687]: Relax bare key restrictions to allow additional unicode characters</para>
</listitem><listitem>
<para>[#790]: Include an <computeroutput>\e</computeroutput> escape code sequence (shorthand for <computeroutput>\u001B</computeroutput>)</para>
</listitem><listitem>
<para>[#796]: Include an <computeroutput>\xHH</computeroutput> escape code sequence</para>
</listitem><listitem>
<para>[#891]: Allow non-English scripts for unquoted keys</para>
</listitem></itemizedlist>
</para>

<para><blockquote>
<para>&#8205;‚Ñπ&amp;#xFE0F; _<computeroutput>#define TOML_ENABLE_UNRELEASED_FEATURES 1</computeroutput> to enable these features (see Configuration)._ </para>
</blockquote></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md138">
<title>üîπ&amp;#xFE0F; &lt;strong&gt;TOML v1.0.0:&lt;/strong&gt;</title>

<para>All features supported, including:</para>

<para><itemizedlist>
<listitem>
<para>[#356]: Allow leading zeros in the exponent part of a float</para>
</listitem><listitem>
<para>[#567]: Control characters are not permitted in comments</para>
</listitem><listitem>
<para>[#571]: Allow raw tabs inside strings</para>
</listitem><listitem>
<para>[#665]: Make arrays heterogeneous</para>
</listitem><listitem>
<para>[#766]: Allow comments before commas in arrays</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md139">
<title>üîπ&amp;#xFE0F; &lt;strong&gt;TOML v0.5.0:&lt;/strong&gt;</title>

<para>All features supported.</para>

<para><?linebreak?></para>
</section>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md140">
<title>Contributing</title>

<para>Contributions are very welcome! Either by <link xlink:href="https://github.com/marzer/tomlplusplus/issues/new/choose">reporting issues</link> or submitting pull requests. If you wish to submit a pull request, please see <link linkend="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplusd982529d43eb917020814a624de7c430">CONTRIBUTING</link> for all the details you need to get going.</para>

<para><?linebreak?></para>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md141">
<title>License and Attribution</title>

<para>toml++ is licensed under the terms of the MIT license - see <link xlink:href="./LICENSE">LICENSE</link>.</para>

<para>UTF-8 decoding is performed using a state machine based on Bjoern Hoehrmann&apos;s &apos;<link xlink:href="http://bjoern.hoehrmann.de/utf-8/decoder/dfa/">Flexible and Economical UTF-8 Decoder</link>&apos;.</para>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md142">
<title>With thanks to:</title>

<para><itemizedlist>
<listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/beastle9end">@beastle9end</link></emphasis> - Made Windows.h include bypass</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/bjadamson">@bjadamson</link></emphasis> - Reported some bugs and helped design a new feature</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/bobfang1992">@bobfang1992</link></emphasis> - Reported a bug and created a <link xlink:href="https://github.com/bobfang1992/pytomlpp">wrapper in python</link></para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/GiulioRomualdi">@GiulioRomualdi</link></emphasis> - Added cmake+meson support</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/jonestristand">@jonestristand</link></emphasis> - Designed and implemented the <computeroutput>toml::path</computeroutput>s feature</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/kcsaul">@kcsaul</link></emphasis> - Fixed a bug</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/levicki">@levicki</link></emphasis> - Helped design some new features</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/moorereason">@moorereason</link></emphasis> - Reported a whole bunch of bugs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/mosra">@mosra</link></emphasis> - Created the awesome <link xlink:href="https://mcss.mosra.cz/documentation/doxygen">m.css</link> used to generate the API docs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/ned14">@ned14</link></emphasis> - Reported a bunch of bugs and helped design some new features</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/okureta">@okureta</link></emphasis> - Reported a bug</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/prince-chrismc">@prince-chrismc</link></emphasis> - Added toml++ to ConanCenter, and fixed some typos</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/rbrugo">@rbrugo</link></emphasis> - Helped design a new feature</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/Reedbeta">@Reedbeta</link></emphasis> - Fixed a bug and added additional Visual Studio debugger native visualizers</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/Ryan-rsm-McKenzie">@Ryan-rsm-McKenzie</link></emphasis> - Add natvis file to cmake install script</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/shdnx">@shdnx</link></emphasis> - Fixed a bug on GCC 8.2.0 and some meson config issues</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/sneves">@sneves</link></emphasis> - Helped fix a number of parser bugs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/sobczyk">@sobczyk</link></emphasis> - Reported some bugs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/std-any-emplace">@std-any-emplace</link></emphasis> - Reported some bugs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/Tachi107">@Tachi107</link></emphasis> - Made some tweaks to meson.build, added compile_library build option</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/traversaro">@traversaro</link></emphasis> - Added vcpkg support and reported a bunch of bugs</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/whiterabbit963">@whiterabbit963</link></emphasis> - Fixed a bug with value_or conversions</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/ximion">@ximion</link></emphasis> - Added support for installation with meson</para>
</listitem><listitem>
<para><emphasis role="bold"><link xlink:href="https://github.com/a-is"><emphasis></emphasis>-is</link></emphasis> - Fixed a bug</para>
</listitem></itemizedlist>
</para>

<para><?linebreak?></para>
</section>
</section>
<section xml:id="_md__c_1_2_users_2_h_p_2_documents_2_git_hub_2_minero-_game_2_classes_2_config_man_2lib_2tomlplus2017e5d92e5aa3ad0b8708284bfa74b1_1autotoc_md143">
<title>Contact</title>

<para>For bug reports and feature requests please consider using the <link xlink:href="https://github.com/marzer/tomlplusplus/issues">issues</link> system here on GitHub. For anything else though you&apos;re welcome to reach out via other means. In order of likely response time:</para>

<para><itemizedlist>
<listitem>
<para>Gitter: <link xlink:href="https://gitter.im/marzer/tomlplusplus">marzer/tomlplusplus</link> (&quot;Discord for repos&quot;)</para>
</listitem><listitem>
<para>Twitter: <link xlink:href="https://twitter.com/marzer8789">marzer8789</link></para>
</listitem><listitem>
<para>Email: <link xlink:href="mailto:mark.gillard@outlook.com.au">mark.gillard@outlook.com.au</link></para>
</listitem><listitem>
<para>Facebook: <link xlink:href="https://www.facebook.com/marzer">marzer</link></para>
</listitem><listitem>
<para>LinkedIn: <link xlink:href="https://www.linkedin.com/in/marzer/">marzer</link> </para>
</listitem></itemizedlist>
</para>
</section>
</section>
</section>
