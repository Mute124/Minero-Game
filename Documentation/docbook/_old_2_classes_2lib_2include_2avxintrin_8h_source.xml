<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2avxintrin_8h_source" xml:lang="en-US">
<title>avxintrin.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/avxintrin.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;Copyright&#32;(C)&#32;2008-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
2 <emphasis role="comment"></emphasis>
3 <emphasis role="comment">&#32;&#32;&#32;This&#32;file&#32;is&#32;part&#32;of&#32;GCC.</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
6 <emphasis role="comment">&#32;&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by</emphasis>
7 <emphasis role="comment">&#32;&#32;&#32;the&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
8 <emphasis role="comment">&#32;&#32;&#32;any&#32;later&#32;version.</emphasis>
9 <emphasis role="comment"></emphasis>
10 <emphasis role="comment">&#32;&#32;&#32;GCC&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
11 <emphasis role="comment">&#32;&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
12 <emphasis role="comment">&#32;&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
13 <emphasis role="comment">&#32;&#32;&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
17 <emphasis role="comment">&#32;&#32;&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
18 <emphasis role="comment"></emphasis>
19 <emphasis role="comment">&#32;&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
20 <emphasis role="comment">&#32;&#32;&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
21 <emphasis role="comment">&#32;&#32;&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
22 <emphasis role="comment">&#32;&#32;&#32;&lt;http://www.gnu.org/licenses/&gt;.&#32;&#32;*/</emphasis>
23 
24 <emphasis role="comment">/*&#32;Implemented&#32;from&#32;the&#32;specification&#32;included&#32;in&#32;the&#32;Intel&#32;C++&#32;Compiler</emphasis>
25 <emphasis role="comment">&#32;&#32;&#32;User&#32;Guide&#32;and&#32;Reference,&#32;version&#32;11.0.&#32;&#32;*/</emphasis>
26 
27 <emphasis role="preprocessor">#ifndef&#32;_IMMINTRIN_H_INCLUDED</emphasis>
28 <emphasis role="preprocessor">#&#32;error&#32;&quot;Never&#32;use&#32;&lt;avxintrin.h&gt;&#32;directly;&#32;include&#32;&lt;immintrin.h&gt;&#32;instead.&quot;</emphasis>
29 <emphasis role="preprocessor">#endif</emphasis>
30 
31 <emphasis role="preprocessor">#ifndef&#32;_AVXINTRIN_H_INCLUDED</emphasis>
32 <emphasis role="preprocessor">#define&#32;_AVXINTRIN_H_INCLUDED</emphasis>
33 
34 <emphasis role="preprocessor">#ifndef&#32;__AVX__</emphasis>
35 <emphasis role="preprocessor">#pragma&#32;GCC&#32;push_options</emphasis>
36 <emphasis role="preprocessor">#pragma&#32;GCC&#32;target(&quot;avx&quot;)</emphasis>
37 <emphasis role="preprocessor">#define&#32;__DISABLE_AVX__</emphasis>
38 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__AVX__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
39 
40 <emphasis role="comment">/*&#32;Internal&#32;data&#32;types&#32;for&#32;implementing&#32;the&#32;intrinsics.&#32;&#32;*/</emphasis>
41 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__v4df&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
42 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;__v8sf&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
43 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__v4di&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
44 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__v4du&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
45 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__v8si&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
46 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__v8su&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
47 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;__v16hi&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
48 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;__v16hu&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
49 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;__v32qi&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
50 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;__v32qs&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
51 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;__v32qu&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32)));
52 
53 <emphasis role="comment">/*&#32;The&#32;Intel&#32;API&#32;is&#32;flexible&#32;enough&#32;that&#32;we&#32;must&#32;allow&#32;aliasing&#32;with&#32;other</emphasis>
54 <emphasis role="comment">&#32;&#32;&#32;vector&#32;types,&#32;and&#32;their&#32;scalar&#32;components.&#32;&#32;*/</emphasis>
55 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__));
57 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__));
59 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__));
61 
62 <emphasis role="comment">/*&#32;Unaligned&#32;version&#32;of&#32;the&#32;same&#32;types.&#32;&#32;*/</emphasis>
63 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;__m256_u&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__aligned__&#32;(1)));
66 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;__m256i_u&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__,
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__aligned__&#32;(1)));
69 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;__m256d_u&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__vector_size__&#32;(32),
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__may_alias__,
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__aligned__&#32;(1)));
72 
73 <emphasis role="comment">/*&#32;Compare&#32;predicates&#32;for&#32;scalar&#32;and&#32;packed&#32;compare&#32;intrinsics.&#32;&#32;*/</emphasis>
74 
75 <emphasis role="comment">/*&#32;Equal&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
76 <emphasis role="preprocessor">#define&#32;_CMP_EQ_OQ&#32;&#32;0x00</emphasis>
77 <emphasis role="comment">/*&#32;Less-than&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
78 <emphasis role="preprocessor">#define&#32;_CMP_LT_OS&#32;&#32;0x01</emphasis>
79 <emphasis role="comment">/*&#32;Less-than-or-equal&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
80 <emphasis role="preprocessor">#define&#32;_CMP_LE_OS&#32;&#32;0x02</emphasis>
81 <emphasis role="comment">/*&#32;Unordered&#32;(non-signaling)&#32;&#32;*/</emphasis>
82 <emphasis role="preprocessor">#define&#32;_CMP_UNORD_Q&#32;&#32;&#32;&#32;0x03</emphasis>
83 <emphasis role="comment">/*&#32;Not-equal&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
84 <emphasis role="preprocessor">#define&#32;_CMP_NEQ_UQ&#32;0x04</emphasis>
85 <emphasis role="comment">/*&#32;Not-less-than&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
86 <emphasis role="preprocessor">#define&#32;_CMP_NLT_US&#32;0x05</emphasis>
87 <emphasis role="comment">/*&#32;Not-less-than-or-equal&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
88 <emphasis role="preprocessor">#define&#32;_CMP_NLE_US&#32;0x06</emphasis>
89 <emphasis role="comment">/*&#32;Ordered&#32;(nonsignaling)&#32;&#32;&#32;*/</emphasis>
90 <emphasis role="preprocessor">#define&#32;_CMP_ORD_Q&#32;&#32;0x07</emphasis>
91 <emphasis role="comment">/*&#32;Equal&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
92 <emphasis role="preprocessor">#define&#32;_CMP_EQ_UQ&#32;&#32;0x08</emphasis>
93 <emphasis role="comment">/*&#32;Not-greater-than-or-equal&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
94 <emphasis role="preprocessor">#define&#32;_CMP_NGE_US&#32;0x09</emphasis>
95 <emphasis role="comment">/*&#32;Not-greater-than&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
96 <emphasis role="preprocessor">#define&#32;_CMP_NGT_US&#32;0x0a</emphasis>
97 <emphasis role="comment">/*&#32;False&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
98 <emphasis role="preprocessor">#define&#32;_CMP_FALSE_OQ&#32;&#32;&#32;0x0b</emphasis>
99 <emphasis role="comment">/*&#32;Not-equal&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
100 <emphasis role="preprocessor">#define&#32;_CMP_NEQ_OQ&#32;0x0c</emphasis>
101 <emphasis role="comment">/*&#32;Greater-than-or-equal&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
102 <emphasis role="preprocessor">#define&#32;_CMP_GE_OS&#32;&#32;0x0d</emphasis>
103 <emphasis role="comment">/*&#32;Greater-than&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
104 <emphasis role="preprocessor">#define&#32;_CMP_GT_OS&#32;&#32;0x0e</emphasis>
105 <emphasis role="comment">/*&#32;True&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
106 <emphasis role="preprocessor">#define&#32;_CMP_TRUE_UQ&#32;&#32;&#32;&#32;0x0f</emphasis>
107 <emphasis role="comment">/*&#32;Equal&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
108 <emphasis role="preprocessor">#define&#32;_CMP_EQ_OS&#32;&#32;0x10</emphasis>
109 <emphasis role="comment">/*&#32;Less-than&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
110 <emphasis role="preprocessor">#define&#32;_CMP_LT_OQ&#32;&#32;0x11</emphasis>
111 <emphasis role="comment">/*&#32;Less-than-or-equal&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
112 <emphasis role="preprocessor">#define&#32;_CMP_LE_OQ&#32;&#32;0x12</emphasis>
113 <emphasis role="comment">/*&#32;Unordered&#32;(signaling)&#32;&#32;*/</emphasis>
114 <emphasis role="preprocessor">#define&#32;_CMP_UNORD_S&#32;&#32;&#32;&#32;0x13</emphasis>
115 <emphasis role="comment">/*&#32;Not-equal&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
116 <emphasis role="preprocessor">#define&#32;_CMP_NEQ_US&#32;0x14</emphasis>
117 <emphasis role="comment">/*&#32;Not-less-than&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
118 <emphasis role="preprocessor">#define&#32;_CMP_NLT_UQ&#32;0x15</emphasis>
119 <emphasis role="comment">/*&#32;Not-less-than-or-equal&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
120 <emphasis role="preprocessor">#define&#32;_CMP_NLE_UQ&#32;0x16</emphasis>
121 <emphasis role="comment">/*&#32;Ordered&#32;(signaling)&#32;&#32;*/</emphasis>
122 <emphasis role="preprocessor">#define&#32;_CMP_ORD_S&#32;&#32;0x17</emphasis>
123 <emphasis role="comment">/*&#32;Equal&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
124 <emphasis role="preprocessor">#define&#32;_CMP_EQ_US&#32;&#32;0x18</emphasis>
125 <emphasis role="comment">/*&#32;Not-greater-than-or-equal&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
126 <emphasis role="preprocessor">#define&#32;_CMP_NGE_UQ&#32;0x19</emphasis>
127 <emphasis role="comment">/*&#32;Not-greater-than&#32;(unordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
128 <emphasis role="preprocessor">#define&#32;_CMP_NGT_UQ&#32;0x1a</emphasis>
129 <emphasis role="comment">/*&#32;False&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
130 <emphasis role="preprocessor">#define&#32;_CMP_FALSE_OS&#32;&#32;&#32;0x1b</emphasis>
131 <emphasis role="comment">/*&#32;Not-equal&#32;(ordered,&#32;signaling)&#32;&#32;*/</emphasis>
132 <emphasis role="preprocessor">#define&#32;_CMP_NEQ_OS&#32;0x1c</emphasis>
133 <emphasis role="comment">/*&#32;Greater-than-or-equal&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
134 <emphasis role="preprocessor">#define&#32;_CMP_GE_OQ&#32;&#32;0x1d</emphasis>
135 <emphasis role="comment">/*&#32;Greater-than&#32;(ordered,&#32;non-signaling)&#32;&#32;*/</emphasis>
136 <emphasis role="preprocessor">#define&#32;_CMP_GT_OQ&#32;&#32;0x1e</emphasis>
137 <emphasis role="comment">/*&#32;True&#32;(unordered,&#32;signaling)&#32;&#32;*/</emphasis>
138 <emphasis role="preprocessor">#define&#32;_CMP_TRUE_US&#32;&#32;&#32;&#32;0x1f</emphasis>
139 
140 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
141 _mm256_add_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
142 {
143 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;+&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
144 }
145 
146 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
147 _mm256_add_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
148 {
149 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;+&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
150 }
151 
152 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
153 _mm256_addsub_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
154 {
155 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_addsubpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
156 }
157 
158 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
159 _mm256_addsub_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
160 {
161 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_addsubps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
162 }
163 
164 
165 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
166 _mm256_and_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
167 {
168 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_andpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
169 }
170 
171 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
172 _mm256_and_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
173 {
174 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_andps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
175 }
176 
177 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
178 _mm256_andnot_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
179 {
180 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_andnpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
181 }
182 
183 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
184 _mm256_andnot_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
185 {
186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_andnps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
187 }
188 
189 <emphasis role="comment">/*&#32;Double/single&#32;precision&#32;floating&#32;point&#32;blend&#32;instructions&#32;-&#32;select</emphasis>
190 <emphasis role="comment">&#32;&#32;&#32;data&#32;from&#32;2&#32;sources&#32;using&#32;constant/variable&#32;mask.&#32;&#32;*/</emphasis>
191 
192 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
193 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
194 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a482773c05f1ffe04a00c6e81a19da023">_mm256_blend_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
195 {
196 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_blendpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
199 }
200 
201 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
202 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a678ad552d06aae4f5155219d17159fb8">_mm256_blend_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
203 {
204 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_blendps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
207 }
208 <emphasis role="preprocessor">#else</emphasis>
209 <emphasis role="preprocessor">#define&#32;_mm256_blend_pd(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
210 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_blendpd256&#32;((__v4df)(__m256d)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)(Y),&#32;(int)(M)))</emphasis>
212 
213 <emphasis role="preprocessor">#define&#32;_mm256_blend_ps(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
214 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_blendps256&#32;((__v8sf)(__m256)(X),&#32;&#32;&#32;&#32;&#32;\</emphasis>
215 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)(Y),&#32;(int)(M)))</emphasis>
216 <emphasis role="preprocessor">#endif</emphasis>
217 
218 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
219 _mm256_blendv_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
220 {
221 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_blendvpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
224 }
225 
226 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
227 _mm256_blendv_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
228 {
229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_blendvps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
232 }
233 
234 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
235 _mm256_div_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
236 {
237 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;/&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
238 }
239 
240 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
241 _mm256_div_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
242 {
243 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;/&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
244 }
245 
246 <emphasis role="comment">/*&#32;Dot&#32;product&#32;instructions&#32;with&#32;mask-defined&#32;summing&#32;and&#32;zeroing&#32;parts</emphasis>
247 <emphasis role="comment">&#32;&#32;&#32;of&#32;result.&#32;&#32;*/</emphasis>
248 
249 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
250 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
251 <link linkend="__classes_2lib_2include_2avxintrin_8h_1ac57a522ffa3be5a96def0cb7a185a3a6">_mm256_dp_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
252 {
253 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_dpps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
256 }
257 <emphasis role="preprocessor">#else</emphasis>
258 <emphasis role="preprocessor">#define&#32;_mm256_dp_ps(X,&#32;Y,&#32;M)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
259 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_dpps256&#32;((__v8sf)(__m256)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
260 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)(Y),&#32;(int)(M)))</emphasis>
261 <emphasis role="preprocessor">#endif</emphasis>
262 
263 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
264 _mm256_hadd_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>)
265 {
266 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_haddpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>);
267 }
268 
269 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
270 _mm256_hadd_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>)
271 {
272 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_haddps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>);
273 }
274 
275 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
276 _mm256_hsub_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>)
277 {
278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_hsubpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>);
279 }
280 
281 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
282 _mm256_hsub_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>)
283 {
284 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_hsubps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>);
285 }
286 
287 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
288 _mm256_max_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
289 {
290 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_maxpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
291 }
292 
293 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
294 _mm256_max_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
295 {
296 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_maxps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
297 }
298 
299 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
300 _mm256_min_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
301 {
302 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_minpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
303 }
304 
305 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
306 _mm256_min_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
307 {
308 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_minps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
309 }
310 
311 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
312 _mm256_mul_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
313 {
314 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;*&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
315 }
316 
317 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
318 _mm256_mul_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
319 {
320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;*&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
321 }
322 
323 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
324 _mm256_or_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
325 {
326 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_orpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
327 }
328 
329 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
330 _mm256_or_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
331 {
332 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_orps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
333 }
334 
335 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
336 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
337 <link linkend="__classes_2lib_2include_2avxintrin_8h_1af441339436b26b5b79d408f0f605b879">_mm256_shuffle_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__mask)
338 {
339 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_shufpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask);
341 }
342 
343 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
344 <link linkend="__classes_2lib_2include_2avxintrin_8h_1abac8378ee6937a3b38f01f57d7728ad0">_mm256_shuffle_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__mask)
345 {
346 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_shufps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__mask);
348 }
349 <emphasis role="preprocessor">#else</emphasis>
350 <emphasis role="preprocessor">#define&#32;_mm256_shuffle_pd(A,&#32;B,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
351 <emphasis role="preprocessor">&#32;&#32;((__m256d)__builtin_ia32_shufpd256&#32;((__v4df)(__m256d)(A),&#32;&#32;&#32;&#32;&#32;\</emphasis>
352 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)(B),&#32;(int)(N)))</emphasis>
353 
354 <emphasis role="preprocessor">#define&#32;_mm256_shuffle_ps(A,&#32;B,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
355 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_shufps256&#32;((__v8sf)(__m256)(A),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
356 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)(B),&#32;(int)(N)))</emphasis>
357 <emphasis role="preprocessor">#endif</emphasis>
358 
359 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
360 _mm256_sub_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
361 {
362 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;-&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
363 }
364 
365 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
366 _mm256_sub_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
367 {
368 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;-&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
369 }
370 
371 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
372 _mm256_xor_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
373 {
374 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_xorpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
375 }
376 
377 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
378 _mm256_xor_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
379 {
380 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_xorps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
381 }
382 
383 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
384 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
385 <link linkend="__classes_2lib_2include_2avxintrin_8h_1aa4ef2bd8c584a2a8c56f0141ce40fdfe">_mm_cmp_pd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
386 {
387 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_cmppd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
388 }
389 
390 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
391 <link linkend="__classes_2lib_2include_2avxintrin_8h_1ada54743784446f7f235ab09f03a70d15">_mm_cmp_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
392 {
393 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_cmpps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
394 }
395 
396 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
397 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a811715ab7a590e9f91d87f1ef2f6e125">_mm256_cmp_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
398 {
399 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_cmppd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
401 }
402 
403 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
404 <link linkend="__classes_2lib_2include_2avxintrin_8h_1ae179cd4d25d9f34ffb4afee275fdb7ff">_mm256_cmp_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
405 {
406 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_cmpps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
408 }
409 
410 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
411 <link linkend="__classes_2lib_2include_2avxintrin_8h_1aeca2ce8039171942b20e80be57e9efe7">_mm_cmp_sd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
412 {
413 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_cmpsd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
414 }
415 
416 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
417 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a33db379dec69cea0cb645e143437acd1">_mm_cmp_ss</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
418 {
419 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_cmpss&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
420 }
421 <emphasis role="preprocessor">#else</emphasis>
422 <emphasis role="preprocessor">#define&#32;_mm_cmp_pd(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
423 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_cmppd&#32;((__v2df)(__m128d)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
424 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(Y),&#32;(int)(P)))</emphasis>
425 
426 <emphasis role="preprocessor">#define&#32;_mm_cmp_ps(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
427 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_cmpps&#32;((__v4sf)(__m128)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
428 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(Y),&#32;(int)(P)))</emphasis>
429 
430 <emphasis role="preprocessor">#define&#32;_mm256_cmp_pd(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
431 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_cmppd256&#32;((__v4df)(__m256d)(X),&#32;&#32;&#32;&#32;&#32;\</emphasis>
432 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)(Y),&#32;(int)(P)))</emphasis>
433 
434 <emphasis role="preprocessor">#define&#32;_mm256_cmp_ps(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
435 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_cmpps256&#32;((__v8sf)(__m256)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
436 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)(Y),&#32;(int)(P)))</emphasis>
437 
438 <emphasis role="preprocessor">#define&#32;_mm_cmp_sd(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
439 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_cmpsd&#32;((__v2df)(__m128d)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
440 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(Y),&#32;(int)(P)))</emphasis>
441 
442 <emphasis role="preprocessor">#define&#32;_mm_cmp_ss(X,&#32;Y,&#32;P)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
443 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_cmpss&#32;((__v4sf)(__m128)(X),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
444 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(Y),&#32;(int)(P)))</emphasis>
445 <emphasis role="preprocessor">#endif</emphasis>
446 
447 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
448 _mm256_cvtsi256_si32&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
449 {
450 &#32;&#32;__v8si&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>&#32;=&#32;(__v8si)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
451 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>[0];
452 }
453 
454 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
455 _mm256_cvtepi32_pd&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
456 {
457 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)__builtin_ia32_cvtdq2pd256&#32;((__v4si)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
458 }
459 
460 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
461 _mm256_cvtepi32_ps&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
462 {
463 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)__builtin_ia32_cvtdq2ps256&#32;((__v8si)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
464 }
465 
466 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
467 _mm256_cvtpd_ps&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
468 {
469 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)__builtin_ia32_cvtpd2ps256&#32;((__v4df)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
470 }
471 
472 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
473 _mm256_cvtps_epi32&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
474 {
475 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_cvtps2dq256&#32;((__v8sf)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
476 }
477 
478 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
479 _mm256_cvtps_pd&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
480 {
481 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)__builtin_ia32_cvtps2pd256&#32;((__v4sf)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
482 }
483 
484 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
485 _mm256_cvttpd_epi32&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
486 {
487 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)__builtin_ia32_cvttpd2dq256&#32;((__v4df)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
488 }
489 
490 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
491 _mm256_cvtpd_epi32&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
492 {
493 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)__builtin_ia32_cvtpd2dq256&#32;((__v4df)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
494 }
495 
496 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
497 _mm256_cvttps_epi32&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
498 {
499 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)__builtin_ia32_cvttps2dq256&#32;((__v8sf)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
500 }
501 
502 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">double</emphasis>
503 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
504 _mm256_cvtsd_f64&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
505 {
506 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>[0];
507 }
508 
509 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">float</emphasis>
510 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>&#32;((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
511 _mm256_cvtss_f32&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
512 {
513 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>[0];
514 }
515 
516 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
517 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
518 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a028581796c626f7f8ada283874ccf3ab">_mm256_extractf128_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
519 {
520 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_vextractf128_pd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
521 }
522 
523 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
524 <link linkend="__classes_2lib_2include_2avxintrin_8h_1ae85180b5d6dad375870fd7e73fd09a96">_mm256_extractf128_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
525 {
526 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_vextractf128_ps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
527 }
528 
529 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
530 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
531 {
532 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_vextractf128_si256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>);
533 }
534 
535 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
536 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a31dbc2e78b1b6a08f9e8959022cd9eef">_mm256_extract_epi32</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
537 {
538 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;2);
539 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1af10410dc52ede0cdb9411b5e18150188">_mm_extract_epi32</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;4);
540 }
541 
542 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
543 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a25703fa31a9bc58cc1186047be6f8c77">_mm256_extract_epi16</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
544 {
545 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;3);
546 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a2380e4b1bfad026b9a78ab376bfd7286">_mm_extract_epi16</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;8);
547 }
548 
549 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
550 <link linkend="__classes_2lib_2include_2avxintrin_8h_1ad6ee765189239bbb08bb59a28bd9ae10">_mm256_extract_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
551 {
552 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;4);
553 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1ad98cca93fe7324aebff50c95f7c12e4c">_mm_extract_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;16);
554 }
555 
556 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
557 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
558 _mm256_extract_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
559 {
560 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;1);
561 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm_extract_epi64&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;2);
562 }
563 <emphasis role="preprocessor">#endif</emphasis>
564 <emphasis role="preprocessor">#else</emphasis>
565 <emphasis role="preprocessor">#define&#32;_mm256_extractf128_pd(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
566 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_vextractf128_pd256&#32;((__v4df)(__m256d)(X),&#32;&#32;&#32;\</emphasis>
567 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(N)))</emphasis>
568 
569 <emphasis role="preprocessor">#define&#32;_mm256_extractf128_ps(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
570 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_vextractf128_ps256&#32;((__v8sf)(__m256)(X),&#32;\</emphasis>
571 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(N)))</emphasis>
572 
573 <emphasis role="preprocessor">#define&#32;_mm256_extractf128_si256(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
574 <emphasis role="preprocessor">&#32;&#32;((__m128i)&#32;__builtin_ia32_vextractf128_si256&#32;((__v8si)(__m256i)(X),&#32;&#32;&#32;\</emphasis>
575 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(N)))</emphasis>
576 
577 <emphasis role="preprocessor">#define&#32;_mm256_extract_epi32(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
578 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
579 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
580 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
581 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm_extract_epi32&#32;(__Y,&#32;(N)&#32;%&#32;4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
582 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
583 
584 <emphasis role="preprocessor">#define&#32;_mm256_extract_epi16(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
585 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
586 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
587 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
588 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm_extract_epi16&#32;(__Y,&#32;(N)&#32;%&#32;8);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
589 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
590 
591 <emphasis role="preprocessor">#define&#32;_mm256_extract_epi8(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
592 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
593 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
594 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
595 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm_extract_epi8&#32;(__Y,&#32;(N)&#32;%&#32;16);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
596 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
597 
598 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
599 <emphasis role="preprocessor">#define&#32;_mm256_extract_epi64(X,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
600 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
601 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
602 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;1);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
603 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm_extract_epi64&#32;(__Y,&#32;(N)&#32;%&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
604 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
605 <emphasis role="preprocessor">#endif</emphasis>
606 <emphasis role="preprocessor">#endif</emphasis>
607 
608 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
609 _mm256_zeroall&#32;(<emphasis role="keywordtype">void</emphasis>)
610 {
611 &#32;&#32;__builtin_ia32_vzeroall&#32;();
612 }
613 
614 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
615 _mm256_zeroupper&#32;(<emphasis role="keywordtype">void</emphasis>)
616 {
617 &#32;&#32;__builtin_ia32_vzeroupper&#32;();
618 }
619 
620 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
621 _mm_permutevar_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
622 {
623 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_vpermilvarpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
625 }
626 
627 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
628 _mm256_permutevar_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
629 {
630 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vpermilvarpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
632 }
633 
634 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
635 _mm_permutevar_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
636 {
637 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_vpermilvarps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
639 }
640 
641 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
642 _mm256_permutevar_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
643 {
644 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vpermilvarps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
646 }
647 
648 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
649 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
650 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a599d8894a5953d08699012acd773d98f">_mm_permute_pd</link>&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
651 {
652 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_vpermilpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
653 }
654 
655 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
656 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a56ea181424fbc941aad6028510430411">_mm256_permute_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
657 {
658 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vpermilpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
659 }
660 
661 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
662 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a94542874d8eb2f0537e54b7db5036ac4">_mm_permute_ps</link>&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
663 {
664 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_vpermilps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
665 }
666 
667 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
668 <link linkend="__classes_2lib_2include_2avxintrin_8h_1acf86851c85ae64dab2ec25390adb1b07">_mm256_permute_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
669 {
670 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vpermilps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
671 }
672 <emphasis role="preprocessor">#else</emphasis>
673 <emphasis role="preprocessor">#define&#32;_mm_permute_pd(X,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
674 <emphasis role="preprocessor">&#32;&#32;((__m128d)&#32;__builtin_ia32_vpermilpd&#32;((__v2df)(__m128d)(X),&#32;(int)(C)))</emphasis>
675 
676 <emphasis role="preprocessor">#define&#32;_mm256_permute_pd(X,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
677 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_vpermilpd256&#32;((__v4df)(__m256d)(X),&#32;(int)(C)))</emphasis>
678 
679 <emphasis role="preprocessor">#define&#32;_mm_permute_ps(X,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
680 <emphasis role="preprocessor">&#32;&#32;((__m128)&#32;__builtin_ia32_vpermilps&#32;((__v4sf)(__m128)(X),&#32;(int)(C)))</emphasis>
681 
682 <emphasis role="preprocessor">#define&#32;_mm256_permute_ps(X,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
683 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_vpermilps256&#32;((__v8sf)(__m256)(X),&#32;(int)(C)))</emphasis>
684 <emphasis role="preprocessor">#endif</emphasis>
685 
686 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
687 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
688 <link linkend="__classes_2lib_2include_2avxintrin_8h_1afe7d9e1265f2d16e717f68d641363176">_mm256_permute2f128_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
689 {
690 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vperm2f128_pd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
693 }
694 
695 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
696 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a1932cd65dfd1313ed51ef9693ff7b7f5">_mm256_permute2f128_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
697 {
698 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vperm2f128_ps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
701 }
702 
703 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
704 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a448faab109bd31de27895e3c08788b48">_mm256_permute2f128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>)
705 {
706 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vperm2f128_si256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>);
709 }
710 <emphasis role="preprocessor">#else</emphasis>
711 <emphasis role="preprocessor">#define&#32;_mm256_permute2f128_pd(X,&#32;Y,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
712 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_vperm2f128_pd256&#32;((__v4df)(__m256d)(X),&#32;\</emphasis>
713 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4df)(__m256d)(Y),&#32;\</emphasis>
714 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(C)))</emphasis>
715 
716 <emphasis role="preprocessor">#define&#32;_mm256_permute2f128_ps(X,&#32;Y,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
717 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_vperm2f128_ps256&#32;((__v8sf)(__m256)(X),&#32;&#32;&#32;\</emphasis>
718 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8sf)(__m256)(Y),&#32;&#32;&#32;\</emphasis>
719 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(C)))</emphasis>
720 
721 <emphasis role="preprocessor">#define&#32;_mm256_permute2f128_si256(X,&#32;Y,&#32;C)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
722 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vperm2f128_si256&#32;((__v8si)(__m256i)(X),&#32;\</emphasis>
723 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)(__m256i)(Y),&#32;\</emphasis>
724 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(C)))</emphasis>
725 <emphasis role="preprocessor">#endif</emphasis>
726 
727 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
728 _mm_broadcast_ss&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
729 {
730 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_vbroadcastss&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
731 }
732 
733 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
734 _mm256_broadcast_sd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
735 {
736 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vbroadcastsd256&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
737 }
738 
739 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
740 _mm256_broadcast_ss&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
741 {
742 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vbroadcastss256&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
743 }
744 
745 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
746 _mm256_broadcast_pd&#32;(__m128d&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
747 {
748 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vbroadcastf128_pd256&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
749 }
750 
751 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
752 _mm256_broadcast_ps&#32;(__m128&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
753 {
754 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vbroadcastf128_ps256&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
755 }
756 
757 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
758 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
759 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a6acb80e0c2f81ec974f89ee9dcc478f1">_mm256_insertf128_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>)
760 {
761 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_vinsertf128_pd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>);
764 }
765 
766 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
767 <link linkend="__classes_2lib_2include_2avxintrin_8h_1af55969e692876d3b09a41da9d47ee110">_mm256_insertf128_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>)
768 {
769 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_vinsertf128_ps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>);
772 }
773 
774 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
775 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>)
776 {
777 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_vinsertf128_si256&#32;((__v8si)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,
778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,
779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1ab0de30e2107547738abe1d18a74b92c8">__O</link>);
780 }
781 
782 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
783 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a803c27e7cb4f45aec2d0c5041169951b">_mm256_insert_epi32</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
784 {
785 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;2);
786 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a671a352bb3e2081424fbbadffa37e441">_mm_insert_epi32</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;4);
787 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;2);
788 }
789 
790 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
791 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a9bf6c02ab361f13d0725c3d851e273e2">_mm256_insert_epi16</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
792 {
793 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;3);
794 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2emmintrin_8h_1a0c494fee5f306b83d1a93fca272d5335">_mm_insert_epi16</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;8);
795 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;3);
796 }
797 
798 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
799 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a08e8faf4ca1c0698023d538dd1b0c83a">_mm256_insert_epi8</link>&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
800 {
801 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;4);
802 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2smmintrin_8h_1a93a7c92fec4a34c7923eb2fa352914d6">_mm_insert_epi8</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;16);
803 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;4);
804 }
805 
806 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
807 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
808 _mm256_insert_epi64&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>)
809 {
810 &#32;&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;1);
811 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;_mm_insert_epi64&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;%&#32;2);
812 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>,&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1ad90b1fa000da1666f104c4dd9c0d7f9b">__N</link>&#32;&gt;&gt;&#32;1);
813 }
814 <emphasis role="preprocessor">#endif</emphasis>
815 <emphasis role="preprocessor">#else</emphasis>
816 <emphasis role="preprocessor">#define&#32;_mm256_insertf128_pd(X,&#32;Y,&#32;O)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
817 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_vinsertf128_pd256&#32;((__v4df)(__m256d)(X),&#32;&#32;&#32;&#32;\</emphasis>
818 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2df)(__m128d)(Y),&#32;&#32;&#32;&#32;\</emphasis>
819 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(O)))</emphasis>
820 
821 <emphasis role="preprocessor">#define&#32;_mm256_insertf128_ps(X,&#32;Y,&#32;O)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
822 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_vinsertf128_ps256&#32;((__v8sf)(__m256)(X),&#32;&#32;\</emphasis>
823 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4sf)(__m128)(Y),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
824 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(O)))</emphasis>
825 
826 <emphasis role="preprocessor">#define&#32;_mm256_insertf128_si256(X,&#32;Y,&#32;O)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
827 <emphasis role="preprocessor">&#32;&#32;((__m256i)&#32;__builtin_ia32_vinsertf128_si256&#32;((__v8si)(__m256i)(X),&#32;&#32;&#32;&#32;\</emphasis>
828 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)(__m128i)(Y),&#32;&#32;&#32;&#32;\</emphasis>
829 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)(O)))</emphasis>
830 
831 <emphasis role="preprocessor">#define&#32;_mm256_insert_epi32(X,&#32;D,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
832 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
833 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
834 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
835 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__Y&#32;=&#32;_mm_insert_epi32&#32;(__Y,&#32;(D),&#32;(N)&#32;%&#32;4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
836 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm256_insertf128_si256&#32;((X),&#32;__Y,&#32;(N)&#32;&gt;&gt;&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
837 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
838 
839 <emphasis role="preprocessor">#define&#32;_mm256_insert_epi16(X,&#32;D,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
840 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
841 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
842 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
843 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__Y&#32;=&#32;_mm_insert_epi16&#32;(__Y,&#32;(D),&#32;(N)&#32;%&#32;8);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
844 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm256_insertf128_si256&#32;((X),&#32;__Y,&#32;(N)&#32;&gt;&gt;&#32;3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
845 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
846 
847 <emphasis role="preprocessor">#define&#32;_mm256_insert_epi8(X,&#32;D,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
848 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
849 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
850 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
851 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__Y&#32;=&#32;_mm_insert_epi8&#32;(__Y,&#32;(D),&#32;(N)&#32;%&#32;16);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
852 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm256_insertf128_si256&#32;((X),&#32;__Y,&#32;(N)&#32;&gt;&gt;&#32;4);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
853 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
854 
855 <emphasis role="preprocessor">#ifdef&#32;__x86_64__</emphasis>
856 <emphasis role="preprocessor">#define&#32;_mm256_insert_epi64(X,&#32;D,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
857 <emphasis role="preprocessor">&#32;&#32;(__extension__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
858 <emphasis role="preprocessor">&#32;&#32;&#32;({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
859 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__m128i&#32;__Y&#32;=&#32;_mm256_extractf128_si256&#32;((X),&#32;(N)&#32;&gt;&gt;&#32;1);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
860 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;__Y&#32;=&#32;_mm_insert_epi64&#32;(__Y,&#32;(D),&#32;(N)&#32;%&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
861 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;_mm256_insertf128_si256&#32;((X),&#32;__Y,&#32;(N)&#32;&gt;&gt;&#32;1);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
862 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}))</emphasis>
863 <emphasis role="preprocessor">#endif</emphasis>
864 <emphasis role="preprocessor">#endif</emphasis>
865 
866 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
867 _mm256_load_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
868 {
869 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*(__m256d&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
870 }
871 
872 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
873 _mm256_store_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
874 {
875 &#32;&#32;*(__m256d&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
876 }
877 
878 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
879 _mm256_load_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
880 {
881 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*(__m256&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
882 }
883 
884 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
885 _mm256_store_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
886 {
887 &#32;&#32;*(__m256&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
888 }
889 
890 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
891 _mm256_loadu_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
892 {
893 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*(__m256d_u&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
894 }
895 
896 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
897 _mm256_storeu_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
898 {
899 &#32;&#32;*(__m256d_u&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
900 }
901 
902 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
903 _mm256_loadu_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
904 {
905 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*(__m256_u&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
906 }
907 
908 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
909 _mm256_storeu_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
910 {
911 &#32;&#32;*(__m256_u&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
912 }
913 
914 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
915 _mm256_load_si256&#32;(__m256i&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
916 {
917 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
918 }
919 
920 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
921 _mm256_store_si256&#32;(__m256i&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
922 {
923 &#32;&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
924 }
925 
926 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
927 _mm256_loadu_si256&#32;(__m256i_u&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
928 {
929 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>;
930 }
931 
932 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
933 _mm256_storeu_si256&#32;(__m256i_u&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
934 {
935 &#32;&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
936 }
937 
938 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
939 _mm_maskload_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
940 {
941 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_maskloadpd&#32;((<emphasis role="keyword">const</emphasis>&#32;__v2df&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v2di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
943 }
944 
945 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
946 _mm_maskstore_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
947 {
948 &#32;&#32;__builtin_ia32_maskstorepd&#32;((__v2df&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v2di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
949 }
950 
951 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
952 _mm256_maskload_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
953 {
954 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_maskloadpd256&#32;((<emphasis role="keyword">const</emphasis>&#32;__v4df&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
956 }
957 
958 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
959 _mm256_maskstore_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
960 {
961 &#32;&#32;__builtin_ia32_maskstorepd256&#32;((__v4df&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
962 }
963 
964 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
965 _mm_maskload_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
966 {
967 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_maskloadps&#32;((<emphasis role="keyword">const</emphasis>&#32;__v4sf&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v4si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
969 }
970 
971 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
972 _mm_maskstore_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
973 {
974 &#32;&#32;__builtin_ia32_maskstoreps&#32;((__v4sf&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v4si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
975 }
976 
977 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
978 _mm256_maskload_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
979 {
980 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_maskloadps256&#32;((<emphasis role="keyword">const</emphasis>&#32;__v8sf&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__v8si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
982 }
983 
984 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
985 _mm256_maskstore_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
986 {
987 &#32;&#32;__builtin_ia32_maskstoreps256&#32;((__v8sf&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v8si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
988 }
989 
990 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
991 _mm256_movehdup_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
992 {
993 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_movshdup256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
994 }
995 
996 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
997 _mm256_moveldup_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
998 {
999 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_movsldup256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1000 }
1001 
1002 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1003 _mm256_movedup_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>)
1004 {
1005 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_movddup256&#32;((__v4df)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a2c42c5887e3958044e5ef1ed4186a305">__X</link>);
1006 }
1007 
1008 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1009 _mm256_lddqu_si256&#32;(__m256i&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>)
1010 {
1011 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_lddqu256&#32;((<emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*)<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>);
1012 }
1013 
1014 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1015 _mm256_stream_si256&#32;(__m256i&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1016 {
1017 &#32;&#32;__builtin_ia32_movntdq256&#32;((__v4di&#32;*)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1018 }
1019 
1020 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1021 _mm256_stream_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1022 {
1023 &#32;&#32;__builtin_ia32_movntpd256&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1024 }
1025 
1026 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1027 _mm256_stream_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1028 {
1029 &#32;&#32;__builtin_ia32_movntps256&#32;(<link linkend="__classes_2lib_2include_2adxintrin_8h_1a1d87666c870c8f6aab8607f912655510">__P</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1030 }
1031 
1032 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1033 _mm256_rcp_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1034 {
1035 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_rcpps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1036 }
1037 
1038 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1039 _mm256_rsqrt_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1040 {
1041 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_rsqrtps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1042 }
1043 
1044 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1045 _mm256_sqrt_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1046 {
1047 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_sqrtpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1048 }
1049 
1050 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1051 _mm256_sqrt_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1052 {
1053 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_sqrtps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1054 }
1055 
1056 <emphasis role="preprocessor">#ifdef&#32;__OPTIMIZE__</emphasis>
1057 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1058 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a903a3ca080847864b051bd3ffc5c56f3">_mm256_round_pd</link>&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
1059 {
1060 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_roundpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
1061 }
1062 
1063 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1064 <link linkend="__classes_2lib_2include_2avxintrin_8h_1a82f2460ed791e0e1e22436820ffc3778">_mm256_round_ps</link>&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>)
1065 {
1066 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_roundps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>);
1067 }
1068 <emphasis role="preprocessor">#else</emphasis>
1069 <emphasis role="preprocessor">#define&#32;_mm256_round_pd(V,&#32;M)&#32;\</emphasis>
1070 <emphasis role="preprocessor">&#32;&#32;((__m256d)&#32;__builtin_ia32_roundpd256&#32;((__v4df)(__m256d)(V),&#32;(int)(M)))</emphasis>
1071 
1072 <emphasis role="preprocessor">#define&#32;_mm256_round_ps(V,&#32;M)&#32;\</emphasis>
1073 <emphasis role="preprocessor">&#32;&#32;((__m256)&#32;__builtin_ia32_roundps256&#32;((__v8sf)(__m256)(V),&#32;(int)(M)))</emphasis>
1074 <emphasis role="preprocessor">#endif</emphasis>
1075 
1076 <emphasis role="preprocessor">#define&#32;_mm256_ceil_pd(V)&#32;&#32;&#32;_mm256_round_pd&#32;((V),&#32;_MM_FROUND_CEIL)</emphasis>
1077 <emphasis role="preprocessor">#define&#32;_mm256_floor_pd(V)&#32;&#32;_mm256_round_pd&#32;((V),&#32;_MM_FROUND_FLOOR)</emphasis>
1078 <emphasis role="preprocessor">#define&#32;_mm256_ceil_ps(V)&#32;&#32;&#32;_mm256_round_ps&#32;((V),&#32;_MM_FROUND_CEIL)</emphasis>
1079 <emphasis role="preprocessor">#define&#32;_mm256_floor_ps(V)&#32;&#32;_mm256_round_ps&#32;((V),&#32;_MM_FROUND_FLOOR)</emphasis>
1080 
1081 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1082 _mm256_unpackhi_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1083 {
1084 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_unpckhpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1085 }
1086 
1087 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1088 _mm256_unpacklo_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1089 {
1090 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_unpcklpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1091 }
1092 
1093 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1094 _mm256_unpackhi_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1095 {
1096 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_unpckhps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1097 }
1098 
1099 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1100 _mm256_unpacklo_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>)
1101 {
1102 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_unpcklps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>);
1103 }
1104 
1105 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1106 _mm_testz_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1107 {
1108 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestzpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1109 }
1110 
1111 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1112 _mm_testc_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1113 {
1114 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestcpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1115 }
1116 
1117 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1118 _mm_testnzc_pd&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1119 {
1120 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestnzcpd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1121 }
1122 
1123 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1124 _mm_testz_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1125 {
1126 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestzps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1127 }
1128 
1129 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1130 _mm_testc_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1131 {
1132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestcps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1133 }
1134 
1135 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1136 _mm_testnzc_ps&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1137 {
1138 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestnzcps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1139 }
1140 
1141 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1142 _mm256_testz_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1143 {
1144 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestzpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1145 }
1146 
1147 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1148 _mm256_testc_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1149 {
1150 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestcpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1151 }
1152 
1153 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1154 _mm256_testnzc_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1155 {
1156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestnzcpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1157 }
1158 
1159 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1160 _mm256_testz_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1161 {
1162 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestzps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1163 }
1164 
1165 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1166 _mm256_testc_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1167 {
1168 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestcps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1169 }
1170 
1171 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1172 _mm256_testnzc_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1173 {
1174 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_vtestnzcps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1175 }
1176 
1177 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1178 _mm256_testz_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1179 {
1180 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestz256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1181 }
1182 
1183 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1184 _mm256_testc_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1185 {
1186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestc256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1187 }
1188 
1189 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1190 _mm256_testnzc_si256&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>)
1191 {
1192 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_ptestnzc256&#32;((__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1a73e5343498f948e85e06b59efb98789a">__M</link>,&#32;(__v4di)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aeeee249cd237388c528aecce31323f66">__V</link>);
1193 }
1194 
1195 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1196 _mm256_movemask_pd&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1197 {
1198 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_movmskpd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1199 }
1200 
1201 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1202 _mm256_movemask_ps&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1203 {
1204 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_ia32_movmskps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1205 }
1206 
1207 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1208 _mm256_undefined_pd&#32;(<emphasis role="keywordtype">void</emphasis>)
1209 {
1210 &#32;&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1212 }
1213 
1214 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1215 _mm256_undefined_ps&#32;(<emphasis role="keywordtype">void</emphasis>)
1216 {
1217 &#32;&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1218 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1219 }
1220 
1221 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1222 _mm256_undefined_si256&#32;(<emphasis role="keywordtype">void</emphasis>)
1223 {
1224 &#32;&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>&#32;=&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1225 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a48aa39139718b660d0d5bb45613b7646">__Y</link>;
1226 }
1227 
1228 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1229 _mm256_setzero_pd&#32;(<emphasis role="keywordtype">void</emphasis>)
1230 {
1231 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256d){&#32;0.0,&#32;0.0,&#32;0.0,&#32;0.0&#32;};
1232 }
1233 
1234 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1235 _mm256_setzero_ps&#32;(<emphasis role="keywordtype">void</emphasis>)
1236 {
1237 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256){&#32;0.0,&#32;0.0,&#32;0.0,&#32;0.0,
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.0,&#32;0.0,&#32;0.0,&#32;0.0&#32;};
1239 }
1240 
1241 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1242 _mm256_setzero_si256&#32;(<emphasis role="keywordtype">void</emphasis>)
1243 {
1244 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v4di){&#32;0,&#32;0,&#32;0,&#32;0&#32;};
1245 }
1246 
1247 <emphasis role="comment">/*&#32;Create&#32;the&#32;vector&#32;[A&#32;B&#32;C&#32;D].&#32;&#32;*/</emphasis>
1248 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1249 _mm256_set_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>)
1250 {
1251 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256d){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1252 }
1253 
1254 <emphasis role="comment">/*&#32;Create&#32;the&#32;vector&#32;[A&#32;B&#32;C&#32;D&#32;E&#32;F&#32;G&#32;H].&#32;&#32;*/</emphasis>
1255 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1256 _mm256_set_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,
1257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1258 {
1259 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
1260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1261 }
1262 
1263 <emphasis role="comment">/*&#32;Create&#32;the&#32;vector&#32;[A&#32;B&#32;C&#32;D&#32;E&#32;F&#32;G&#32;H].&#32;&#32;*/</emphasis>
1264 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1265 _mm256_set_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,
1266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1267 {
1268 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v8si){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,
1269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1270 }
1271 
1272 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1273 _mm256_set_epi16&#32;(<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,
1274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,
1275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,
1276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>)
1277 {
1278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v16hi){
1279 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,
1280 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>
1281 &#32;&#32;};
1282 }
1283 
1284 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1285 _mm256_set_epi8&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1af9bf4bcb0361a2064b9db285e8e01d66">__q31</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0143b6aa1490150e289fdbc6d93d6b33">__q30</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa86b1a06f3f02a0ea08dd7150946ef6e">__q29</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a3ecbcdb8cb22106949219e833a3ec815">__q28</link>,
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0bc38a8fa591e7377c20793f45dbd070">__q27</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9fd029559bb63968996bd84d04e4da92">__q26</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa8a00316a74f11d9aeaa5375c330d764">__q25</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae4b2d793a18d9810266ce4783c037350">__q24</link>,
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a033cda9a42dc1435aa3979508139e0fa">__q23</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9827131e3363f88ec64ffccc292a1e46">__q22</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae130f95cd7371943bf3d882166288076">__q21</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1add4aabccb8c2a820ac2c66b22f822986">__q20</link>,
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1acfc417228271c63f58d05bec7c28e982">__q19</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a60d79d0fd4149def1daa6a682c419a4d">__q18</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1afe8b846481720a2ae084d2017df9a7c8">__q17</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a55414440926d884c7f5e3e860c7fa1b8">__q16</link>,
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,
1291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,
1292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>)
1293 {
1294 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v32qi){
1295 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,
1296 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,
1297 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a55414440926d884c7f5e3e860c7fa1b8">__q16</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1afe8b846481720a2ae084d2017df9a7c8">__q17</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a60d79d0fd4149def1daa6a682c419a4d">__q18</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1acfc417228271c63f58d05bec7c28e982">__q19</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1add4aabccb8c2a820ac2c66b22f822986">__q20</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae130f95cd7371943bf3d882166288076">__q21</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9827131e3363f88ec64ffccc292a1e46">__q22</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a033cda9a42dc1435aa3979508139e0fa">__q23</link>,
1298 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae4b2d793a18d9810266ce4783c037350">__q24</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa8a00316a74f11d9aeaa5375c330d764">__q25</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9fd029559bb63968996bd84d04e4da92">__q26</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0bc38a8fa591e7377c20793f45dbd070">__q27</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a3ecbcdb8cb22106949219e833a3ec815">__q28</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa86b1a06f3f02a0ea08dd7150946ef6e">__q29</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0143b6aa1490150e289fdbc6d93d6b33">__q30</link>,&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1af9bf4bcb0361a2064b9db285e8e01d66">__q31</link>
1299 &#32;&#32;};
1300 }
1301 
1302 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1303 _mm256_set_epi64x&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,
1304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>)
1305 {
1306 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v4di){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1307 }
1308 
1309 <emphasis role="comment">/*&#32;Create&#32;a&#32;vector&#32;with&#32;all&#32;elements&#32;equal&#32;to&#32;A.&#32;&#32;*/</emphasis>
1310 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1311 _mm256_set1_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1312 {
1313 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256d){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1314 }
1315 
1316 <emphasis role="comment">/*&#32;Create&#32;a&#32;vector&#32;with&#32;all&#32;elements&#32;equal&#32;to&#32;A.&#32;&#32;*/</emphasis>
1317 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1318 _mm256_set1_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1319 {
1320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1322 }
1323 
1324 <emphasis role="comment">/*&#32;Create&#32;a&#32;vector&#32;with&#32;all&#32;elements&#32;equal&#32;to&#32;A.&#32;&#32;*/</emphasis>
1325 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1326 _mm256_set1_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1327 {
1328 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v8si){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1330 }
1331 
1332 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1333 _mm256_set1_epi16&#32;(<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1334 {
1335 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi16&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1337 }
1338 
1339 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1340 _mm256_set1_epi8&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1341 {
1342 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi8&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1346 }
1347 
1348 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1349 _mm256_set1_epi64x&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1350 {
1351 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__extension__&#32;(__m256i)(__v4di){&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>&#32;};
1352 }
1353 
1354 <emphasis role="comment">/*&#32;Create&#32;vectors&#32;of&#32;elements&#32;in&#32;the&#32;reversed&#32;order&#32;from&#32;the</emphasis>
1355 <emphasis role="comment">&#32;&#32;&#32;_mm256_set_XXX&#32;functions.&#32;&#32;*/</emphasis>
1356 
1357 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1358 _mm256_setr_pd&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>)
1359 {
1360 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_pd&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1361 }
1362 
1363 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1364 _mm256_setr_ps&#32;(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,
1365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1366 {
1367 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_ps&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1368 }
1369 
1370 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1371 _mm256_setr_epi32&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,
1372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1373 {
1374 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi32&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1c55edb145e4eb5d50c95cd50cdb345d">__G</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aca8b2fb40ffe9edb4d26ef232f6b9dae">__F</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aaffafdb6b4d1a1d6d0ff3fc4313ea5f2">__E</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1375 }
1376 
1377 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1378 _mm256_setr_epi16&#32;(<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,
1380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,
1381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>)
1382 {
1383 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi16&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,
1384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,
1385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,
1386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>);
1387 }
1388 
1389 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1390 _mm256_setr_epi8&#32;&#32;(<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1af9bf4bcb0361a2064b9db285e8e01d66">__q31</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0143b6aa1490150e289fdbc6d93d6b33">__q30</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa86b1a06f3f02a0ea08dd7150946ef6e">__q29</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a3ecbcdb8cb22106949219e833a3ec815">__q28</link>,
1391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0bc38a8fa591e7377c20793f45dbd070">__q27</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9fd029559bb63968996bd84d04e4da92">__q26</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa8a00316a74f11d9aeaa5375c330d764">__q25</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae4b2d793a18d9810266ce4783c037350">__q24</link>,
1392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a033cda9a42dc1435aa3979508139e0fa">__q23</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9827131e3363f88ec64ffccc292a1e46">__q22</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae130f95cd7371943bf3d882166288076">__q21</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1add4aabccb8c2a820ac2c66b22f822986">__q20</link>,
1393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1acfc417228271c63f58d05bec7c28e982">__q19</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a60d79d0fd4149def1daa6a682c419a4d">__q18</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1afe8b846481720a2ae084d2017df9a7c8">__q17</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a55414440926d884c7f5e3e860c7fa1b8">__q16</link>,
1394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,
1396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>)
1398 {
1399 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi8&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1adcae804164e1e55a8dbeb69b669b79c3">__q00</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a38a84e73504d25cc9221c5d3792da814">__q01</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a77587d14f3ac7027d3ba7ddfc8705f56">__q02</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a24a9d026a34c9580475f8191293c93bc">__q03</link>,
1400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a4bbc80506418b5083bfd44e56fc746ed">__q04</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a07fc6775f3a3a003645c296372af1b57">__q05</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5ff41c43dd274b86cbf4c62485977fcd">__q06</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8ce9d3812ad10b88c5387c1269ad2637">__q07</link>,
1401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a81642b7f82e5647882818c6b56a2d2ac">__q08</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a1e5358a8b37d183eb86cb2a2912a30af">__q09</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a688d14dd105045b6e5894f77dffdad3e">__q10</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a324c161c857cf34d25c4f75451ee7688">__q11</link>,
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9033c210733d87d6f829e5192902ece7">__q12</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a8f6f231ced6e2fe5c3aefafdfd8d540d">__q13</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae75cc426b159f3e71e812f2e511a72c2">__q14</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae9702bed204bdfc9dd9c4389eeea6fe1">__q15</link>,
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a55414440926d884c7f5e3e860c7fa1b8">__q16</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1afe8b846481720a2ae084d2017df9a7c8">__q17</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a60d79d0fd4149def1daa6a682c419a4d">__q18</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1acfc417228271c63f58d05bec7c28e982">__q19</link>,
1404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1add4aabccb8c2a820ac2c66b22f822986">__q20</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae130f95cd7371943bf3d882166288076">__q21</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9827131e3363f88ec64ffccc292a1e46">__q22</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a033cda9a42dc1435aa3979508139e0fa">__q23</link>,
1405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae4b2d793a18d9810266ce4783c037350">__q24</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa8a00316a74f11d9aeaa5375c330d764">__q25</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a9fd029559bb63968996bd84d04e4da92">__q26</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0bc38a8fa591e7377c20793f45dbd070">__q27</link>,
1406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a3ecbcdb8cb22106949219e833a3ec815">__q28</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aa86b1a06f3f02a0ea08dd7150946ef6e">__q29</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0143b6aa1490150e289fdbc6d93d6b33">__q30</link>,&#32;<link linkend="__classes_2lib_2include_2avx512fintrin_8h_1af9bf4bcb0361a2064b9db285e8e01d66">__q31</link>);
1407 }
1408 
1409 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1410 _mm256_setr_epi64x&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,
1411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>)
1412 {
1413 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_epi64x&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6eb43f8ce5d30b744ecd40048b18618a">__D</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a0c40317e5929b8390f7a59d03c6cbc3e">__C</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a33cd047930e9f7d971f0c2013cc0535f">__B</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1414 }
1415 
1416 <emphasis role="comment">/*&#32;Casts&#32;between&#32;various&#32;SP,&#32;DP,&#32;INT&#32;vector&#32;types.&#32;&#32;Note&#32;that&#32;these&#32;do&#32;no</emphasis>
1417 <emphasis role="comment">&#32;&#32;&#32;conversion&#32;of&#32;values,&#32;they&#32;just&#32;change&#32;the&#32;type.&#32;&#32;*/</emphasis>
1418 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1419 _mm256_castpd_ps&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1420 {
1421 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1422 }
1423 
1424 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1425 _mm256_castpd_si256&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1426 {
1427 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1428 }
1429 
1430 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1431 _mm256_castps_pd&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1432 {
1433 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1434 }
1435 
1436 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1437 _mm256_castps_si256(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1438 {
1439 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1440 }
1441 
1442 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1443 _mm256_castsi256_ps&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1444 {
1445 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1446 }
1447 
1448 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1449 _mm256_castsi256_pd&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1450 {
1451 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>;
1452 }
1453 
1454 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1455 _mm256_castpd256_pd128&#32;(__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1456 {
1457 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128d)&#32;__builtin_ia32_pd_pd256&#32;((__v4df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1458 }
1459 
1460 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1461 _mm256_castps256_ps128&#32;(__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1462 {
1463 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128)&#32;__builtin_ia32_ps_ps256&#32;((__v8sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1464 }
1465 
1466 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1467 _mm256_castsi256_si128&#32;(__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1468 {
1469 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m128i)&#32;__builtin_ia32_si_si256&#32;((__v8si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1470 }
1471 
1472 <emphasis role="comment">/*&#32;When&#32;cast&#32;is&#32;done&#32;from&#32;a&#32;128&#32;to&#32;256-bit&#32;type,&#32;the&#32;low&#32;128&#32;bits&#32;of</emphasis>
1473 <emphasis role="comment">&#32;&#32;&#32;the&#32;256-bit&#32;result&#32;contain&#32;source&#32;parameter&#32;value&#32;and&#32;the&#32;upper&#32;128</emphasis>
1474 <emphasis role="comment">&#32;&#32;&#32;bits&#32;of&#32;the&#32;result&#32;are&#32;undefined.&#32;&#32;Those&#32;intrinsics&#32;shouldn&apos;t</emphasis>
1475 <emphasis role="comment">&#32;&#32;&#32;generate&#32;any&#32;extra&#32;moves.&#32;&#32;*/</emphasis>
1476 
1477 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1478 _mm256_castpd128_pd256&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1479 {
1480 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256d)&#32;__builtin_ia32_pd256_pd&#32;((__v2df)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1481 }
1482 
1483 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1484 _mm256_castps128_ps256&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1485 {
1486 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256)&#32;__builtin_ia32_ps256_ps&#32;((__v4sf)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1487 }
1488 
1489 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1490 _mm256_castsi128_si256&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1491 {
1492 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(__m256i)&#32;__builtin_ia32_si256_si&#32;((__v4si)<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>);
1493 }
1494 
1495 <emphasis role="comment">/*&#32;Similarly,&#32;but&#32;with&#32;zero&#32;extension&#32;instead&#32;of&#32;undefined&#32;values.&#32;&#32;*/</emphasis>
1496 
1497 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1498 _mm256_zextpd128_pd256&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1499 {
1500 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6acb80e0c2f81ec974f89ee9dcc478f1">_mm256_insertf128_pd</link>&#32;(_mm256_setzero_pd&#32;(),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;0);
1501 }
1502 
1503 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1504 _mm256_zextps128_ps256&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1505 {
1506 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1af55969e692876d3b09a41da9d47ee110">_mm256_insertf128_ps</link>&#32;(_mm256_setzero_ps&#32;(),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;0);
1507 }
1508 
1509 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1510 _mm256_zextsi128_si256&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1511 {
1512 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(_mm256_setzero_si256&#32;(),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;0);
1513 }
1514 
1515 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1516 _mm256_set_m128&#32;(&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>)
1517 {
1518 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1af55969e692876d3b09a41da9d47ee110">_mm256_insertf128_ps</link>&#32;(_mm256_castps128_ps256&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;1);
1519 }
1520 
1521 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1522 _mm256_set_m128d&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>)
1523 {
1524 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6acb80e0c2f81ec974f89ee9dcc478f1">_mm256_insertf128_pd</link>&#32;(_mm256_castpd128_pd256&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;1);
1525 }
1526 
1527 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1528 _mm256_set_m128i&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>)
1529 {
1530 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(_mm256_castsi128_si256&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>),&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;1);
1531 }
1532 
1533 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1534 _mm256_setr_m128&#32;(__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>,&#32;__m128&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1535 {
1536 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_m128&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>);
1537 }
1538 
1539 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1540 _mm256_setr_m128d&#32;(__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>,&#32;__m128d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1541 {
1542 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_m128d&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>);
1543 }
1544 
1545 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1546 _mm256_setr_m128i&#32;(__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>,&#32;__m128i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>)
1547 {
1548 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_mm256_set_m128i&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8387184c9856d3eb249942f17f6dc30">__H</link>,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a82e72570b37c650f0631edab9546dd1f">__L</link>);
1549 }
1550 
1551 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1552 _mm256_loadu2_m128&#32;(<emphasis role="keywordtype">float</emphasis>&#32;const&#32;*__PH,&#32;<emphasis role="keywordtype">float</emphasis>&#32;const&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)
1553 {
1554 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1af55969e692876d3b09a41da9d47ee110">_mm256_insertf128_ps</link>&#32;(_mm256_castps128_ps256&#32;(_mm_loadu_ps&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)),
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_loadu_ps&#32;(__PH),&#32;1);
1556 }
1557 
1558 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1559 _mm256_storeu2_m128&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*__PH,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;__m256&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1560 {
1561 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5d6e4471f6f74ccf5efcc763eb353cb9">_mm_storeu_ps</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;_mm256_castps256_ps128&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>));
1562 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a5d6e4471f6f74ccf5efcc763eb353cb9">_mm_storeu_ps</link>&#32;(__PH,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ae85180b5d6dad375870fd7e73fd09a96">_mm256_extractf128_ps</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;1));
1563 }
1564 
1565 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1566 _mm256_loadu2_m128d&#32;(<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*__PH,&#32;<emphasis role="keywordtype">double</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)
1567 {
1568 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6acb80e0c2f81ec974f89ee9dcc478f1">_mm256_insertf128_pd</link>&#32;(_mm256_castpd128_pd256&#32;(_mm_loadu_pd&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)),
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_loadu_pd&#32;(__PH),&#32;1);
1570 }
1571 
1572 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1573 _mm256_storeu2_m128d&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*__PH,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;__m256d&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1574 {
1575 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a414198ff4d6ca353abca6299ba208bfe">_mm_storeu_pd</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;_mm256_castpd256_pd128&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>));
1576 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a414198ff4d6ca353abca6299ba208bfe">_mm_storeu_pd</link>&#32;(__PH,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a028581796c626f7f8ada283874ccf3ab">_mm256_extractf128_pd</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;1));
1577 }
1578 
1579 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1580 _mm256_loadu2_m128i&#32;(__m128i_u&#32;<emphasis role="keyword">const</emphasis>&#32;*__PH,&#32;__m128i_u&#32;<emphasis role="keyword">const</emphasis>&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)
1581 {
1582 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a40b9fcd13876ab529aa2584ada35aa1c">_mm256_insertf128_si256</link>&#32;(_mm256_castsi128_si256&#32;(_mm_loadu_si128&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>)),
1583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mm_loadu_si128&#32;(__PH),&#32;1);
1584 }
1585 
1586 <emphasis role="keyword">extern</emphasis>&#32;__inline&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a59c127a17219914b78f267b05c8ab1f1">__attribute__</link>((__gnu_inline__,&#32;__always_inline__,&#32;__artificial__))
1587 _mm256_storeu2_m128i&#32;(__m128i_u&#32;*__PH,&#32;__m128i_u&#32;*<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;__m256i&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>)
1588 {
1589 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8f6a27fe514fda127ff1aa9770de6b3">_mm_storeu_si128</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1a510b40798c69c43fd4b75c26aa654749">__PL</link>,&#32;_mm256_castsi256_si128&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>));
1590 &#32;&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1ad8f6a27fe514fda127ff1aa9770de6b3">_mm_storeu_si128</link>&#32;(__PH,&#32;<link linkend="__classes_2lib_2include_2avxintrin_8h_1a6c947ace9be7dedaa2afc3c3b8f45841">_mm256_extractf128_si256</link>&#32;(<link linkend="__classes_2lib_2include_2avxintrin_8h_1aba6887c206833a2e71cd61678bfc4500">__A</link>,&#32;1));
1591 }
1592 
1593 <emphasis role="preprocessor">#ifdef&#32;__DISABLE_AVX__</emphasis>
1594 <emphasis role="preprocessor">#undef&#32;__DISABLE_AVX__</emphasis>
1595 <emphasis role="preprocessor">#pragma&#32;GCC&#32;pop_options</emphasis>
1596 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__DISABLE_AVX__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1597 
1598 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_AVXINTRIN_H_INCLUDED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
