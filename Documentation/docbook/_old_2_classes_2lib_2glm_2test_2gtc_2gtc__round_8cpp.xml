<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2glm_2test_2gtc_2gtc__round_8cpp" xml:lang="en-US">
<title>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/test/gtc/gtc_round.cpp File Reference</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/glm/test/gtc/gtc_round.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;glm/gtc/round.hpp&gt;<?linebreak?>#include &lt;glm/gtc/type_precision.hpp&gt;<?linebreak?>#include &lt;glm/gtc/vec1.hpp&gt;<?linebreak?>#include &lt;glm/gtc/epsilon.hpp&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?>#include &lt;ctime&gt;<?linebreak?>#include &lt;cstdio&gt;<?linebreak?></programlisting>Include dependency graph for gtc_round.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2glm_2test_2gtc_2gtc__round_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structis_power_of_two_1_1type">isPowerOfTwo::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structceil_power_of_two__advanced_1_1type">ceilPowerOfTwo_advanced::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfloor_multiple_1_1type">floorMultiple::type&lt; genType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structceil_multiple_1_1type">ceilMultiple::type&lt; genType &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceis_power_of_two">isPowerOfTwo</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceceil_power_of_two__advanced">ceilPowerOfTwo_advanced</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceround_power_of_two">roundPowerOfTwo</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefloor_power_of_two">floorPowerOfTwo</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceceil_power_of_two">ceilPowerOfTwo</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefloor_multiple">floorMultiple</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespaceceil_multiple">ceilMultiple</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_namespaceis_power_of_two_1a38c64c832a80205baa5467200334e277">isPowerOfTwo::test_int16</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceis_power_of_two_1a11e97dc47c3dde1bfe6779182c22e127">isPowerOfTwo::test_uint16</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceis_power_of_two_1a74127a6e810235e060a5d3e1198bebf2">isPowerOfTwo::test_int32</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceis_power_of_two_1a3e28f9202cde49cfc7e59fba60daf880">isPowerOfTwo::test_uint32</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceis_power_of_two_1a61d2dc212ac5f1294b7c4fb107f230ab">isPowerOfTwo::test</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename genIUType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> genIUType <link linkend="_namespaceceil_power_of_two__advanced_1aa0a48cdd09d05e51fffe88e9b0a00fe6">ceilPowerOfTwo_advanced::highestBitValue</link> (genIUType Value)</para>
</listitem>
            <listitem><para>template&lt;typename genType &gt; </para><para><link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link> genType <link linkend="_namespaceceil_power_of_two__advanced_1a746845e9b36a32cdb12ebcb2e71893ac">ceilPowerOfTwo_advanced::ceilPowerOfTwo_loop</link> (genType <link linkend="_classvalue">value</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_power_of_two__advanced_1ad52507d6c22f545021982230f874410e">ceilPowerOfTwo_advanced::test_int32</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_power_of_two__advanced_1a9d5f2a79e7e32840ba2d4480c0995f9f">ceilPowerOfTwo_advanced::test_uint32</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_power_of_two__advanced_1ae3cef11ef6bf55b38da827a977116566">ceilPowerOfTwo_advanced::perf</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_power_of_two__advanced_1acbad935c8c2a322dd555652029414ca0">ceilPowerOfTwo_advanced::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceround_power_of_two_1a22bbfe5aa152b4e72a764491663d947b">roundPowerOfTwo::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefloor_power_of_two_1a163a30b09b178f21fa8d346fc7982f47">floorPowerOfTwo::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_power_of_two_1a3bf4f7de3599fc63f36d845ea9227d69">ceilPowerOfTwo::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefloor_multiple_1a6cfaa6dc74a6673a21d9441eb4c1eaa3">floorMultiple::test_float</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacefloor_multiple_1a7429e6d138ae1b689c9707f231ebb38f">floorMultiple::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_multiple_1a9aeb5673341e5e7f43b0885375daed6d">ceilMultiple::test_float</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_multiple_1ac86a41d19e62f1331e61b6f56bdac76d">ceilMultiple::test_int</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceceil_multiple_1a889e9075e4cffd9417f37771c7da1a4c">ceilMultiple::test</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="__old_2_classes_2lib_2glm_2test_2gtc_2gtc__round_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__old_2_classes_2lib_2glm_2test_2gtc_2gtc__round_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>gtc_round.cpp</secondary></indexterm>
<indexterm><primary>gtc_round.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a0f7193911e632cd84da4082d5c628fe3">void</link> )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_old_2_classes_2lib_2glm_2test_2gtc_2gtc__round_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
