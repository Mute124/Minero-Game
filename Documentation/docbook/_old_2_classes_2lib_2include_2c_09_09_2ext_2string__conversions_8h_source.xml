<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__old_2_classes_2lib_2include_2c_09_09_2ext_2string__conversions_8h_source" xml:lang="en-US">
<title>string_conversions.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/ext/string_conversions.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;String&#32;Conversions&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2008-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
29 <emphasis role="preprocessor">#ifndef&#32;_STRING_CONVERSIONS_H</emphasis>
30 <emphasis role="preprocessor">#define&#32;_STRING_CONVERSIONS_H&#32;1</emphasis>
31 
32 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
33 
34 <emphasis role="preprocessor">#if&#32;__cplusplus&#32;&lt;&#32;201103L</emphasis>
35 <emphasis role="preprocessor">#&#32;include&#32;&lt;bits/c++0x_warning.h&gt;</emphasis>
36 <emphasis role="preprocessor">#else</emphasis>
37 
38 <emphasis role="preprocessor">#include&#32;&lt;bits/c++config.h&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;ext/numeric_traits.h&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;bits/functexcept.h&gt;</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
42 <emphasis role="preprocessor">#include&#32;&lt;cwchar&gt;</emphasis>
43 <emphasis role="preprocessor">#include&#32;&lt;cstdio&gt;</emphasis>
44 <emphasis role="preprocessor">#include&#32;&lt;cerrno&gt;</emphasis>
45 
46 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace____gnu__cxx">__gnu_cxx</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
47 {
48 _GLIBCXX_BEGIN_NAMESPACE_VERSION
49 
50 &#32;&#32;<emphasis role="comment">//&#32;Helper&#32;for&#32;all&#32;the&#32;sto*&#32;functions.</emphasis>
51 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_TRet,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Ret&#32;=&#32;_TRet,&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>...&#32;_Base&gt;
53 &#32;&#32;&#32;&#32;_Ret
54 &#32;&#32;&#32;&#32;__stoa(_TRet&#32;(*__convf)&#32;(<emphasis role="keyword">const</emphasis>&#32;_CharT*,&#32;_CharT**,&#32;_Base...),
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;__name,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__str,&#32;std::size_t*&#32;__idx,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;_Base...&#32;__base)
57 &#32;&#32;&#32;&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;_Ret&#32;__ret;
59 
60 &#32;&#32;&#32;&#32;&#32;&#32;_CharT*&#32;__endptr;
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Save_errno&#32;{
63 &#32;&#32;&#32;&#32;_Save_errno()&#32;:&#32;_M_errno(errno)&#32;{&#32;errno&#32;=&#32;0;&#32;}
64 &#32;&#32;&#32;&#32;~_Save_errno()&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errno&#32;==&#32;0)&#32;errno&#32;=&#32;_M_errno;&#32;}
65 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_M_errno;
66 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keyword">const</emphasis>&#32;__save_errno;
67 
68 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_Range_chk&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;_S_chk(_TRet,&#32;std::false_type)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>
73 &#32;&#32;&#32;&#32;&#32;&#32;_S_chk(_TRet&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>,&#32;std::true_type)&#32;<emphasis role="comment">//&#32;only&#32;called&#32;when&#32;_Ret&#32;is&#32;int</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>&#32;&lt;&#32;_TRet(__numeric_traits&lt;int&gt;::__min)
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;<link linkend="__classes_2lib_2include_2stdatomic_8h_1a15181bfd16829c92971879064b9d8dbb">__val</link>&#32;&gt;&#32;_TRet(__numeric_traits&lt;int&gt;::__max);
77 &#32;&#32;&#32;&#32;&#32;&#32;}
78 &#32;&#32;&#32;&#32;&#32;&#32;};
79 
80 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_TRet&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>&#32;=&#32;__convf(__str,&#32;&amp;__endptr,&#32;<link linkend="_namespace____gnu__debug_1a462d3f2cc5cb94a7cb98e035cd61b763">__base</link>...);
81 
82 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__endptr&#32;==&#32;__str)
83 &#32;&#32;&#32;&#32;std::__throw_invalid_argument(__name);
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errno&#32;==&#32;ERANGE
85 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;_Range_chk::_S_chk(<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>,&#32;std::is_same&lt;_Ret,&#32;int&gt;{}))
86 &#32;&#32;&#32;&#32;std::__throw_out_of_range(__name);
87 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
88 &#32;&#32;&#32;&#32;__ret&#32;=&#32;<link linkend="__classes_2lib_2include_2xmmintrin_8h_1ad56bf6b8c22ee698e455f99196a1fe12">__tmp</link>;
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__idx)
91 &#32;&#32;&#32;&#32;*__idx&#32;=&#32;__endptr&#32;-&#32;__str;
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__ret;
94 &#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;<emphasis role="comment">//&#32;Helper&#32;for&#32;the&#32;to_string&#32;/&#32;to_wstring&#32;functions.</emphasis>
97 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_String,&#32;<emphasis role="keyword">typename</emphasis>&#32;_CharT&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;_String::value_type&gt;
98 &#32;&#32;&#32;&#32;_String
99 &#32;&#32;&#32;&#32;__to_xstring(<emphasis role="keywordtype">int</emphasis>&#32;(*__convf)&#32;(_CharT*,&#32;std::size_t,&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*,
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_va_list),&#32;std::size_t&#32;__n,
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__fmt,&#32;...)
102 &#32;&#32;&#32;&#32;{
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;XXX&#32;Eventually&#32;the&#32;result&#32;should&#32;be&#32;constructed&#32;in-place&#32;in</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;__cxx11&#32;string,&#32;likely&#32;with&#32;the&#32;help&#32;of&#32;internal&#32;hooks.</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;_CharT*&#32;__s&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>_CharT*<emphasis role="keyword">&gt;</emphasis>(__builtin_alloca(<emphasis role="keyword">sizeof</emphasis>(_CharT)
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;__n));
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;__builtin_va_list&#32;__args;
109 &#32;&#32;&#32;&#32;&#32;&#32;__builtin_va_start(__args,&#32;__fmt);
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;__len&#32;=&#32;__convf(__s,&#32;__n,&#32;__fmt,&#32;__args);
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;__builtin_va_end(__args);
114 
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_String(__s,&#32;__s&#32;+&#32;__len);
116 &#32;&#32;&#32;&#32;}
117 
118 _GLIBCXX_END_NAMESPACE_VERSION
119 }&#32;<emphasis role="comment">//&#32;namespace</emphasis>
120 
121 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;C++11</emphasis>
122 
123 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;_STRING_CONVERSIONS_H</emphasis>
</programlisting></section>
