<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__classes_2lib_2include_2c_09_09_2bits_2ostream__insert_8h_source" xml:lang="en-US">
<title>ostream_insert.h</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/bits/ostream_insert.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Helpers&#32;for&#32;ostream&#32;inserters&#32;-*-&#32;C++&#32;-*-</emphasis>
2 
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2007-2022&#32;Free&#32;Software&#32;Foundation,&#32;Inc.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;This&#32;file&#32;is&#32;part&#32;of&#32;the&#32;GNU&#32;ISO&#32;C++&#32;Library.&#32;&#32;This&#32;library&#32;is&#32;free</emphasis>
6 <emphasis role="comment">//&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;it&#32;under&#32;the</emphasis>
7 <emphasis role="comment">//&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
8 <emphasis role="comment">//&#32;Free&#32;Software&#32;Foundation;&#32;either&#32;version&#32;3,&#32;or&#32;(at&#32;your&#32;option)</emphasis>
9 <emphasis role="comment">//&#32;any&#32;later&#32;version.</emphasis>
10 
11 <emphasis role="comment">//&#32;This&#32;library&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
12 <emphasis role="comment">//&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
13 <emphasis role="comment">//&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the</emphasis>
14 <emphasis role="comment">//&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
15 
16 <emphasis role="comment">//&#32;Under&#32;Section&#32;7&#32;of&#32;GPL&#32;version&#32;3,&#32;you&#32;are&#32;granted&#32;additional</emphasis>
17 <emphasis role="comment">//&#32;permissions&#32;described&#32;in&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception,&#32;version</emphasis>
18 <emphasis role="comment">//&#32;3.1,&#32;as&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation.</emphasis>
19 
20 <emphasis role="comment">//&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;and</emphasis>
21 <emphasis role="comment">//&#32;a&#32;copy&#32;of&#32;the&#32;GCC&#32;Runtime&#32;Library&#32;Exception&#32;along&#32;with&#32;this&#32;program;</emphasis>
22 <emphasis role="comment">//&#32;see&#32;the&#32;files&#32;COPYING3&#32;and&#32;COPYING.RUNTIME&#32;respectively.&#32;&#32;If&#32;not,&#32;see</emphasis>
23 <emphasis role="comment">//&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
24 
30 <emphasis role="preprocessor">#ifndef&#32;_OSTREAM_INSERT_H</emphasis>
31 <emphasis role="preprocessor">#define&#32;_OSTREAM_INSERT_H&#32;1</emphasis>
32 
33 <emphasis role="preprocessor">#pragma&#32;GCC&#32;system_header</emphasis>
34 
35 <emphasis role="preprocessor">#include&#32;&lt;iosfwd&gt;</emphasis>
36 <emphasis role="preprocessor">#include&#32;&lt;bits/cxxabi_forced.h&gt;</emphasis>
37 <emphasis role="preprocessor">#include&#32;&lt;bits/exception_defines.h&gt;</emphasis>
38 
39 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacestd">std</link>&#32;<link linkend="__classes_2lib_2include_2c_09_09_2x86__64-w64-mingw32_2bits_2c_09_09config_8h_1a44377df0d3503f0b3d9ab316dd8ddf8b">_GLIBCXX_VISIBILITY</link>(default)
40 {
41 _GLIBCXX_BEGIN_NAMESPACE_VERSION
42 
43 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
44 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
45 &#32;&#32;&#32;&#32;__ostream_write(basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__out,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;streamsize&#32;__n)
47 &#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;basic_ostream&lt;_CharT,&#32;_Traits&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_type;&#32;&#32;&#32;&#32;&#32;&#32;
49 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__ostream_type::ios_base&#32;&#32;&#32;&#32;__ios_base;
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;streamsize&#32;__put&#32;=&#32;__out.rdbuf()-&gt;sputn(__s,&#32;__n);
52 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__put&#32;!=&#32;__n)
53 &#32;&#32;&#32;&#32;__out.setstate(__ios_base::badbit);
54 &#32;&#32;&#32;&#32;}
55 
56 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>
58 &#32;&#32;&#32;&#32;__ostream_fill(basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__out,&#32;streamsize&#32;__n)
59 &#32;&#32;&#32;&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;basic_ostream&lt;_CharT,&#32;_Traits&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_type;&#32;&#32;&#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__ostream_type::ios_base&#32;&#32;&#32;&#32;__ios_base;
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT&#32;__c&#32;=&#32;__out.fill();
64 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;__n&#32;&gt;&#32;0;&#32;--__n)
65 &#32;&#32;&#32;&#32;{
66 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits::int_type&#32;__put&#32;=&#32;__out.rdbuf()-&gt;sputc(__c);
67 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_Traits::eq_int_type(__put,&#32;_Traits::eof()))
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__out.setstate(__ios_base::badbit);
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
72 &#32;&#32;&#32;&#32;}
73 &#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;_CharT,&#32;<emphasis role="keyword">typename</emphasis>&#32;_Traits&gt;
76 &#32;&#32;&#32;&#32;basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;
77 &#32;&#32;&#32;&#32;__ostream_insert(basic_ostream&lt;_CharT,&#32;_Traits&gt;&amp;&#32;__out,
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;_CharT*&#32;__s,&#32;streamsize&#32;__n)
79 &#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;basic_ostream&lt;_CharT,&#32;_Traits&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_type;
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;__ostream_type::ios_base&#32;&#32;&#32;&#32;__ios_base;
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;__ostream_type::sentry&#32;__cerb(__out);
84 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__cerb)
85 &#32;&#32;&#32;&#32;{
86 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a130bf0cd31a0783cd03563f46b46915b">__try</link>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;streamsize&#32;__w&#32;=&#32;__out.width();
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__w&#32;&gt;&#32;__n)
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;__left&#32;=&#32;((__out.flags()
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&#32;__ios_base::adjustfield)
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;==&#32;__ios_base::left);
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!__left)
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_fill(__out,&#32;__w&#32;-&#32;__n);
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__out.good())
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_write(__out,&#32;__s,&#32;__n);
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(__left&#32;&amp;&amp;&#32;__out.good())
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_fill(__out,&#32;__w&#32;-&#32;__n);
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ostream_write(__out,&#32;__s,&#32;__n);
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__out.width(0);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
105 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(__cxxabiv1::__forced_unwind&amp;)
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__out._M_setstate(__ios_base::badbit);
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a92ef03a5310b10a4243a6ec8f43494b5">__throw_exception_again</link>;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
110 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2include_2c_09_09_2bits_2exception__defines_8h_1a9e51d2f324c18a996a3e4f9a6ba0f6c2">__catch</link>(...)
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;__out._M_setstate(__ios_base::badbit);&#32;}
112 &#32;&#32;&#32;&#32;}
113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__out;
114 &#32;&#32;&#32;&#32;}
115 
116 &#32;&#32;<emphasis role="comment">//&#32;Inhibit&#32;implicit&#32;instantiations&#32;for&#32;required&#32;instantiations,</emphasis>
117 &#32;&#32;<emphasis role="comment">//&#32;which&#32;are&#32;defined&#32;via&#32;explicit&#32;instantiations&#32;elsewhere.</emphasis>
118 <emphasis role="preprocessor">#if&#32;_GLIBCXX_EXTERN_TEMPLATE</emphasis>
119 &#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">template</emphasis>&#32;ostream&amp;&#32;__ostream_insert(ostream&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*,&#32;streamsize);
120 
121 <emphasis role="preprocessor">#ifdef&#32;_GLIBCXX_USE_WCHAR_T</emphasis>
122 &#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">template</emphasis>&#32;wostream&amp;&#32;__ostream_insert(wostream&amp;,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">wchar_t</emphasis>*,
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;streamsize);
124 <emphasis role="preprocessor">#endif</emphasis>
125 <emphasis role="preprocessor">#endif</emphasis>
126 
127 _GLIBCXX_END_NAMESPACE_VERSION
128 }&#32;<emphasis role="comment">//&#32;namespace&#32;std</emphasis>
129 
130 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_OSTREAM_INSERT_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
