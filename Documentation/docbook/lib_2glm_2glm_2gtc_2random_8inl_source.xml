<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_2glm_2glm_2gtc_2random_8inl_source" xml:lang="en-US">
<title>random.inl</title>
<indexterm><primary>C:/Users/HP/Documents/GitHub/Minero-Game/lib/glm/glm/gtc/random.inl</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;../geometric.hpp&quot;</emphasis>
2 <emphasis role="preprocessor">#include&#32;&quot;../exponential.hpp&quot;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&quot;../trigonometric.hpp&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;../detail/type_vec1.hpp&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;cassert&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
9 
10 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceglm">glm</link>{
11 <emphasis role="keyword">namespace&#32;</emphasis>detail
12 {
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand
15 &#32;&#32;&#32;&#32;{
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_1a605ada53f53f7df841a1fdbb9ad3cb73">call</link>();
17 &#32;&#32;&#32;&#32;};
18 
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;qualifier&#32;P&gt;
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand</link>&lt;1,&#32;<link linkend="_namespaceglm_1_1detail_1aef2588f97d090cc19fbbe0c74fe17c8f">uint8</link>,&#32;P&gt;
21 &#32;&#32;&#32;&#32;{
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;1, uint8, P&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_011_00_01uint8_00_01_p_01_4_1a3925c409ac03c53304f878029081b197">call</link>()
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;1, uint8, P&gt;</link>(
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max());
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
27 &#32;&#32;&#32;&#32;};
28 
29 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;qualifier&#32;P&gt;
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;2,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">uint8</link>,&#32;P&gt;
31 &#32;&#32;&#32;&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;2, uint8, P&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_012_00_01uint8_00_01_p_01_4_1ab04e7d79016336e4f975d3b130833c48">call</link>()
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;2, uint8, P&gt;</link>(
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max());
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
38 &#32;&#32;&#32;&#32;};
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;qualifier&#32;P&gt;
41 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;3,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">uint8</link>,&#32;P&gt;
42 &#32;&#32;&#32;&#32;{
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, uint8, P&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_013_00_01uint8_00_01_p_01_4_1a4c15c6314ad2d9881b06ad6717399036">call</link>()
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;3, uint8, P&gt;</link>(
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max());
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;};
51 
52 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;qualifier&#32;P&gt;
53 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;4,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">uint8</link>,&#32;P&gt;
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, uint8, P&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_014_00_01uint8_00_01_p_01_4_1adc03573436a31ee3401a5557621a0452">call</link>()
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;4, uint8, P&gt;</link>(
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max(),
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::rand()&#32;%&#32;std::numeric_limits&lt;uint8&gt;::max());
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
63 &#32;&#32;&#32;&#32;};
64 
65 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
66 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">uint16</link>,&#32;Q&gt;
67 &#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint16_00_01_q_01_4_1afe856618938a9effddd2accbc7378098">call</link>()
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint8, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a47b2a7d006d187338e8031a352d1ce56">uint16</link><emphasis role="keyword">&gt;</emphasis>(8))&#32;|
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint8, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a47b2a7d006d187338e8031a352d1ce56">uint16</link><emphasis role="keyword">&gt;</emphasis>(0));
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 &#32;&#32;&#32;&#32;};
75 
76 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
77 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">uint32</link>,&#32;Q&gt;
78 &#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint32_00_01_q_01_4_1a813b7c0821b194be617ab11ddbe5b66c">call</link>()
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint16, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ade6cfbf377022aaa391af8cd50489222">uint32</link><emphasis role="keyword">&gt;</emphasis>(16))&#32;|
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint16, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ade6cfbf377022aaa391af8cd50489222">uint32</link><emphasis role="keyword">&gt;</emphasis>(0));
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
85 &#32;&#32;&#32;&#32;};
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_rand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>,&#32;Q&gt;
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint64_00_01_q_01_4_1aca35685516e8c0c5f5611faa8e65befd">call</link>()
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint32, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link><emphasis role="keyword">&gt;</emphasis>(32))&#32;|
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint32, Q&gt;::call</link>())&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link><emphasis role="keyword">&gt;</emphasis>(0));
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
96 &#32;&#32;&#32;&#32;};
97 
98 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
99 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand
100 &#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_1a95f08651312e1f320463a26f2c08bc94">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, T, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max);
102 &#32;&#32;&#32;&#32;};
103 
104 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
105 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structglm_1_1detail_1_1compute__linear_rand">compute_linearRand</link>&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_namespaceglm_1_1detail_1a04b526a8d7a9b455602a0afa78c531e0">int8</link>,&#32;Q&gt;
106 &#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int8, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int8_00_01_q_01_4_1a23c4a8bf23711428a208230c50ac52a2">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, int8, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int8, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, int8, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint8, Q&gt;::call</link>()&#32;%&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint8, Q&gt;</link>(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a04b526a8d7a9b455602a0afa78c531e0">int8</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min)))&#32;+&#32;Min;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
111 &#32;&#32;&#32;&#32;};
112 
113 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga536143d82147bb78849bfccffece8bff">uint8</link>,&#32;Q&gt;
115 &#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint8, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint8_00_01_q_01_4_1a0a70107d0f0cc2b9ce434fb4838177da">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, uint8, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint8, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint8, Q&gt;::call</link>()&#32;%&#32;(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1aef2588f97d090cc19fbbe0c74fe17c8f">uint8</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min))&#32;+&#32;Min;
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
120 &#32;&#32;&#32;&#32;};
121 
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__int__sized_1ga22d9cd55823f7c4aeee13aceafd7238a">int16</link>,&#32;Q&gt;
124 &#32;&#32;&#32;&#32;{
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int16, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int16_00_01_q_01_4_1aa5794f2235256b3f1bd40d9410c6fc04">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, int16, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int16, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, int16, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint16, Q&gt;::call</link>()&#32;%&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a375938874ca4f0a0982ec6373b56117b">int16</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min)))&#32;+&#32;Min;
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
129 &#32;&#32;&#32;&#32;};
130 
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga6201f5c504a50620708b19bae303c32a">uint16</link>,&#32;Q&gt;
133 &#32;&#32;&#32;&#32;{
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint16_00_01_q_01_4_1ad664ed2d3aa4b26527f7f005885c696c">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint16, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint16, Q&gt;::call</link>()&#32;%&#32;(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a47b2a7d006d187338e8031a352d1ce56">uint16</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min))&#32;+&#32;Min;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
138 &#32;&#32;&#32;&#32;};
139 
140 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
141 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__int__sized_1gafc36c598ca57ab4a9286a53bf91a5fff">int32</link>,&#32;Q&gt;
142 &#32;&#32;&#32;&#32;{
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int32, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int32_00_01_q_01_4_1a24dd0991351995bfc01f98262efdd174">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, int32, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int32, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, int32, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint32, Q&gt;::call</link>()&#32;%&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a9f85b4efeca416cdcec2fd08939a2e17">int32</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min)))&#32;+&#32;Min;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
147 &#32;&#32;&#32;&#32;};
148 
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
150 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1ga22033ef3f73efe1da8e437410adda3be">uint32</link>,&#32;Q&gt;
151 &#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint32_00_01_q_01_4_1a03705ddc886fadbf52575545425d9a12">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint32, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint32, Q&gt;::call</link>()&#32;%&#32;(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ade6cfbf377022aaa391af8cd50489222">uint32</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min))&#32;+&#32;Min;
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
156 &#32;&#32;&#32;&#32;};
157 
158 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
159 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__int__sized_1ga435d75819cce297cc5fa21bd84ef89a5">int64</link>,&#32;Q&gt;
160 &#32;&#32;&#32;&#32;{
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int64, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int64_00_01_q_01_4_1a7fad326505a9f05c23e0e454884baadd">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, int64, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, int64, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1vec">vec&lt;L, int64, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint64, Q&gt;::call</link>()&#32;%&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1a427e1ba144685539c0efb4c89e97a277">int64</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min)))&#32;+&#32;Min;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
165 &#32;&#32;&#32;&#32;};
166 
167 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;<link linkend="_group__ext__scalar__uint__sized_1gae3632bf9b37da66233d78930dd06378a">uint64</link>,&#32;Q&gt;
169 &#32;&#32;&#32;&#32;{
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint64_00_01_q_01_4_1acd52057ab2dbac117c7647f272ff4f00">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, uint64, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint64, Q&gt;::call</link>()&#32;%&#32;(Max&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespaceglm_1_1detail_1ae110ab7b33b51165e9b99e03abe3947e">uint64</link><emphasis role="keyword">&gt;</emphasis>(1)&#32;-&#32;Min))&#32;+&#32;Min;
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
174 &#32;&#32;&#32;&#32;};
175 
176 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
177 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;float,&#32;Q&gt;
178 &#32;&#32;&#32;&#32;{
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01float_00_01_q_01_4_1a48cabea50f9124a33bc1a2e07cdfc4d4">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, float, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, float, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint32, Q&gt;::call</link>())&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(std::numeric_limits&lt;uint32&gt;::max())&#32;*&#32;(Max&#32;-&#32;Min)&#32;+&#32;Min;
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
183 &#32;&#32;&#32;&#32;};
184 
185 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
186 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;double,&#32;Q&gt;
187 &#32;&#32;&#32;&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, double, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01double_00_01_q_01_4_1a31a75642aa7af4df0ac5a23fe15375db">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, double, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, double, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, double, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint64, Q&gt;::call</link>())&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(std::numeric_limits&lt;uint64&gt;::max())&#32;*&#32;(Max&#32;-&#32;Min)&#32;+&#32;Min;
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
192 &#32;&#32;&#32;&#32;};
193 
194 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;qualifier&#32;Q&gt;
195 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>compute_linearRand&lt;<link linkend="__classes_2lib_2external_2stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>,&#32;long&#32;double,&#32;Q&gt;
196 &#32;&#32;&#32;&#32;{
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, long double, Q&gt;</link>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01long_01double_00_01_q_01_4_1a6a4b8b2a3a18394f1c84d00089a1ccbf">call</link>(<link linkend="_structglm_1_1vec">vec&lt;L, long double, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;<link linkend="_structglm_1_1vec">vec&lt;L, long double, Q&gt;</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1vec">vec&lt;L, long double, Q&gt;</link>(<link linkend="_structglm_1_1detail_1_1compute__rand">compute_rand&lt;L, uint64, Q&gt;::call</link>())&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(std::numeric_limits&lt;uint64&gt;::max())&#32;*&#32;(Max&#32;-&#32;Min)&#32;+&#32;Min;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
201 &#32;&#32;&#32;&#32;};
202 }<emphasis role="comment">//namespace&#32;detail</emphasis>
203 
204 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
205 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(genType&#32;Min,&#32;genType&#32;Max)
206 &#32;&#32;&#32;&#32;{
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_1a95f08651312e1f320463a26f2c08bc94">detail::compute_linearRand&lt;1, genType, highp&gt;::call</link>(
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;1,&#32;genType,&#32;highp&gt;(Min),
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;1,&#32;genType,&#32;highp&gt;(Max)).x;
210 &#32;&#32;&#32;&#32;}
211 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
213 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Min,&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Max)
214 &#32;&#32;&#32;&#32;{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structglm_1_1detail_1_1compute__linear_rand_1a95f08651312e1f320463a26f2c08bc94">detail::compute_linearRand&lt;L, T, Q&gt;::call</link>(Min,&#32;Max);
216 &#32;&#32;&#32;&#32;}
217 
218 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;genType&gt;
219 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;genType&#32;<link linkend="_group__gtc__random_1ga5193a83e49e4fdc5652c084711083574">gaussRand</link>(genType&#32;Mean,&#32;genType&#32;Deviation)
220 &#32;&#32;&#32;&#32;{
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genType&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>,&#32;x1,&#32;x2;
222 
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(genType(-1),&#32;genType(1));
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(genType(-1),&#32;genType(1));
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;=&#32;x1&#32;*&#32;x1&#32;+&#32;x2&#32;*&#32;x2;
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>&#32;&gt;&#32;genType(1));
230 
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>genType<emphasis role="keyword">&gt;</emphasis>(x2&#32;*&#32;Deviation&#32;*&#32;Deviation&#32;*&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a86ab780bf1de516c739da6893b2e303a">sqrt</link>((genType(-2)&#32;*&#32;<link linkend="__classes_2lib_2include_2tgmath_8h_1a25a8d722e743f3a219e5f0bf0bb867c7">log</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>))&#32;/&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a1ad83f255afd4038129297b57ef91603">w</link>)&#32;+&#32;Mean);
232 &#32;&#32;&#32;&#32;}
233 
234 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;length_t&#32;L,&#32;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;qualifier&#32;Q&gt;
235 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<link linkend="_group__gtc__random_1ga5193a83e49e4fdc5652c084711083574">gaussRand</link>(vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Mean,&#32;vec&lt;L,&#32;T,&#32;Q&gt;&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;Deviation)
236 &#32;&#32;&#32;&#32;{
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::functor2&lt;vec,&#32;L,&#32;T,&#32;Q&gt;::call(<link linkend="_group__gtc__random_1ga5193a83e49e4fdc5652c084711083574">gaussRand</link>,&#32;Mean,&#32;Deviation);
238 &#32;&#32;&#32;&#32;}
239 
240 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
241 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;&#32;<link linkend="_group__gtc__random_1ga5d06c2fa63362899b6b3b92fd7574b84">diskRand</link>(T&#32;Radius)
242 &#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(Radius&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
244 
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;&#32;Result(T(0));
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;LenRadius(T(0));
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;(-Radius),
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;(Radius));
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LenRadius&#32;=&#32;<link linkend="_namespacelength">length</link>(Result);
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(LenRadius&#32;&gt;&#32;Radius);
256 
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
258 &#32;&#32;&#32;&#32;}
259 
260 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
261 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;&#32;<link linkend="_group__gtc__random_1gaee9e73396e6d094699de6684ea17ce3c">ballRand</link>(T&#32;Radius)
262 &#32;&#32;&#32;&#32;{
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(Radius&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
264 
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;&#32;Result(T(0));
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;LenRadius(T(0));
267 
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Result&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;(-Radius),
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;(Radius));
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LenRadius&#32;=&#32;<link linkend="_namespacelength">length</link>(Result);
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(LenRadius&#32;&gt;&#32;Radius);
276 
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
278 &#32;&#32;&#32;&#32;}
279 
280 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
281 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;&#32;<link linkend="_group__gtc__random_1gaed9dfacc8a20e691e22aafa944b1d3bf">circularRand</link>(T&#32;Radius)
282 &#32;&#32;&#32;&#32;{
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(Radius&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
284 
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(T(0),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(6.283185307179586476925286766559));
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vec&lt;2,&#32;T,&#32;defaultp&gt;(glm::cos(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>),&#32;<link linkend="_group__core__func__trigonometric_1ga3fcdcfa2d2ac38de9ba1885cd1c79414">glm::sin</link>(<link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1ac8729153468b5dcf13f971b21d84d4e5">a</link>))&#32;*&#32;Radius;
287 &#32;&#32;&#32;&#32;}
288 
289 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
290 &#32;&#32;&#32;&#32;<link linkend="__classes_2lib_2glm_2glm_2detail_2setup_8hpp_1a33fdea6f91c5f834105f7415e2a64407">GLM_FUNC_QUALIFIER</link>&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;&#32;<link linkend="_group__gtc__random_1ga33e342051ba8122d91ec76b8a240d6e4">sphericalRand</link>(T&#32;Radius)
291 &#32;&#32;&#32;&#32;{
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(Radius&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T<emphasis role="keyword">&gt;</emphasis>(0));
293 
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;theta&#32;=&#32;<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(T(0),&#32;T(6.283185307179586476925286766559f));
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;phi&#32;=&#32;std::acos(<link linkend="_group__gtc__random_1ga04e241ab88374a477a2c2ceadd2fa03d">linearRand</link>(T(-1.0f),&#32;T(1.0f)));
296 
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>&#32;=&#32;std::sin(phi)&#32;*&#32;std::cos(theta);
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>&#32;=&#32;std::sin(phi)&#32;*&#32;std::sin(theta);
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>&#32;=&#32;std::cos(phi);
300 
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vec&lt;3,&#32;T,&#32;defaultp&gt;(<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1ac916c0825494ac3acd4457effd2823d2">x</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_e_g_l_2eglext_8h_1a4f27f1eebce8c31db01bb39fab9ef561">y</link>,&#32;<link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1ab26e6a0e7d142ed28ac773f12a73f458">z</link>)&#32;*&#32;Radius;
302 &#32;&#32;&#32;&#32;}
303 }<emphasis role="comment">//namespace&#32;glm</emphasis>
</programlisting></section>
