<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespaceliterals" xml:lang="en-US">
<title>literals Namespace Reference</title>
<indexterm><primary>literals</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespaceliterals_1a3e5a9bce6e1a524c7f725af657fc2f3e">TOML_ABI_NAMESPACE_BOOL</link> (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link>, lit_ex, lit_noex)</para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classparse__result">parse_result</link> <link linkend="_namespaceliterals_1a55a8a52105ffff2aa5c6d174087e7d0a">operator&quot;&quot;_toml</link> (const char *str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)</para>

<para>Parses TOML data from a string literal. </para>
</listitem>
            <listitem><para><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classpath">path</link> <link linkend="_namespaceliterals_1a8b39f370c55966e481f59b855b74a9d7">operator&quot;&quot;_tpath</link> (const char *str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> <link linkend="__classes_2lib_2raylib_2src_2external_2glad_8h_1a30ee67aa502329a88f4a203775adfa1a">len</link>)</para>

<para>Parses a TOML path from a string literal. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespaceliterals_1a179ab2ccfe25b96becb1decf42648ca9">TOML_ABI_NAMESPACE_END</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespaceliterals_1a55a8a52105ffff2aa5c6d174087e7d0a"/><section>
    <title>operator&quot;&quot;_toml()</title>
<indexterm><primary>operator&quot;&quot;_toml</primary><secondary>literals</secondary></indexterm>
<indexterm><primary>literals</primary><secondary>operator&quot;&quot;_toml</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classparse__result">parse_result</link> literals::operator&quot;&quot;_toml (const char * str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> len)</computeroutput></para><para>

<para>Parses TOML data from a string literal. </para>
</para>

<para>\detail \cpp using namespace toml::literals;</para>

<para>auto tbl = &quot;a = 3&quot;_toml; std::cout &lt;&lt; tbl[&quot;a&quot;] &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out 3 \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>str</entry><entry>
<para>The string data. Must be valid UTF-8. </para>
</entry>
                            </row>
                            <row>
<entry>len</entry><entry>
<para>The string length.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>\conditional_return{With exceptions} A toml::table. \conditional_return{Without exceptions} A toml::parse_result. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_namespaceliterals_1a8b39f370c55966e481f59b855b74a9d7"/><section>
    <title>operator&quot;&quot;_tpath()</title>
<indexterm><primary>operator&quot;&quot;_tpath</primary><secondary>literals</secondary></indexterm>
<indexterm><primary>literals</primary><secondary>operator&quot;&quot;_tpath</secondary></indexterm>
<para><computeroutput><link linkend="_preprocessor_8h_1a471c97e396823de3fcca2272e3ef1bba">TOML_NODISCARD</link> <link linkend="_preprocessor_8h_1abcede63e94136f5cb19404c0a811a51d">TOML_ALWAYS_INLINE</link> <link linkend="_classpath">path</link> literals::operator&quot;&quot;_tpath (const char * str, <link linkend="__classes_2lib_2include_2stddef_8h_1aa9d55e2f20e580b7445617d0d12fff6e">size_t</link> len)</computeroutput></para><para>

<para>Parses a TOML path from a string literal. </para>
</para>

<para>\detail \cpp using namespace toml::literals;</para>

<para>auto path = &quot;main.settings.devices[2]&quot;_tpath; std::cout &lt;&lt; path.parent_path() &lt;&lt; &quot;\n&quot;; \ecpp</para>

<para>\out main.settings.devices \eout</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>str</entry><entry>
<para>The string data. </para>
</entry>
                            </row>
                            <row>
<entry>len</entry><entry>
<para>The string length.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A #toml::path generated from the string literal. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_namespaceliterals_1a3e5a9bce6e1a524c7f725af657fc2f3e"/><section>
    <title>TOML_ABI_NAMESPACE_BOOL()</title>
<indexterm><primary>TOML_ABI_NAMESPACE_BOOL</primary><secondary>literals</secondary></indexterm>
<indexterm><primary>literals</primary><secondary>TOML_ABI_NAMESPACE_BOOL</secondary></indexterm>
<para><computeroutput>literals::TOML_ABI_NAMESPACE_BOOL (<link linkend="_group__configuration_1ga93097ecd88ca4bca393f60a78bda643b">TOML_EXCEPTIONS</link> , lit_ex , lit_noex )</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespaceliterals_1a179ab2ccfe25b96becb1decf42648ca9"/><section>
    <title>TOML_ABI_NAMESPACE_END</title>
<indexterm><primary>TOML_ABI_NAMESPACE_END</primary><secondary>literals</secondary></indexterm>
<indexterm><primary>literals</primary><secondary>TOML_ABI_NAMESPACE_END</secondary></indexterm>
<para><computeroutput>literals::TOML_ABI_NAMESPACE_END</computeroutput></para></section>
</section>
</section>
