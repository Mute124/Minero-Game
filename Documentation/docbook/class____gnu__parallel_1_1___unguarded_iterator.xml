<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class____gnu__parallel_1_1___unguarded_iterator" xml:lang="en-US">
<title>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt; Class Template Reference</title>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;multiway_merge.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c">_UnguardedIterator</link> (_RAIter __begin, _RAIter, _Compare &amp;__comp)</para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287">operator++</link> ()</para>

<para>Pre-increment operator. </para>
</listitem>
            <listitem><para>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32">operator*</link> () const</para>

<para>Dereference operator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01">operator _RAIter</link> () const</para>

<para>Convert to wrapped iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c">_UnguardedIterator</link> (_RAIter __begin, _RAIter, _Compare &amp;__comp)</para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287">operator++</link> ()</para>

<para>Pre-increment operator. </para>
</listitem>
            <listitem><para>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32">operator*</link> () const</para>

<para>Dereference operator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01">operator _RAIter</link> () const</para>

<para>Convert to wrapped iterator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c">_UnguardedIterator</link> (_RAIter __begin, _RAIter, _Compare &amp;__comp)</para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287">operator++</link> ()</para>

<para>Pre-increment operator. </para>
</listitem>
            <listitem><para>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32">operator*</link> () const</para>

<para>Dereference operator. </para>
</listitem>
            <listitem><para><link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01">operator _RAIter</link> () const</para>

<para>Convert to wrapped iterator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467">operator&lt;</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982">operator&lt;=</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467">operator&lt;</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982">operator&lt;=</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467">operator&lt;</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
            <listitem><para><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> <link linkend="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982">operator&lt;=</link> (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp;__bi2)</para>

<para>Compare two elements referenced by unguarded iterators. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c"/><section>
    <title>_UnguardedIterator()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>_UnguardedIterator</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>_UnguardedIterator</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::_UnguardedIterator (_RAIter __begin, _RAIter , _Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin</entry><entry>
<para>Begin iterator of sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                            <row>
<entry>__comp</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c"/><section>
    <title>_UnguardedIterator()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>_UnguardedIterator</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>_UnguardedIterator</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::_UnguardedIterator (_RAIter __begin, _RAIter , _Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin</entry><entry>
<para>Begin iterator of sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                            <row>
<entry>__comp</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afce6af68d9330e4893658412b44e437c"/><section>
    <title>_UnguardedIterator()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>_UnguardedIterator</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>_UnguardedIterator</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::_UnguardedIterator (_RAIter __begin, _RAIter , _Compare &amp; __comp)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. Sets iterator to beginning of sequence. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__begin</entry><entry>
<para>Begin iterator of sequence. </para>
</entry>
                            </row>
                            <row>
<entry>__end</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                            <row>
<entry>__comp</entry><entry>
<para>Unused, only for compatibility. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01"/><section>
    <title>operator _RAIter()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator _RAIter</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator _RAIter</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator _RAIter ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Convert to wrapped iterator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Wrapped iterator. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01"/><section>
    <title>operator _RAIter()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator _RAIter</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator _RAIter</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator _RAIter ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Convert to wrapped iterator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Wrapped iterator. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a9b0744cb26d41cbe2c8c0c3441f0ba01"/><section>
    <title>operator _RAIter()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator _RAIter</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator _RAIter</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator _RAIter ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Convert to wrapped iterator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Wrapped iterator. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Dereference operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Referenced element. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Dereference operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Referenced element. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1ada2652177478b9ef573b7ee58995dc32"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput>std::iterator_traits&lt; _RAIter &gt;::value_type &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator* ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Dereference operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Referenced element. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287"/><section>
    <title>operator++()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pre-increment operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>This. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287"/><section>
    <title>operator++()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pre-increment operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>This. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1acc71b501e0b15352aba9518cf2e21287"/><section>
    <title>operator++()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator</link>&lt; _RAIter, _Compare &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pre-increment operator. </para>
</para>

<para><formalpara><title>Returns</title>

<para>This. </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467"/><section>
    <title>operator&lt;<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if less. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467"/><section>
    <title>operator&lt;<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if less. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1afe4cf051340556d640c396b103dcb467"/><section>
    <title>operator&lt;<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator&lt;</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt; (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if less. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982"/><section>
    <title>operator&lt;=<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;=</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>True</computeroutput> if less equal. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982"/><section>
    <title>operator&lt;=<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;=</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>True</computeroutput> if less equal. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class____gnu__parallel_1_1___unguarded_iterator_1a285fa251a72d0dd087bb775dbdcfc982"/><section>
    <title>operator&lt;=<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator&lt;=</primary><secondary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</secondary></indexterm>
<indexterm><primary>__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</primary><secondary>operator&lt;=</secondary></indexterm>
<computeroutput>template&lt;typename _RAIter , typename _Compare &gt; </computeroutput><para><computeroutput><link linkend="__classes_2lib_2raylib_8h_1af6a258d8f3ee5206d682d799316314b1">bool</link> operator&lt;= (const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi1, const <link linkend="_class____gnu__parallel_1_1___unguarded_iterator">_UnguardedIterator</link>&lt; _RAIter, _Compare &gt; &amp; __bi2)<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Compare two elements referenced by unguarded iterators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>__bi1</entry><entry>
<para>First iterator. </para>
</entry>
                            </row>
                            <row>
<entry>__bi2</entry><entry>
<para>Second iterator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>True</computeroutput> if less equal. </para>
</formalpara>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
C:/Users/HP/Documents/GitHub/Minero-Game/Classes/lib/include/c++/parallel/<link linkend="__classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h">multiway_merge.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/lib/include/c++/parallel/<link linkend="_lib_2include_2c_09_09_2parallel_2multiway__merge_8h">multiway_merge.h</link>C:/Users/HP/Documents/GitHub/Minero-Game/Old/Classes/lib/include/c++/parallel/<link linkend="__old_2_classes_2lib_2include_2c_09_09_2parallel_2multiway__merge_8h">multiway_merge.h</link></section>
</section>
