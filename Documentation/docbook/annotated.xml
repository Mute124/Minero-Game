<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_struct____gnu__parallel_1_1____accumulate__binop__reduct">__gnu_parallel::__accumulate_binop_reduct&lt; _BinOp &gt;</link>
<para>General reduction, using a binary operator </para>
<link linkend="_struct____gnu__parallel_1_1____accumulate__selector">__gnu_parallel::__accumulate_selector&lt; _It &gt;</link>
<para>Std::accumulate() selector </para>
<link linkend="_struct____gnu__parallel_1_1____adjacent__difference__selector">__gnu_parallel::__adjacent_difference_selector&lt; _It &gt;</link>
<para>Selector that returns the difference between two adjacent __elements </para>
<link linkend="_struct____gnu__parallel_1_1____adjacent__find__selector">__gnu_parallel::__adjacent_find_selector</link>
<para>Test predicate on two adjacent elements </para>
<link linkend="_struct____gnu__cxx_1_1____aligned__buffer">__gnu_cxx::__aligned_buffer&lt; _Tp &gt;</link><link linkend="_struct____gnu__cxx_1_1____aligned__membuf">__gnu_cxx::__aligned_membuf&lt; _Tp &gt;</link><link linkend="_class____gnu__parallel_1_1____binder1st">__gnu_parallel::__binder1st&lt; _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType &gt;</link>
<para>Similar to std::binder1st, but giving the argument types explicitly </para>
<link linkend="_class____gnu__parallel_1_1____binder2nd">__gnu_parallel::__binder2nd&lt; _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType &gt;</link>
<para>Similar to std::binder2nd, but giving the argument types explicitly </para>
<link linkend="_struct____pstl_1_1____internal_1_1____brick__move__destroy">__pstl::__internal::__brick_move_destroy</link><link linkend="_struct____pstl_1_1____internal_1_1_____brick_copy_construct">__pstl::__internal::__BrickCopyConstruct&lt; _IsVector &gt;</link><link linkend="_class____pstl_1_1____serial__backend_1_1____buffer">__pstl::__serial_backend::__buffer&lt; _Tp &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____buffer">__pstl::__tbb_backend::__buffer&lt; _Tp &gt;</link>
<para>Raw memory buffer with automatic freeing and no exceptions </para>
<link linkend="_struct____gnu__parallel_1_1____count__if__selector">__gnu_parallel::__count_if_selector&lt; _It, _Diff &gt;</link>
<para>Std::count_if () selector </para>
<link linkend="_struct____gnu__parallel_1_1____count__selector">__gnu_parallel::__count_selector&lt; _It, _Diff &gt;</link>
<para>Std::count() selector </para>
<link linkend="_structstd_1_1____denorm__min">std::__denorm_min&lt; _Tp &gt;</link><link linkend="_structstd_1_1____denorm__min__impl">std::__denorm_min_impl&lt; _Tp &gt;</link><link linkend="_struct____gnu__parallel_1_1____difference__func">__gnu_parallel::__difference_func&lt; _IIter, _OutputIterator, _Compare &gt;</link><link linkend="_structstd_1_1____digits">std::__digits&lt; _Tp &gt;</link><link linkend="_structstd_1_1____digits10">std::__digits10&lt; _Tp &gt;</link><link linkend="_structstd_1_1____digits10__impl">std::__digits10_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____digits10__impl_3_01___tp_00_01true_01_4">std::__digits10_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____digits10__impl_3_01double_00_01true_01_4">std::__digits10_impl&lt; double, true &gt;</link><link linkend="_structstd_1_1____digits10__impl_3_01float_00_01true_01_4">std::__digits10_impl&lt; float, true &gt;</link><link linkend="_structstd_1_1____digits10__impl_3_01long_01double_00_01true_01_4">std::__digits10_impl&lt; long double, true &gt;</link><link linkend="_structstd_1_1____digits__impl">std::__digits_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____digits__impl_3_01___tp_00_01true_01_4">std::__digits_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____digits__impl_3_01double_00_01true_01_4">std::__digits_impl&lt; double, true &gt;</link><link linkend="_structstd_1_1____digits__impl_3_01float_00_01true_01_4">std::__digits_impl&lt; float, true &gt;</link><link linkend="_structstd_1_1____digits__impl_3_01long_01double_00_01true_01_4">std::__digits_impl&lt; long double, true &gt;</link><link linkend="_structstd_1_1____epsilon">std::__epsilon&lt; _Tp &gt;</link><link linkend="_structstd_1_1____epsilon__impl">std::__epsilon_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____epsilon__impl_3_01double_01_4">std::__epsilon_impl&lt; double &gt;</link><link linkend="_structstd_1_1____epsilon__impl_3_01float_01_4">std::__epsilon_impl&lt; float &gt;</link><link linkend="_structstd_1_1____epsilon__impl_3_01long_01double_01_4">std::__epsilon_impl&lt; long double &gt;</link><link linkend="_class____pstl_1_1____internal_1_1____equal__value">__pstl::__internal::__equal_value&lt; _Tp &gt;</link>
<para>Like a polymorphic lambda for ==value </para>
<link linkend="_class____pstl_1_1____internal_1_1____equal__value__by__pred">__pstl::__internal::__equal_value_by_pred&lt; _Tp, _Predicate &gt;</link>
<para>Like a polymorphic lambda for pred(...,value) </para>
<link linkend="_struct____gnu__parallel_1_1____fill__selector">__gnu_parallel::__fill_selector&lt; _It &gt;</link>
<para>Std::fill() selector </para>
<link linkend="_struct____gnu__parallel_1_1____find__first__of__selector">__gnu_parallel::__find_first_of_selector&lt; _FIterator &gt;</link>
<para>Test predicate on several elements </para>
<link linkend="_struct____gnu__parallel_1_1____find__if__selector">__gnu_parallel::__find_if_selector</link>
<para>Test predicate on a single element, used for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> and <link linkend="_namespacestd_1a12540b98a8b3f5862173e50b92f1de81">std::find_if</link> () </para>
<link linkend="_structstd_1_1____finite__max">std::__finite_max&lt; _Tp &gt;</link><link linkend="_structstd_1_1____finite__max__impl">std::__finite_max_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____finite__max__impl_3_01___tp_00_01true_01_4">std::__finite_max_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____finite__max__impl_3_01double_00_01true_01_4">std::__finite_max_impl&lt; double, true &gt;</link><link linkend="_structstd_1_1____finite__max__impl_3_01float_00_01true_01_4">std::__finite_max_impl&lt; float, true &gt;</link><link linkend="_structstd_1_1____finite__max__impl_3_01long_01double_00_01true_01_4">std::__finite_max_impl&lt; long double, true &gt;</link><link linkend="_structstd_1_1____finite__min">std::__finite_min&lt; _Tp &gt;</link><link linkend="_structstd_1_1____finite__min__impl">std::__finite_min_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____finite__min__impl_3_01___tp_00_01true_01_4">std::__finite_min_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____finite__min__impl_3_01double_00_01true_01_4">std::__finite_min_impl&lt; double, true &gt;</link><link linkend="_structstd_1_1____finite__min__impl_3_01float_00_01true_01_4">std::__finite_min_impl&lt; float, true &gt;</link><link linkend="_structstd_1_1____finite__min__impl_3_01long_01double_00_01true_01_4">std::__finite_min_impl&lt; long double, true &gt;</link><link linkend="_struct____gnu__parallel_1_1____for__each__selector">__gnu_parallel::__for_each_selector&lt; _It &gt;</link>
<para>Std::for_each() selector </para>
<link linkend="_class____pstl_1_1____tbb__backend_1_1____func__task">__pstl::__tbb_backend::__func_task&lt; _Func &gt;</link><link linkend="_struct____gnu__parallel_1_1____generate__selector">__gnu_parallel::__generate_selector&lt; _It &gt;</link>
<para>Std::generate() selector </para>
<link linkend="_struct____gnu__parallel_1_1____generic__find__selector">__gnu_parallel::__generic_find_selector</link>
<para>Base class of all <link linkend="_namespace____gnu__parallel_1af4b3d28761a76e60f6836a50f5cebb7d">__gnu_parallel::__find_template</link> selectors </para>
<link linkend="_struct____gnu__parallel_1_1____generic__for__each__selector">__gnu_parallel::__generic_for_each_selector&lt; _It &gt;</link>
<para>Generic __selector for embarrassingly parallel functions </para>
<link linkend="_structstd_1_1____has__iec559__behavior">std::__has_iec559_behavior&lt; _Trait, _Tp &gt;</link><link linkend="_structstd_1_1____has__iec559__storage__format">std::__has_iec559_storage_format&lt; _Tp &gt;</link><link linkend="_struct____gnu__parallel_1_1____identity__selector">__gnu_parallel::__identity_selector&lt; _It &gt;</link>
<para>Selector that just returns the passed iterator </para>
<link linkend="_structstd_1_1____infinity">std::__infinity&lt; _Tp &gt;</link><link linkend="_structstd_1_1____infinity__impl">std::__infinity_impl&lt; _Tp &gt;</link><link linkend="_struct____gnu__parallel_1_1____inner__product__selector">__gnu_parallel::__inner_product_selector&lt; _It, _It2, _Tp &gt;</link>
<para>Std::inner_product() selector </para>
<link linkend="_struct____gnu__parallel_1_1____intersection__func">__gnu_parallel::__intersection_func&lt; _IIter, _OutputIterator, _Compare &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator">__pstl::__internal::__is_random_access_iterator&lt; _IteratorType, _OtherIteratorTypes &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____is__random__access__iterator_3_01___iterator_type_01_4">__pstl::__internal::__is_random_access_iterator&lt; _IteratorType &gt;</link><link linkend="_structstd_1_1____max__digits10">std::__max_digits10&lt; _Tp &gt;</link><link linkend="_structstd_1_1____max__digits10__impl">std::__max_digits10_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____max__digits10__impl_3_01___tp_00_01true_01_4">std::__max_digits10_impl&lt; _Tp, true &gt;</link><link linkend="_struct____gnu__parallel_1_1____max__element__reduct">__gnu_parallel::__max_element_reduct&lt; _Compare, _It &gt;</link>
<para>Reduction for finding the maximum element, using a comparator </para>
<link linkend="_structstd_1_1____max__exponent">std::__max_exponent&lt; _Tp &gt;</link><link linkend="_structstd_1_1____max__exponent10">std::__max_exponent10&lt; _Tp &gt;</link><link linkend="_structstd_1_1____max__exponent10__impl">std::__max_exponent10_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____max__exponent10__impl_3_01double_01_4">std::__max_exponent10_impl&lt; double &gt;</link><link linkend="_structstd_1_1____max__exponent10__impl_3_01float_01_4">std::__max_exponent10_impl&lt; float &gt;</link><link linkend="_structstd_1_1____max__exponent10__impl_3_01long_01double_01_4">std::__max_exponent10_impl&lt; long double &gt;</link><link linkend="_structstd_1_1____max__exponent__impl">std::__max_exponent_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____max__exponent__impl_3_01double_01_4">std::__max_exponent_impl&lt; double &gt;</link><link linkend="_structstd_1_1____max__exponent__impl_3_01float_01_4">std::__max_exponent_impl&lt; float &gt;</link><link linkend="_structstd_1_1____max__exponent__impl_3_01long_01double_01_4">std::__max_exponent_impl&lt; long double &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func">__pstl::__tbb_backend::__merge_func&lt; _RandomAccessIterator1, _RandomAccessIterator2, _Compare, _Cleanup, _LeafMerge &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____merge__func__static">__pstl::__tbb_backend::__merge_func_static&lt; _RandomAccessIterator1, _RandomAccessIterator2, _RandomAccessIterator3, _Compare, _LeafMerge &gt;</link><link linkend="_struct____gnu__parallel_1_1____min__element__reduct">__gnu_parallel::__min_element_reduct&lt; _Compare, _It &gt;</link>
<para>Reduction for finding the maximum element, using a comparator </para>
<link linkend="_structstd_1_1____min__exponent">std::__min_exponent&lt; _Tp &gt;</link><link linkend="_structstd_1_1____min__exponent10">std::__min_exponent10&lt; _Tp &gt;</link><link linkend="_structstd_1_1____min__exponent10__impl">std::__min_exponent10_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____min__exponent10__impl_3_01double_01_4">std::__min_exponent10_impl&lt; double &gt;</link><link linkend="_structstd_1_1____min__exponent10__impl_3_01float_01_4">std::__min_exponent10_impl&lt; float &gt;</link><link linkend="_structstd_1_1____min__exponent10__impl_3_01long_01double_01_4">std::__min_exponent10_impl&lt; long double &gt;</link><link linkend="_structstd_1_1____min__exponent__impl">std::__min_exponent_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____min__exponent__impl_3_01double_01_4">std::__min_exponent_impl&lt; double &gt;</link><link linkend="_structstd_1_1____min__exponent__impl_3_01float_01_4">std::__min_exponent_impl&lt; float &gt;</link><link linkend="_structstd_1_1____min__exponent__impl_3_01long_01double_01_4">std::__min_exponent_impl&lt; long double &gt;</link><link linkend="_class____mini__vector">__mini_vector</link><link linkend="_struct____gnu__parallel_1_1____mismatch__selector">__gnu_parallel::__mismatch_selector</link>
<para>Test inverted predicate on a single element </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch">__gnu_parallel::__multiway_merge_3_variant_sentinel_switch&lt; __sentinels, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for 3-way merging with __sentinels turned off </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__3__variant__sentinel__switch_3_01true_00_01___r_ac490d6391875988d944af0889050584">__gnu_parallel::__multiway_merge_3_variant_sentinel_switch&lt; true, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for 3-way merging with __sentinels turned on </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch">__gnu_parallel::__multiway_merge_4_variant_sentinel_switch&lt; __sentinels, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for 4-way merging with __sentinels turned off </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__4__variant__sentinel__switch_3_01true_00_01___r_29263920f3b19b06bcc0641dbe166144">__gnu_parallel::__multiway_merge_4_variant_sentinel_switch&lt; true, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for 4-way merging with __sentinels turned on </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch">__gnu_parallel::__multiway_merge_k_variant_sentinel_switch&lt; __sentinels, __stable, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for k-way merging with __sentinels turned on </para>
<link linkend="_struct____gnu__parallel_1_1____multiway__merge__k__variant__sentinel__switch_3_01false_00_01____93150e0a1bf1e3fb3017cac94cf50485">__gnu_parallel::__multiway_merge_k_variant_sentinel_switch&lt; false, __stable, _RAIterIterator, _RAIter3, _DifferenceTp, _Compare &gt;</link>
<para>Switch for k-way merging with __sentinels turned off </para>
<link linkend="_struct____pstl_1_1____internal_1_1____no__op">__pstl::__internal::__no_op</link>
<para>Unary operator that returns reference to its argument </para>
<link linkend="_structstd_1_1____norm__min">std::__norm_min&lt; _Tp &gt;</link><link linkend="_structstd_1_1____norm__min__impl">std::__norm_min_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____norm__min__impl_3_01___tp_00_01true_01_4">std::__norm_min_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____norm__min__impl_3_01double_00_01true_01_4">std::__norm_min_impl&lt; double, true &gt;</link><link linkend="_structstd_1_1____norm__min__impl_3_01float_00_01true_01_4">std::__norm_min_impl&lt; float, true &gt;</link><link linkend="_structstd_1_1____norm__min__impl_3_01long_01double_00_01true_01_4">std::__norm_min_impl&lt; long double, true &gt;</link><link linkend="_class____pstl_1_1____internal_1_1____not__equal__value">__pstl::__internal::__not_equal_value&lt; _Tp &gt;</link>
<para>Logical negation of ==value </para>
<link linkend="_class____pstl_1_1____internal_1_1____not__pred">__pstl::__internal::__not_pred&lt; _Pred &gt;</link>
<para>Logical negation of a predicate </para>
<link linkend="_struct____pstl_1_1____tbb__backend_1_1____par__trans__red__body">__pstl::__tbb_backend::__par_trans_red_body&lt; _Index, _Up, _Tp, _Cp, _Rp &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____parallel__for__body">__pstl::__tbb_backend::__parallel_for_body&lt; _Index, _RealBody &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____policy__traits">__pstl::__internal::__policy_traits&lt; _Policy &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__policy_01_4">__pstl::__internal::__policy_traits&lt; parallel_policy &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01parallel__unsequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; parallel_unsequenced_policy &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01sequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; sequenced_policy &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____policy__traits_3_01unsequenced__policy_01_4">__pstl::__internal::__policy_traits&lt; unsequenced_policy &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__multiway__merge">__gnu_parallel::__possibly_stable_multiway_merge&lt; __stable, _Seq_RAIter, _RAIter, _Compare, _DiffType &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__multiway__merge_3_01false_00_01___seq___r_a_itebbe515fc6f7648d1418c8d56e63df41f">__gnu_parallel::__possibly_stable_multiway_merge&lt; false, _Seq_RAIter, _RAIter, _Compare, _DiffType &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__multiway__merge_3_01true_00_01___seq___r_a_iter2ecdcf729effea6ea63a4538fbabf431">__gnu_parallel::__possibly_stable_multiway_merge&lt; true, _Seq_RAIter, _RAIter, _Compare, _DiffType &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__sort">__gnu_parallel::__possibly_stable_sort&lt; __stable, _RAIter, _Compare &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__sort_3_01false_00_01___r_a_iter_00_01___compare_01_4">__gnu_parallel::__possibly_stable_sort&lt; false, _RAIter, _Compare &gt;</link><link linkend="_struct____gnu__parallel_1_1____possibly__stable__sort_3_01true_00_01___r_a_iter_00_01___compare_01_4">__gnu_parallel::__possibly_stable_sort&lt; true, _RAIter, _Compare &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____prefer__parallel__tag">__pstl::__internal::__prefer_parallel_tag&lt; policy, _IteratorTypes &gt;</link><link linkend="_struct____pstl_1_1____internal_1_1____prefer__unsequenced__tag">__pstl::__internal::__prefer_unsequenced_tag&lt; policy, _IteratorTypes &gt;</link><link linkend="_class____pstl_1_1____internal_1_1____pstl__equal">__pstl::__internal::__pstl_equal</link>
<para>&quot;==&quot; comparison </para>
<link linkend="_class____pstl_1_1____internal_1_1____pstl__less">__pstl::__internal::__pstl_less</link>
<para>&quot;&lt;&quot; comparison </para>
<link linkend="_structstd_1_1____quiet___na_n">std::__quiet_NaN&lt; _Tp &gt;</link><link linkend="_structstd_1_1____quiet___na_n__impl">std::__quiet_NaN_impl&lt; _Tp &gt;</link><link linkend="_structstd_1_1____radix">std::__radix&lt; _Tp &gt;</link><link linkend="_structstd_1_1____radix__impl">std::__radix_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____radix__impl_3_01___tp_00_01true_01_4">std::__radix_impl&lt; _Tp, true &gt;</link><link linkend="_structstd_1_1____reciprocal__overflow__threshold">std::__reciprocal_overflow_threshold&lt; _Tp &gt;</link><link linkend="_structstd_1_1____reciprocal__overflow__threshold__impl">std::__reciprocal_overflow_threshold_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____reciprocal__overflow__threshold__impl_3_01___tp_00_01true_01_4">std::__reciprocal_overflow_threshold_impl&lt; _Tp, true &gt;</link><link linkend="_class____pstl_1_1____internal_1_1____reorder__pred">__pstl::__internal::__reorder_pred&lt; _Pred &gt;</link><link linkend="_struct____gnu__parallel_1_1____replace__if__selector">__gnu_parallel::__replace_if_selector&lt; _It, _Op, _Tp &gt;</link>
<para>Std::replace() selector </para>
<link linkend="_struct____gnu__parallel_1_1____replace__selector">__gnu_parallel::__replace_selector&lt; _It, _Tp &gt;</link>
<para>Std::replace() selector </para>
<link linkend="_class____pstl_1_1____tbb__backend_1_1____root__task">__pstl::__tbb_backend::__root_task&lt; _Func &gt;</link><link linkend="_structstd_1_1____round__error">std::__round_error&lt; _Tp &gt;</link><link linkend="_structstd_1_1____round__error__impl">std::__round_error_impl&lt; _Tp, bool &gt;</link><link linkend="_structstd_1_1____round__error__impl_3_01___tp_00_01true_01_4">std::__round_error_impl&lt; _Tp, true &gt;</link><link linkend="_struct____pstl_1_1____utils_1_1____serial__destroy">__pstl::__utils::__serial_destroy</link>
<para>Destroy sequence [xs,xe) </para>
<link linkend="_struct____pstl_1_1____utils_1_1____serial__move__merge">__pstl::__utils::__serial_move_merge</link>
<para>Merge sequences [__xs,__xe) and [__ys,__ye) to output sequence [__zs,(__xe-__xs)+(__ye-__ys)), using <link linkend="_namespacestd_1ac7095819f6a8da64d69b1ee3029c52be">std::move</link> </para>
<link linkend="_structstd_1_1____signaling___na_n">std::__signaling_NaN&lt; _Tp &gt;</link><link linkend="_structstd_1_1____signaling___na_n__impl">std::__signaling_NaN_impl&lt; _Tp &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____stable__sort__func">__pstl::__tbb_backend::__stable_sort_func&lt; _RandomAccessIterator1, _RandomAccessIterator2, _Compare, _LeafSort &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert">__gnu_pbds::detail::__static_assert&lt; bool &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert_3_01true_01_4">__gnu_pbds::detail::__static_assert&lt; true &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1____static__assert__dumclass">__gnu_pbds::detail::__static_assert_dumclass&lt; int &gt;</link><link linkend="_struct____gnu__parallel_1_1____symmetric__difference__func">__gnu_parallel::__symmetric_difference_func&lt; _IIter, _OutputIterator, _Compare &gt;</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____task">__pstl::__tbb_backend::__task</link><link linkend="_class____pstl_1_1____tbb__backend_1_1____trans__scan__body">__pstl::__tbb_backend::__trans_scan_body&lt; _Index, _Up, _Tp, _Cp, _Rp, _Sp &gt;</link><link linkend="_struct____gnu__parallel_1_1____transform1__selector">__gnu_parallel::__transform1_selector&lt; _It &gt;</link>
<para>Std::transform() __selector, one input sequence variant </para>
<link linkend="_struct____gnu__parallel_1_1____transform2__selector">__gnu_parallel::__transform2_selector&lt; _It &gt;</link>
<para>Std::transform() __selector, two input sequences variant </para>
<link linkend="_class____gnu__parallel_1_1____unary__negate">__gnu_parallel::__unary_negate&lt; _Predicate, argument_type &gt;</link>
<para>Similar to std::unary_negate, but giving the argument types explicitly </para>
<link linkend="_struct____gnu__parallel_1_1____union__func">__gnu_parallel::__union_func&lt; _IIter, _OutputIterator, _Compare &gt;</link><link linkend="_structstd_1_1____value__exists">std::__value_exists&lt; _Trait, _Tp &gt;</link><link linkend="_structstd_1_1____value__exists__impl">std::__value_exists_impl&lt; _Trait, _Tp, typename &gt;</link><link linkend="_structstd_1_1____value__exists__impl_3_01___trait_00_01___tp_00_01void__t_3_01decltype_07___trai2a9d6c26cbf51bee76e01c3e3a87e2f8">std::__value_exists_impl&lt; _Trait, _Tp, void_t&lt; decltype(_Trait&lt; _Tp &gt;::value)&gt; &gt;</link><link linkend="_class____versa__string">__versa_string</link><link linkend="_class____gnu__debug_1_1___after__nth__from">__gnu_debug::_After_nth_from&lt; _Iterator &gt;</link><link linkend="_struct____gnu__debug_1_1___safe__iterator_1_1___attach__single">__gnu_debug::_Safe_iterator&lt; _Iterator, _Sequence, _Category &gt;::_Attach_single</link><link linkend="_struct____gnu__debug_1_1___before_begin_helper">__gnu_debug::_BeforeBeginHelper&lt; _Sequence &gt;</link><link linkend="_class___bitmap__counter">_Bitmap_counter</link><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___c_iter">__gnu_pbds::detail::pat_trie_base::_CIter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</link>
<para>Const iterator </para>
<link linkend="_struct____pstl_1_1____unseq__backend_1_1___combiner">__pstl::__unseq_backend::_Combiner&lt; _Tp, _BinaryOp &gt;</link><link linkend="_struct___c_p_o_i_n_t">_CPOINT</link><link linkend="_struct___d_i_a_c_t_i_o_n_a">_DIACTIONA</link><link linkend="_struct___d_i_a_c_t_i_o_n_f_o_r_m_a_t_a">_DIACTIONFORMATA</link><link linkend="_struct___d_i_a_c_t_i_o_n_f_o_r_m_a_t_w">_DIACTIONFORMATW</link><link linkend="_struct___d_i_a_c_t_i_o_n_w">_DIACTIONW</link><link linkend="_struct___d_i_c_o_l_o_r_s_e_t">_DICOLORSET</link><link linkend="_struct___d_i_c_o_n_f_i_g_u_r_e_d_e_v_i_c_e_s_p_a_r_a_m_s_a">_DICONFIGUREDEVICESPARAMSA</link><link linkend="_struct___d_i_c_o_n_f_i_g_u_r_e_d_e_v_i_c_e_s_p_a_r_a_m_s_w">_DICONFIGUREDEVICESPARAMSW</link><link linkend="_struct___d_i_d_a_t_a_f_o_r_m_a_t">_DIDATAFORMAT</link><link linkend="_struct___d_i_d_e_v_i_c_e_i_m_a_g_e_i_n_f_o_a">_DIDEVICEIMAGEINFOA</link><link linkend="_struct___d_i_d_e_v_i_c_e_i_m_a_g_e_i_n_f_o_h_e_a_d_e_r_a">_DIDEVICEIMAGEINFOHEADERA</link><link linkend="_struct___d_i_d_e_v_i_c_e_i_m_a_g_e_i_n_f_o_h_e_a_d_e_r_w">_DIDEVICEIMAGEINFOHEADERW</link><link linkend="_struct___d_i_d_e_v_i_c_e_i_m_a_g_e_i_n_f_o_w">_DIDEVICEIMAGEINFOW</link><link linkend="_struct___d_i_o_b_j_e_c_t_d_a_t_a_f_o_r_m_a_t">_DIOBJECTDATAFORMAT</link><link linkend="_struct____gnu__debug_1_1___distance__traits">__gnu_debug::_Distance_traits&lt; _Iterator, typename &gt;</link><link linkend="_struct____gnu__debug_1_1___distance__traits_3_01___integral_00_01std_1_1____true__type_01_4">__gnu_debug::_Distance_traits&lt; _Integral, std::__true_type &gt;</link><link linkend="_struct____gnu__parallel_1_1___d_random_shuffling_global_data">__gnu_parallel::_DRandomShufflingGlobalData&lt; _RAIter &gt;</link>
<para>Data known to every thread participating in <link linkend="_namespace____gnu__parallel_1a6e78b59cb50c8e14ebf6990016af7342">__gnu_parallel::__parallel_random_shuffle()</link> </para>
<link linkend="_struct____gnu__parallel_1_1___d_r_s_sorter_p_u">__gnu_parallel::_DRSSorterPU&lt; _RAIter, _RandomNumberGenerator &gt;</link>
<para>Local data for a thread participating in <link linkend="_namespace____gnu__parallel_1a6e78b59cb50c8e14ebf6990016af7342">__gnu_parallel::__parallel_random_shuffle()</link> </para>
<link linkend="_struct____gnu__parallel_1_1___dummy_reduct">__gnu_parallel::_DummyReduct</link>
<para>Reduction function doing nothing </para>
<link linkend="_class____gnu__debug_1_1___equal__to">__gnu_debug::_Equal_to&lt; _Type &gt;</link><link linkend="_class____gnu__parallel_1_1___equal_from_less">__gnu_parallel::_EqualFromLess&lt; _T1, _T2, _Compare &gt;</link>
<para>Constructs predicate for equality from strict weak ordering predicate </para>
<link linkend="_struct____gnu__parallel_1_1___equal_to">__gnu_parallel::_EqualTo&lt; _T1, _T2 &gt;</link>
<para>Similar to std::equal_to, but allows two different types </para>
<link linkend="_class____gnu__debug_1_1___error__formatter">__gnu_debug::_Error_formatter</link><link linkend="_class___ffit__finder">_Ffit_finder</link><link linkend="_struct___g_l_f_wcontext">_GLFWcontext</link><link linkend="_struct___g_l_f_wcontext_e_g_l">_GLFWcontextEGL</link><link linkend="_struct___g_l_f_wcontext_g_l_x">_GLFWcontextGLX</link><link linkend="_struct___g_l_f_wcontext_n_s_g_l">_GLFWcontextNSGL</link><link linkend="_struct___g_l_f_wcontext_o_s_mesa">_GLFWcontextOSMesa</link><link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link><link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link><link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link><link linkend="_struct___g_l_f_wcursor_n_s">_GLFWcursorNS</link><link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link><link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link><link linkend="_struct___g_l_f_wcursor_x11">_GLFWcursorX11</link><link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link><link linkend="_struct___g_l_f_werror">_GLFWerror</link><link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link><link linkend="_struct___g_l_f_winitconfig">_GLFWinitconfig</link><link linkend="_struct___g_l_f_wjoyelement_n_s">_GLFWjoyelementNS</link><link linkend="_struct___g_l_f_wjoyobject_win32">_GLFWjoyobjectWin32</link><link linkend="_struct___g_l_f_wjoystick">_GLFWjoystick</link><link linkend="_struct___g_l_f_wjoystick_linux">_GLFWjoystickLinux</link><link linkend="_struct___g_l_f_wjoystick_n_s">_GLFWjoystickNS</link><link linkend="_struct___g_l_f_wjoystick_win32">_GLFWjoystickWin32</link><link linkend="_struct___g_l_f_wlibrary">_GLFWlibrary</link><link linkend="_struct___g_l_f_wlibrary_e_g_l">_GLFWlibraryEGL</link><link linkend="_struct___g_l_f_wlibrary_g_l_x">_GLFWlibraryGLX</link><link linkend="_struct___g_l_f_wlibrary_linux">_GLFWlibraryLinux</link><link linkend="_struct___g_l_f_wlibrary_n_s">_GLFWlibraryNS</link><link linkend="_struct___g_l_f_wlibrary_n_s_g_l">_GLFWlibraryNSGL</link><link linkend="_struct___g_l_f_wlibrary_null">_GLFWlibraryNull</link><link linkend="_struct___g_l_f_wlibrary_o_s_mesa">_GLFWlibraryOSMesa</link><link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link><link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link><link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link><link linkend="_struct___g_l_f_wlibrary_x11">_GLFWlibraryX11</link><link linkend="_struct___g_l_f_wmapelement">_GLFWmapelement</link><link linkend="_struct___g_l_f_wmapping">_GLFWmapping</link><link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link><link linkend="_struct___g_l_f_wmonitor_n_s">_GLFWmonitorNS</link><link linkend="_struct___g_l_f_wmonitor_null">_GLFWmonitorNull</link><link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link><link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link><link linkend="_struct___g_l_f_wmonitor_x11">_GLFWmonitorX11</link><link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link><link linkend="_struct___g_l_f_wmutex_p_o_s_i_x">_GLFWmutexPOSIX</link><link linkend="_struct___g_l_f_wmutex_win32">_GLFWmutexWin32</link><link linkend="_struct___g_l_f_wobjenum_win32">_GLFWobjenumWin32</link><link linkend="_struct___g_l_f_woffer_wayland">_GLFWofferWayland</link><link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link><link linkend="_struct___g_l_f_wtimer_n_s">_GLFWtimerNS</link><link linkend="_struct___g_l_f_wtimer_p_o_s_i_x">_GLFWtimerPOSIX</link><link linkend="_struct___g_l_f_wtimer_win32">_GLFWtimerWin32</link><link linkend="_struct___g_l_f_wtls">_GLFWtls</link><link linkend="_struct___g_l_f_wtls_p_o_s_i_x">_GLFWtlsPOSIX</link><link linkend="_struct___g_l_f_wtls_win32">_GLFWtlsWin32</link><link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link><link linkend="_struct___g_l_f_wwindow_n_s">_GLFWwindowNS</link><link linkend="_struct___g_l_f_wwindow_null">_GLFWwindowNull</link><link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link><link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link><link linkend="_struct___g_l_f_wwindow_x11">_GLFWwindowX11</link><link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link><link linkend="_class____gnu__parallel_1_1___guarded_iterator">__gnu_parallel::_GuardedIterator&lt; _RAIter, _Compare &gt;</link>
<para>_Iterator wrapper supporting an implicit supremum at the end of the sequence, dominating all comparisons </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___head">__gnu_pbds::detail::pat_trie_base::_Head&lt; _ATraits, Metadata &gt;</link>
<para>Head node for PATRICIA tree </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;</link>
<para>Internal node type, PATRICIA tree </para>
<link linkend="_struct____gnu__debug_1_1___insert__range__from__self__is__safe">__gnu_debug::_Insert_range_from_self_is_safe&lt; _Sequence &gt;</link><link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___instance">__gnu_debug::_Error_formatter::_Parameter::_Instance</link><link linkend="_struct____gnu__debug_1_1___is__contiguous__sequence">__gnu_debug::_Is_contiguous_sequence&lt; _Sequence &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___iter">__gnu_pbds::detail::pat_trie_base::_Iter&lt; Node, Leaf, Head, Inode, Is_Forward_Iterator &gt;</link>
<para>Iterator </para>
<link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__comp__iter">__gnu_cxx::__ops::_Iter_comp_iter&lt; _Compare &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__comp__to__iter">__gnu_cxx::__ops::_Iter_comp_to_iter&lt; _Compare, _Iterator1 &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__comp__to__val">__gnu_cxx::__ops::_Iter_comp_to_val&lt; _Compare, _Value &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__comp__val">__gnu_cxx::__ops::_Iter_comp_val&lt; _Compare &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__equal__to__iter">__gnu_cxx::__ops::_Iter_equal_to_iter</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__equal__to__val">__gnu_cxx::__ops::_Iter_equal_to_val</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__equals__iter">__gnu_cxx::__ops::_Iter_equals_iter&lt; _Iterator1 &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__equals__val">__gnu_cxx::__ops::_Iter_equals_val&lt; _Value &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__less__iter">__gnu_cxx::__ops::_Iter_less_iter</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__less__val">__gnu_cxx::__ops::_Iter_less_val</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__negate">__gnu_cxx::__ops::_Iter_negate&lt; _Predicate &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___iter__pred">__gnu_cxx::__ops::_Iter_pred&lt; _Predicate &gt;</link><link linkend="_class____gnu__parallel_1_1___iterator_pair">__gnu_parallel::_IteratorPair&lt; _Iterator1, _Iterator2, _IteratorCategory &gt;</link>
<para>A pair of iterators. The usual iterator operations are applied to both child iterators </para>
<link linkend="_class____gnu__parallel_1_1___iterator_triple">__gnu_parallel::_IteratorTriple&lt; _Iterator1, _Iterator2, _Iterator3, _IteratorCategory &gt;</link>
<para>A triple of iterators. The usual iterator operations are applied to all three child iterators </para>
<link linkend="_struct____gnu__parallel_1_1___job">__gnu_parallel::_Job&lt; _DifferenceTp &gt;</link>
<para>One __job for a certain thread </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___leaf">__gnu_pbds::detail::pat_trie_base::_Leaf&lt; _ATraits, Metadata &gt;</link>
<para>Leaf node for PATRICIA tree </para>
<link linkend="_struct____gnu__parallel_1_1___less">__gnu_parallel::_Less&lt; _T1, _T2 &gt;</link>
<para>Similar to std::less, but allows two different types </para>
<link linkend="_struct____gnu__parallel_1_1___less_3_01___tp_00_01___tp_01_4">__gnu_parallel::_Less&lt; _Tp, _Tp &gt;</link><link linkend="_class____gnu__parallel_1_1___lexicographic">__gnu_parallel::_Lexicographic&lt; _T1, _T2, _Compare &gt;</link>
<para>Compare __a pair of types lexicographically, ascending </para>
<link linkend="_class____gnu__parallel_1_1___lexicographic_reverse">__gnu_parallel::_LexicographicReverse&lt; _T1, _T2, _Compare &gt;</link>
<para>Compare __a pair of types lexicographically, descending </para>
<link linkend="_struct____gnu__parallel_1_1___loser_tree_base_1_1___loser">__gnu_parallel::_LoserTreeBase&lt; _Tp, _Compare &gt;::_Loser</link>
<para>Internal representation of a <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> element </para>
<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser">__gnu_parallel::_LoserTreePointerBase&lt; _Tp, _Compare &gt;::_Loser</link>
<para>Internal representation of <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> __elements </para>
<link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_unguarded_base_1_1___loser">__gnu_parallel::_LoserTreePointerUnguardedBase&lt; _Tp, _Compare &gt;::_Loser</link><link linkend="_struct____gnu__parallel_1_1___loser_tree_unguarded_base_1_1___loser">__gnu_parallel::_LoserTreeUnguardedBase&lt; _Tp, _Compare &gt;::_Loser</link><link linkend="_class____gnu__parallel_1_1___loser_tree">__gnu_parallel::_LoserTree&lt; __stable, _Tp, _Compare &gt;</link>
<para>Stable <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> variant </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_3_01false_00_01___tp_00_01___compare_01_4">__gnu_parallel::_LoserTree&lt; false, _Tp, _Compare &gt;</link>
<para>Unstable <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> variant </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_base">__gnu_parallel::_LoserTreeBase&lt; _Tp, _Compare &gt;</link>
<para>Guarded loser/tournament tree </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer">__gnu_parallel::_LoserTreePointer&lt; __stable, _Tp, _Compare &gt;</link>
<para>Stable <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> implementation </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_3_01false_00_01___tp_00_01___compare_01_4">__gnu_parallel::_LoserTreePointer&lt; false, _Tp, _Compare &gt;</link>
<para>Unstable <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> implementation </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_base">__gnu_parallel::_LoserTreePointerBase&lt; _Tp, _Compare &gt;</link>
<para>Base class of <link linkend="_struct____gnu__parallel_1_1___loser_tree_pointer_base_1_1___loser">_Loser</link> Tree implementation using pointers </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded">__gnu_parallel::_LoserTreePointerUnguarded&lt; __stable, _Tp, _Compare &gt;</link>
<para>Stable unguarded <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> variant storing pointers </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_3_01false_00_01___tp_00_01___compare_01_4">__gnu_parallel::_LoserTreePointerUnguarded&lt; false, _Tp, _Compare &gt;</link>
<para>Unstable unguarded <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> variant storing pointers </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_pointer_unguarded_base">__gnu_parallel::_LoserTreePointerUnguardedBase&lt; _Tp, _Compare &gt;</link>
<para>Unguarded loser tree, keeping only pointers to the elements in the tree structure </para>
<link linkend="_struct____gnu__parallel_1_1___loser_tree_traits">__gnu_parallel::_LoserTreeTraits&lt; _Tp &gt;</link>
<para>Traits for determining whether the loser tree should use pointers or copies </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded">__gnu_parallel::_LoserTreeUnguarded&lt; __stable, _Tp, _Compare &gt;</link>
<para>Stable implementation of unguarded <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_3_01false_00_01___tp_00_01___compare_01_4">__gnu_parallel::_LoserTreeUnguarded&lt; false, _Tp, _Compare &gt;</link>
<para>Non-Stable implementation of unguarded <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> </para>
<link linkend="_class____gnu__parallel_1_1___loser_tree_unguarded_base">__gnu_parallel::_LoserTreeUnguardedBase&lt; _Tp, _Compare &gt;</link>
<para>Base class for unguarded <link linkend="_class____gnu__parallel_1_1___loser_tree">_LoserTree</link> implementation </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___metadata">__gnu_pbds::detail::pat_trie_base::_Metadata&lt; Metadata, _Alloc &gt;</link>
<para>Metadata base primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___metadata_3_01null__type_00_01___alloc_01_4">__gnu_pbds::detail::pat_trie_base::_Metadata&lt; null_type, _Alloc &gt;</link>
<para>Specialization for null metadata </para>
<link linkend="_struct____gnu__parallel_1_1___multiplies">__gnu_parallel::_Multiplies&lt; _Tp1, _Tp2, _Result &gt;</link>
<para>Similar to std::multiplies, but allows two different types </para>
<link linkend="_struct____gnu__parallel_1_1___multiplies_3_01___tp_00_01___tp_00_01___tp_01_4">__gnu_parallel::_Multiplies&lt; _Tp, _Tp, _Tp &gt;</link><link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___named">__gnu_debug::_Error_formatter::_Parameter::_Named</link><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__base">__gnu_pbds::detail::pat_trie_base::_Node_base&lt; _ATraits, Metadata &gt;</link>
<para>Node base </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__citer">__gnu_pbds::detail::pat_trie_base::_Node_citer&lt; Node, Leaf, Head, Inode, _CIterator, Iterator, _Alloc &gt;</link>
<para>Node const iterator </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___node__iter">__gnu_pbds::detail::pat_trie_base::_Node_iter&lt; Node, Leaf, Head, Inode, _CIterator, Iterator, _Alloc &gt;</link>
<para>Node iterator </para>
<link linkend="_class____gnu__debug_1_1___not__equal__to">__gnu_debug::_Not_equal_to&lt; _Type &gt;</link><link linkend="_struct____gnu__parallel_1_1___nothing">__gnu_parallel::_Nothing</link>
<para>Functor doing nothing </para>
<link linkend="_struct__pack">_pack</link><link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter">__gnu_debug::_Error_formatter::_Parameter</link><link linkend="_struct____gnu__parallel_1_1___piece">__gnu_parallel::_Piece&lt; _DifferenceTp &gt;</link>
<para>Subsequence description </para>
<link linkend="_struct____gnu__parallel_1_1___plus">__gnu_parallel::_Plus&lt; _Tp1, _Tp2, _Result &gt;</link>
<para>Similar to std::plus, but allows two different types </para>
<link linkend="_struct____gnu__parallel_1_1___plus_3_01___tp_00_01___tp_00_01___tp_01_4">__gnu_parallel::_Plus&lt; _Tp, _Tp, _Tp &gt;</link><link linkend="_struct____gnu__parallel_1_1___p_m_w_m_s_sorting_data">__gnu_parallel::_PMWMSSortingData&lt; _RAIter &gt;</link>
<para>Data accessed by all threads </para>
<link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence&lt; _Tp, _DifferenceTp &gt;</link>
<para>Sequence that conceptually consists of multiple copies of the same element. The copies are not stored explicitly, of course </para>
<link linkend="_class____gnu__parallel_1_1___pseudo_sequence_iterator">__gnu_parallel::_PseudoSequenceIterator&lt; _Tp, _DifferenceTp &gt;</link>
<para>_Iterator associated with <link linkend="_class____gnu__parallel_1_1___pseudo_sequence">__gnu_parallel::_PseudoSequence</link>. If features the usual random-access iterator functionality </para>
<link linkend="_struct__pthread__cleanup">_pthread_cleanup</link><link linkend="_struct____gnu__parallel_1_1___q_s_b_thread_local">__gnu_parallel::_QSBThreadLocal&lt; _RAIter &gt;</link>
<para>Information local to one thread in the parallel quicksort run </para>
<link linkend="_class____gnu__parallel_1_1___random_number">__gnu_parallel::_RandomNumber</link>
<para>Random number generator, based on the Mersenne twister </para>
<link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue">__gnu_parallel::_RestrictedBoundedConcurrentQueue&lt; _Tp &gt;</link>
<para>Double-ended queue of bounded size, allowing lock-free atomic access. <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a2ac4fcc26b5a8e8d3db9993ca3b6f777">push_front()</link> and <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1a4b760899cefaccb86586c447b12c4cc3">pop_front()</link> must not be called concurrently to each other, while <link linkend="_class____gnu__parallel_1_1___restricted_bounded_concurrent_queue_1aff5854a49d63fcd08aae08eb282361e7">pop_back()</link> can be called concurrently at all times. <computeroutput>empty()</computeroutput>, <computeroutput><link linkend="__classes_2lib_2raylib_2src_2external_2_a_n_g_l_e_2_g_l_e_s2_2gl2ext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size()</link></computeroutput>, and <computeroutput>top()</computeroutput> are intentionally not provided. Calling them would not make sense in a concurrent setting </para>
<link linkend="_class____gnu__debug_1_1___safe__container">__gnu_debug::_Safe_container&lt; _SafeContainer, _Alloc, _SafeBase, _IsCxx11AllocatorAware &gt;</link>
<para>Safe class dealing with some allocator dependent operations </para>
<link linkend="_class____gnu__debug_1_1___safe__iterator">__gnu_debug::_Safe_iterator&lt; _Iterator, _Sequence, _Category &gt;</link>
<para>Safe iterator wrapper </para>
<link linkend="_class____gnu__debug_1_1___safe__iterator_3_01___iterator_00_01___sequence_00_01std_1_1bidirectional__iterator__tag_01_4">__gnu_debug::_Safe_iterator&lt; _Iterator, _Sequence, std::bidirectional_iterator_tag &gt;</link><link linkend="_class____gnu__debug_1_1___safe__iterator_3_01___iterator_00_01___sequence_00_01std_1_1random__access__iterator__tag_01_4">__gnu_debug::_Safe_iterator&lt; _Iterator, _Sequence, std::random_access_iterator_tag &gt;</link><link linkend="_class____gnu__debug_1_1___safe__iterator__base">__gnu_debug::_Safe_iterator_base</link>
<para>Basic functionality for a <emphasis>safe</emphasis> iterator </para>
<link linkend="_class____gnu__debug_1_1___safe__local__iterator">__gnu_debug::_Safe_local_iterator&lt; _Iterator, _Sequence &gt;</link>
<para>Safe iterator wrapper </para>
<link linkend="_class____gnu__debug_1_1___safe__local__iterator__base">__gnu_debug::_Safe_local_iterator_base</link>
<para>Basic functionality for a <emphasis>safe</emphasis> iterator </para>
<link linkend="_class____gnu__debug_1_1___safe__node__sequence">__gnu_debug::_Safe_node_sequence&lt; _Sequence &gt;</link><link linkend="_class____gnu__debug_1_1___safe__sequence">__gnu_debug::_Safe_sequence&lt; _Sequence &gt;</link>
<para>Base class for constructing a <emphasis>safe</emphasis> sequence type that tracks iterators that reference it </para>
<link linkend="_class____gnu__debug_1_1___safe__sequence__base">__gnu_debug::_Safe_sequence_base</link>
<para>Base class that supports tracking of iterators that reference a sequence </para>
<link linkend="_class____gnu__debug_1_1___safe__unordered__container">__gnu_debug::_Safe_unordered_container&lt; _Container &gt;</link>
<para>Base class for constructing a <emphasis>safe</emphasis> unordered container type that tracks iterators that reference it </para>
<link linkend="_class____gnu__debug_1_1___safe__unordered__container__base">__gnu_debug::_Safe_unordered_container_base</link>
<para>Base class that supports tracking of local iterators that reference an unordered container </para>
<link linkend="_struct____gnu__parallel_1_1___sampling_sorter">__gnu_parallel::_SamplingSorter&lt; __stable, _RAIter, _StrictWeakOrdering &gt;</link>
<para>Stable sorting functor </para>
<link linkend="_struct____gnu__parallel_1_1___sampling_sorter_3_01false_00_01___r_a_iter_00_01___strict_weak_ordering_01_4">__gnu_parallel::_SamplingSorter&lt; false, _RAIter, _StrictWeakOrdering &gt;</link>
<para>Non-__stable sorting functor </para>
<link linkend="_struct____gnu__debug_1_1___sequence__traits">__gnu_debug::_Sequence_traits&lt; _Sequence &gt;</link><link linkend="_struct____gnu__parallel_1_1___settings">__gnu_parallel::_Settings</link><link linkend="_struct____gnu__parallel_1_1___split_consistently">__gnu_parallel::_SplitConsistently&lt; __exact, _RAIter, _Compare, _SortingPlacesIterator &gt;</link>
<para>Split consistently </para>
<link linkend="_struct____gnu__parallel_1_1___split_consistently_3_01false_00_01___r_a_iter_00_01___compare_00_02e8a2baf2019ec7bfe13dbc6d2774065">__gnu_parallel::_SplitConsistently&lt; false, _RAIter, _Compare, _SortingPlacesIterator &gt;</link>
<para>Split by sampling </para>
<link linkend="_struct____gnu__parallel_1_1___split_consistently_3_01true_00_01___r_a_iter_00_01___compare_00_01___sorting_places_iterator_01_4">__gnu_parallel::_SplitConsistently&lt; true, _RAIter, _Compare, _SortingPlacesIterator &gt;</link>
<para>Split by exact splitting </para>
<link linkend="_struct__swizzle">_swizzle</link><link linkend="_structglm_1_1detail_1_1__swizzle">glm::detail::_swizzle&lt; N, T, Q, E0, E1, E2, E3 &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base0">glm::detail::_swizzle_base0&lt; T, N &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base1">glm::detail::_swizzle_base1&lt; N, T, Q, E0, E1, E2, E3, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base1_3_012_00_01_t_00_01_q_00_01_e0_00_01_e1_00-1_00-2_00_01_aligned_01_4">glm::detail::_swizzle_base1&lt; 2, T, Q, E0, E1,-1,-2, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base1_3_013_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00-1_00_01_aligned_01_4">glm::detail::_swizzle_base1&lt; 3, T, Q, E0, E1, E2,-1, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base1_3_014_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_01_aligned_01_4">glm::detail::_swizzle_base1&lt; 4, T, Q, E0, E1, E2, E3, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, 1 &gt;</link><link linkend="_struct____gnu__cxx_1_1____aligned__membuf_1_1___tp2">__gnu_cxx::__aligned_membuf&lt; _Tp &gt;::_Tp2</link><link linkend="_struct____gnu__debug_1_1___error__formatter_1_1___parameter_1_1___type">__gnu_debug::_Error_formatter::_Parameter::_Type</link><link linkend="_class____gnu__parallel_1_1___unguarded_iterator">__gnu_parallel::_UnguardedIterator&lt; _RAIter, _Compare &gt;</link><link linkend="_struct____gnu__debug_1_1___unsafe__type">__gnu_debug::_Unsafe_type&lt; _Iterator &gt;</link><link linkend="_struct____gnu__debug_1_1___unsafe__type_3_01___safe__iterator_3_01___iterator_00_01___sequence_01_4_01_4">__gnu_debug::_Unsafe_type&lt; _Safe_iterator&lt; _Iterator, _Sequence &gt; &gt;</link><link linkend="_struct____gnu__debug_1_1___unsafe__type_3_01___safe__local__iterator_3_01___iterator_00_01___sequence_01_4_01_4">__gnu_debug::_Unsafe_type&lt; _Safe_local_iterator&lt; _Iterator, _Sequence &gt; &gt;</link><link linkend="_struct____gnu__debug_1_1___unsafe__type_3_01std_1_1reverse__iterator_3_01___iterator_01_4_01_4">__gnu_debug::_Unsafe_type&lt; std::reverse_iterator&lt; _Iterator &gt; &gt;</link><link linkend="_struct___unwind___exception">_Unwind_Exception</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___val__comp__iter">__gnu_cxx::__ops::_Val_comp_iter&lt; _Compare &gt;</link><link linkend="_struct____gnu__cxx_1_1____ops_1_1___val__less__iter">__gnu_cxx::__ops::_Val_less_iter</link><link linkend="_struct___x_i_n_p_u_t___b_a_t_t_e_r_y___i_n_f_o_r_m_a_t_i_o_n">_XINPUT_BATTERY_INFORMATION</link><link linkend="_struct___x_i_n_p_u_t___c_a_p_a_b_i_l_i_t_i_e_s">_XINPUT_CAPABILITIES</link><link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d">_XINPUT_GAMEPAD</link><link linkend="_struct___x_i_n_p_u_t___k_e_y_s_t_r_o_k_e">_XINPUT_KEYSTROKE</link><link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e">_XINPUT_STATE</link><link linkend="_struct___x_i_n_p_u_t___v_i_b_r_a_t_i_o_n">_XINPUT_VIBRATION</link><link linkend="_structheap_1_1_a">heap::A</link><link linkend="_struct_a_a_b_b">AABB</link><link linkend="_struct_block_1_1_a_a_b_b">Block::AABB</link><link linkend="_structacc__api__info">acc_api_info</link><link linkend="_structacc__data__event__info">acc_data_event_info</link><link linkend="_unionacc__event__info">acc_event_info</link><link linkend="_structacc__launch__event__info">acc_launch_event_info</link><link linkend="_structacc__other__event__info">acc_other_event_info</link><link linkend="_structacc__prof__info">acc_prof_info</link><link linkend="_structlest_1_1action">lest::action</link><link linkend="_structnlohmann_1_1detail_1_1actual__object__comparator">nlohmann::detail::actual_object_comparator&lt; BasicJsonType &gt;</link><link linkend="_structlest_1_1add__module">lest::add_module</link><link linkend="_structnlohmann_1_1adl__serializer">nlohmann::adl_serializer&lt; ValueType, typename &gt;</link>
<para>Default JSONSerializer template argument </para>
<link linkend="_struct_alloc_list">AllocList</link><link linkend="_struct_catch_1_1always__false">Catch::always_false&lt; T &gt;</link><link linkend="_structandroid__app">android_app</link><link linkend="_structandroid__poll__source">android_poll_source</link><link linkend="_class_animatable">Animatable</link><link linkend="_struct_ao_s">AoS</link><link linkend="_class_catch_1_1_detail_1_1_approx">Catch::Detail::Approx</link><link linkend="_classlest_1_1approx">lest::approx</link><link linkend="_class_a_raw_volume_chunk">ARawVolumeChunk</link><link linkend="_classarray">array</link>
<para>A TOML array </para>
<link linkend="_structarray__init__elem">array_init_elem</link><link linkend="_struct_array_color">ArrayColor</link><link linkend="_struct_array_u_short">ArrayUShort</link><link linkend="_struct_array_vector3">ArrayVector3</link><link linkend="_struct_catch_1_1_generators_1_1as">Catch::Generators::as&lt; T &gt;</link><link linkend="_class_catch_1_1_assertion_handler">Catch::AssertionHandler</link><link linkend="_struct_catch_1_1_assertion_info">Catch::AssertionInfo</link><link linkend="_struct_catch_1_1_assertion_reaction">Catch::AssertionReaction</link><link linkend="_struct____gnu__pbds_1_1associative__tag">__gnu_pbds::associative_tag</link>
<para>Basic associative-container </para>
<link linkend="_class_a_terrain_gen_manager">ATerrainGenManager</link><link linkend="_class_a_test_actor">ATestActor</link><link linkend="_struct_audio_data">AudioData</link><link linkend="_struct_audio_stream">AudioStream</link><link linkend="_struct_catch_1_1_auto_reg">Catch::AutoReg</link><link linkend="_structheap_1_1_b">heap::B</link><link linkend="_struct____gnu__parallel_1_1balanced__quicksort__tag">__gnu_parallel::balanced_quicksort_tag</link>
<para>Forces parallel sorting using balanced quicksort at compile time </para>
<link linkend="_struct____gnu__parallel_1_1balanced__tag">__gnu_parallel::balanced_tag</link>
<para>Recommends parallel execution using dynamic load-balancing at compile time </para>
<link linkend="_class____gnu__pbds_1_1basic__branch">__gnu_pbds::basic_branch&lt; Key, Mapped, Tag, Node_Update, Policy_Tl, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1basic__branch__tag">__gnu_pbds::basic_branch_tag</link>
<para>Basic branch structure </para>
<link linkend="_classglm_1_1io_1_1basic__format__saver">glm::io::basic_format_saver&lt; CTy, CTr &gt;</link><link linkend="_class____gnu__pbds_1_1basic__hash__table">__gnu_pbds::basic_hash_table&lt; Key, Mapped, Hash_Fn, Eq_Fn, Resize_Policy, Store_Hash, Tag, Policy_Tl, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1basic__hash__tag">__gnu_pbds::basic_hash_tag</link>
<para>Basic hash structure </para>
<link linkend="_struct____gnu__pbds_1_1basic__invalidation__guarantee">__gnu_pbds::basic_invalidation_guarantee</link><link linkend="_classnlohmann_1_1basic__json">nlohmann::basic_json&lt; ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType &gt;</link>
<para>Class to store JSON values </para>
<link linkend="_classglm_1_1io_1_1basic__state__saver">glm::io::basic_state_saver&lt; CTy, CTr &gt;</link><link linkend="_classbasic__string">basic_string</link><link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__const__it__">__gnu_pbds::detail::bin_search_tree_const_it_&lt; Node_Pointer, Value_Type, Pointer, Const_Pointer, Reference, Const_Reference, Is_Forward_Iterator, _Alloc &gt;</link>
<para>Const iterator </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__const__node__it__">__gnu_pbds::detail::bin_search_tree_const_node_it_&lt; Node, Const_Iterator, Iterator, _Alloc &gt;</link>
<para>Const node iterator </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__it__">__gnu_pbds::detail::bin_search_tree_it_&lt; Node_Pointer, Value_Type, Pointer, Const_Pointer, Reference, Const_Reference, Is_Forward_Iterator, _Alloc &gt;</link>
<para>Iterator </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1bin__search__tree__node__it__">__gnu_pbds::detail::bin_search_tree_node_it_&lt; Node, Const_Iterator, Iterator, _Alloc &gt;</link>
<para>Node iterator </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1bin__search__tree__traits">__gnu_pbds::detail::bin_search_tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, Node, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1bin__search__tree__traits_3_01_key_00_01null__type_00_01_cmp___49ad61e3916baca090a936f717e6da25">__gnu_pbds::detail::bin_search_tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, Node, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">__gnu_pbds::detail::binary_heap&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__const__iterator__">__gnu_pbds::detail::binary_heap_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</link>
<para>Const point-type iterator </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap__point__const__iterator__">__gnu_pbds::detail::binary_heap_point_const_iterator_&lt; Value_Type, Entry, Simple, _Alloc &gt;</link>
<para>Const point-type iterator </para>
<link linkend="_struct____gnu__pbds_1_1binary__heap__tag">__gnu_pbds::binary_heap_tag</link>
<para>Binary-heap (array-based) </para>
<link linkend="_classnlohmann_1_1detail_1_1binary__reader">nlohmann::detail::binary_reader&lt; BasicJsonType, InputAdapterType, SAX &gt;</link>
<para>Deserialization of CBOR, MessagePack, and UBJSON values </para>
<link linkend="_class_catch_1_1_binary_expr">Catch::BinaryExpr&lt; LhsT, RhsT &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap">__gnu_pbds::detail::binomial_heap&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap__base">__gnu_pbds::detail::binomial_heap_base&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link>
<para>Base class for binomial heap </para>
<link linkend="_struct____gnu__pbds_1_1binomial__heap__tag">__gnu_pbds::binomial_heap_tag</link>
<para>Binomial-heap </para>
<link linkend="_struct_bi_stack">BiStack</link><link linkend="_class_block">Block</link><link linkend="_struct_bone_info">BoneInfo</link><link linkend="_struct_bounding_box">BoundingBox</link><link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_Itr, _Alloc &gt;</link>
<para>Primary template, base class for branch structure policies </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1branch__policy_3_01_node___c_itr_00_01_node___c_itr_00_01___alloc_01_4">__gnu_pbds::detail::branch_policy&lt; Node_CItr, Node_CItr, _Alloc &gt;</link>
<para>Specialization for const iterators </para>
<link linkend="_class_button">Button</link><link linkend="_class_button_o">ButtonO</link><link linkend="_class_button_p">ButtonP</link><link linkend="_class_button_r">ButtonR</link><link linkend="_classnlohmann_1_1byte__container__with__subtype">nlohmann::byte_container_with_subtype&lt; BinaryType &gt;</link>
<para>Internal type for a backed binary type </para>
<link linkend="_struct_camera2_d">Camera2D</link><link linkend="_struct_camera3_d">Camera3D</link><link linkend="_structcamera__registry__entry">camera_registry_entry</link><link linkend="_class_camera_comp">CameraComp</link><link linkend="_class_camera_data">CameraData</link><link linkend="_class_catch_1_1_capturer">Catch::Capturer</link><link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_cased_string">Catch::Matchers::StdString::CasedString</link><link linkend="_struct_catch_1_1_case_sensitive">Catch::CaseSensitive</link><link linkend="_structglm_1_1detail_1_1cast">glm::detail::cast&lt; T &gt;</link><link linkend="_structglm_1_1detail_1_1cast_3_01float_01_4">glm::detail::cast&lt; float &gt;</link><link linkend="_struct_catch__global__namespace__dummy">Catch_global_namespace_dummy</link><link linkend="_class____gnu__pbds_1_1cc__hash__max__collision__check__resize__trigger">__gnu_pbds::cc_hash_max_collision_check_resize_trigger&lt; External_Load_Access, Size_Type &gt;</link><link linkend="_class____gnu__pbds_1_1cc__hash__table">__gnu_pbds::cc_hash_table&lt; Key, Mapped, Hash_Fn, Eq_Fn, Comb_Hash_Fn, Resize_Policy, Store_Hash, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1cc__hash__tag">__gnu_pbds::cc_hash_tag</link>
<para>Collision-chaining hash </para>
<link linkend="_structcgltf__accessor">cgltf_accessor</link><link linkend="_structcgltf__accessor__sparse">cgltf_accessor_sparse</link><link linkend="_structcgltf__animation">cgltf_animation</link><link linkend="_structcgltf__animation__channel">cgltf_animation_channel</link><link linkend="_structcgltf__animation__sampler">cgltf_animation_sampler</link><link linkend="_structcgltf__asset">cgltf_asset</link><link linkend="_structcgltf__attribute">cgltf_attribute</link><link linkend="_structcgltf__buffer">cgltf_buffer</link><link linkend="_structcgltf__buffer__view">cgltf_buffer_view</link><link linkend="_structcgltf__camera">cgltf_camera</link><link linkend="_structcgltf__camera__orthographic">cgltf_camera_orthographic</link><link linkend="_structcgltf__camera__perspective">cgltf_camera_perspective</link><link linkend="_structcgltf__clearcoat">cgltf_clearcoat</link><link linkend="_structcgltf__data">cgltf_data</link><link linkend="_structcgltf__draco__mesh__compression">cgltf_draco_mesh_compression</link><link linkend="_structcgltf__emissive__strength">cgltf_emissive_strength</link><link linkend="_structcgltf__extension">cgltf_extension</link><link linkend="_structcgltf__extras">cgltf_extras</link><link linkend="_structcgltf__file__options">cgltf_file_options</link><link linkend="_structcgltf__image">cgltf_image</link><link linkend="_structcgltf__ior">cgltf_ior</link><link linkend="_structcgltf__iridescence">cgltf_iridescence</link><link linkend="_structcgltf__light">cgltf_light</link><link linkend="_structcgltf__material">cgltf_material</link><link linkend="_structcgltf__material__mapping">cgltf_material_mapping</link><link linkend="_structcgltf__material__variant">cgltf_material_variant</link><link linkend="_structcgltf__memory__options">cgltf_memory_options</link><link linkend="_structcgltf__mesh">cgltf_mesh</link><link linkend="_structcgltf__mesh__gpu__instancing">cgltf_mesh_gpu_instancing</link><link linkend="_structcgltf__meshopt__compression">cgltf_meshopt_compression</link><link linkend="_structcgltf__morph__target">cgltf_morph_target</link><link linkend="_structcgltf__node">cgltf_node</link><link linkend="_structcgltf__options">cgltf_options</link><link linkend="_structcgltf__pbr__metallic__roughness">cgltf_pbr_metallic_roughness</link><link linkend="_structcgltf__pbr__specular__glossiness">cgltf_pbr_specular_glossiness</link><link linkend="_structcgltf__primitive">cgltf_primitive</link><link linkend="_structcgltf__sampler">cgltf_sampler</link><link linkend="_structcgltf__scene">cgltf_scene</link><link linkend="_structcgltf__sheen">cgltf_sheen</link><link linkend="_structcgltf__skin">cgltf_skin</link><link linkend="_structcgltf__specular">cgltf_specular</link><link linkend="_structcgltf__texture">cgltf_texture</link><link linkend="_structcgltf__texture__transform">cgltf_texture_transform</link><link linkend="_structcgltf__texture__view">cgltf_texture_view</link><link linkend="_structcgltf__transmission">cgltf_transmission</link><link linkend="_structcgltf__volume">cgltf_volume</link><link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link><link linkend="_structchannel">channel</link><link linkend="_struct_char_info">CharInfo</link><link linkend="_class_catch_1_1_generators_1_1_chunk_generator">Catch::Generators::ChunkGenerator&lt; T &gt;</link><link linkend="_struct_codebook">Codebook</link><link linkend="_struct_color">Color</link><link linkend="_structlest_1_1comment">lest::comment</link><link linkend="_structglm_1_1detail_1_1compute__abs">glm::detail::compute_abs&lt; genFIType, bool &gt;</link><link linkend="_structglm_1_1detail_1_1compute__abs_3_01gen_f_i_type_00_01false_01_4">glm::detail::compute_abs&lt; genFIType, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__abs_3_01gen_f_i_type_00_01true_01_4">glm::detail::compute_abs&lt; genFIType, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__abs__vector">glm::detail::compute_abs_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__are_collinear">glm::detail::compute_areCollinear&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__are_collinear_3_012_00_01_t_00_01_q_01_4">glm::detail::compute_areCollinear&lt; 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__are_collinear_3_013_00_01_t_00_01_q_01_4">glm::detail::compute_areCollinear&lt; 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__are_collinear_3_014_00_01_t_00_01_q_01_4">glm::detail::compute_areCollinear&lt; 4, T, Q &gt;</link><link linkend="_structbit_count_1_1compute__bitfield_bit_count_step">bitCount::compute_bitfieldBitCountStep&lt; EXEC &gt;</link><link linkend="_structglm_1_1detail_1_1compute__bitfield_bit_count_step">glm::detail::compute_bitfieldBitCountStep&lt; L, T, Q, Aligned, EXEC &gt;</link><link linkend="_structglm_1_1detail_1_1compute__bitfield_bit_count_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4">glm::detail::compute_bitfieldBitCountStep&lt; L, T, Q, Aligned, true &gt;</link><link linkend="_structbit_count_1_1compute__bitfield_bit_count_step_3_01true_01_4">bitCount::compute_bitfieldBitCountStep&lt; true &gt;</link><link linkend="_structbitfield_reverse_1_1compute__bitfield_reverse_step">bitfieldReverse::compute_bitfieldReverseStep&lt; EXEC &gt;</link><link linkend="_structglm_1_1detail_1_1compute__bitfield_reverse_step">glm::detail::compute_bitfieldReverseStep&lt; L, T, Q, Aligned, EXEC &gt;</link><link linkend="_structglm_1_1detail_1_1compute__bitfield_reverse_step_3_01_l_00_01_t_00_01_q_00_01_aligned_00_01true_01_4">glm::detail::compute_bitfieldReverseStep&lt; L, T, Q, Aligned, true &gt;</link><link linkend="_structbitfield_reverse_1_1compute__bitfield_reverse_step_3_01true_01_4">bitfieldReverse::compute_bitfieldReverseStep&lt; true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil">glm::detail::compute_ceil&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_multiple">glm::detail::compute_ceilMultiple&lt; is_float, is_signed &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_multiple_3_01false_00_01false_01_4">glm::detail::compute_ceilMultiple&lt; false, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_multiple_3_01false_00_01true_01_4">glm::detail::compute_ceilMultiple&lt; false, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_multiple_3_01true_00_01true_01_4">glm::detail::compute_ceilMultiple&lt; true, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_power_of_two">glm::detail::compute_ceilPowerOfTwo&lt; L, T, Q, isSigned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_power_of_two_3_01_l_00_01_t_00_01_q_00_01false_01_4">glm::detail::compute_ceilPowerOfTwo&lt; L, T, Q, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_shift">glm::detail::compute_ceilShift&lt; L, T, Q, compute &gt;</link><link linkend="_structglm_1_1detail_1_1compute__ceil_shift_3_01_l_00_01_t_00_01_q_00_01true_01_4">glm::detail::compute_ceilShift&lt; L, T, Q, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__clamp__vector">glm::detail::compute_clamp_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_normalize">glm::detail::compute_compNormalize&lt; L, T, floatType, Q, isInteger, signedType &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_normalize_3_01_l_00_01_t_00_01float_type_00_01_q_00_01false_00_01true_01_4">glm::detail::compute_compNormalize&lt; L, T, floatType, Q, false, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_normalize_3_01_l_00_01_t_00_01float_type_00_01_q_00_01true_00_01false_01_4">glm::detail::compute_compNormalize&lt; L, T, floatType, Q, true, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_normalize_3_01_l_00_01_t_00_01float_type_00_01_q_00_01true_00_01true_01_4">glm::detail::compute_compNormalize&lt; L, T, floatType, Q, true, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_scale">glm::detail::compute_compScale&lt; L, T, floatType, Q, isInteger, signedType &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_scale_3_01_l_00_01_t_00_01float_type_00_01_q_00_01false_00_01true_01_4">glm::detail::compute_compScale&lt; L, T, floatType, Q, false, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_scale_3_01_l_00_01_t_00_01float_type_00_01_q_00_01true_00_01false_01_4">glm::detail::compute_compScale&lt; L, T, floatType, Q, true, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__comp_scale_3_01_l_00_01_t_00_01float_type_00_01_q_00_01true_00_01true_01_4">glm::detail::compute_compScale&lt; L, T, floatType, Q, true, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__cross">glm::detail::compute_cross&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__cross__vec2">glm::detail::compute_cross_vec2&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__determinant">glm::detail::compute_determinant&lt; C, R, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__determinant_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_determinant&lt; 2, 2, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__determinant_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_determinant&lt; 3, 3, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__determinant_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_determinant&lt; 4, 4, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__distance">glm::detail::compute_distance&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot">glm::detail::compute_dot&lt; V, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot_3_01qua_3_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4">glm::detail::compute_dot&lt; qua&lt; T, Q &gt;, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot_3_01vec_3_011_00_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4">glm::detail::compute_dot&lt; vec&lt; 1, T, Q &gt;, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot_3_01vec_3_012_00_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4">glm::detail::compute_dot&lt; vec&lt; 2, T, Q &gt;, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot_3_01vec_3_013_00_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4">glm::detail::compute_dot&lt; vec&lt; 3, T, Q &gt;, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__dot_3_01vec_3_014_00_01_t_00_01_q_01_4_00_01_t_00_01_aligned_01_4">glm::detail::compute_dot&lt; vec&lt; 4, T, Q &gt;, T, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__equal">glm::detail::compute_equal&lt; T, isFloat &gt;</link><link linkend="_structglm_1_1detail_1_1compute__faceforward">glm::detail::compute_faceforward&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__find_l_s_b">glm::detail::compute_findLSB&lt; genIUType, Bits &gt;</link><link linkend="_structglm_1_1detail_1_1compute__find_m_s_b__step__vec">glm::detail::compute_findMSB_step_vec&lt; L, T, Q, EXEC &gt;</link><link linkend="_structglm_1_1detail_1_1compute__find_m_s_b__step__vec_3_01_l_00_01_t_00_01_q_00_01false_01_4">glm::detail::compute_findMSB_step_vec&lt; L, T, Q, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__find_m_s_b__vec">glm::detail::compute_findMSB_vec&lt; L, T, Q, int &gt;</link><link linkend="_structglm_1_1detail_1_1compute__floor">glm::detail::compute_floor&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__floor_multiple">glm::detail::compute_floorMultiple&lt; is_float, is_signed &gt;</link><link linkend="_structglm_1_1detail_1_1compute__floor_multiple_3_01false_00_01false_01_4">glm::detail::compute_floorMultiple&lt; false, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__floor_multiple_3_01false_00_01true_01_4">glm::detail::compute_floorMultiple&lt; false, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__floor_multiple_3_01true_00_01true_01_4">glm::detail::compute_floorMultiple&lt; true, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__fmod">glm::detail::compute_fmod&lt; L, T, Q, isFloat &gt;</link><link linkend="_structglm_1_1detail_1_1compute__fmod_3_01_l_00_01_t_00_01_q_00_01false_01_4">glm::detail::compute_fmod&lt; L, T, Q, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__fract">glm::detail::compute_fract&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__half">glm::detail::compute_half&lt; L, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__half_3_011_00_01_q_01_4">glm::detail::compute_half&lt; 1, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__half_3_012_00_01_q_01_4">glm::detail::compute_half&lt; 2, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__half_3_013_00_01_q_01_4">glm::detail::compute_half&lt; 3, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__half_3_014_00_01_q_01_4">glm::detail::compute_half&lt; 4, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inverse">glm::detail::compute_inverse&lt; C, R, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inverse_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_inverse&lt; 2, 2, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inverse_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_inverse&lt; 3, 3, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inverse_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_inverse&lt; 4, 4, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inversesqrt">glm::detail::compute_inversesqrt&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__inversesqrt_3_01_l_00_01float_00_01lowp_00_01_aligned_01_4">glm::detail::compute_inversesqrt&lt; L, float, lowp, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__is_comp_null">glm::detail::compute_isCompNull&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__is_comp_null_3_012_00_01_t_00_01_q_01_4">glm::detail::compute_isCompNull&lt; 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__is_comp_null_3_013_00_01_t_00_01_q_01_4">glm::detail::compute_isCompNull&lt; 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__is_comp_null_3_014_00_01_t_00_01_q_01_4">glm::detail::compute_isCompNull&lt; 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__length">glm::detail::compute_length&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__length2">glm::detail::compute_length2&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand">glm::detail::compute_linearRand&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01double_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, double, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01float_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, float, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int16_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, int16, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int32_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, int32, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int64_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, int64, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01int8_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, int8, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01long_01double_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, long double, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint16_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, uint16, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint32_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, uint32, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint64_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, uint64, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__linear_rand_3_01_l_00_01uint8_00_01_q_01_4">glm::detail::compute_linearRand&lt; L, uint8, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__log2">glm::detail::compute_log2&lt; L, T, Q, isFloat, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__log2_3_01_l_00_01_t_00_01_q_00_01false_00_01_aligned_01_4">glm::detail::compute_log2&lt; L, T, Q, false, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__matrix_comp_mult">glm::detail::compute_matrixCompMult&lt; C, R, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__max__vector">glm::detail::compute_max_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__min__vector">glm::detail::compute_min_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix">glm::detail::compute_mix&lt; T, U &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix_3_01_t_00_01bool_01_4">glm::detail::compute_mix&lt; T, bool &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix__scalar">glm::detail::compute_mix_scalar&lt; L, T, U, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix__scalar_3_01_l_00_01_t_00_01bool_00_01_q_00_01_aligned_01_4">glm::detail::compute_mix_scalar&lt; L, T, bool, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix__vector">glm::detail::compute_mix_vector&lt; L, T, U, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mix__vector_3_01_l_00_01_t_00_01bool_00_01_q_00_01_aligned_01_4">glm::detail::compute_mix_vector&lt; L, T, bool, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__mod">glm::detail::compute_mod&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__normalize">glm::detail::compute_normalize&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__quat__add">glm::detail::compute_quat_add&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__quat__div__scalar">glm::detail::compute_quat_div_scalar&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__quat__mul__scalar">glm::detail::compute_quat_mul_scalar&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__quat__mul__vec4">glm::detail::compute_quat_mul_vec4&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__quat__sub">glm::detail::compute_quat_sub&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand">glm::detail::compute_rand&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_011_00_01uint8_00_01_p_01_4">glm::detail::compute_rand&lt; 1, uint8, P &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_012_00_01uint8_00_01_p_01_4">glm::detail::compute_rand&lt; 2, uint8, P &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_013_00_01uint8_00_01_p_01_4">glm::detail::compute_rand&lt; 3, uint8, P &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_014_00_01uint8_00_01_p_01_4">glm::detail::compute_rand&lt; 4, uint8, P &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint16_00_01_q_01_4">glm::detail::compute_rand&lt; L, uint16, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint32_00_01_q_01_4">glm::detail::compute_rand&lt; L, uint32, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rand_3_01_l_00_01uint64_00_01_q_01_4">glm::detail::compute_rand&lt; L, uint64, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__reflect">glm::detail::compute_reflect&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__refract">glm::detail::compute_refract&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb">glm::detail::compute_rgbToSrgb&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__rgb_to_srgb_3_014_00_01_t_00_01_q_01_4">glm::detail::compute_rgbToSrgb&lt; 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__round">glm::detail::compute_round&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__round_multiple">glm::detail::compute_roundMultiple&lt; is_float, is_signed &gt;</link><link linkend="_structglm_1_1detail_1_1compute__round_multiple_3_01false_00_01false_01_4">glm::detail::compute_roundMultiple&lt; false, false &gt;</link><link linkend="_structglm_1_1detail_1_1compute__round_multiple_3_01false_00_01true_01_4">glm::detail::compute_roundMultiple&lt; false, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__round_multiple_3_01true_00_01true_01_4">glm::detail::compute_roundMultiple&lt; true, true &gt;</link><link linkend="_structglm_1_1detail_1_1compute__sign">glm::detail::compute_sign&lt; L, T, Q, isFloat, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__smoothstep__vector">glm::detail::compute_smoothstep_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__sqrt">glm::detail::compute_sqrt&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb">glm::detail::compute_srgbToRgb&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__srgb_to_rgb_3_014_00_01_t_00_01_q_01_4">glm::detail::compute_srgbToRgb&lt; 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1compute__step__vector">glm::detail::compute_step_vector&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string">glm::detail::compute_to_string&lt; matType &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_012_00_012_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 2, 2, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_012_00_013_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 2, 3, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_012_00_014_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 2, 4, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_013_00_012_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 3, 2, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_013_00_013_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 3, 3, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_013_00_014_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 3, 4, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_014_00_012_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 4, 2, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_014_00_013_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 4, 3, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01mat_3_014_00_014_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; mat&lt; 4, 4, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01qua_3_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; qua&lt; T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01tdualquat_3_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; tdualquat&lt; T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_011_00_01bool_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 1, bool, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_011_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 1, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_012_00_01bool_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 2, bool, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_012_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 2, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_013_00_01bool_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 3, bool, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_013_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 3, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_014_00_01bool_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 4, bool, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__to__string_3_01vec_3_014_00_01_t_00_01_q_01_4_01_4">glm::detail::compute_to_string&lt; vec&lt; 4, T, Q &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose">glm::detail::compute_transpose&lt; C, R, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_012_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 2, 2, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_013_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 2, 3, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_012_00_014_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 2, 4, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_012_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 3, 2, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_013_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 3, 3, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_013_00_014_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 3, 4, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_012_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 4, 2, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_013_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 4, 3, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__transpose_3_014_00_014_00_01_t_00_01_q_00_01_aligned_01_4">glm::detail::compute_transpose&lt; 4, 4, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__trunc">glm::detail::compute_trunc&lt; L, T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__add">glm::detail::compute_vec4_add&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__and">glm::detail::compute_vec4_and&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__bitwise__not">glm::detail::compute_vec4_bitwise_not&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__div">glm::detail::compute_vec4_div&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__equal">glm::detail::compute_vec4_equal&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__mod">glm::detail::compute_vec4_mod&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__mul">glm::detail::compute_vec4_mul&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__nequal">glm::detail::compute_vec4_nequal&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__or">glm::detail::compute_vec4_or&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__shift__left">glm::detail::compute_vec4_shift_left&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__shift__right">glm::detail::compute_vec4_shift_right&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__sub">glm::detail::compute_vec4_sub&lt; T, Q, Aligned &gt;</link><link linkend="_structglm_1_1detail_1_1compute__vec4__xor">glm::detail::compute_vec4_xor&lt; T, Q, IsInt, Size, Aligned &gt;</link><link linkend="_classglm_1_1compute___y_co_cg_r">glm::compute_YCoCgR&lt; T, Q, isInteger &gt;</link><link linkend="_classglm_1_1compute___y_co_cg_r_3_01_t_00_01_q_00_01true_01_4">glm::compute_YCoCgR&lt; T, Q, true &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1cond__dealtor">__gnu_pbds::detail::cond_dealtor&lt; HT_Map &gt;</link>
<para>Conditional dey destructor, cc_hash </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e_1_1cond__dtor">__gnu_pbds::detail::PB_DS_OV_TREE_NAME&lt; Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc &gt;::cond_dtor&lt; Size_Type &gt;</link>
<para>Conditional destructor </para>
<link linkend="_class_config_reader">ConfigReader</link><link linkend="_structlest_1_1confirm">lest::confirm</link><link linkend="_structnlohmann_1_1detail_1_1conjunction">nlohmann::detail::conjunction&lt;... &gt;</link><link linkend="_structnlohmann_1_1detail_1_1conjunction_3_01_b_01_4">nlohmann::detail::conjunction&lt; B &gt;</link><link linkend="_structnlohmann_1_1detail_1_1conjunction_3_01_b_00_01_bn_8_8_8_01_4">nlohmann::detail::conjunction&lt; B, Bn... &gt;</link><link linkend="_class_console_g_u_i">ConsoleGUI</link><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1const__iterator">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::const_iterator</link>
<para>Constant child iterator </para>
<link linkend="_struct____gnu__parallel_1_1constant__size__blocks__tag">__gnu_parallel::constant_size_blocks_tag</link>
<para>Selects the constant block size variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, Tag, Policy_Tl &gt;</link>
<para>Dispatch mechanism, primary template for associative types </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al37861ffb0528b90cab369d8b8960163c">__gnu_pbds::detail::container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, binary_heap_tag, null_type &gt;</link>
<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1binary__heap">binary_heap</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al19c216fe3a86010e73492807b4354cfa">__gnu_pbds::detail::container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, binomial_heap_tag, null_type &gt;</link>
<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1binomial__heap">binomial_heap</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___alc29b69f8068aa2441994f87aebbb3279">__gnu_pbds::detail::container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, pairing_heap_tag, null_type &gt;</link>
<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1pairing__heap">pairing_heap</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___alf98c308f678ad23dcebe3688d3927a3d">__gnu_pbds::detail::container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, rc_binomial_heap_tag, null_type &gt;</link>
<para>Specialization for rc_binary_heap </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01___v_tp_00_01_cmp___fn_00_01___al953aead33394a76b1192f354b74b6676">__gnu_pbds::detail::container_base_dispatch&lt; _VTp, Cmp_Fn, _Alloc, thin_heap_tag, null_type &gt;</link>
<para>Specialization for <link linkend="_class____gnu__pbds_1_1detail_1_1thin__heap">thin_heap</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0c752f7a6a0630d25cc5d2b6e76c497aa">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, cc_hash_tag, Policy_Tl &gt;</link>
<para>Specialization colision-chaining hash map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_039aeaebdf9e76fd54f1f510fe3ce8c82">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, gp_hash_tag, Policy_Tl &gt;</link>
<para>Specialization general-probe hash map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_01589d62579bd19ab70472fda7714567c">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, list_update_tag, Policy_Tl &gt;</link>
<para>Specialization for list-update map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0ff23436d829fea3451deed72617ea958">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, ov_tree_tag, Policy_Tl &gt;</link>
<para>Specialization ordered-vector tree map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0df9e72aaa3ae6262ab36aa6ae0a0fdff">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, pat_trie_tag, Policy_Tl &gt;</link>
<para>Specialization for PATRICIA trie map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_05cb6d4796a494537901eb4b008e59a67">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, rb_tree_tag, Policy_Tl &gt;</link>
<para>Specialization for R-B tree map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01_mapped_00_01___alloc_0ac163f881c6e7b815b35febcc9434b88">__gnu_pbds::detail::container_base_dispatch&lt; Key, Mapped, _Alloc, splay_tree_tag, Policy_Tl &gt;</link>
<para>Specialization splay tree map </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo86b341bcb1e6df4cdbc8f2aa018eab0e">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, cc_hash_tag, Policy_Tl &gt;</link>
<para>Specialization colision-chaining hash set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo4b80034740337ccfa0b06f47a9bcbcee">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, gp_hash_tag, Policy_Tl &gt;</link>
<para>Specialization general-probe hash set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo4fcd243a5c57ee5b9b3e68f910a01f94">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, list_update_tag, Policy_Tl &gt;</link>
<para>Specialization for list-update set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo12def814d176af14fee3c1966fb721cb">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, ov_tree_tag, Policy_Tl &gt;</link>
<para>Specialization ordered-vector tree set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___alloba4932bd6cb51c8a5c1665e03c380a02">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, pat_trie_tag, Policy_Tl &gt;</link>
<para>Specialization for PATRICIA trie set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allod8211a08e2f3440aa0b1da1b634b4458">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, rb_tree_tag, Policy_Tl &gt;</link>
<para>Specialization for R-B tree set </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1container__base__dispatch_3_01_key_00_01null__type_00_01___allo3904b579c8b740d90bafd5850b8839f6">__gnu_pbds::detail::container_base_dispatch&lt; Key, null_type, _Alloc, splay_tree_tag, Policy_Tl &gt;</link>
<para>Specialization splay tree set </para>
<link linkend="_struct____gnu__pbds_1_1container__error">__gnu_pbds::container_error</link>
<para>Base class for exceptions </para>
<link linkend="_structnlohmann_1_1detail_1_1container__input__adapter__factory__impl_1_1container__input__adapter__factory">nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory&lt; ContainerType, Enable &gt;</link><link linkend="_structnlohmann_1_1detail_1_1container__input__adapter__factory__impl_1_1container__input__adaptec6d36799bbab06a12576748f72ebcf00">nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory&lt; ContainerType, void_t&lt; decltype(begin(std::declval&lt; ContainerType &gt;()), end(std::declval&lt; ContainerType &gt;()))&gt; &gt;</link><link linkend="_struct____gnu__pbds_1_1container__tag">__gnu_pbds::container_tag</link>
<para>Base data structure tag </para>
<link linkend="_struct____gnu__pbds_1_1container__traits">__gnu_pbds::container_traits&lt; Cntnr &gt;</link>
<para>Container traits </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base">__gnu_pbds::container_traits_base&lt; _Tag &gt;</link>
<para>Primary template, container traits base </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binary__heap__tag_01_4">__gnu_pbds::container_traits_base&lt; binary_heap_tag &gt;</link>
<para>Specialization, binary heap </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01binomial__heap__tag_01_4">__gnu_pbds::container_traits_base&lt; binomial_heap_tag &gt;</link>
<para>Specialization, binomial heap </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01cc__hash__tag_01_4">__gnu_pbds::container_traits_base&lt; cc_hash_tag &gt;</link>
<para>Specialization, cc hash </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01gp__hash__tag_01_4">__gnu_pbds::container_traits_base&lt; gp_hash_tag &gt;</link>
<para>Specialization, gp hash </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01list__update__tag_01_4">__gnu_pbds::container_traits_base&lt; list_update_tag &gt;</link>
<para>Specialization, list update </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01ov__tree__tag_01_4">__gnu_pbds::container_traits_base&lt; ov_tree_tag &gt;</link>
<para>Specialization, ov tree </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pairing__heap__tag_01_4">__gnu_pbds::container_traits_base&lt; pairing_heap_tag &gt;</link>
<para>Specialization, pairing heap </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01pat__trie__tag_01_4">__gnu_pbds::container_traits_base&lt; pat_trie_tag &gt;</link>
<para>Specialization, pat trie </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rb__tree__tag_01_4">__gnu_pbds::container_traits_base&lt; rb_tree_tag &gt;</link>
<para>Specialization, rb tree </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01rc__binomial__heap__tag_01_4">__gnu_pbds::container_traits_base&lt; rc_binomial_heap_tag &gt;</link>
<para>Specialization, rc binomial heap </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01splay__tree__tag_01_4">__gnu_pbds::container_traits_base&lt; splay_tree_tag &gt;</link>
<para>Specialization, splay tree </para>
<link linkend="_struct____gnu__pbds_1_1container__traits__base_3_01thin__heap__tag_01_4">__gnu_pbds::container_traits_base&lt; thin_heap_tag &gt;</link>
<para>Specialization, thin heap </para>
<link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_contains_matcher">Catch::Matchers::StdString::ContainsMatcher</link><link linkend="_structcopy__cv__">copy_cv_&lt; Dest, Src &gt;</link><link linkend="_structcopy__cv___3_01_dest_00_01const_01_src_01_4">copy_cv_&lt; Dest, const Src &gt;</link><link linkend="_structcopy__cv___3_01_dest_00_01const_01volatile_01_src_01_4">copy_cv_&lt; Dest, const volatile Src &gt;</link><link linkend="_structcopy__cv___3_01_dest_00_01volatile_01_src_01_4">copy_cv_&lt; Dest, volatile Src &gt;</link><link linkend="_structcopy__ref__">copy_ref_&lt; Dest, Src &gt;</link><link linkend="_structcopy__ref___3_01_dest_00_01_src_01_6_01_4">copy_ref_&lt; Dest, Src &amp; &gt;</link><link linkend="_structcopy__ref___3_01_dest_00_01_src_01_6_6_01_4">copy_ref_&lt; Dest, Src &amp;&amp; &gt;</link><link linkend="_struct_core_data">CoreData</link><link linkend="_structlest_1_1count">lest::count</link><link linkend="_struct_catch_1_1_counts">Catch::Counts</link><link linkend="_struct_c_r_cscan">CRCscan</link><link linkend="_structlest_1_1ctx">lest::ctx</link><link linkend="_struct_cube_chunk3_d">CubeChunk3D</link><link linkend="_struct_global_1_1_mesh_tools_1_1_cube_verticies">Global::MeshTools::CubeVerticies</link><link linkend="_structdate__time">date_time</link>
<para>A date-time </para>
<link linkend="_class_debugger">Debugger</link><link linkend="_class_debug_object">DebugObject</link><link linkend="_struct_catch_1_1_decomposer">Catch::Decomposer</link><link linkend="_struct____gnu__pbds_1_1detail_1_1default__comb__hash__fn">__gnu_pbds::detail::default_comb_hash_fn</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__comb__hash__fn">default_comb_hash_fn</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn">__gnu_pbds::detail::default_eq_fn&lt; Key &gt;</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__eq__fn">default_eq_fn</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__hash__fn">__gnu_pbds::detail::default_hash_fn&lt; Key &gt;</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__hash__fn">default_hash_fn</link> </para>
<link linkend="_struct____gnu__parallel_1_1default__parallel__tag">__gnu_parallel::default_parallel_tag</link>
<para>Recommends parallel execution using the default parallel algorithm </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn">__gnu_pbds::detail::default_probe_fn&lt; Comb_Probe_Fn &gt;</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__probe__fn">default_probe_fn</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy">__gnu_pbds::detail::default_resize_policy&lt; Comb_Hash_Fn &gt;</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__resize__policy">default_resize_policy</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">__gnu_pbds::detail::default_trie_access_traits&lt; Key &gt;</link>
<para>Primary template, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits_3_01____dtrie__string_01_4">__gnu_pbds::detail::default_trie_access_traits&lt; __dtrie_string &gt;</link>
<para>Partial specialization, <link linkend="_struct____gnu__pbds_1_1detail_1_1default__trie__access__traits">default_trie_access_traits</link> </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1default__update__policy">__gnu_pbds::detail::default_update_policy</link>
<para>Default update policy </para>
<link linkend="_structglm_1_1io_1_1delimeter">glm::io::delimeter&lt; CTy &gt;</link><link linkend="_structdepth__counter__scope">depth_counter_scope</link><link linkend="_structnlohmann_1_1detail_1_1detector">nlohmann::detail::detector&lt; Default, AlwaysVoid, Op, Args &gt;</link><link linkend="_structnlohmann_1_1detail_1_1detector_3_01_default_00_01void__t_3_01_op_3_01_args_8_8_8_01_4_01_4_00_01_op_00_01_args_8_8_8_01_4">nlohmann::detail::detector&lt; Default, void_t&lt; Op&lt; Args... &gt; &gt;, Op, Args... &gt;</link><link linkend="_struct_d_i_c_o_n_d_i_t_i_o_n">DICONDITION</link><link linkend="_struct_d_i_c_o_n_s_t_a_n_t_f_o_r_c_e">DICONSTANTFORCE</link><link linkend="_struct_d_i_c_u_s_t_o_m_f_o_r_c_e">DICUSTOMFORCE</link><link linkend="_struct_d_i_d_e_v_c_a_p_s">DIDEVCAPS</link><link linkend="_struct_d_i_d_e_v_c_a_p_s___d_x3">DIDEVCAPS_DX3</link><link linkend="_struct_d_i_d_e_v_i_c_e_i_n_s_t_a_n_c_e___d_x3_a">DIDEVICEINSTANCE_DX3A</link><link linkend="_struct_d_i_d_e_v_i_c_e_i_n_s_t_a_n_c_e___d_x3_w">DIDEVICEINSTANCE_DX3W</link><link linkend="_struct_d_i_d_e_v_i_c_e_i_n_s_t_a_n_c_e_a">DIDEVICEINSTANCEA</link><link linkend="_struct_d_i_d_e_v_i_c_e_i_n_s_t_a_n_c_e_w">DIDEVICEINSTANCEW</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_d_a_t_a">DIDEVICEOBJECTDATA</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_d_a_t_a___d_x3">DIDEVICEOBJECTDATA_DX3</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_i_n_s_t_a_n_c_e___d_x3_a">DIDEVICEOBJECTINSTANCE_DX3A</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_i_n_s_t_a_n_c_e___d_x3_w">DIDEVICEOBJECTINSTANCE_DX3W</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_i_n_s_t_a_n_c_e_a">DIDEVICEOBJECTINSTANCEA</link><link linkend="_struct_d_i_d_e_v_i_c_e_o_b_j_e_c_t_i_n_s_t_a_n_c_e_w">DIDEVICEOBJECTINSTANCEW</link><link linkend="_struct_d_i_e_f_f_e_c_t">DIEFFECT</link><link linkend="_struct_d_i_e_f_f_e_c_t___d_x5">DIEFFECT_DX5</link><link linkend="_struct_d_i_e_f_f_e_c_t_i_n_f_o_a">DIEFFECTINFOA</link><link linkend="_struct_d_i_e_f_f_e_c_t_i_n_f_o_w">DIEFFECTINFOW</link><link linkend="_struct_d_i_e_f_f_e_s_c_a_p_e">DIEFFESCAPE</link><link linkend="_struct_d_i_e_n_v_e_l_o_p_e">DIENVELOPE</link><link linkend="_struct_d_i_f_i_l_e_e_f_f_e_c_t">DIFILEEFFECT</link><link linkend="_struct_d_i_j_o_y_s_t_a_t_e">DIJOYSTATE</link><link linkend="_struct_d_i_j_o_y_s_t_a_t_e2">DIJOYSTATE2</link><link linkend="_struct_d_i_m_o_u_s_e_s_t_a_t_e">DIMOUSESTATE</link><link linkend="_struct_d_i_m_o_u_s_e_s_t_a_t_e2">DIMOUSESTATE2</link><link linkend="_struct_d_i_p_e_r_i_o_d_i_c">DIPERIODIC</link><link linkend="_struct_d_i_p_r_o_p_c_a_l">DIPROPCAL</link><link linkend="_struct_d_i_p_r_o_p_c_a_l_p_o_v">DIPROPCALPOV</link><link linkend="_struct_d_i_p_r_o_p_c_p_o_i_n_t_s">DIPROPCPOINTS</link><link linkend="_struct_d_i_p_r_o_p_d_w_o_r_d">DIPROPDWORD</link><link linkend="_struct_d_i_p_r_o_p_g_u_i_d_a_n_d_p_a_t_h">DIPROPGUIDANDPATH</link><link linkend="_struct_d_i_p_r_o_p_h_e_a_d_e_r">DIPROPHEADER</link><link linkend="_struct_d_i_p_r_o_p_p_o_i_n_t_e_r">DIPROPPOINTER</link><link linkend="_struct_d_i_p_r_o_p_r_a_n_g_e">DIPROPRANGE</link><link linkend="_struct_d_i_p_r_o_p_s_t_r_i_n_g">DIPROPSTRING</link><link linkend="_struct_d_i_r">DIR</link><link linkend="_struct_d_i_r_a_m_p_f_o_r_c_e">DIRAMPFORCE</link><link linkend="_class____gnu__pbds_1_1direct__mask__range__hashing">__gnu_pbds::direct_mask_range_hashing&lt; Size_Type &gt;</link>
<para>A mask range-hashing class (uses a bitmask) </para>
<link linkend="_class____gnu__pbds_1_1direct__mod__range__hashing">__gnu_pbds::direct_mod_range_hashing&lt; Size_Type &gt;</link>
<para>A mod range-hashing class (uses the modulo function) </para>
<link linkend="_class_directional_light_component">DirectionalLightComponent</link><link linkend="_structdirent">dirent</link><link linkend="_structdrflac">drflac</link><link linkend="_structdrflac____memory__stream">drflac__memory_stream</link><link linkend="_structdrflac__allocation__callbacks">drflac_allocation_callbacks</link><link linkend="_structdrflac__bs">drflac_bs</link><link linkend="_structdrflac__cuesheet__track">drflac_cuesheet_track</link><link linkend="_structdrflac__cuesheet__track__index">drflac_cuesheet_track_index</link><link linkend="_structdrflac__cuesheet__track__iterator">drflac_cuesheet_track_iterator</link><link linkend="_structdrflac__frame">drflac_frame</link><link linkend="_structdrflac__frame__header">drflac_frame_header</link><link linkend="_structdrflac__metadata">drflac_metadata</link><link linkend="_structdrflac__seekpoint">drflac_seekpoint</link><link linkend="_structdrflac__streaminfo">drflac_streaminfo</link><link linkend="_structdrflac__subframe">drflac_subframe</link><link linkend="_structdrflac__vorbis__comment__iterator">drflac_vorbis_comment_iterator</link><link linkend="_structdrmp3">drmp3</link><link linkend="_structdrmp3__allocation__callbacks">drmp3_allocation_callbacks</link><link linkend="_structdrmp3__config">drmp3_config</link><link linkend="_structdrmp3__seek__point">drmp3_seek_point</link><link linkend="_structdrmp3__src">drmp3_src</link><link linkend="_structdrmp3__src__cache">drmp3_src_cache</link><link linkend="_structdrmp3__src__config">drmp3_src_config</link><link linkend="_structdrmp3dec">drmp3dec</link><link linkend="_structdrmp3dec__frame__info">drmp3dec_frame_info</link><link linkend="_structdrwav">drwav</link><link linkend="_structdrwav____memory__stream">drwav__memory_stream</link><link linkend="_structdrwav____memory__stream__write">drwav__memory_stream_write</link><link linkend="_structdrwav__acid">drwav_acid</link><link linkend="_structdrwav__allocation__callbacks">drwav_allocation_callbacks</link><link linkend="_structdrwav__bext">drwav_bext</link><link linkend="_structdrwav__chunk__header">drwav_chunk_header</link><link linkend="_structdrwav__cue">drwav_cue</link><link linkend="_structdrwav__cue__point">drwav_cue_point</link><link linkend="_structdrwav__data__format">drwav_data_format</link><link linkend="_structdrwav__fmt">drwav_fmt</link><link linkend="_structdrwav__inst">drwav_inst</link><link linkend="_structdrwav__list__info__text">drwav_list_info_text</link><link linkend="_structdrwav__list__label__or__note">drwav_list_label_or_note</link><link linkend="_structdrwav__list__labelled__cue__region">drwav_list_labelled_cue_region</link><link linkend="_structdrwav__metadata">drwav_metadata</link><link linkend="_structdrwav__smpl">drwav_smpl</link><link linkend="_structdrwav__smpl__loop">drwav_smpl_loop</link><link linkend="_structdrwav__unknown__metadata">drwav_unknown_metadata</link><link linkend="_struct_global_1_1_dual_vec3">Global::DualVec3</link><link linkend="_struct____gnu__pbds_1_1detail_1_1dumnode__const__iterator">__gnu_pbds::detail::dumnode_const_iterator&lt; Key, Data, _Alloc &gt;</link>
<para>Constant node iterator </para>
<link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link><link linkend="_struct_e_g_l_client_pixmap_h_i">EGLClientPixmapHI</link><link linkend="_structemplaced__type__of__">emplaced_type_of_&lt; T &gt;</link><link linkend="_structemplaced__type__of___3_01inserter_3_01_t_01_4_01_4">emplaced_type_of_&lt; inserter&lt; T &gt; &gt;</link><link linkend="_structemplaced__type__of___3_01_t_01_4">emplaced_type_of_&lt; T &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_ends_with_matcher">Catch::Matchers::StdString::EndsWithMatcher</link><link linkend="_structmix___1_1entry">mix_::entry&lt; T, B &gt;</link><link linkend="_structstep___1_1entry">step_::entry&lt; EDGE, VEC &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp">__gnu_pbds::detail::entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, No_Throw &gt;</link>
<para>Entry compare, primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp_3_01___v_tp_00_01_cmp___fn_00_01___alloc_00_01false_01_4">__gnu_pbds::detail::entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, false &gt;</link>
<para>Specialization, false </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp_3_01___v_tp_00_01_cmp___fn_00_01___alloc_00_01true_01_4">__gnu_pbds::detail::entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, true &gt;</link>
<para>Specialization, true </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred">__gnu_pbds::detail::entry_pred&lt; _VTp, Pred, _Alloc, No_Throw &gt;</link>
<para>Entry predicate primary class template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred_3_01___v_tp_00_01_pred_00_01___alloc_00_01false_01_4">__gnu_pbds::detail::entry_pred&lt; _VTp, Pred, _Alloc, false &gt;</link>
<para>Specialization, false </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred_3_01___v_tp_00_01_pred_00_01___alloc_00_01true_01_4">__gnu_pbds::detail::entry_pred&lt; _VTp, Pred, _Alloc, true &gt;</link>
<para>Specialization, true </para>
<link linkend="_struct_catch_1_1_detail_1_1_enum_info">Catch::Detail::EnumInfo</link><link linkend="_structlest_1_1env">lest::env</link><link linkend="_struct____gnu__pbds_1_1detail_1_1eq__by__less">__gnu_pbds::detail::eq_by_less&lt; Key, Cmp_Fn &gt;</link>
<para>Equivalence function </para>
<link linkend="_struct____gnu__parallel_1_1equal__split__tag">__gnu_parallel::equal_split_tag</link>
<para>Selects the equal splitting variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> </para>
<link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher">Catch::Matchers::StdString::EqualsMatcher</link><link linkend="_class_erosion_maker">ErosionMaker</link><link linkend="_structerror__builder">error_builder</link><link linkend="_union_errorcode">Errorcode</link><link linkend="_structescaped__codepoint">escaped_codepoint</link><link linkend="_struct____gnu__parallel_1_1exact__tag">__gnu_parallel::exact_tag</link>
<para>Forces parallel merging with exact splitting, at compile time </para>
<link linkend="_classnlohmann_1_1detail_1_1exception">nlohmann::detail::exception</link>
<para>General exception of the <link linkend="_classnlohmann_1_1basic__json">basic_json</link> class </para>
<link linkend="_classstd_1_1exception">std::exception</link>
<para>Base class for all library exceptions </para>
<link linkend="_classstd_1_1____exception__ptr_1_1exception__ptr">std::__exception_ptr::exception_ptr</link>
<para>An opaque pointer to an arbitrary exception </para>
<link linkend="_class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher">Catch::Matchers::Exception::ExceptionMessageMatcher</link><link linkend="_class_catch_1_1_exception_translator_registrar">Catch::ExceptionTranslatorRegistrar</link><link linkend="_structlest_1_1expected">lest::expected</link><link linkend="_structlest_1_1expression__decomposer">lest::expression_decomposer</link><link linkend="_structlest_1_1expression__lhs">lest::expression_lhs&lt; L &gt;</link><link linkend="_class_catch_1_1_expr_lhs">Catch::ExprLhs&lt; LhsT &gt;</link><link linkend="_structnlohmann_1_1detail_1_1utility__internal_1_1_extend">nlohmann::detail::utility_internal::Extend&lt; Seq, SeqSize, Rem &gt;</link><link linkend="_structnlohmann_1_1detail_1_1utility__internal_1_1_extend_3_01integer__sequence_3_01_t_00_01_intse4b696320406a0717efa9a961a507d9c">nlohmann::detail::utility_internal::Extend&lt; integer_sequence&lt; T, Ints... &gt;, SeqSize, 0 &gt;</link><link linkend="_structnlohmann_1_1detail_1_1utility__internal_1_1_extend_3_01integer__sequence_3_01_t_00_01_ints55b30810c0f772136f5c0a2221b86a09">nlohmann::detail::utility_internal::Extend&lt; integer_sequence&lt; T, Ints... &gt;, SeqSize, 1 &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor">nlohmann::detail::external_constructor&lt; value_t &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1array_01_4">nlohmann::detail::external_constructor&lt; value_t::array &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1binary_01_4">nlohmann::detail::external_constructor&lt; value_t::binary &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1boolean_01_4">nlohmann::detail::external_constructor&lt; value_t::boolean &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1number__float_01_4">nlohmann::detail::external_constructor&lt; value_t::number_float &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1number__integer_01_4">nlohmann::detail::external_constructor&lt; value_t::number_integer &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1number__unsigned_01_4">nlohmann::detail::external_constructor&lt; value_t::number_unsigned &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1object_01_4">nlohmann::detail::external_constructor&lt; value_t::object &gt;</link><link linkend="_structnlohmann_1_1detail_1_1external__constructor_3_01value__t_1_1string_01_4">nlohmann::detail::external_constructor&lt; value_t::string &gt;</link><link linkend="_structlest_1_1failure">lest::failure</link><link linkend="_class_f_b_o">FBO</link><link linkend="_class_file_manager">FileManager</link><link linkend="_struct_file_path_list">FilePathList</link><link linkend="_class_catch_1_1_generators_1_1_filter_generator">Catch::Generators::FilterGenerator&lt; T, Predicate &gt;</link><link linkend="_struct____gnu__parallel_1_1find__tag">__gnu_parallel::find_tag</link>
<para>Base class for for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> variants </para>
<link linkend="_class_catch_1_1_generators_1_1_fixed_values_generator">Catch::Generators::FixedValuesGenerator&lt; T &gt;</link><link linkend="_class_flashlight">Flashlight</link><link linkend="_structfloat16">float16</link><link linkend="_structfloat3">float3</link><link linkend="_unionfloat__conv">float_conv</link><link linkend="_unionglm_1_1detail_1_1float__t">glm::detail::float_t&lt; T &gt;</link><link linkend="_unionglm_1_1detail_1_1float__t_3_01double_01_4">glm::detail::float_t&lt; double &gt;</link><link linkend="_unionglm_1_1detail_1_1float__t_3_01float_01_4">glm::detail::float_t&lt; float &gt;</link><link linkend="_structfloat__traits">float_traits&lt; T &gt;</link><link linkend="_structfloat__traits__base">float_traits_base&lt; T, MantissaDigits, DecimalDigits &gt;</link><link linkend="_union_floor">Floor</link><link linkend="_struct_floor0">Floor0</link><link linkend="_struct_floor1">Floor1</link><link linkend="_struct_font">Font</link><link linkend="_classglm_1_1io_1_1format__punct">glm::io::format_punct&lt; CTy &gt;</link><link linkend="_classformatter">formatter</link><link linkend="_structformatter__config">formatter_config</link><link linkend="_struct_f_poly_vox_vector">FPolyVoxVector</link><link linkend="_classfree__list">free_list</link><link linkend="_classfunction__view">function_view&lt; Func &gt;</link><link linkend="_classfunction__view_3_01_r_07_p_8_8_8_08_4">function_view&lt; R(P...)&gt;</link><link linkend="_structglm_1_1detail_1_1functor1">glm::detail::functor1&lt; vec, L, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor1_3_01vec_00_011_00_01_r_00_01_t_00_01_q_01_4">glm::detail::functor1&lt; vec, 1, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor1_3_01vec_00_012_00_01_r_00_01_t_00_01_q_01_4">glm::detail::functor1&lt; vec, 2, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor1_3_01vec_00_013_00_01_r_00_01_t_00_01_q_01_4">glm::detail::functor1&lt; vec, 3, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor1_3_01vec_00_014_00_01_r_00_01_t_00_01_q_01_4">glm::detail::functor1&lt; vec, 4, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2">glm::detail::functor2&lt; vec, L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2_3_01vec_00_011_00_01_t_00_01_q_01_4">glm::detail::functor2&lt; vec, 1, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2_3_01vec_00_012_00_01_t_00_01_q_01_4">glm::detail::functor2&lt; vec, 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2_3_01vec_00_013_00_01_t_00_01_q_01_4">glm::detail::functor2&lt; vec, 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2_3_01vec_00_014_00_01_t_00_01_q_01_4">glm::detail::functor2&lt; vec, 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__int">glm::detail::functor2_vec_int&lt; L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__int_3_011_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_int&lt; 1, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__int_3_012_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_int&lt; 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__int_3_013_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_int&lt; 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__int_3_014_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_int&lt; 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__sca">glm::detail::functor2_vec_sca&lt; vec, L, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__sca_3_01vec_00_011_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_sca&lt; vec, 1, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__sca_3_01vec_00_012_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_sca&lt; vec, 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__sca_3_01vec_00_013_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_sca&lt; vec, 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1functor2__vec__sca_3_01vec_00_014_00_01_t_00_01_q_01_4">glm::detail::functor2_vec_sca&lt; vec, 4, T, Q &gt;</link><link linkend="_class_fx_man">FxMan</link><link linkend="_class_game">Game</link><link linkend="_class_game_obj2_d">GameObj2D</link><link linkend="_class_game_object">GameObject</link><link linkend="_class_game_shader">GameShader</link><link linkend="_structnlohmann_1_1detail_1_1utility__internal_1_1_gen">nlohmann::detail::utility_internal::Gen&lt; T, N &gt;</link><link linkend="_structnlohmann_1_1detail_1_1utility__internal_1_1_gen_3_01_t_00_010_01_4">nlohmann::detail::utility_internal::Gen&lt; T, 0 &gt;</link><link linkend="_class_generator">Generator</link><link linkend="_class_catch_1_1_generator_exception">Catch::GeneratorException</link><link linkend="_class_catch_1_1_generators_1_1_generators">Catch::Generators::Generators&lt; T &gt;</link><link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">Catch::Generators::GeneratorUntypedBase</link><link linkend="_class_catch_1_1_generators_1_1_generator_wrapper">Catch::Generators::GeneratorWrapper&lt; T &gt;</link><link linkend="_structglm_1_1detail_1_1gen_type_trait">glm::detail::genTypeTrait&lt; genType &gt;</link><link linkend="_structglm_1_1detail_1_1gen_type_trait_3_01mat_3_01_c_00_01_r_00_01_t_01_4_01_4">glm::detail::genTypeTrait&lt; mat&lt; C, R, T &gt; &gt;</link><link linkend="_structglm_1_1detail_1_1gen_type_trait_3_01qua_3_01_t_01_4_01_4">glm::detail::genTypeTrait&lt; qua&lt; T &gt; &gt;</link><link linkend="_struct_gesture_event">GestureEvent</link><link linkend="_class_gizmo">Gizmo</link><link linkend="_struct_gizmo_data">GizmoData</link><link linkend="_structglad_g_lversion_struct">gladGLversionStruct</link><link linkend="_struct_g_l_f_wallocator">GLFWallocator</link><link linkend="_interface_g_l_f_w_application_delegate">GLFWApplicationDelegate</link><link linkend="_interface_g_l_f_w_content_view">GLFWContentView</link><link linkend="_struct_g_l_f_wgamepadstate">GLFWgamepadstate</link>
<para>Gamepad input state </para>
<link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link>
<para>Gamma ramp </para>
<link linkend="_interface_g_l_f_w_helper">GLFWHelper</link><link linkend="_struct_g_l_f_wimage">GLFWimage</link>
<para><link linkend="_struct_image">Image</link> data </para>
<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>
<para>Video mode type </para>
<link linkend="_interface_g_l_f_w_window">GLFWWindow</link><link linkend="_interface_g_l_f_w_window_delegate">GLFWWindowDelegate</link><link linkend="_struct_glyph_info">GlyphInfo</link><link linkend="_structlest_1_1got">lest::got</link><link linkend="_structlest_1_1got__none">lest::got_none</link><link linkend="_class____gnu__pbds_1_1gp__hash__table">__gnu_pbds::gp_hash_table&lt; Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1gp__hash__tag">__gnu_pbds::gp_hash_tag</link>
<para>General-probing hash </para>
<link linkend="_class_grid">Grid</link><link linkend="_struct____gnu__parallel_1_1growing__blocks__tag">__gnu_parallel::growing_blocks_tag</link>
<para>Selects the growing block size variant for <link linkend="_namespacestd_1ae3e398a3f38b0182e770944d57402701">std::find()</link> </para>
<link linkend="_structlest_1_1guard">lest::guard</link><link linkend="_class_gui">Gui</link><link linkend="_class_g_u_i">GUI</link><link linkend="_class_gun">Gun</link><link linkend="_structnlohmann_1_1detail_1_1has__from__json">nlohmann::detail::has_from_json&lt; BasicJsonType, T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__from__json_3_01_basic_json_type_00_01_t_00_01enable__if__t_3_01f77b5e367f2d5612b4276a155bf11896">nlohmann::detail::has_from_json&lt; BasicJsonType, T, enable_if_t&lt; !is_basic_json&lt; T &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__key__compare">nlohmann::detail::has_key_compare&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__non__default__from__json">nlohmann::detail::has_non_default_from_json&lt; BasicJsonType, T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__non__default__from__json_3_01_basic_json_type_00_01_t_00_01enab072547deb606b69b2d65cb910e223bb8">nlohmann::detail::has_non_default_from_json&lt; BasicJsonType, T, enable_if_t&lt; !is_basic_json&lt; T &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__to__json">nlohmann::detail::has_to_json&lt; BasicJsonType, T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1has__to__json_3_01_basic_json_type_00_01_t_00_01enable__if__t_3_01_96b7bbbe462cd4ff87697dab3bc993a77">nlohmann::detail::has_to_json&lt; BasicJsonType, T, enable_if_t&lt; !is_basic_json&lt; T &gt;::value &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_012_00_012_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 2, 2, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_012_00_013_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 2, 3, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_012_00_014_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 2, 4, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_013_00_012_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 3, 2, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_013_00_013_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 3, 3, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_013_00_014_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 3, 4, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_014_00_012_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 4, 2, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_014_00_013_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 4, 3, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1mat_3_014_00_014_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::mat&lt; 4, 4, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1qua_3_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::qua&lt; T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1tdualquat_3_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::tdualquat&lt; T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1vec_3_011_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::vec&lt; 1, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1vec_3_012_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::vec&lt; 2, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1vec_3_013_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::vec&lt; 3, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01glm_1_1vec_3_014_00_01_t_00_01_q_01_4_01_4">std::hash&lt; glm::vec&lt; 4, T, Q &gt; &gt;</link><link linkend="_structstd_1_1hash_3_01nlohmann_1_1_n_l_o_h_m_a_n_n___b_a_s_i_c___j_s_o_n___t_p_l_01_4">std::hash&lt; nlohmann::NLOHMANN_BASIC_JSON_TPL &gt;</link>
<para>Hash value for JSON objects </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn">__gnu_pbds::detail::hash_eq_fn&lt; Key, Eq_Fn, _Alloc, Store_Hash &gt;</link>
<para>Primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01false_01_4">__gnu_pbds::detail::hash_eq_fn&lt; Key, Eq_Fn, _Alloc, false &gt;</link>
<para>Specialization 1 - The client requests that hash values not be stored </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1hash__eq__fn_3_01_key_00_01_eq___fn_00_01___alloc_00_01true_01_4">__gnu_pbds::detail::hash_eq_fn&lt; Key, Eq_Fn, _Alloc, true &gt;</link>
<para>Specialization 2 - The client requests that hash values be stored </para>
<link linkend="_class____gnu__pbds_1_1hash__exponential__size__policy">__gnu_pbds::hash_exponential_size_policy&lt; Size_Type &gt;</link><link linkend="_class____gnu__pbds_1_1hash__load__check__resize__trigger">__gnu_pbds::hash_load_check_resize_trigger&lt; External_Load_Access, Size_Type &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base">__gnu_pbds::detail::hash_load_check_resize_trigger_size_base&lt; Size_Type, Hold_Size &gt;</link>
<para>Primary template </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base_3_01_size___type_00_01false_01_4">__gnu_pbds::detail::hash_load_check_resize_trigger_size_base&lt; Size_Type, false &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1hash__load__check__resize__trigger__size__base_3_01_size___type_00_01true_01_4">__gnu_pbds::detail::hash_load_check_resize_trigger_size_base&lt; Size_Type, true &gt;</link>
<para>Specializations </para>
<link linkend="_class____gnu__pbds_1_1hash__prime__size__policy">__gnu_pbds::hash_prime_size_policy</link><link linkend="_class____gnu__pbds_1_1hash__standard__resize__policy">__gnu_pbds::hash_standard_resize_policy&lt; Size_Policy, Trigger_Policy, External_Size_Access, Size_Type &gt;</link>
<para>A resize policy which delegates operations to size and trigger policies </para>
<link linkend="_class_health_bar">HealthBar</link><link linkend="_class_health_g_u_i">HealthGUI</link><link linkend="_struct_height_and_gradient">HeightAndGradient</link><link linkend="_class_height_map">HeightMap</link><link linkend="_unionglm_1_1detail_1_1i10i10i10i2">glm::detail::i10i10i10i2</link><link linkend="_struct_catch_1_1_i_context">Catch::IContext</link><link linkend="_unionieee__double__shape__type">ieee_double_shape_type</link><link linkend="_unionieee__float__shape__type">ieee_float_shape_type</link><link linkend="_struct_catch_1_1_i_exception_translator">Catch::IExceptionTranslator</link><link linkend="_struct_catch_1_1_i_exception_translator_registry">Catch::IExceptionTranslatorRegistry</link><link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator&lt; T &gt;</link><link linkend="_struct_catch_1_1_i_generator_tracker">Catch::IGeneratorTracker</link><link linkend="_struct_image">Image</link><link linkend="_struct_catch_1_1_i_mutable_context">Catch::IMutableContext</link><link linkend="_struct_catch_1_1_i_mutable_enum_values_registry">Catch::IMutableEnumValuesRegistry</link><link linkend="_classm_i_n_i_1_1_i_n_i_file">mINI::INIFile</link><link linkend="_classm_i_n_i_1_1_i_n_i_generator">mINI::INIGenerator</link><link linkend="_classm_i_n_i_1_1_i_n_i_map">mINI::INIMap&lt; T &gt;</link><link linkend="_classm_i_n_i_1_1_i_n_i_reader">mINI::INIReader</link><link linkend="_structglm_1_1detail_1_1init__gentype">glm::detail::init_gentype&lt; genType, type &gt;</link><link linkend="_structglm_1_1detail_1_1init__gentype_3_01gen_type_00_01_g_e_n_t_y_p_e___m_a_t_01_4">glm::detail::init_gentype&lt; genType, GENTYPE_MAT &gt;</link><link linkend="_structglm_1_1detail_1_1init__gentype_3_01gen_type_00_01_g_e_n_t_y_p_e___q_u_a_t_01_4">glm::detail::init_gentype&lt; genType, GENTYPE_QUAT &gt;</link><link linkend="_classm_i_n_i_1_1_i_n_i_writer">mINI::INIWriter</link><link linkend="_struct____gnu__pbds_1_1insert__error">__gnu_pbds::insert_error</link><link linkend="_structinserted__type__of___3_01inserter_3_01_t_01_4_00_01false_01_4">inserted_type_of_&lt; inserter&lt; T &gt;, false &gt;</link><link linkend="_structinserted__type__of___3_01_t_00_01false_01_4">inserted_type_of_&lt; T, false &gt;</link><link linkend="_structinserter">inserter&lt; T &gt;</link>
<para>Helper class for suppressing move-construction in single-argument array constructors </para>
<link linkend="_structinteger__limits">integer_limits&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1integer__sequence">nlohmann::detail::integer_sequence&lt; T, Ints &gt;</link><link linkend="_structinteger__traits">integer_traits&lt; T, S &gt;</link><link linkend="_structinteger__traits_3_01_t_00_01false_01_4">integer_traits&lt; T, false &gt;</link><link linkend="_structinteger__traits__base">integer_traits_base&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1internal__iterator">nlohmann::detail::internal_iterator&lt; BasicJsonType &gt;</link>
<para>Iterator value </para>
<link linkend="_struct_global_1_1int_vec2">Global::intVec2</link><link linkend="_struct_global_1_1int_vec3">Global::intVec3</link><link linkend="_classnlohmann_1_1detail_1_1invalid__iterator">nlohmann::detail::invalid_iterator</link>
<para>Exception indicating errors with iterators </para>
<link linkend="_struct_i_p_address">IPAddress</link><link linkend="_struct_catch_1_1_i_result_capture">Catch::IResultCapture</link><link linkend="_structglm_1_1detail_1_1is__aligned">glm::detail::is_aligned&lt; P &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__basic__json">nlohmann::detail::is_basic_json&lt; typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__basic__json_3_01_n_l_o_h_m_a_n_n___b_a_s_i_c___j_s_o_n___t_p_l_01_4">nlohmann::detail::is_basic_json&lt; NLOHMANN_BASIC_JSON_TPL &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__basic__json__context">nlohmann::detail::is_basic_json_context&lt; BasicJsonContext &gt;</link><link linkend="_struct_catch_1_1is__callable">Catch::is_callable&lt; T &gt;</link><link linkend="_struct_catch_1_1is__callable_3_01_fun_07_args_8_8_8_08_4">Catch::is_callable&lt; Fun(Args...)&gt;</link><link linkend="_struct_catch_1_1is__callable__tester">Catch::is_callable_tester</link><link linkend="_structnlohmann_1_1detail_1_1is__comparable">nlohmann::detail::is_comparable&lt; Compare, A, B, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__comparable_3_01_compare_00_01_a_00_01_b_00_01void__t_3_01decltyp6bff7c45329e18ae2528d499d1a5477d">nlohmann::detail::is_comparable&lt; Compare, A, B, void_t&lt; decltype(std::declval&lt; Compare &gt;()(std::declval&lt; A &gt;(), std::declval&lt; B &gt;())), decltype(std::declval&lt; Compare &gt;()(std::declval&lt; B &gt;(), std::declval&lt; A &gt;()))&gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__array__type">nlohmann::detail::is_compatible_array_type&lt; BasicJsonType, CompatibleArrayType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__array__type__impl">nlohmann::detail::is_compatible_array_type_impl&lt; BasicJsonType, CompatibleArrayType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__array__type__impl_3_01_basic_json_type_00_01_compati4915acc171fa5fb7ebfebe0b9b6c0be2">nlohmann::detail::is_compatible_array_type_impl&lt; BasicJsonType, CompatibleArrayType, enable_if_t&lt; is_detected&lt; iterator_t, CompatibleArrayType &gt;::value &amp;&amp;is_iterator_traits&lt; iterator_traits&lt; detected_t&lt; iterator_t, CompatibleArrayType &gt; &gt; &gt;::value &amp;&amp;!std::is_same&lt; CompatibleArrayType, detected_t&lt; range_value_t, CompatibleArrayType &gt; &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__integer__type">nlohmann::detail::is_compatible_integer_type&lt; RealIntegerType, CompatibleNumberIntegerType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__integer__type__impl">nlohmann::detail::is_compatible_integer_type_impl&lt; RealIntegerType, CompatibleNumberIntegerType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__integer__type__impl_3_01_real_integer_type_00_01_combbf637f45e4984de1d118b9d7a65e604">nlohmann::detail::is_compatible_integer_type_impl&lt; RealIntegerType, CompatibleNumberIntegerType, enable_if_t&lt; std::is_integral&lt; RealIntegerType &gt;::value &amp;&amp;std::is_integral&lt; CompatibleNumberIntegerType &gt;::value &amp;&amp;!std::is_same&lt; bool, CompatibleNumberIntegerType &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__object__type">nlohmann::detail::is_compatible_object_type&lt; BasicJsonType, CompatibleObjectType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__object__type__impl">nlohmann::detail::is_compatible_object_type_impl&lt; BasicJsonType, CompatibleObjectType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__object__type__impl_3_01_basic_json_type_00_01_compat5b5eeaa8fc54c99a69d765462ac539f5">nlohmann::detail::is_compatible_object_type_impl&lt; BasicJsonType, CompatibleObjectType, enable_if_t&lt; is_detected&lt; mapped_type_t, CompatibleObjectType &gt;::value &amp;&amp;is_detected&lt; key_type_t, CompatibleObjectType &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__string__type">nlohmann::detail::is_compatible_string_type&lt; BasicJsonType, CompatibleStringType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__type">nlohmann::detail::is_compatible_type&lt; BasicJsonType, CompatibleType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__type__impl">nlohmann::detail::is_compatible_type_impl&lt; BasicJsonType, CompatibleType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__compatible__type__impl_3_01_basic_json_type_00_01_compatible_typ632bee7ec037fc0233f1bbe9dd7d8874">nlohmann::detail::is_compatible_type_impl&lt; BasicJsonType, CompatibleType, enable_if_t&lt; is_complete_type&lt; CompatibleType &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__complete__type">nlohmann::detail::is_complete_type&lt; T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__complete__type_3_01_t_00_01decltype_07void_07sizeof_07_t_08_08_08_4">nlohmann::detail::is_complete_type&lt; T, decltype(void(sizeof(T)))&gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__pointer">__gnu_pbds::detail::is_const_pointer&lt; T &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1is__const__reference">__gnu_pbds::detail::is_const_reference&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible">nlohmann::detail::is_constructible&lt; T, Args &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible_3_01const_01std_1_1pair_3_01_t1_00_01_t2_01_4_01_4">nlohmann::detail::is_constructible&lt; const std::pair&lt; T1, T2 &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible_3_01const_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4">nlohmann::detail::is_constructible&lt; const std::tuple&lt; Ts... &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible_3_01std_1_1pair_3_01_t1_00_01_t2_01_4_01_4">nlohmann::detail::is_constructible&lt; std::pair&lt; T1, T2 &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4">nlohmann::detail::is_constructible&lt; std::tuple&lt; Ts... &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__array__type">nlohmann::detail::is_constructible_array_type&lt; BasicJsonType, ConstructibleArrayType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__array__type__impl">nlohmann::detail::is_constructible_array_type_impl&lt; BasicJsonType, ConstructibleArrayType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__array__type__impl_3_01_basic_json_type_00_01_cons27075d101b6ea0a206984ee0c21ea5d0">nlohmann::detail::is_constructible_array_type_impl&lt; BasicJsonType, ConstructibleArrayType, enable_if_t&lt; !std::is_same&lt; ConstructibleArrayType, typename BasicJsonType::value_type &gt;::value &amp;&amp;!is_compatible_string_type&lt; BasicJsonType, ConstructibleArrayType &gt;::value &amp;&amp;is_default_constructible&lt; ConstructibleArrayType &gt;::value &amp;&amp;(std::is_move_assignable&lt; ConstructibleArrayType &gt;::value||std::is_copy_assignable&lt; ConstructibleArrayType &gt;::value)&amp;&amp;is_detected&lt; iterator_t, ConstructibleArrayType &gt;::value &amp;&amp;is_iterator_traits&lt; iterator_traits&lt; detected_t&lt; iterator_t, ConstructibleArrayType &gt; &gt; &gt;::value &amp;&amp;is_detected&lt; range_value_t, ConstructibleArrayType &gt;::value &amp;&amp;!std::is_same&lt; ConstructibleArrayType, detected_t&lt; range_value_t, ConstructibleArrayType &gt; &gt;::value &amp;&amp;is_complete_type&lt; detected_t&lt; range_value_t, ConstructibleArrayType &gt; &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__array__type__impl_3_01_basic_json_type_00_01_cons8cf88e17d5eaa68665a8fb4b97604b0e">nlohmann::detail::is_constructible_array_type_impl&lt; BasicJsonType, ConstructibleArrayType, enable_if_t&lt; std::is_same&lt; ConstructibleArrayType, typename BasicJsonType::value_type &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__object__type">nlohmann::detail::is_constructible_object_type&lt; BasicJsonType, ConstructibleObjectType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__object__type__impl">nlohmann::detail::is_constructible_object_type_impl&lt; BasicJsonType, ConstructibleObjectType, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__object__type__impl_3_01_basic_json_type_00_01_con1038de539babd212ea0aef1cc5752545">nlohmann::detail::is_constructible_object_type_impl&lt; BasicJsonType, ConstructibleObjectType, enable_if_t&lt; is_detected&lt; mapped_type_t, ConstructibleObjectType &gt;::value &amp;&amp;is_detected&lt; key_type_t, ConstructibleObjectType &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__string__type">nlohmann::detail::is_constructible_string_type&lt; BasicJsonType, ConstructibleStringType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__tuple">nlohmann::detail::is_constructible_tuple&lt; T1, T2 &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__constructible__tuple_3_01_t1_00_01std_1_1tuple_3_01_args_8_8_8_01_4_01_4">nlohmann::detail::is_constructible_tuple&lt; T1, std::tuple&lt; Args... &gt; &gt;</link><link linkend="_structlest_1_1is__container">lest::is_container&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__default__constructible">nlohmann::detail::is_default_constructible&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__default__constructible_3_01const_01std_1_1pair_3_01_t1_00_01_t2_01_4_01_4">nlohmann::detail::is_default_constructible&lt; const std::pair&lt; T1, T2 &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__default__constructible_3_01const_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4">nlohmann::detail::is_default_constructible&lt; const std::tuple&lt; Ts... &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__default__constructible_3_01std_1_1pair_3_01_t1_00_01_t2_01_4_01_4">nlohmann::detail::is_default_constructible&lt; std::pair&lt; T1, T2 &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__default__constructible_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4">nlohmann::detail::is_default_constructible&lt; std::tuple&lt; Ts... &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__detected__lazy">nlohmann::detail::is_detected_lazy&lt; Op, Args &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy">__pstl::execution::is_execution_policy&lt; _Tp &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy">__pstl::execution::v1::is_execution_policy&lt; _Tp &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1parallel__policy_01_4">__pstl::execution::is_execution_policy&lt; __pstl::execution::parallel_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1parallel__policy_01_4">__pstl::execution::v1::is_execution_policy&lt; __pstl::execution::parallel_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1parallel__unsequenced__policy_01_4">__pstl::execution::is_execution_policy&lt; __pstl::execution::parallel_unsequenced_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1parallel__unsequenced__policy_01_4">__pstl::execution::v1::is_execution_policy&lt; __pstl::execution::parallel_unsequenced_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1sequenced__policy_01_4">__pstl::execution::is_execution_policy&lt; __pstl::execution::sequenced_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1sequenced__policy_01_4">__pstl::execution::v1::is_execution_policy&lt; __pstl::execution::sequenced_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1unsequenced__policy_01_4">__pstl::execution::is_execution_policy&lt; __pstl::execution::unsequenced_policy &gt;</link><link linkend="_struct____pstl_1_1execution_1_1v1_1_1is__execution__policy_3_01____pstl_1_1execution_1_1unsequenced__policy_01_4">__pstl::execution::v1::is_execution_policy&lt; __pstl::execution::unsequenced_policy &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__getable">nlohmann::detail::is_getable&lt; BasicJsonType, T &gt;</link><link linkend="_structglm_1_1detail_1_1is__int">glm::detail::is_int&lt; T &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01int16_01_4">glm::detail::is_int&lt; int16 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01int64_01_4">glm::detail::is_int&lt; int64 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01int8_01_4">glm::detail::is_int&lt; int8 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01signed_01int_01_4">glm::detail::is_int&lt; signed int &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01uint16_01_4">glm::detail::is_int&lt; uint16 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01uint64_01_4">glm::detail::is_int&lt; uint64 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01uint8_01_4">glm::detail::is_int&lt; uint8 &gt;</link><link linkend="_structglm_1_1detail_1_1is__int_3_01unsigned_01int_01_4">glm::detail::is_int&lt; unsigned int &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__iterator__traits">nlohmann::detail::is_iterator_traits&lt; T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__iterator__traits_3_01iterator__traits_3_01_t_01_4_01_4">nlohmann::detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__json__iterator__of">nlohmann::detail::is_json_iterator_of&lt; BasicJsonType, T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__json__iterator__of_3_01_basic_json_type_00_01typename_01_basic_jc41a391b8ae8087564ffc6f880172795">nlohmann::detail::is_json_iterator_of&lt; BasicJsonType, typename BasicJsonType::const_iterator &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__json__iterator__of_3_01_basic_json_type_00_01typename_01_basic_json_type_1_1iterator_01_4">nlohmann::detail::is_json_iterator_of&lt; BasicJsonType, typename BasicJsonType::iterator &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__json__ref">nlohmann::detail::is_json_ref&lt; typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__json__ref_3_01json__ref_3_01_t_01_4_01_4">nlohmann::detail::is_json_ref&lt; json_ref&lt; T &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__ordered__map">nlohmann::detail::is_ordered_map&lt; T &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1is__pair">__gnu_pbds::detail::is_pair&lt; T &gt;</link><link linkend="_struct_catch_1_1is__range">Catch::is_range&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__range">nlohmann::detail::is_range&lt; T &gt;</link><link linkend="_struct_catch_1_1detail_1_1is__range__impl">Catch::detail::is_range_impl&lt; T, typename &gt;</link><link linkend="_struct_catch_1_1detail_1_1is__range__impl_3_01_t_00_01typename_01void__type_3_01decltype_07begin8604ecb9de16ea7789f2f694ac896ffd">Catch::detail::is_range_impl&lt; T, typename void_type&lt; decltype(begin(std::declval&lt; T &gt;()))&gt;::type &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1is__simple">__gnu_pbds::detail::is_simple&lt; T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__specialization__of">nlohmann::detail::is_specialization_of&lt; Primary, T &gt;</link><link linkend="_structnlohmann_1_1detail_1_1is__specialization__of_3_01_primary_00_01_primary_3_01_args_8_8_8_01_4_01_4">nlohmann::detail::is_specialization_of&lt; Primary, Primary&lt; Args... &gt; &gt;</link><link linkend="_structlest_1_1is__streamable">lest::is_streamable&lt; T &gt;</link><link linkend="_class_i_simplex_noise">ISimplexNoise</link><link linkend="_class_catch_1_1_detail_1_1_is_stream_insertable">Catch::Detail::IsStreamInsertable&lt; T &gt;</link><link linkend="_struct_catch_1_1_i_stream">Catch::IStream</link><link linkend="_classnlohmann_1_1detail_1_1iter__impl">nlohmann::detail::iter_impl&lt; BasicJsonType &gt;</link>
<para>Template for a bidirectional iterator for the <link linkend="_classnlohmann_1_1basic__json">basic_json</link> class This class implements a both iterators (iterator and const_iterator) for the <link linkend="_classnlohmann_1_1basic__json">basic_json</link> class </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base_1_1___inode_1_1iterator">__gnu_pbds::detail::pat_trie_base::_Inode&lt; _ATraits, Metadata &gt;::iterator</link>
<para>Child iterator </para>
<link linkend="_structnlohmann_1_1detail_1_1iterator__traits">nlohmann::detail::iterator_traits&lt; T, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_01_5_00_01enable__if__t_3_01std_1_1is__objec8d960665487688165530972cda4f1bea">nlohmann::detail::iterator_traits&lt; T *, enable_if_t&lt; std::is_object&lt; T &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1iterator__traits_3_01_t_00_01enable__if__t_3_01_9std_1_1is__pointer_3_01_t_01_4_1_1value_01_4_01_4">nlohmann::detail::iterator_traits&lt; T, enable_if_t&lt; !std::is_pointer&lt; T &gt;::value &gt; &gt;</link><link linkend="_structnlohmann_1_1detail_1_1iterator__types">nlohmann::detail::iterator_types&lt; It, typename &gt;</link><link linkend="_structnlohmann_1_1detail_1_1iterator__types_3_01_it_00_01void__t_3_01typename_01_it_1_1differenc4a413e9bd546446175f10f15c5631361">nlohmann::detail::iterator_types&lt; It, void_t&lt; typename It::difference_type, typename It::value_type, typename It::pointer, typename It::reference, typename It::iterator_category &gt; &gt;</link><link linkend="_struct_catch_1_1_i_test_case_registry">Catch::ITestCaseRegistry</link><link linkend="_struct_catch_1_1_i_test_invoker">Catch::ITestInvoker</link><link linkend="_struct_catch_1_1_i_transient_expression">Catch::ITransientExpression</link><link linkend="_structjar__mod__context__t">jar_mod_context_t</link><link linkend="_structjar__mod__tracker__buffer__state__">jar_mod_tracker_buffer_state_</link><link linkend="_struct____gnu__pbds_1_1join__error">__gnu_pbds::join_error</link><link linkend="_classnlohmann_1_1json__pointer">nlohmann::json_pointer&lt; RefStringType &gt;</link>
<para>JSON Pointer defines a string syntax for identifying a specific value within a JSON document </para>
<link linkend="_classnlohmann_1_1detail_1_1json__ref">nlohmann::detail::json_ref&lt; BasicJsonType &gt;</link><link linkend="_classnlohmann_1_1detail_1_1json__reverse__iterator">nlohmann::detail::json_reverse_iterator&lt; Base &gt;</link>
<para>Template for a reverse iterator class </para>
<link linkend="_classnlohmann_1_1detail_1_1json__sax__acceptor">nlohmann::detail::json_sax_acceptor&lt; BasicJsonType &gt;</link><link linkend="_classnlohmann_1_1detail_1_1json__sax__dom__callback__parser">nlohmann::detail::json_sax_dom_callback_parser&lt; BasicJsonType &gt;</link><link linkend="_classnlohmann_1_1detail_1_1json__sax__dom__parser">nlohmann::detail::json_sax_dom_parser&lt; BasicJsonType &gt;</link>
<para>SAX implementation to create a JSON value from SAX events </para>
<link linkend="_class_catch_1_1_lazy_expression">Catch::LazyExpression</link><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap">__gnu_pbds::detail::left_child_next_sibling_heap&lt; Value_Type, Cmp_Fn, Node_Metadata, _Alloc &gt;</link>
<para>Base class for a basic heap </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_&lt; Node, _Alloc &gt;</link>
<para>Const point-type iterator </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__">__gnu_pbds::detail::left_child_next_sibling_heap_node_&lt; _Value, _Metadata, _Alloc &gt;</link>
<para>Node </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node___3_01___value_00_01null__type_00_01___alloc_01_4">__gnu_pbds::detail::left_child_next_sibling_heap_node_&lt; _Value, null_type, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1left__child__next__sibling__heap__node__point__const__iterator__">__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_&lt; Node, _Alloc &gt;</link>
<para>Const point-type iterator </para>
<link linkend="_structstd_1_1less_3_01_1_1nlohmann_1_1detail_1_1value__t_01_4">std::less&lt; ::nlohmann::detail::value_t &gt;</link><link linkend="_classnlohmann_1_1detail_1_1lexer">nlohmann::detail::lexer&lt; BasicJsonType, InputAdapterType &gt;</link>
<para>Lexical analysis </para>
<link linkend="_classnlohmann_1_1detail_1_1lexer__base">nlohmann::detail::lexer_base&lt; BasicJsonType &gt;</link><link linkend="_struct_light">Light</link><link linkend="_class_light_component">LightComponent</link><link linkend="_struct_light_component_data">LightComponentData</link><link linkend="_class_light_point_component">LightPointComponent</link><link linkend="_class____gnu__pbds_1_1linear__probe__fn">__gnu_pbds::linear_probe_fn&lt; Size_Type &gt;</link>
<para>A probe sequence policy using fixed increments </para>
<link linkend="_class____gnu__pbds_1_1list__update">__gnu_pbds::list_update&lt; Key, Mapped, Eq_Fn, Update_Policy, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1list__update__tag">__gnu_pbds::list_update_tag</link>
<para>List-update </para>
<link linkend="_class_listable">Listable</link><link linkend="_structglm_1_1detail_1_1literal">glm::detail::literal&lt; T, isFloat &gt;</link><link linkend="_structglm_1_1detail_1_1literal_3_01_t_00_01true_01_4">glm::detail::literal&lt; T, true &gt;</link><link linkend="_structlest_1_1location">lest::location</link><link linkend="_class_logman">Logman</link><link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__metadata">__gnu_pbds::detail::lu_counter_metadata&lt; Size_Type &gt;</link><link linkend="_class____gnu__pbds_1_1lu__counter__policy">__gnu_pbds::lu_counter_policy&lt; Max_Count, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1lu__counter__policy__base">__gnu_pbds::detail::lu_counter_policy_base&lt; Size_Type &gt;</link>
<para>Base class for list-update counter policy </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1lu__map__entry__metadata__base">__gnu_pbds::detail::lu_map_entry_metadata_base&lt; Metadata &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1lu__map__entry__metadata__base_3_01null__type_01_4">__gnu_pbds::detail::lu_map_entry_metadata_base&lt; null_type &gt;</link><link linkend="_class____gnu__pbds_1_1lu__move__to__front__policy">__gnu_pbds::lu_move_to_front_policy&lt; _Alloc &gt;</link><link linkend="_structm3d__t">m3d_t</link><link linkend="_structm3da__t">m3da_t</link><link linkend="_structm3db__t">m3db_t</link><link linkend="_structm3dc__t">m3dc_t</link><link linkend="_structm3dcd__t">m3dcd_t</link><link linkend="_structm3df__t">m3df_t</link><link linkend="_structm3dfr__t">m3dfr_t</link><link linkend="_structm3dh__t">m3dh_t</link><link linkend="_structm3di__t">m3di_t</link><link linkend="_structm3dl__t">m3dl_t</link><link linkend="_structm3dm__t">m3dm_t</link><link linkend="_structm3dp__t">m3dp_t</link><link linkend="_structm3dpd__t">m3dpd_t</link><link linkend="_structm3ds__t">m3ds_t</link><link linkend="_structm3dti__t">m3dti_t</link><link linkend="_structm3dtr__t">m3dtr_t</link><link linkend="_structm3dtx__t">m3dtx_t</link><link linkend="_structm3dv__t">m3dv_t</link><link linkend="_structm3dvi__t">m3dvi_t</link><link linkend="_structm3dvt__t">m3dvt_t</link><link linkend="_structm3dvx__t">m3dvx_t</link><link linkend="_structm3dw__t">m3dw_t</link><link linkend="_structma__allocation__callbacks">ma_allocation_callbacks</link><link linkend="_structma__async__notification__callbacks">ma_async_notification_callbacks</link><link linkend="_structma__async__notification__event">ma_async_notification_event</link><link linkend="_structma__async__notification__poll">ma_async_notification_poll</link><link linkend="_structma__atomic__vec3f">ma_atomic_vec3f</link><link linkend="_structma__audio__buffer">ma_audio_buffer</link><link linkend="_structma__audio__buffer__config">ma_audio_buffer_config</link><link linkend="_structma__audio__buffer__ref">ma_audio_buffer_ref</link><link linkend="_structma__backend__callbacks">ma_backend_callbacks</link><link linkend="_structma__biquad">ma_biquad</link><link linkend="_unionma__biquad__coefficient">ma_biquad_coefficient</link><link linkend="_structma__biquad__config">ma_biquad_config</link><link linkend="_structma__biquad__node">ma_biquad_node</link><link linkend="_structma__biquad__node__config">ma_biquad_node_config</link><link linkend="_structma__bpf">ma_bpf</link><link linkend="_structma__bpf2">ma_bpf2</link><link linkend="_structma__bpf2__config">ma_bpf2_config</link><link linkend="_structma__bpf__config">ma_bpf_config</link><link linkend="_structma__bpf__node">ma_bpf_node</link><link linkend="_structma__bpf__node__config">ma_bpf_node_config</link><link linkend="_structma__channel__converter">ma_channel_converter</link><link linkend="_structma__channel__converter__config">ma_channel_converter_config</link><link linkend="_structma__context">ma_context</link><link linkend="_structma__context__command____wasapi">ma_context_command__wasapi</link><link linkend="_structma__context__config">ma_context_config</link><link linkend="_structma__data__converter">ma_data_converter</link><link linkend="_structma__data__converter__config">ma_data_converter_config</link><link linkend="_structma__data__source__base">ma_data_source_base</link><link linkend="_structma__data__source__config">ma_data_source_config</link><link linkend="_structma__data__source__node">ma_data_source_node</link><link linkend="_structma__data__source__node__config">ma_data_source_node_config</link><link linkend="_structma__data__source__vtable">ma_data_source_vtable</link><link linkend="_structma__decoder">ma_decoder</link><link linkend="_structma__decoder__config">ma_decoder_config</link><link linkend="_structma__decoding__backend__config">ma_decoding_backend_config</link><link linkend="_structma__decoding__backend__vtable">ma_decoding_backend_vtable</link><link linkend="_structma__default__vfs">ma_default_vfs</link><link linkend="_structma__delay">ma_delay</link><link linkend="_structma__delay__config">ma_delay_config</link><link linkend="_structma__delay__node">ma_delay_node</link><link linkend="_structma__delay__node__config">ma_delay_node_config</link><link linkend="_structma__device">ma_device</link><link linkend="_structma__device__config">ma_device_config</link><link linkend="_structma__device__descriptor">ma_device_descriptor</link><link linkend="_unionma__device__id">ma_device_id</link><link linkend="_structma__device__info">ma_device_info</link><link linkend="_structma__device__job__thread">ma_device_job_thread</link><link linkend="_structma__device__job__thread__config">ma_device_job_thread_config</link><link linkend="_structma__device__notification">ma_device_notification</link><link linkend="_structma__duplex__rb">ma_duplex_rb</link><link linkend="_structma__encoder">ma_encoder</link><link linkend="_structma__encoder__config">ma_encoder_config</link><link linkend="_structma__engine">ma_engine</link><link linkend="_structma__engine__config">ma_engine_config</link><link linkend="_structma__engine__node">ma_engine_node</link><link linkend="_structma__engine__node__config">ma_engine_node_config</link><link linkend="_structma__event">ma_event</link><link linkend="_structma__fader">ma_fader</link><link linkend="_structma__fader__config">ma_fader_config</link><link linkend="_structma__fence">ma_fence</link><link linkend="_structma__file__info">ma_file_info</link><link linkend="_structma__gainer">ma_gainer</link><link linkend="_structma__gainer__config">ma_gainer_config</link><link linkend="_structma__hishelf2">ma_hishelf2</link><link linkend="_structma__hishelf2__config">ma_hishelf2_config</link><link linkend="_structma__hishelf__node">ma_hishelf_node</link><link linkend="_structma__hishelf__node__config">ma_hishelf_node_config</link><link linkend="_structma__hpf">ma_hpf</link><link linkend="_structma__hpf1">ma_hpf1</link><link linkend="_structma__hpf1__config">ma_hpf1_config</link><link linkend="_structma__hpf2">ma_hpf2</link><link linkend="_structma__hpf__config">ma_hpf_config</link><link linkend="_structma__hpf__node">ma_hpf_node</link><link linkend="_structma__hpf__node__config">ma_hpf_node_config</link><link linkend="_structma__job">ma_job</link><link linkend="_structma__job__queue">ma_job_queue</link><link linkend="_structma__job__queue__config">ma_job_queue_config</link><link linkend="_structma__lcg">ma_lcg</link><link linkend="_structma__linear__resampler">ma_linear_resampler</link><link linkend="_structma__linear__resampler__config">ma_linear_resampler_config</link><link linkend="_structma__log">ma_log</link><link linkend="_structma__log__callback">ma_log_callback</link><link linkend="_structma__loshelf2">ma_loshelf2</link><link linkend="_structma__loshelf2__config">ma_loshelf2_config</link><link linkend="_structma__loshelf__node">ma_loshelf_node</link><link linkend="_structma__loshelf__node__config">ma_loshelf_node_config</link><link linkend="_structma__lpf">ma_lpf</link><link linkend="_structma__lpf1">ma_lpf1</link><link linkend="_structma__lpf1__config">ma_lpf1_config</link><link linkend="_structma__lpf2">ma_lpf2</link><link linkend="_structma__lpf__config">ma_lpf_config</link><link linkend="_structma__lpf__node">ma_lpf_node</link><link linkend="_structma__lpf__node__config">ma_lpf_node_config</link><link linkend="_structma__mutex">ma_mutex</link><link linkend="_structma__node__base">ma_node_base</link><link linkend="_structma__node__config">ma_node_config</link><link linkend="_structma__node__graph">ma_node_graph</link><link linkend="_structma__node__graph__config">ma_node_graph_config</link><link linkend="_structma__node__input__bus">ma_node_input_bus</link><link linkend="_structma__node__output__bus">ma_node_output_bus</link><link linkend="_structma__node__vtable">ma_node_vtable</link><link linkend="_structma__noise">ma_noise</link><link linkend="_structma__noise__config">ma_noise_config</link><link linkend="_structma__notch2">ma_notch2</link><link linkend="_structma__notch2__config">ma_notch2_config</link><link linkend="_structma__notch__node">ma_notch_node</link><link linkend="_structma__notch__node__config">ma_notch_node_config</link><link linkend="_structma__paged__audio__buffer">ma_paged_audio_buffer</link><link linkend="_structma__paged__audio__buffer__config">ma_paged_audio_buffer_config</link><link linkend="_structma__paged__audio__buffer__data">ma_paged_audio_buffer_data</link><link linkend="_structma__paged__audio__buffer__page">ma_paged_audio_buffer_page</link><link linkend="_structma__panner">ma_panner</link><link linkend="_structma__panner__config">ma_panner_config</link><link linkend="_structma__pcm__rb">ma_pcm_rb</link><link linkend="_structma__peak2">ma_peak2</link><link linkend="_structma__peak2__config">ma_peak2_config</link><link linkend="_structma__peak__node">ma_peak_node</link><link linkend="_structma__peak__node__config">ma_peak_node_config</link><link linkend="_structma__rb">ma_rb</link><link linkend="_structma__resampler">ma_resampler</link><link linkend="_structma__resampler__config">ma_resampler_config</link><link linkend="_structma__resampling__backend__vtable">ma_resampling_backend_vtable</link><link linkend="_structma__resource__manager">ma_resource_manager</link><link linkend="_structma__resource__manager__config">ma_resource_manager_config</link><link linkend="_structma__resource__manager__data__buffer">ma_resource_manager_data_buffer</link><link linkend="_structma__resource__manager__data__buffer__node">ma_resource_manager_data_buffer_node</link><link linkend="_structma__resource__manager__data__source">ma_resource_manager_data_source</link><link linkend="_structma__resource__manager__data__source__config">ma_resource_manager_data_source_config</link><link linkend="_structma__resource__manager__data__stream">ma_resource_manager_data_stream</link><link linkend="_structma__resource__manager__data__supply">ma_resource_manager_data_supply</link><link linkend="_structma__resource__manager__pipeline__notifications">ma_resource_manager_pipeline_notifications</link><link linkend="_structma__resource__manager__pipeline__stage__notification">ma_resource_manager_pipeline_stage_notification</link><link linkend="_structma__semaphore">ma_semaphore</link><link linkend="_structma__slot__allocator">ma_slot_allocator</link><link linkend="_structma__slot__allocator__config">ma_slot_allocator_config</link><link linkend="_structma__slot__allocator__group">ma_slot_allocator_group</link><link linkend="_structma__sound">ma_sound</link><link linkend="_structma__sound__config">ma_sound_config</link><link linkend="_structma__sound__inlined">ma_sound_inlined</link><link linkend="_structma__spatializer">ma_spatializer</link><link linkend="_structma__spatializer__config">ma_spatializer_config</link><link linkend="_structma__spatializer__listener">ma_spatializer_listener</link><link linkend="_structma__spatializer__listener__config">ma_spatializer_listener_config</link><link linkend="_structma__splitter__node">ma_splitter_node</link><link linkend="_structma__splitter__node__config">ma_splitter_node_config</link><link linkend="_structma__thread">ma_thread</link><link linkend="_unionma__timer">ma_timer</link><link linkend="_structma__vec3f">ma_vec3f</link><link linkend="_structma__vfs__callbacks">ma_vfs_callbacks</link><link linkend="_structma__waveform">ma_waveform</link><link linkend="_structma__waveform__config">ma_waveform_config</link><link linkend="_class_main">Main</link><link linkend="_class_main_menu">MainMenu</link><link linkend="_structlest_1_1make__tuple__string">lest::make_tuple_string&lt; TU, N &gt;</link><link linkend="_structlest_1_1make__tuple__string_3_01_t_u_00_010_01_4">lest::make_tuple_string&lt; TU, 0 &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned">glm::detail::make_unsigned&lt; genType &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01char_01_4">glm::detail::make_unsigned&lt; char &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01int_01_4">glm::detail::make_unsigned&lt; int &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01int64_01_4">glm::detail::make_unsigned&lt; int64 &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01long_01_4">glm::detail::make_unsigned&lt; long &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01short_01_4">glm::detail::make_unsigned&lt; short &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01signed_01char_01_4">glm::detail::make_unsigned&lt; signed char &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01uint64_01_4">glm::detail::make_unsigned&lt; uint64 &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01unsigned_01char_01_4">glm::detail::make_unsigned&lt; unsigned char &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01unsigned_01int_01_4">glm::detail::make_unsigned&lt; unsigned int &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01unsigned_01long_01_4">glm::detail::make_unsigned&lt; unsigned long &gt;</link><link linkend="_structglm_1_1detail_1_1make__unsigned_3_01unsigned_01short_01_4">glm::detail::make_unsigned&lt; unsigned short &gt;</link><link linkend="_structnlohmann_1_1detail_1_1make__void">nlohmann::detail::make_void&lt; Ts &gt;</link><link linkend="_class_catch_1_1_generators_1_1_map_generator">Catch::Generators::MapGenerator&lt; T, U, Func &gt;</link><link linkend="_struct_mapping">Mapping</link><link linkend="_struct_mapping_channel">MappingChannel</link><link linkend="_class_marching_cubes">MarchingCubes</link><link linkend="_structmask">mask&lt; Value &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1mask__based__range__hashing">__gnu_pbds::detail::mask_based_range_hashing&lt; Size_Type &gt;</link>
<para>Range hashing policy </para>
<link linkend="_structglm_1_1mat">glm::mat&lt; C, R, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_012_00_012_00_01_t_00_01_q_01_4">glm::mat&lt; 2, 2, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_012_00_013_00_01_t_00_01_q_01_4">glm::mat&lt; 2, 3, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_012_00_014_00_01_t_00_01_q_01_4">glm::mat&lt; 2, 4, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_013_00_012_00_01_t_00_01_q_01_4">glm::mat&lt; 3, 2, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_013_00_013_00_01_t_00_01_q_01_4">glm::mat&lt; 3, 3, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_013_00_014_00_01_t_00_01_q_01_4">glm::mat&lt; 3, 4, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_014_00_012_00_01_t_00_01_q_01_4">glm::mat&lt; 4, 2, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_014_00_013_00_01_t_00_01_q_01_4">glm::mat&lt; 4, 3, T, Q &gt;</link><link linkend="_structglm_1_1mat_3_014_00_014_00_01_t_00_01_q_01_4">glm::mat&lt; 4, 4, T, Q &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_all_of">Catch::Matchers::Impl::MatchAllOf&lt; ArgT &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">Catch::Matchers::Impl::MatcherBase&lt; T &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method">Catch::Matchers::Impl::MatcherMethod&lt; ObjectT &gt;</link><link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">Catch::Matchers::Impl::MatcherUntypedBase</link><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_not_of">Catch::Matchers::Impl::MatchNotOf&lt; ArgT &gt;</link><link linkend="_struct_material">Material</link><link linkend="_struct_material_map">MaterialMap</link><link linkend="_class_global_1_1_math">Global::Math</link><link linkend="_struct_matrix">Matrix</link><link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type">__gnu_pbds::detail::maybe_null_type&lt; Key, Mapped, _Alloc, Store_Hash &gt;</link>
<para>Base class for conditionally defining a static data member </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1maybe__null__type_3_01_key_00_01null__type_00_01___alloc_00_01_store___hash_01_4">__gnu_pbds::detail::maybe_null_type&lt; Key, null_type, _Alloc, Store_Hash &gt;</link>
<para>Specialization that defines a static data member of type <link linkend="_struct____gnu__pbds_1_1null__type">null_type</link> </para>
<link linkend="_struct_mem_node">MemNode</link><link linkend="_struct_mem_pool">MemPool</link><link linkend="_class_menu">Menu</link><link linkend="_class_menu_camera">MenuCamera</link><link linkend="_class_menu_camera_component">MenuCameraComponent</link><link linkend="_class_menu_r">MenuR</link><link linkend="_struct_mesh">Mesh</link><link linkend="_class_global_1_1_mesh_tools">Global::MeshTools</link><link linkend="_structlest_1_1message">lest::message</link><link linkend="_struct_catch_1_1_message_builder">Catch::MessageBuilder</link><link linkend="_struct_catch_1_1_message_info">Catch::MessageInfo</link><link linkend="_struct_catch_1_1_message_stream">Catch::MessageStream</link><link linkend="_class_metal___block">Metal_Block</link><link linkend="_class_mini_man">MiniMan</link><link linkend="_class____gnu__pbds_1_1detail_1_1mod__based__range__hashing">__gnu_pbds::detail::mod_based_range_hashing&lt; Size_Type &gt;</link>
<para>Mod based range hashing </para>
<link linkend="_struct_mode">Mode</link><link linkend="_struct_model">Model</link><link linkend="_struct_model_animation">ModelAnimation</link><link linkend="_structmodule">module</link><link linkend="_class_monitor">Monitor</link><link linkend="_struct_msf_cooked_frame">MsfCookedFrame</link><link linkend="_struct_msf_gif_buffer">MsfGifBuffer</link><link linkend="_struct_msf_gif_result">MsfGifResult</link>
<para>HEADER /// </para>
<link linkend="_struct_msf_gif_state">MsfGifState</link><link linkend="_struct____gnu__parallel_1_1multiway__mergesort__exact__tag">__gnu_parallel::multiway_mergesort_exact_tag</link>
<para>Forces parallel sorting using multiway mergesort with exact splitting at compile time </para>
<link linkend="_struct____gnu__parallel_1_1multiway__mergesort__sampling__tag">__gnu_parallel::multiway_mergesort_sampling_tag</link>
<para>Forces parallel sorting using multiway mergesort with splitting by sampling at compile time </para>
<link linkend="_struct____gnu__parallel_1_1multiway__mergesort__tag">__gnu_parallel::multiway_mergesort_tag</link>
<para>Forces parallel sorting using multiway mergesort at compile time </para>
<link linkend="_struct_music">Music</link><link linkend="_structmy__dvec4__aligned">my_dvec4_aligned</link><link linkend="_structmy__dvec4__packed">my_dvec4_packed</link><link linkend="_structmy__ivec4__aligned">my_ivec4_aligned</link><link linkend="_structmy__ivec4__packed">my_ivec4_packed</link><link linkend="_structmy__u8vec4__packed">my_u8vec4_packed</link><link linkend="_structmy__vec2">my_vec2</link><link linkend="_structmy__vec4__aligned">my_vec4_aligned</link><link linkend="_structmy__vec4__packed">my_vec4_packed</link><link linkend="_struct_catch_1_1_name_and_tags">Catch::NameAndTags</link><link linkend="_structnative__value__maker_3_01_t_00_01_t_01_4">native_value_maker&lt; T, T &gt;</link><link linkend="_structnative__value__traits">native_value_traits&lt; T, NodeType &gt;</link><link linkend="_structnlohmann_1_1detail_1_1negation">nlohmann::detail::negation&lt; B &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies">__gnu_pbds::detail::no_throw_copies&lt; Key, Mapped &gt;</link>
<para>Primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1no__throw__copies_3_01_key_00_01null__type_01_4">__gnu_pbds::detail::no_throw_copies&lt; Key, null_type &gt;</link>
<para>Specialization </para>
<link linkend="_structnode__type__getter">node_type_getter&lt; T &gt;</link><link linkend="_structnode__type__getter_3_01array_01_4">node_type_getter&lt; array &gt;</link><link linkend="_structnode__type__getter_3_01table_01_4">node_type_getter&lt; table &gt;</link><link linkend="_structnode__type__getter_3_01void_01_4">node_type_getter&lt; void &gt;</link><link linkend="_structnode__unwrapper">node_unwrapper&lt; T &gt;</link><link linkend="_structnode__unwrapper_3_01const_01value_3_01_t_01_4_01_4">node_unwrapper&lt; const value&lt; T &gt; &gt;</link><link linkend="_structnode__unwrapper_3_01const_01volatile_01value_3_01_t_01_4_01_4">node_unwrapper&lt; const volatile value&lt; T &gt; &gt;</link><link linkend="_structnode__unwrapper_3_01value_3_01_t_01_4_01_4">node_unwrapper&lt; value&lt; T &gt; &gt;</link><link linkend="_structnode__unwrapper_3_01volatile_01value_3_01_t_01_4_01_4">node_unwrapper&lt; volatile value&lt; T &gt; &gt;</link><link linkend="_classnode__view">node_view&lt; typename &gt;</link><link linkend="_structnode__wrapper">node_wrapper&lt; T &gt;</link><link linkend="_structnode__wrapper_3_01bool_01_4">node_wrapper&lt; bool &gt;</link><link linkend="_structnode__wrapper_3_01const_01_t_01_4">node_wrapper&lt; const T &gt;</link><link linkend="_structnode__wrapper_3_01const_01volatile_01_t_01_4">node_wrapper&lt; const volatile T &gt;</link><link linkend="_structnode__wrapper_3_01date_01_4">node_wrapper&lt; date &gt;</link><link linkend="_structnode__wrapper_3_01date__time_01_4">node_wrapper&lt; date_time &gt;</link><link linkend="_structnode__wrapper_3_01double_01_4">node_wrapper&lt; double &gt;</link><link linkend="_structnode__wrapper_3_01int64__t_01_4">node_wrapper&lt; int64_t &gt;</link><link linkend="_structnode__wrapper_3_01std_1_1string_01_4">node_wrapper&lt; std::string &gt;</link><link linkend="_structnode__wrapper_3_01time_01_4">node_wrapper&lt; time &gt;</link><link linkend="_structnode__wrapper_3_01volatile_01_t_01_4">node_wrapper&lt; volatile T &gt;</link><link linkend="_class_noise_calculator">NoiseCalculator</link><link linkend="_class_catch_1_1_non_copyable">Catch::NonCopyable</link><link linkend="_structnlohmann_1_1detail_1_1nonesuch">nlohmann::detail::nonesuch</link><link linkend="_structnote">note</link><link linkend="_struct_n_patch_info">NPatchInfo</link><link linkend="_struct____gnu__pbds_1_1null__node__update">__gnu_pbds::null_node_update&lt; _Tp1, _Tp2, _Tp3, _Tp4 &gt;</link>
<para>A null node updator, indicating that no node updates are required </para>
<link linkend="_struct____gnu__pbds_1_1null__type">__gnu_pbds::null_type</link>
<para>Represents no type, or absence of type, for template tricks </para>
<link linkend="_struct_game_object_1_1_obj_dim">GameObject::ObjDim</link><link linkend="_struct_object_shader">ObjectShader</link><link linkend="_struct_obj_pool">ObjPool</link><link linkend="_classoctree">octree</link><link linkend="_structomp__alloctrait__t">omp_alloctrait_t</link><link linkend="_structomp__lock__t">omp_lock_t</link><link linkend="_struct____gnu__parallel_1_1omp__loop__static__tag">__gnu_parallel::omp_loop_static_tag</link>
<para>Recommends parallel execution using OpenMP static load-balancing at compile time </para>
<link linkend="_struct____gnu__parallel_1_1omp__loop__tag">__gnu_parallel::omp_loop_tag</link>
<para>Recommends parallel execution using OpenMP dynamic load-balancing at compile time </para>
<link linkend="_structomp__nest__lock__t">omp_nest_lock_t</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__div">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::op_div</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__equal">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::op_equal</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__minus">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::op_minus</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__mul">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::op_mul</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_1_1op__plus">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, DUPLICATE_ELEMENTS &gt;::op_plus</link><link linkend="_structoption">option</link><link linkend="_structlest_1_1options">lest::options</link><link linkend="_structglm_1_1io_1_1order">glm::io::order</link><link linkend="_structnlohmann_1_1ordered__map">nlohmann::ordered_map&lt; Key, T, IgnoredLess, Allocator &gt;</link>
<para>Minimal map-like container that preserves insertion order </para>
<link linkend="_classnlohmann_1_1detail_1_1other__error">nlohmann::detail::other_error</link>
<para>Exception indicating other library errors </para>
<link linkend="_classnlohmann_1_1detail_1_1out__of__range">nlohmann::detail::out_of_range</link>
<para>Exception indicating access out of the defined range </para>
<link linkend="_structglm_1_1detail_1_1outer_product__trait">glm::detail::outerProduct_trait&lt; C, R, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_012_00_012_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 2, 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_012_00_013_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 2, 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_012_00_014_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 2, 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_013_00_012_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 3, 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_013_00_013_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 3, 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_013_00_014_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 3, 4, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_014_00_012_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 4, 2, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_014_00_013_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 4, 3, T, Q &gt;</link><link linkend="_structglm_1_1detail_1_1outer_product__trait_3_014_00_014_00_01_t_00_01_q_01_4">glm::detail::outerProduct_trait&lt; 4, 4, T, Q &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__const__it__">__gnu_pbds::detail::ov_tree_node_const_it_&lt; Value_Type, Metadata_Type, _Alloc &gt;</link>
<para>Const node reference </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1ov__tree__node__it__">__gnu_pbds::detail::ov_tree_node_it_&lt; Value_Type, Metadata_Type, _Alloc &gt;</link>
<para>Node reference </para>
<link linkend="_struct____gnu__pbds_1_1ov__tree__tag">__gnu_pbds::ov_tree_tag</link>
<para>Ordered-vector tree </para>
<link linkend="_struct_packet">Packet</link><link linkend="_class____gnu__pbds_1_1detail_1_1pairing__heap">__gnu_pbds::detail::pairing_heap&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1pairing__heap__tag">__gnu_pbds::pairing_heap_tag</link>
<para>Pairing-heap </para>
<link linkend="_structpar__shapes__mesh__s">par_shapes_mesh_s</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy">__pstl::execution::parallel_policy</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__policy">__pstl::execution::v1::parallel_policy</link><link linkend="_struct____gnu__parallel_1_1parallel__tag">__gnu_parallel::parallel_tag</link>
<para>Recommends parallel execution at compile time, optionally using a user-specified number of threads </para>
<link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">__pstl::execution::parallel_unsequenced_policy</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1parallel__unsequenced__policy">__pstl::execution::v1::parallel_unsequenced_policy</link><link linkend="_classnlohmann_1_1detail_1_1parse__error">nlohmann::detail::parse_error</link>
<para>Exception indicating a parse error </para>
<link linkend="_structparse__integer__traits_3_0110_01_4">parse_integer_traits&lt; 10 &gt;</link><link linkend="_structparse__integer__traits_3_0116_01_4">parse_integer_traits&lt; 16 &gt;</link><link linkend="_structparse__integer__traits_3_012_01_4">parse_integer_traits&lt; 2 &gt;</link><link linkend="_structparse__integer__traits_3_018_01_4">parse_integer_traits&lt; 8 &gt;</link><link linkend="_structparse__key__buffer">parse_key_buffer</link><link linkend="_classparse__result">parse_result</link>
<para>The result of a parsing operation </para>
<link linkend="_structparse__scope">parse_scope</link><link linkend="_structparsed__string">parsed_string</link><link linkend="_classparser">parser</link><link linkend="_structlest_1_1passing">lest::passing</link><link linkend="_struct____gnu__pbds_1_1detail_1_1pat__trie__base">__gnu_pbds::detail::pat_trie_base</link>
<para>Base type for PATRICIA trees </para>
<link linkend="_struct____gnu__pbds_1_1pat__trie__tag">__gnu_pbds::pat_trie_tag</link>
<para>PATRICIA trie </para>
<link linkend="_classpath">path</link>
<para>A TOML path </para>
<link linkend="_classpath__component">path_component</link>
<para>Represents a single component of a complete &apos;TOML-path&apos;: either a key or an array index </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___b_i_n___t_r_e_e___n_a_m_e">__gnu_pbds::detail::PB_DS_BIN_TREE_NAME&lt; Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___c_c___h_a_s_h___n_a_m_e">__gnu_pbds::detail::PB_DS_CC_HASH_NAME&lt; Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Hash_Fn, Resize_Policy &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___g_p___h_a_s_h___n_a_m_e">__gnu_pbds::detail::PB_DS_GP_HASH_NAME&lt; Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___l_u___n_a_m_e">__gnu_pbds::detail::PB_DS_LU_NAME&lt; Key, Mapped, Eq_Fn, _Alloc, Update_Policy &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___o_v___t_r_e_e___n_a_m_e">__gnu_pbds::detail::PB_DS_OV_TREE_NAME&lt; Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc &gt;</link>
<para>Ordered-vector tree associative-container </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___p_a_t___t_r_i_e___n_a_m_e">__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME&lt; Key, Mapped, Node_And_It_Traits, _Alloc &gt;</link>
<para>PATRICIA trie </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___r_b___t_r_e_e___n_a_m_e">__gnu_pbds::detail::PB_DS_RB_TREE_NAME&lt; Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc &gt;</link>
<para>Red-Black tree </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1_p_b___d_s___s___t_r_e_e___n_a_m_e">__gnu_pbds::detail::PB_DS_S_TREE_NAME&lt; Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc &gt;</link>
<para>Splay tree </para>
<link linkend="_class_phys_obj">PhysObj</link><link linkend="_class_plane">Plane</link><link linkend="_class_player">Player</link><link linkend="_class_player_controller">PlayerController</link><link linkend="_class_player_health_comp">PlayerHealthComp</link><link linkend="_struct_player_health_comp_data">PlayerHealthCompData</link><link linkend="_struct_catch_1_1pluralise">Catch::pluralise</link><link linkend="_struct_point">Point</link><link linkend="_struct____gnu__pbds_1_1point__invalidation__guarantee">__gnu_pbds::point_invalidation_guarantee</link><link linkend="_structnlohmann_1_1detail_1_1position__t">nlohmann::detail::position_t</link>
<para>Struct to capture the start position of the current token </para>
<link linkend="_structglm_1_1io_1_1precision">glm::io::precision</link><link linkend="_structglm_1_1detail_1_1prefix">glm::detail::prefix&lt; T &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01bool_01_4">glm::detail::prefix&lt; bool &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01double_01_4">glm::detail::prefix&lt; double &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01float_01_4">glm::detail::prefix&lt; float &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01int16__t_01_4">glm::detail::prefix&lt; int16_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01int32__t_01_4">glm::detail::prefix&lt; int32_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01int64__t_01_4">glm::detail::prefix&lt; int64_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01int8__t_01_4">glm::detail::prefix&lt; int8_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01uint16__t_01_4">glm::detail::prefix&lt; uint16_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01uint32__t_01_4">glm::detail::prefix&lt; uint32_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01uint64__t_01_4">glm::detail::prefix&lt; uint64_t &gt;</link><link linkend="_structglm_1_1detail_1_1prefix_3_01uint8__t_01_4">glm::detail::prefix&lt; uint8_t &gt;</link><link linkend="_classgenerate__single__header_1_1_preprocessor">generate_single_header.Preprocessor</link><link linkend="_structlest_1_1print">lest::print</link><link linkend="_class____gnu__pbds_1_1priority__queue">__gnu_pbds::priority_queue&lt; _Tv, Cmp_Fn, Tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1priority__queue__tag">__gnu_pbds::priority_queue_tag</link>
<para>Basic priority-queue </para>
<link linkend="_structnlohmann_1_1detail_1_1priority__tag">nlohmann::detail::priority_tag&lt; N &gt;</link><link linkend="_structnlohmann_1_1detail_1_1priority__tag_3_010_01_4">nlohmann::detail::priority_tag&lt; 0 &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1probe__fn__base">__gnu_pbds::detail::probe_fn_base&lt; _Alloc &gt;</link>
<para>Probe functor base </para>
<link linkend="_struct_probed_page">ProbedPage</link><link linkend="_structlest_1_1ptags">lest::ptags</link><link linkend="_structpthread__attr__t">pthread_attr_t</link><link linkend="_structqoa__desc">qoa_desc</link><link linkend="_structqoa__lms__t">qoa_lms_t</link><link linkend="_structqoaplay__desc">qoaplay_desc</link><link linkend="_structqoi__desc">qoi_desc</link><link linkend="_structglm_1_1qua">glm::qua&lt; T, Q &gt;</link><link linkend="_class____gnu__pbds_1_1quadratic__probe__fn">__gnu_pbds::quadratic_probe_fn&lt; Size_Type &gt;</link>
<para>A probe sequence policy using square increments </para>
<link linkend="_struct____gnu__parallel_1_1quicksort__tag">__gnu_parallel::quicksort_tag</link>
<para>Forces parallel sorting using unbalanced quicksort at compile time </para>
<link linkend="_struct____gnu__pbds_1_1range__invalidation__guarantee">__gnu_pbds::range_invalidation_guarantee</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn">__gnu_pbds::detail::ranged_hash_fn&lt; Key, Hash_Fn, _Alloc, Comb_Hash_Fn, Store_Hash &gt;</link>
<para>Primary template </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_comb___hash___fn_00_01false_01_4">__gnu_pbds::detail::ranged_hash_fn&lt; Key, Hash_Fn, _Alloc, Comb_Hash_Fn, false &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_comb___hash___fn_00_01true_01_4">__gnu_pbds::detail::ranged_hash_fn&lt; Key, Hash_Fn, _Alloc, Comb_Hash_Fn, true &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01null__type_00_01___alloc_00_01_comb___hash___fn_00_01false_01_4">__gnu_pbds::detail::ranged_hash_fn&lt; Key, null_type, _Alloc, Comb_Hash_Fn, false &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__hash__fn_3_01_key_00_01null__type_00_01___alloc_00_01_comb___hash___fn_00_01true_01_4">__gnu_pbds::detail::ranged_hash_fn&lt; Key, null_type, _Alloc, Comb_Hash_Fn, true &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn">__gnu_pbds::detail::ranged_probe_fn&lt; Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, Store_Hash &gt;</link>
<para>Primary template </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_cc5f8c4f004b12eafc2f870bb2b345e11">__gnu_pbds::detail::ranged_probe_fn&lt; Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, false &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01_hash___fn_00_01___alloc_00_01_c234843087a0b873cc0910104278cc54f">__gnu_pbds::detail::ranged_probe_fn&lt; Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, true &gt;</link><link linkend="_class____gnu__pbds_1_1detail_1_1ranged__probe__fn_3_01_key_00_01null__type_00_01___alloc_00_01_c26e19c6c0e9846f8683c6652cec3830a">__gnu_pbds::detail::ranged_probe_fn&lt; Key, null_type, _Alloc, Comb_Probe_Fn, null_type, false &gt;</link><link linkend="_structr_audio_buffer">rAudioBuffer</link><link linkend="_structr_audio_processor">rAudioProcessor</link><link linkend="_struct_ray">Ray</link><link linkend="_struct_ray_collision">RayCollision</link><link linkend="_struct_ray_hit_info">RayHitInfo</link><link linkend="_struct_ray_locs">RayLocs</link><link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node__">__gnu_pbds::detail::rb_tree_node_&lt; Value_Type, Metadata, _Alloc &gt;</link>
<para>Node for Red-Black trees </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1rb__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4">__gnu_pbds::detail::rb_tree_node_&lt; Value_Type, null_type, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1rb__tree__tag">__gnu_pbds::rb_tree_tag</link>
<para>Red-black tree </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1rc">__gnu_pbds::detail::rc&lt; _Node, _Alloc &gt;</link>
<para>Redundant binary counter </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1rc__binomial__heap">__gnu_pbds::detail::rc_binomial_heap&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1rc__binomial__heap__tag">__gnu_pbds::rc_binomial_heap_tag</link>
<para>Redundant-counter binomial-heap </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1rebind__traits">__gnu_pbds::detail::rebind_traits&lt; _Alloc, T &gt;</link>
<para>Consistent API for accessing allocator-related types </para>
<link linkend="_struct_rectangle">Rectangle</link><link linkend="_class_reflection_shader">ReflectionShader</link><link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_regex_matcher">Catch::Matchers::StdString::RegexMatcher</link><link linkend="_struct_catch_1_1_registrar_for_tag_aliases">Catch::RegistrarForTagAliases</link><link linkend="_class_registry">Registry</link><link linkend="_struct_registry_1_1_registry_data_value_dictionary">Registry::RegistryDataValueDictionary</link><link linkend="_struct_regular_cell_data">RegularCellData</link><link linkend="_struct_render_texture">RenderTexture</link><link linkend="_struct_render_texture2_d">RenderTexture2D</link><link linkend="_class_catch_1_1_generators_1_1_repeat_generator">Catch::Generators::RepeatGenerator&lt; T &gt;</link><link linkend="_struct_residue">Residue</link><link linkend="_struct____gnu__pbds_1_1resize__error">__gnu_pbds::resize_error</link>
<para>A container cannot be resized </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1resize__policy">__gnu_pbds::detail::resize_policy&lt; _Tp &gt;</link>
<para>Resize policy for binary heap </para>
<link linkend="_structlest_1_1result">lest::result</link><link linkend="_struct_catch_1_1_result_disposition">Catch::ResultDisposition</link><link linkend="_struct_catch_1_1_result_was">Catch::ResultWas</link><link linkend="_class_catch_1_1_reusable_string_stream">Catch::ReusableStringStream</link><link linkend="_structrl_draw_call">rlDrawCall</link><link linkend="_structrl_render_batch">rlRenderBatch</link><link linkend="_structrl_vertex_buffer">rlVertexBuffer</link><link linkend="_structsample">sample</link><link linkend="_class____gnu__pbds_1_1sample__probe__fn">__gnu_pbds::sample_probe_fn</link>
<para>A sample probe policy </para>
<link linkend="_class____gnu__pbds_1_1sample__range__hashing">__gnu_pbds::sample_range_hashing</link>
<para>A sample range-hashing functor </para>
<link linkend="_class____gnu__pbds_1_1sample__ranged__hash__fn">__gnu_pbds::sample_ranged_hash_fn</link>
<para>A sample ranged-hash functor </para>
<link linkend="_class____gnu__pbds_1_1sample__ranged__probe__fn">__gnu_pbds::sample_ranged_probe_fn</link>
<para>A sample ranged-probe functor </para>
<link linkend="_class____gnu__pbds_1_1sample__resize__policy">__gnu_pbds::sample_resize_policy</link>
<para>A sample resize policy </para>
<link linkend="_class____gnu__pbds_1_1sample__resize__trigger">__gnu_pbds::sample_resize_trigger</link>
<para>A sample resize trigger policy </para>
<link linkend="_class____gnu__pbds_1_1sample__size__policy">__gnu_pbds::sample_size_policy</link>
<para>A sample size policy </para>
<link linkend="_class____gnu__pbds_1_1sample__tree__node__update">__gnu_pbds::sample_tree_node_update&lt; Const_Node_Iter, Node_Iter, Cmp_Fn, _Alloc &gt;</link>
<para>A sample node updator </para>
<link linkend="_struct____gnu__pbds_1_1sample__trie__access__traits">__gnu_pbds::sample_trie_access_traits</link>
<para>A sample trie element access traits </para>
<link linkend="_class____gnu__pbds_1_1sample__trie__node__update">__gnu_pbds::sample_trie_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</link>
<para>A sample node updator </para>
<link linkend="_struct____gnu__pbds_1_1sample__update__policy">__gnu_pbds::sample_update_policy</link>
<para>A sample list-update policy </para>
<link linkend="_struct____gnu__parallel_1_1sampling__tag">__gnu_parallel::sampling_tag</link>
<para>Forces parallel merging with exact splitting, at compile time </para>
<link linkend="_structsched__param">sched_param</link><link linkend="_class_catch_1_1_scoped_message">Catch::ScopedMessage</link><link linkend="_class_scriptable">Scriptable</link><link linkend="_structsdefl">sdefl</link><link linkend="_structsdefl__code__words">sdefl_code_words</link><link linkend="_structsdefl__codes">sdefl_codes</link><link linkend="_structsdefl__freq">sdefl_freq</link><link linkend="_structsdefl__lens">sdefl_lens</link><link linkend="_structsdefl__seqt">sdefl_seqt</link><link linkend="_class_catch_1_1_section">Catch::Section</link><link linkend="_struct_catch_1_1_section_end_info">Catch::SectionEndInfo</link><link linkend="_struct_catch_1_1_section_info">Catch::SectionInfo</link><link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type">__gnu_pbds::detail::select_value_type&lt; Key, Mapped &gt;</link>
<para>Choose value_type to be a key/value pair or just a key </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1select__value__type_3_01_key_00_01null__type_01_4">__gnu_pbds::detail::select_value_type&lt; Key, null_type &gt;</link>
<para>Specialization for sets where the key is the value_type </para>
<link linkend="_struct____gnu__pbds_1_1sequence__tag">__gnu_pbds::sequence_tag</link>
<para>Basic sequence </para>
<link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy">__pstl::execution::sequenced_policy</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1sequenced__policy">__pstl::execution::v1::sequenced_policy</link><link linkend="_struct____gnu__parallel_1_1sequential__tag">__gnu_parallel::sequential_tag</link>
<para>Forces sequential execution at compile time </para>
<link linkend="_classnlohmann_1_1detail_1_1serializer">nlohmann::detail::serializer&lt; BasicJsonType &gt;</link><link linkend="_class_sewingneedle">Sewingneedle</link><link linkend="_struct_shader">Shader</link><link linkend="_structshader__registry__entry">shader_registry_entry</link><link linkend="_class_shader_list">ShaderList</link><link linkend="_class_shader_pool">ShaderPool</link><link linkend="_class_shader_registry">ShaderRegistry</link><link linkend="_structsigned__integer__traits">signed_integer_traits&lt; T &gt;</link><link linkend="_class_simple_game_obj">SimpleGameObj</link><link linkend="_class_catch_1_1_simple_pcg32">Catch::SimplePcg32</link><link linkend="_structsinfl">sinfl</link><link linkend="_class_catch_1_1_generators_1_1_single_value_generator">Catch::Generators::SingleValueGenerator&lt; T &gt;</link><link linkend="_struct_size">Size</link><link linkend="_class_sky">Sky</link><link linkend="_class_skybox">Skybox</link><link linkend="_class_sky_light_component">SkyLightComponent</link><link linkend="_class_sky_light_component_1_1_sky_light_component_ex">SkyLightComponent::SkyLightComponentEx</link><link linkend="_struct_socket">Socket</link><link linkend="_struct_socket_config">SocketConfig</link><link linkend="_struct_socket_data_packet">SocketDataPacket</link><link linkend="_struct_socket_opt">SocketOpt</link><link linkend="_struct_socket_result">SocketResult</link><link linkend="_struct_socket_set">SocketSet</link><link linkend="_struct_sound">Sound</link><link linkend="_structsource__position">source_position</link>
<para>A source document line-and-column pair </para>
<link linkend="_structsource__region">source_region</link>
<para>A source document region </para>
<link linkend="_struct_catch_1_1_source_line_info">Catch::SourceLineInfo</link><link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node__">__gnu_pbds::detail::splay_tree_node_&lt; Value_Type, Metadata, _Alloc &gt;</link>
<para>Node for splay tree </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1splay__tree__node___3_01_value___type_00_01null__type_00_01___alloc_01_4">__gnu_pbds::detail::splay_tree_node_&lt; Value_Type, null_type, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1splay__tree__tag">__gnu_pbds::splay_tree_tag</link>
<para>Splay tree </para>
<link linkend="_struct_stack">Stack</link><link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_starts_with_matcher">Catch::Matchers::StdString::StartsWithMatcher</link><link linkend="_structnlohmann_1_1detail_1_1static__const">nlohmann::detail::static_const&lt; T &gt;</link><link linkend="_structstb__vorbis">stb_vorbis</link><link linkend="_structstb__vorbis__alloc">stb_vorbis_alloc</link><link linkend="_structstb__vorbis__comment">stb_vorbis_comment</link><link linkend="_structstb__vorbis__info">stb_vorbis_info</link><link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link><link linkend="_structstbrp__context">stbrp_context</link><link linkend="_structstbrp__node">stbrp_node</link><link linkend="_structstbrp__rect">stbrp_rect</link><link linkend="_structstbtt____bitmap">stbtt__bitmap</link><link linkend="_structstbtt____buf">stbtt__buf</link><link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link><link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link><link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link><link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link><link linkend="_structstbtt__pack__context">stbtt_pack_context</link><link linkend="_structstbtt__pack__range">stbtt_pack_range</link><link linkend="_structstbtt__packedchar">stbtt_packedchar</link><link linkend="_structstbtt__vertex">stbtt_vertex</link><link linkend="_structstbv____floor__ordering">stbv__floor_ordering</link><link linkend="_structglm_1_1detail_1_1storage">glm::detail::storage&lt; L, T, is_aligned &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data">__gnu_pbds::detail::stored_data&lt; _Tv, _Th, Store_Hash &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1stored__data_3_01___tv_00_01___th_00_01false_01_4">__gnu_pbds::detail::stored_data&lt; _Tv, _Th, false &gt;</link>
<para>Specialization for representation of stored data of just value type </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__hash">__gnu_pbds::detail::stored_hash&lt; _Th &gt;</link>
<para>Stored hash </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1stored__value">__gnu_pbds::detail::stored_value&lt; _Tv &gt;</link>
<para>Stored value </para>
<link linkend="_struct_catch_1_1_stream_end_stop">Catch::StreamEndStop</link><link linkend="_struct____gnu__pbds_1_1string__tag">__gnu_pbds::string_tag</link>
<para>Basic string container, inclusive of strings, ropes, etc </para>
<link linkend="_structstring__traits">string_traits&lt; T &gt;</link><link linkend="_struct_catch_1_1_string_maker">Catch::StringMaker&lt; T, typename &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01bool_01_4">Catch::StringMaker&lt; bool &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01_catch_1_1_detail_1_1_approx_01_4">Catch::StringMaker&lt; Catch::Detail::Approx &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01char_01_5_01_4">Catch::StringMaker&lt; char * &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01char_01_4">Catch::StringMaker&lt; char &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01char_01const_01_5_01_4">Catch::StringMaker&lt; char const * &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01char_0f_s_z_0e_4">Catch::StringMaker&lt; char[SZ]&gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01double_01_4">Catch::StringMaker&lt; double &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01float_01_4">Catch::StringMaker&lt; float &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01int_01_4">Catch::StringMaker&lt; int &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01long_01_4">Catch::StringMaker&lt; long &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01long_01long_01_4">Catch::StringMaker&lt; long long &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01_r_01_c_1_1_5_01_4">Catch::StringMaker&lt; R C::* &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01_r_00_01typename_01std_1_1enable__if_3_01is__range_3_01_r_01_4536d8fedfff6d62432b3dc59b56e1380">Catch::StringMaker&lt; R, typename std::enable_if&lt; is_range&lt; R &gt;::value &amp;&amp;!::Catch::Detail::IsStreamInsertable&lt; R &gt;::value &gt;::type &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01signed_01char_01_4">Catch::StringMaker&lt; signed char &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01signed_01char_0f_s_z_0e_4">Catch::StringMaker&lt; signed char[SZ]&gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01std_1_1nullptr__t_01_4">Catch::StringMaker&lt; std::nullptr_t &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01std_1_1string_01_4">Catch::StringMaker&lt; std::string &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01std_1_1wstring_01_4">Catch::StringMaker&lt; std::wstring &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01_t_01_5_01_4">Catch::StringMaker&lt; T * &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01_t_0f_s_z_0e_4">Catch::StringMaker&lt; T[SZ]&gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01unsigned_01char_01_4">Catch::StringMaker&lt; unsigned char &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01unsigned_01char_0f_s_z_0e_4">Catch::StringMaker&lt; unsigned char[SZ]&gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01unsigned_01int_01_4">Catch::StringMaker&lt; unsigned int &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01unsigned_01long_01_4">Catch::StringMaker&lt; unsigned long &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01unsigned_01long_01long_01_4">Catch::StringMaker&lt; unsigned long long &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01wchar__t_01_5_01_4">Catch::StringMaker&lt; wchar_t * &gt;</link><link linkend="_struct_catch_1_1_string_maker_3_01wchar__t_01const_01_5_01_4">Catch::StringMaker&lt; wchar_t const * &gt;</link><link linkend="_struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base">Catch::Matchers::StdString::StringMatcherBase</link><link linkend="_class_catch_1_1_string_ref">Catch::StringRef</link><link linkend="_structglm_1_1detail_1_1__swizzle__base2_3_01_n_00_01_t_00_01_q_00_01_e0_00_01_e1_00_01_e2_00_01_e3_00_011_01_4_1_1_stub">glm::detail::_swizzle_base2&lt; N, T, Q, E0, E1, E2, E3, 1 &gt;::Stub</link><link linkend="_structlest_1_1success">lest::success</link><link linkend="_class_sun">Sun</link><link linkend="_struct_sun_data">SunData</link><link linkend="_struct____gnu__pbds_1_1detail_1_1synth__access__traits">__gnu_pbds::detail::synth_access_traits&lt; Type_Traits, Set, _ATraits &gt;</link>
<para>Synthetic element access traits </para>
<link linkend="_classtable">table</link>
<para>A TOML table </para>
<link linkend="_structtable__init__pair">table_init_pair</link><link linkend="_classtable__iterator">table_iterator&lt; IsConst &gt;</link><link linkend="_structtable__vector__scope">table_vector_scope</link><link linkend="_class_global_1_1_tag">Global::Tag</link><link linkend="_class_catch_1_1_generators_1_1_take_generator">Catch::Generators::TakeGenerator&lt; T &gt;</link><link linkend="_structglm_1_1tdualquat">glm::tdualquat&lt; T, Q &gt;</link><link linkend="_class_terrain_triangle">TerrainTriangle</link><link linkend="_structlest_1_1test">lest::test</link><link linkend="_class_catch_1_1_test_case">Catch::TestCase</link><link linkend="_struct_catch_1_1_test_case_info">Catch::TestCaseInfo</link><link linkend="_struct_catch_1_1_test_failure_exception">Catch::TestFailureException</link><link linkend="_class_catch_1_1_test_invoker_as_method">Catch::TestInvokerAsMethod&lt; C &gt;</link><link linkend="_class_test_plane">TestPlane</link><link linkend="_struct_texture">Texture</link><link linkend="_struct_texture2_d">Texture2D</link><link linkend="_class_textures">Textures</link><link linkend="_class____gnu__pbds_1_1detail_1_1thin__heap">__gnu_pbds::detail::thin_heap&lt; Value_Type, Cmp_Fn, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1thin__heap__tag">__gnu_pbds::thin_heap_tag</link>
<para>Thin heap </para>
<link linkend="_class_global_1_1_time">Global::Time</link><link linkend="_structtime">time</link>
<para>A local time-of-day </para>
<link linkend="_structtime__offset">time_offset</link>
<para>A timezone offset </para>
<link linkend="_class_catch_1_1_timer">Catch::Timer</link><link linkend="_structlest_1_1timer">lest::timer</link><link linkend="_structlest_1_1times">lest::times</link><link linkend="_structtinyobj__attrib__t">tinyobj_attrib_t</link><link linkend="_structtinyobj__material__t">tinyobj_material_t</link><link linkend="_structtinyobj__shape__t">tinyobj_shape_t</link><link linkend="_structtinyobj__vertex__index__t">tinyobj_vertex_index_t</link><link linkend="_structnlohmann_1_1detail_1_1to__json__fn">nlohmann::detail::to_json_fn</link><link linkend="_class_t_o_m_l___p_a_r_s_e___e_r_r_o_r___b_a_s_e">TOML_PARSE_ERROR_BASE</link>
<para>An error generated when parsing fails </para>
<link linkend="_classgenerate__conformance__tests_1_1_toml_p_p_array">generate_conformance_tests.TomlPPArray</link><link linkend="_classgenerate__conformance__tests_1_1_toml_p_p_table">generate_conformance_tests.TomlPPTable</link><link linkend="_classgenerate__conformance__tests_1_1_toml_test">generate_conformance_tests.TomlTest</link><link linkend="_struct_catch_1_1_totals">Catch::Totals</link><link linkend="_class_t_queue">TQueue&lt; T &gt;</link><link linkend="_structtrack__state__">track_state_</link><link linkend="_structtracker__state__">tracker_state_</link><link linkend="_structtracker__state__instrument__">tracker_state_instrument_</link><link linkend="_class_global_1_1_transform">Global::Transform</link><link linkend="_struct_transform">Transform</link><link linkend="_struct_transition_cell_data">TransitionCellData</link><link linkend="_class____gnu__pbds_1_1tree">__gnu_pbds::tree&lt; Key, Mapped, Cmp_Fn, Tag, Node_Update, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper">__gnu_pbds::detail::tree_metadata_helper&lt; Node_Update, _BTp &gt;</link>
<para>Tree metadata helper </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper_3_01_node___update_00_01false_01_4">__gnu_pbds::detail::tree_metadata_helper&lt; Node_Update, false &gt;</link>
<para>Specialization, false </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1tree__metadata__helper_3_01_node___update_00_01true_01_4">__gnu_pbds::detail::tree_metadata_helper&lt; Node_Update, true &gt;</link>
<para>Specialization, true </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1tree__node__metadata__dispatch">__gnu_pbds::detail::tree_node_metadata_dispatch&lt; Key, Data, Cmp_Fn, Node_Update, _Alloc &gt;</link>
<para>Tree node metadata dispatch </para>
<link linkend="_class____gnu__pbds_1_1tree__order__statistics__node__update">__gnu_pbds::tree_order_statistics_node_update&lt; Node_CItr, Node_Itr, Cmp_Fn, _Alloc &gt;</link>
<para>Functor updating ranks of entrees </para>
<link linkend="_struct____gnu__pbds_1_1tree__tag">__gnu_pbds::tree_tag</link>
<para>Basic tree structure </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits">__gnu_pbds::detail::tree_traits&lt; Key, Data, Cmp_Fn, Node_Update, Tag, _Alloc &gt;</link>
<para>Tree traits class, primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___7573835b518f91503254b61ac23808ce">__gnu_pbds::detail::tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, ov_tree_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___f22a7942096bb47f6a7111700874e1f6">__gnu_pbds::detail::tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, rb_tree_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01_mapped_00_01_cmp___fn_00_01_node___26b21387ed160cceb1091d3889e53d96">__gnu_pbds::detail::tree_traits&lt; Key, Mapped, Cmp_Fn, Node_Update, splay_tree_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_node753c935fd9711897c9ea34c1189d6642">__gnu_pbds::detail::tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, ov_tree_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_node626532b8a769e9bba6ca4c3095dac6a1">__gnu_pbds::detail::tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, rb_tree_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1tree__traits_3_01_key_00_01null__type_00_01_cmp___fn_00_01_nodeb5a8487663e07918b7e743b42f3518f6">__gnu_pbds::detail::tree_traits&lt; Key, null_type, Cmp_Fn, Node_Update, splay_tree_tag, _Alloc &gt;</link><link linkend="_struct_tree_billboard">TreeBillboard</link><link linkend="_class_triangle">Triangle</link><link linkend="_class____gnu__pbds_1_1trie">__gnu_pbds::trie&lt; Key, Mapped, _ATraits, Tag, Node_Update, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper">__gnu_pbds::detail::trie_metadata_helper&lt; Node_Update, _BTp &gt;</link>
<para>Trie metadata helper </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper_3_01_node___update_00_01false_01_4">__gnu_pbds::detail::trie_metadata_helper&lt; Node_Update, false &gt;</link>
<para>Specialization, false </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1trie__metadata__helper_3_01_node___update_00_01true_01_4">__gnu_pbds::detail::trie_metadata_helper&lt; Node_Update, true &gt;</link>
<para>Specialization, true </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1trie__node__metadata__dispatch">__gnu_pbds::detail::trie_node_metadata_dispatch&lt; Key, Data, Cmp_Fn, Node_Update, _Alloc &gt;</link>
<para>Trie node metadata dispatch </para>
<link linkend="_class____gnu__pbds_1_1trie__order__statistics__node__update">__gnu_pbds::trie_order_statistics_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</link>
<para>Functor updating ranks of entrees </para>
<link linkend="_class____gnu__pbds_1_1detail_1_1trie__policy__base">__gnu_pbds::detail::trie_policy_base&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</link>
<para>Base class for trie policies </para>
<link linkend="_class____gnu__pbds_1_1trie__prefix__search__node__update">__gnu_pbds::trie_prefix_search_node_update&lt; Node_CItr, Node_Itr, _ATraits, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1trie__string__access__traits">__gnu_pbds::trie_string_access_traits&lt; String, Min_E_Val, Max_E_Val, Reverse, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1trie__tag">__gnu_pbds::trie_tag</link>
<para>Basic trie structure </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits">__gnu_pbds::detail::trie_traits&lt; Key, Data, _ATraits, Node_Update, Tag, _Alloc &gt;</link>
<para>Trie traits class, primary template </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits_3_01_key_00_01_mapped_00_01___a_traits_00_01_node_17394f8c64929197e3ad992a397a083a">__gnu_pbds::detail::trie_traits&lt; Key, Mapped, _ATraits, Node_Update, pat_trie_tag, _Alloc &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1trie__traits_3_01_key_00_01null__type_00_01___a_traits_00_01_noa6336b7950021ab828e2dade00ad8cfd">__gnu_pbds::detail::trie_traits&lt; Key, null_type, _ATraits, Node_Update, pat_trie_tag, _Alloc &gt;</link><link linkend="_struct_global_1_1_mesh_tools_1_1_tri_vert">Global::MeshTools::TriVert</link><link linkend="_struct____gnu__pbds_1_1trivial__iterator__tag">__gnu_pbds::trivial_iterator_tag</link><link linkend="_struct_catch_1_1true__given">Catch::true_given&lt; typename &gt;</link><link linkend="_classstd_1_1tuple__element_3_01_n_00_01_1_1nlohmann_1_1detail_1_1iteration__proxy__value_3_01_iterator_type_01_4_01_4">std::tuple_element&lt; N, ::nlohmann::detail::iteration_proxy_value&lt; IteratorType &gt; &gt;</link><link linkend="_classstd_1_1tuple__size_3_1_1nlohmann_1_1detail_1_1iteration__proxy__value_3_01_iterator_type_01_4_01_4">std::tuple_size&lt;::nlohmann::detail::iteration_proxy_value&lt; IteratorType &gt; &gt;</link><link linkend="_class_turret">Turret</link><link linkend="_structnlohmann_1_1detail_1_1is__ordered__map_1_1two">nlohmann::detail::is_ordered_map&lt; T &gt;::two</link><link linkend="_struct____gnu__pbds_1_1detail_1_1entry__cmp_3_01___v_tp_00_01_cmp___fn_00_01___alloc_00_01false_01_4_1_1type">__gnu_pbds::detail::entry_cmp&lt; _VTp, Cmp_Fn, _Alloc, false &gt;::type</link>
<para>Compare plus entry </para>
<link linkend="_struct____gnu__pbds_1_1detail_1_1entry__pred_3_01___v_tp_00_01_pred_00_01___alloc_00_01false_01_4_1_1type">__gnu_pbds::detail::entry_pred&lt; _VTp, Pred, _Alloc, false &gt;::type</link><link linkend="_structbit_count_1_1type">bitCount::type&lt; genType &gt;</link><link linkend="_structbitfield_extract_1_1type">bitfieldExtract::type&lt; genType &gt;</link><link linkend="_structbitfield_insert_1_1type">bitfieldInsert::type&lt; genType &gt;</link><link linkend="_structbitfield_reverse_1_1type">bitfieldReverse::type&lt; genType &gt;</link><link linkend="_structceil_multiple_1_1type">ceilMultiple::type&lt; genType &gt;</link><link linkend="_structceil_power_of_two__advanced_1_1type">ceilPowerOfTwo_advanced::type&lt; genType &gt;</link><link linkend="_structfind_l_s_b_1_1type">findLSB::type&lt; genType, retType &gt;</link><link linkend="_structfind_m_s_b_1_1type">findMSB::type&lt; genType, retType &gt;</link><link linkend="_structfind_n_s_b_1_1type">findNSB::type&lt; T &gt;</link><link linkend="_structfloor_multiple_1_1type">floorMultiple::type&lt; genType &gt;</link><link linkend="_structglm_1_1detail_1_1storage_1_1type">glm::detail::storage&lt; L, T, is_aligned &gt;::type</link><link linkend="_structglm_1_1type">glm::type&lt; T &gt;</link><link linkend="_structis_power_of_two_1_1type">isPowerOfTwo::type&lt; genType &gt;</link><link linkend="_structmask_1_1type">mask::type&lt; genType &gt;</link><link linkend="_structnext_multiple_1_1type">nextMultiple::type&lt; genIUType &gt;</link><link linkend="_structprev_multiple_1_1type">prevMultiple::type&lt; genIUType &gt;</link><link linkend="_structsign_1_1type">sign::type&lt; genType &gt;</link><link linkend="_structglm_1_1type_3_01mat_3_01_c_00_01_r_00_01_t_00_01_q_01_4_01_4">glm::type&lt; mat&lt; C, R, T, Q &gt; &gt;</link><link linkend="_structglm_1_1type_3_01qua_3_01_t_00_01_q_01_4_01_4">glm::type&lt; qua&lt; T, Q &gt; &gt;</link><link linkend="_structglm_1_1type_3_01tdualquat_3_01_t_00_01_q_01_4_01_4">glm::type&lt; tdualquat&lt; T, Q &gt; &gt;</link><link linkend="_structglm_1_1type_3_01vec_3_01_l_00_01_t_00_01_q_01_4_01_4">glm::type&lt; vec&lt; L, T, Q &gt; &gt;</link><link linkend="_classnlohmann_1_1detail_1_1type__error">nlohmann::detail::type_error</link>
<para>Exception indicating executing a member function with a wrong type </para>
<link linkend="_structtype__tag">type_tag&lt; T &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1type__to__type">__gnu_pbds::detail::type_to_type&lt; Type &gt;</link><link linkend="_struct____gnu__pbds_1_1detail_1_1types__traits">__gnu_pbds::detail::types_traits&lt; Key, Mapped, _Alloc, Store_Hash &gt;</link>
<para>Traits for abstract types </para>
<link linkend="_unionglm_1_1detail_1_1u10u10u10u2">glm::detail::u10u10u10u2</link><link linkend="_unionglm_1_1detail_1_1u3u3u2">glm::detail::u3u3u2</link><link linkend="_unionglm_1_1detail_1_1u4u4">glm::detail::u4u4</link><link linkend="_unionglm_1_1detail_1_1u4u4u4u4">glm::detail::u4u4u4u4</link><link linkend="_unionglm_1_1detail_1_1u5u5u5u1">glm::detail::u5u5u5u1</link><link linkend="_unionglm_1_1detail_1_1u5u6u5">glm::detail::u5u6u5</link><link linkend="_unionglm_1_1detail_1_1u9u9u9e5">glm::detail::u9u9u9e5</link><link linkend="_struct_u_d_p_channel">UDPChannel</link><link linkend="_unionglm_1_1detail_1_1uif32">glm::detail::uif32</link><link linkend="_class_catch_1_1_unary_expr">Catch::UnaryExpr&lt; LhsT &gt;</link><link linkend="_struct____gnu__parallel_1_1unbalanced__tag">__gnu_parallel::unbalanced_tag</link>
<para>Recommends parallel execution using static load-balancing at compile time </para>
<link linkend="_structlest_1_1unexpected">lest::unexpected</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy">__pstl::execution::unsequenced_policy</link><link linkend="_class____pstl_1_1execution_1_1v1_1_1unsequenced__policy">__pstl::execution::v1::unsequenced_policy</link><link linkend="_structunsigned__integer__traits">unsigned_integer_traits&lt; T &gt;</link><link linkend="_class_u_simplex_noise_b_p_library">USimplexNoiseBPLibrary</link><link linkend="_classutf8__buffered__reader">utf8_buffered_reader</link><link linkend="_classutf8__byte__stream_3_01std_1_1basic__string__view_3_01_char_01_4_01_4">utf8_byte_stream&lt; std::basic_string_view&lt; Char &gt; &gt;</link><link linkend="_classutf8__byte__stream_3_01std_1_1istream_01_4">utf8_byte_stream&lt; std::istream &gt;</link><link linkend="_structutf8__codepoint">utf8_codepoint</link><link linkend="_classutf8__reader">utf8_reader&lt; T &gt;</link><link linkend="_structutf8__reader__interface">utf8_reader_interface</link><link linkend="_classvalue">value&lt; typename &gt;</link><link linkend="_structvalue__traits">value_traits&lt; T &gt;</link><link linkend="_structvalue__traits_3_01bool_01_4">value_traits&lt; bool &gt;</link><link linkend="_structvalue__traits_3_01char_01_5_01_4">value_traits&lt; char * &gt;</link><link linkend="_structvalue__traits_3_01char_0f_n_0e_4">value_traits&lt; char[N]&gt;</link><link linkend="_structvalue__traits_3_01const_01char_01_5_01_4">value_traits&lt; const char * &gt;</link><link linkend="_structvalue__traits_3_01const_01char_0f_n_0e_4">value_traits&lt; const char[N]&gt;</link><link linkend="_structvalue__traits_3_01const_01_t_01_4">value_traits&lt; const T &gt;</link><link linkend="_structvalue__traits_3_01const_01volatile_01_t_01_4">value_traits&lt; const volatile T &gt;</link><link linkend="_structvalue__traits_3_01date_01_4">value_traits&lt; date &gt;</link><link linkend="_structvalue__traits_3_01date__time_01_4">value_traits&lt; date_time &gt;</link><link linkend="_structvalue__traits_3_01double_01_4">value_traits&lt; double &gt;</link><link linkend="_structvalue__traits_3_01float_01_4">value_traits&lt; float &gt;</link><link linkend="_structvalue__traits_3_01long_01double_01_4">value_traits&lt; long double &gt;</link><link linkend="_structvalue__traits_3_01signed_01char_01_4">value_traits&lt; signed char &gt;</link><link linkend="_structvalue__traits_3_01signed_01int_01_4">value_traits&lt; signed int &gt;</link><link linkend="_structvalue__traits_3_01signed_01long_01_4">value_traits&lt; signed long &gt;</link><link linkend="_structvalue__traits_3_01signed_01long_01long_01_4">value_traits&lt; signed long long &gt;</link><link linkend="_structvalue__traits_3_01signed_01short_01_4">value_traits&lt; signed short &gt;</link><link linkend="_structvalue__traits_3_01std_1_1string_01_4">value_traits&lt; std::string &gt;</link><link linkend="_structvalue__traits_3_01std_1_1string__view_01_4">value_traits&lt; std::string_view &gt;</link><link linkend="_structvalue__traits_3_01_t_01_6_01_4">value_traits&lt; T &amp; &gt;</link><link linkend="_structvalue__traits_3_01_t_01_6_6_01_4">value_traits&lt; T &amp;&amp; &gt;</link><link linkend="_structvalue__traits_3_01time_01_4">value_traits&lt; time &gt;</link><link linkend="_structvalue__traits_3_01unsigned_01char_01_4">value_traits&lt; unsigned char &gt;</link><link linkend="_structvalue__traits_3_01unsigned_01int_01_4">value_traits&lt; unsigned int &gt;</link><link linkend="_structvalue__traits_3_01unsigned_01long_01_4">value_traits&lt; unsigned long &gt;</link><link linkend="_structvalue__traits_3_01unsigned_01long_01long_01_4">value_traits&lt; unsigned long long &gt;</link><link linkend="_structvalue__traits_3_01unsigned_01short_01_4">value_traits&lt; unsigned short &gt;</link><link linkend="_structvalue__traits_3_01volatile_01_t_01_4">value_traits&lt; volatile T &gt;</link><link linkend="_structglm_1_1vec">glm::vec&lt; L, T, Q &gt;</link><link linkend="_structvec2">vec2</link><link linkend="_structglm_1_1vec_3_011_00_01_t_00_01_q_01_4">glm::vec&lt; 1, T, Q &gt;</link><link linkend="_structglm_1_1vec_3_012_00_01_t_00_01_q_01_4">glm::vec&lt; 2, T, Q &gt;</link><link linkend="_structglm_1_1vec_3_013_00_01_t_00_01_q_01_4">glm::vec&lt; 3, T, Q &gt;</link><link linkend="_structglm_1_1vec_3_014_00_01_t_00_01_q_01_4">glm::vec&lt; 4, T, Q &gt;</link><link linkend="_struct_vector2">Vector2</link><link linkend="_struct_vector3">Vector3</link><link linkend="_struct_vector4">Vector4</link><link linkend="_class_vehicle">Vehicle</link><link linkend="_class_vehicle_i_d">VehicleID</link><link linkend="_struct_vk_acquire_next_image_info_k_h_r">VkAcquireNextImageInfoKHR</link><link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link><link linkend="_struct_vk_application_info">VkApplicationInfo</link><link linkend="_struct_vk_attachment_description">VkAttachmentDescription</link><link linkend="_struct_vk_attachment_description2">VkAttachmentDescription2</link><link linkend="_struct_vk_attachment_description_stencil_layout">VkAttachmentDescriptionStencilLayout</link><link linkend="_struct_vk_attachment_reference">VkAttachmentReference</link><link linkend="_struct_vk_attachment_reference2">VkAttachmentReference2</link><link linkend="_struct_vk_attachment_reference_stencil_layout">VkAttachmentReferenceStencilLayout</link><link linkend="_struct_vk_base_in_structure">VkBaseInStructure</link><link linkend="_struct_vk_base_out_structure">VkBaseOutStructure</link><link linkend="_struct_vk_bind_buffer_memory_device_group_info">VkBindBufferMemoryDeviceGroupInfo</link><link linkend="_struct_vk_bind_buffer_memory_info">VkBindBufferMemoryInfo</link><link linkend="_struct_vk_bind_image_memory_device_group_info">VkBindImageMemoryDeviceGroupInfo</link><link linkend="_struct_vk_bind_image_memory_info">VkBindImageMemoryInfo</link><link linkend="_struct_vk_bind_image_memory_swapchain_info_k_h_r">VkBindImageMemorySwapchainInfoKHR</link><link linkend="_struct_vk_bind_image_plane_memory_info">VkBindImagePlaneMemoryInfo</link><link linkend="_struct_vk_bind_sparse_info">VkBindSparseInfo</link><link linkend="_struct_vk_blit_image_info2">VkBlitImageInfo2</link><link linkend="_struct_vk_buffer_copy">VkBufferCopy</link><link linkend="_struct_vk_buffer_copy2">VkBufferCopy2</link><link linkend="_struct_vk_buffer_create_info">VkBufferCreateInfo</link><link linkend="_struct_vk_buffer_device_address_info">VkBufferDeviceAddressInfo</link><link linkend="_struct_vk_buffer_image_copy">VkBufferImageCopy</link><link linkend="_struct_vk_buffer_image_copy2">VkBufferImageCopy2</link><link linkend="_struct_vk_buffer_memory_barrier">VkBufferMemoryBarrier</link><link linkend="_struct_vk_buffer_memory_barrier2">VkBufferMemoryBarrier2</link><link linkend="_struct_vk_buffer_memory_requirements_info2">VkBufferMemoryRequirementsInfo2</link><link linkend="_struct_vk_buffer_opaque_capture_address_create_info">VkBufferOpaqueCaptureAddressCreateInfo</link><link linkend="_struct_vk_buffer_view_create_info">VkBufferViewCreateInfo</link><link linkend="_struct_vk_clear_attachment">VkClearAttachment</link><link linkend="_union_vk_clear_color_value">VkClearColorValue</link><link linkend="_struct_vk_clear_depth_stencil_value">VkClearDepthStencilValue</link><link linkend="_struct_vk_clear_rect">VkClearRect</link><link linkend="_union_vk_clear_value">VkClearValue</link><link linkend="_struct_vk_command_buffer_allocate_info">VkCommandBufferAllocateInfo</link><link linkend="_struct_vk_command_buffer_begin_info">VkCommandBufferBeginInfo</link><link linkend="_struct_vk_command_buffer_inheritance_info">VkCommandBufferInheritanceInfo</link><link linkend="_struct_vk_command_buffer_inheritance_rendering_info">VkCommandBufferInheritanceRenderingInfo</link><link linkend="_struct_vk_command_buffer_submit_info">VkCommandBufferSubmitInfo</link><link linkend="_struct_vk_command_pool_create_info">VkCommandPoolCreateInfo</link><link linkend="_struct_vk_component_mapping">VkComponentMapping</link><link linkend="_struct_vk_compute_pipeline_create_info">VkComputePipelineCreateInfo</link><link linkend="_struct_vk_conformance_version">VkConformanceVersion</link><link linkend="_struct_vk_copy_buffer_info2">VkCopyBufferInfo2</link><link linkend="_struct_vk_copy_buffer_to_image_info2">VkCopyBufferToImageInfo2</link><link linkend="_struct_vk_copy_descriptor_set">VkCopyDescriptorSet</link><link linkend="_struct_vk_copy_image_info2">VkCopyImageInfo2</link><link linkend="_struct_vk_copy_image_to_buffer_info2">VkCopyImageToBufferInfo2</link><link linkend="_struct_vk_debug_report_callback_create_info_e_x_t">VkDebugReportCallbackCreateInfoEXT</link><link linkend="_struct_vk_dependency_info">VkDependencyInfo</link><link linkend="_struct_vk_descriptor_buffer_info">VkDescriptorBufferInfo</link><link linkend="_struct_vk_descriptor_image_info">VkDescriptorImageInfo</link><link linkend="_struct_vk_descriptor_pool_create_info">VkDescriptorPoolCreateInfo</link><link linkend="_struct_vk_descriptor_pool_inline_uniform_block_create_info">VkDescriptorPoolInlineUniformBlockCreateInfo</link><link linkend="_struct_vk_descriptor_pool_size">VkDescriptorPoolSize</link><link linkend="_struct_vk_descriptor_set_allocate_info">VkDescriptorSetAllocateInfo</link><link linkend="_struct_vk_descriptor_set_layout_binding">VkDescriptorSetLayoutBinding</link><link linkend="_struct_vk_descriptor_set_layout_binding_flags_create_info">VkDescriptorSetLayoutBindingFlagsCreateInfo</link><link linkend="_struct_vk_descriptor_set_layout_create_info">VkDescriptorSetLayoutCreateInfo</link><link linkend="_struct_vk_descriptor_set_layout_support">VkDescriptorSetLayoutSupport</link><link linkend="_struct_vk_descriptor_set_variable_descriptor_count_allocate_info">VkDescriptorSetVariableDescriptorCountAllocateInfo</link><link linkend="_struct_vk_descriptor_set_variable_descriptor_count_layout_support">VkDescriptorSetVariableDescriptorCountLayoutSupport</link><link linkend="_struct_vk_descriptor_update_template_create_info">VkDescriptorUpdateTemplateCreateInfo</link><link linkend="_struct_vk_descriptor_update_template_entry">VkDescriptorUpdateTemplateEntry</link><link linkend="_struct_vk_device_buffer_memory_requirements">VkDeviceBufferMemoryRequirements</link><link linkend="_struct_vk_device_create_info">VkDeviceCreateInfo</link><link linkend="_struct_vk_device_group_bind_sparse_info">VkDeviceGroupBindSparseInfo</link><link linkend="_struct_vk_device_group_command_buffer_begin_info">VkDeviceGroupCommandBufferBeginInfo</link><link linkend="_struct_vk_device_group_device_create_info">VkDeviceGroupDeviceCreateInfo</link><link linkend="_struct_vk_device_group_present_capabilities_k_h_r">VkDeviceGroupPresentCapabilitiesKHR</link><link linkend="_struct_vk_device_group_present_info_k_h_r">VkDeviceGroupPresentInfoKHR</link><link linkend="_struct_vk_device_group_render_pass_begin_info">VkDeviceGroupRenderPassBeginInfo</link><link linkend="_struct_vk_device_group_submit_info">VkDeviceGroupSubmitInfo</link><link linkend="_struct_vk_device_group_swapchain_create_info_k_h_r">VkDeviceGroupSwapchainCreateInfoKHR</link><link linkend="_struct_vk_device_image_memory_requirements">VkDeviceImageMemoryRequirements</link><link linkend="_struct_vk_device_memory_opaque_capture_address_info">VkDeviceMemoryOpaqueCaptureAddressInfo</link><link linkend="_struct_vk_device_private_data_create_info">VkDevicePrivateDataCreateInfo</link><link linkend="_struct_vk_device_queue_create_info">VkDeviceQueueCreateInfo</link><link linkend="_struct_vk_device_queue_info2">VkDeviceQueueInfo2</link><link linkend="_struct_vk_dispatch_indirect_command">VkDispatchIndirectCommand</link><link linkend="_struct_vk_draw_indexed_indirect_command">VkDrawIndexedIndirectCommand</link><link linkend="_struct_vk_draw_indirect_command">VkDrawIndirectCommand</link><link linkend="_struct_vk_event_create_info">VkEventCreateInfo</link><link linkend="_struct_vk_export_fence_create_info">VkExportFenceCreateInfo</link><link linkend="_struct_vk_export_memory_allocate_info">VkExportMemoryAllocateInfo</link><link linkend="_struct_vk_export_semaphore_create_info">VkExportSemaphoreCreateInfo</link><link linkend="_struct_vk_extension_properties">VkExtensionProperties</link><link linkend="_struct_vk_extent2_d">VkExtent2D</link><link linkend="_struct_vk_extent3_d">VkExtent3D</link><link linkend="_struct_vk_external_buffer_properties">VkExternalBufferProperties</link><link linkend="_struct_vk_external_fence_properties">VkExternalFenceProperties</link><link linkend="_struct_vk_external_image_format_properties">VkExternalImageFormatProperties</link><link linkend="_struct_vk_external_memory_buffer_create_info">VkExternalMemoryBufferCreateInfo</link><link linkend="_struct_vk_external_memory_image_create_info">VkExternalMemoryImageCreateInfo</link><link linkend="_struct_vk_external_memory_properties">VkExternalMemoryProperties</link><link linkend="_struct_vk_external_semaphore_properties">VkExternalSemaphoreProperties</link><link linkend="_struct_vk_fence_create_info">VkFenceCreateInfo</link><link linkend="_struct_vk_format_properties">VkFormatProperties</link><link linkend="_struct_vk_format_properties2">VkFormatProperties2</link><link linkend="_struct_vk_format_properties3">VkFormatProperties3</link><link linkend="_struct_vk_framebuffer_attachment_image_info">VkFramebufferAttachmentImageInfo</link><link linkend="_struct_vk_framebuffer_attachments_create_info">VkFramebufferAttachmentsCreateInfo</link><link linkend="_struct_vk_framebuffer_create_info">VkFramebufferCreateInfo</link><link linkend="_struct_vk_graphics_pipeline_create_info">VkGraphicsPipelineCreateInfo</link><link linkend="_struct_vk_image_blit">VkImageBlit</link><link linkend="_struct_vk_image_blit2">VkImageBlit2</link><link linkend="_struct_vk_image_copy">VkImageCopy</link><link linkend="_struct_vk_image_copy2">VkImageCopy2</link><link linkend="_struct_vk_image_create_info">VkImageCreateInfo</link><link linkend="_struct_vk_image_format_list_create_info">VkImageFormatListCreateInfo</link><link linkend="_struct_vk_image_format_properties">VkImageFormatProperties</link><link linkend="_struct_vk_image_format_properties2">VkImageFormatProperties2</link><link linkend="_struct_vk_image_memory_barrier">VkImageMemoryBarrier</link><link linkend="_struct_vk_image_memory_barrier2">VkImageMemoryBarrier2</link><link linkend="_struct_vk_image_memory_requirements_info2">VkImageMemoryRequirementsInfo2</link><link linkend="_struct_vk_image_plane_memory_requirements_info">VkImagePlaneMemoryRequirementsInfo</link><link linkend="_struct_vk_image_resolve">VkImageResolve</link><link linkend="_struct_vk_image_resolve2">VkImageResolve2</link><link linkend="_struct_vk_image_sparse_memory_requirements_info2">VkImageSparseMemoryRequirementsInfo2</link><link linkend="_struct_vk_image_stencil_usage_create_info">VkImageStencilUsageCreateInfo</link><link linkend="_struct_vk_image_subresource">VkImageSubresource</link><link linkend="_struct_vk_image_subresource_layers">VkImageSubresourceLayers</link><link linkend="_struct_vk_image_subresource_range">VkImageSubresourceRange</link><link linkend="_struct_vk_image_swapchain_create_info_k_h_r">VkImageSwapchainCreateInfoKHR</link><link linkend="_struct_vk_image_view_create_info">VkImageViewCreateInfo</link><link linkend="_struct_vk_image_view_usage_create_info">VkImageViewUsageCreateInfo</link><link linkend="_struct_vk_input_attachment_aspect_reference">VkInputAttachmentAspectReference</link><link linkend="_struct_vk_instance_create_info">VkInstanceCreateInfo</link><link linkend="_struct_vk_layer_properties">VkLayerProperties</link><link linkend="_struct_vk_mac_o_s_surface_create_info_m_v_k">VkMacOSSurfaceCreateInfoMVK</link><link linkend="_struct_vk_mapped_memory_range">VkMappedMemoryRange</link><link linkend="_struct_vk_memory_allocate_flags_info">VkMemoryAllocateFlagsInfo</link><link linkend="_struct_vk_memory_allocate_info">VkMemoryAllocateInfo</link><link linkend="_struct_vk_memory_barrier">VkMemoryBarrier</link><link linkend="_struct_vk_memory_barrier2">VkMemoryBarrier2</link><link linkend="_struct_vk_memory_dedicated_allocate_info">VkMemoryDedicatedAllocateInfo</link><link linkend="_struct_vk_memory_dedicated_requirements">VkMemoryDedicatedRequirements</link><link linkend="_struct_vk_memory_heap">VkMemoryHeap</link><link linkend="_struct_vk_memory_opaque_capture_address_allocate_info">VkMemoryOpaqueCaptureAddressAllocateInfo</link><link linkend="_struct_vk_memory_requirements">VkMemoryRequirements</link><link linkend="_struct_vk_memory_requirements2">VkMemoryRequirements2</link><link linkend="_struct_vk_memory_type">VkMemoryType</link><link linkend="_struct_vk_metal_surface_create_info_e_x_t">VkMetalSurfaceCreateInfoEXT</link><link linkend="_struct_vk_offset2_d">VkOffset2D</link><link linkend="_struct_vk_offset3_d">VkOffset3D</link><link linkend="_struct_vk_physical_device16_bit_storage_features">VkPhysicalDevice16BitStorageFeatures</link><link linkend="_struct_vk_physical_device8_bit_storage_features">VkPhysicalDevice8BitStorageFeatures</link><link linkend="_struct_vk_physical_device_buffer_device_address_features">VkPhysicalDeviceBufferDeviceAddressFeatures</link><link linkend="_struct_vk_physical_device_depth_stencil_resolve_properties">VkPhysicalDeviceDepthStencilResolveProperties</link><link linkend="_struct_vk_physical_device_descriptor_indexing_features">VkPhysicalDeviceDescriptorIndexingFeatures</link><link linkend="_struct_vk_physical_device_descriptor_indexing_properties">VkPhysicalDeviceDescriptorIndexingProperties</link><link linkend="_struct_vk_physical_device_driver_properties">VkPhysicalDeviceDriverProperties</link><link linkend="_struct_vk_physical_device_dynamic_rendering_features">VkPhysicalDeviceDynamicRenderingFeatures</link><link linkend="_struct_vk_physical_device_external_buffer_info">VkPhysicalDeviceExternalBufferInfo</link><link linkend="_struct_vk_physical_device_external_fence_info">VkPhysicalDeviceExternalFenceInfo</link><link linkend="_struct_vk_physical_device_external_image_format_info">VkPhysicalDeviceExternalImageFormatInfo</link><link linkend="_struct_vk_physical_device_external_semaphore_info">VkPhysicalDeviceExternalSemaphoreInfo</link><link linkend="_struct_vk_physical_device_features">VkPhysicalDeviceFeatures</link><link linkend="_struct_vk_physical_device_features2">VkPhysicalDeviceFeatures2</link><link linkend="_struct_vk_physical_device_float_controls_properties">VkPhysicalDeviceFloatControlsProperties</link><link linkend="_struct_vk_physical_device_group_properties">VkPhysicalDeviceGroupProperties</link><link linkend="_struct_vk_physical_device_host_query_reset_features">VkPhysicalDeviceHostQueryResetFeatures</link><link linkend="_struct_vk_physical_device_i_d_properties">VkPhysicalDeviceIDProperties</link><link linkend="_struct_vk_physical_device_image_format_info2">VkPhysicalDeviceImageFormatInfo2</link><link linkend="_struct_vk_physical_device_imageless_framebuffer_features">VkPhysicalDeviceImagelessFramebufferFeatures</link><link linkend="_struct_vk_physical_device_image_robustness_features">VkPhysicalDeviceImageRobustnessFeatures</link><link linkend="_struct_vk_physical_device_inline_uniform_block_features">VkPhysicalDeviceInlineUniformBlockFeatures</link><link linkend="_struct_vk_physical_device_inline_uniform_block_properties">VkPhysicalDeviceInlineUniformBlockProperties</link><link linkend="_struct_vk_physical_device_limits">VkPhysicalDeviceLimits</link><link linkend="_struct_vk_physical_device_maintenance3_properties">VkPhysicalDeviceMaintenance3Properties</link><link linkend="_struct_vk_physical_device_maintenance4_features">VkPhysicalDeviceMaintenance4Features</link><link linkend="_struct_vk_physical_device_maintenance4_properties">VkPhysicalDeviceMaintenance4Properties</link><link linkend="_struct_vk_physical_device_memory_properties">VkPhysicalDeviceMemoryProperties</link><link linkend="_struct_vk_physical_device_memory_properties2">VkPhysicalDeviceMemoryProperties2</link><link linkend="_struct_vk_physical_device_multiview_features">VkPhysicalDeviceMultiviewFeatures</link><link linkend="_struct_vk_physical_device_multiview_properties">VkPhysicalDeviceMultiviewProperties</link><link linkend="_struct_vk_physical_device_pipeline_creation_cache_control_features">VkPhysicalDevicePipelineCreationCacheControlFeatures</link><link linkend="_struct_vk_physical_device_point_clipping_properties">VkPhysicalDevicePointClippingProperties</link><link linkend="_struct_vk_physical_device_private_data_features">VkPhysicalDevicePrivateDataFeatures</link><link linkend="_struct_vk_physical_device_properties">VkPhysicalDeviceProperties</link><link linkend="_struct_vk_physical_device_properties2">VkPhysicalDeviceProperties2</link><link linkend="_struct_vk_physical_device_protected_memory_features">VkPhysicalDeviceProtectedMemoryFeatures</link><link linkend="_struct_vk_physical_device_protected_memory_properties">VkPhysicalDeviceProtectedMemoryProperties</link><link linkend="_struct_vk_physical_device_sampler_filter_minmax_properties">VkPhysicalDeviceSamplerFilterMinmaxProperties</link><link linkend="_struct_vk_physical_device_sampler_ycbcr_conversion_features">VkPhysicalDeviceSamplerYcbcrConversionFeatures</link><link linkend="_struct_vk_physical_device_scalar_block_layout_features">VkPhysicalDeviceScalarBlockLayoutFeatures</link><link linkend="_struct_vk_physical_device_separate_depth_stencil_layouts_features">VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures</link><link linkend="_struct_vk_physical_device_shader_atomic_int64_features">VkPhysicalDeviceShaderAtomicInt64Features</link><link linkend="_struct_vk_physical_device_shader_demote_to_helper_invocation_features">VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures</link><link linkend="_struct_vk_physical_device_shader_draw_parameters_features">VkPhysicalDeviceShaderDrawParametersFeatures</link><link linkend="_struct_vk_physical_device_shader_float16_int8_features">VkPhysicalDeviceShaderFloat16Int8Features</link><link linkend="_struct_vk_physical_device_shader_integer_dot_product_features">VkPhysicalDeviceShaderIntegerDotProductFeatures</link><link linkend="_struct_vk_physical_device_shader_integer_dot_product_properties">VkPhysicalDeviceShaderIntegerDotProductProperties</link><link linkend="_struct_vk_physical_device_shader_subgroup_extended_types_features">VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures</link><link linkend="_struct_vk_physical_device_shader_terminate_invocation_features">VkPhysicalDeviceShaderTerminateInvocationFeatures</link><link linkend="_struct_vk_physical_device_sparse_image_format_info2">VkPhysicalDeviceSparseImageFormatInfo2</link><link linkend="_struct_vk_physical_device_sparse_properties">VkPhysicalDeviceSparseProperties</link><link linkend="_struct_vk_physical_device_subgroup_properties">VkPhysicalDeviceSubgroupProperties</link><link linkend="_struct_vk_physical_device_subgroup_size_control_features">VkPhysicalDeviceSubgroupSizeControlFeatures</link><link linkend="_struct_vk_physical_device_subgroup_size_control_properties">VkPhysicalDeviceSubgroupSizeControlProperties</link><link linkend="_struct_vk_physical_device_synchronization2_features">VkPhysicalDeviceSynchronization2Features</link><link linkend="_struct_vk_physical_device_texel_buffer_alignment_properties">VkPhysicalDeviceTexelBufferAlignmentProperties</link><link linkend="_struct_vk_physical_device_texture_compression_a_s_t_c_h_d_r_features">VkPhysicalDeviceTextureCompressionASTCHDRFeatures</link><link linkend="_struct_vk_physical_device_timeline_semaphore_features">VkPhysicalDeviceTimelineSemaphoreFeatures</link><link linkend="_struct_vk_physical_device_timeline_semaphore_properties">VkPhysicalDeviceTimelineSemaphoreProperties</link><link linkend="_struct_vk_physical_device_tool_properties">VkPhysicalDeviceToolProperties</link><link linkend="_struct_vk_physical_device_uniform_buffer_standard_layout_features">VkPhysicalDeviceUniformBufferStandardLayoutFeatures</link><link linkend="_struct_vk_physical_device_variable_pointers_features">VkPhysicalDeviceVariablePointersFeatures</link><link linkend="_struct_vk_physical_device_vulkan11_features">VkPhysicalDeviceVulkan11Features</link><link linkend="_struct_vk_physical_device_vulkan11_properties">VkPhysicalDeviceVulkan11Properties</link><link linkend="_struct_vk_physical_device_vulkan12_features">VkPhysicalDeviceVulkan12Features</link><link linkend="_struct_vk_physical_device_vulkan12_properties">VkPhysicalDeviceVulkan12Properties</link><link linkend="_struct_vk_physical_device_vulkan13_features">VkPhysicalDeviceVulkan13Features</link><link linkend="_struct_vk_physical_device_vulkan13_properties">VkPhysicalDeviceVulkan13Properties</link><link linkend="_struct_vk_physical_device_vulkan_memory_model_features">VkPhysicalDeviceVulkanMemoryModelFeatures</link><link linkend="_struct_vk_physical_device_zero_initialize_workgroup_memory_features">VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures</link><link linkend="_struct_vk_pipeline_cache_create_info">VkPipelineCacheCreateInfo</link><link linkend="_struct_vk_pipeline_cache_header_version_one">VkPipelineCacheHeaderVersionOne</link><link linkend="_struct_vk_pipeline_color_blend_attachment_state">VkPipelineColorBlendAttachmentState</link><link linkend="_struct_vk_pipeline_color_blend_state_create_info">VkPipelineColorBlendStateCreateInfo</link><link linkend="_struct_vk_pipeline_creation_feedback">VkPipelineCreationFeedback</link><link linkend="_struct_vk_pipeline_creation_feedback_create_info">VkPipelineCreationFeedbackCreateInfo</link><link linkend="_struct_vk_pipeline_depth_stencil_state_create_info">VkPipelineDepthStencilStateCreateInfo</link><link linkend="_struct_vk_pipeline_dynamic_state_create_info">VkPipelineDynamicStateCreateInfo</link><link linkend="_struct_vk_pipeline_input_assembly_state_create_info">VkPipelineInputAssemblyStateCreateInfo</link><link linkend="_struct_vk_pipeline_layout_create_info">VkPipelineLayoutCreateInfo</link><link linkend="_struct_vk_pipeline_multisample_state_create_info">VkPipelineMultisampleStateCreateInfo</link><link linkend="_struct_vk_pipeline_rasterization_state_create_info">VkPipelineRasterizationStateCreateInfo</link><link linkend="_struct_vk_pipeline_rendering_create_info">VkPipelineRenderingCreateInfo</link><link linkend="_struct_vk_pipeline_shader_stage_create_info">VkPipelineShaderStageCreateInfo</link><link linkend="_struct_vk_pipeline_shader_stage_required_subgroup_size_create_info">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</link><link linkend="_struct_vk_pipeline_tessellation_domain_origin_state_create_info">VkPipelineTessellationDomainOriginStateCreateInfo</link><link linkend="_struct_vk_pipeline_tessellation_state_create_info">VkPipelineTessellationStateCreateInfo</link><link linkend="_struct_vk_pipeline_vertex_input_state_create_info">VkPipelineVertexInputStateCreateInfo</link><link linkend="_struct_vk_pipeline_viewport_state_create_info">VkPipelineViewportStateCreateInfo</link><link linkend="_struct_vk_present_info_k_h_r">VkPresentInfoKHR</link><link linkend="_struct_vk_private_data_slot_create_info">VkPrivateDataSlotCreateInfo</link><link linkend="_struct_vk_protected_submit_info">VkProtectedSubmitInfo</link><link linkend="_struct_vk_push_constant_range">VkPushConstantRange</link><link linkend="_struct_vk_query_pool_create_info">VkQueryPoolCreateInfo</link><link linkend="_struct_vk_queue_family_properties">VkQueueFamilyProperties</link><link linkend="_struct_vk_queue_family_properties2">VkQueueFamilyProperties2</link><link linkend="_struct_vk_rect2_d">VkRect2D</link><link linkend="_struct_vk_rendering_attachment_info">VkRenderingAttachmentInfo</link><link linkend="_struct_vk_rendering_info">VkRenderingInfo</link><link linkend="_struct_vk_render_pass_attachment_begin_info">VkRenderPassAttachmentBeginInfo</link><link linkend="_struct_vk_render_pass_begin_info">VkRenderPassBeginInfo</link><link linkend="_struct_vk_render_pass_create_info">VkRenderPassCreateInfo</link><link linkend="_struct_vk_render_pass_create_info2">VkRenderPassCreateInfo2</link><link linkend="_struct_vk_render_pass_input_attachment_aspect_create_info">VkRenderPassInputAttachmentAspectCreateInfo</link><link linkend="_struct_vk_render_pass_multiview_create_info">VkRenderPassMultiviewCreateInfo</link><link linkend="_struct_vk_resolve_image_info2">VkResolveImageInfo2</link><link linkend="_struct_vk_sampler_create_info">VkSamplerCreateInfo</link><link linkend="_struct_vk_sampler_reduction_mode_create_info">VkSamplerReductionModeCreateInfo</link><link linkend="_struct_vk_sampler_ycbcr_conversion_create_info">VkSamplerYcbcrConversionCreateInfo</link><link linkend="_struct_vk_sampler_ycbcr_conversion_image_format_properties">VkSamplerYcbcrConversionImageFormatProperties</link><link linkend="_struct_vk_sampler_ycbcr_conversion_info">VkSamplerYcbcrConversionInfo</link><link linkend="_struct_vk_semaphore_create_info">VkSemaphoreCreateInfo</link><link linkend="_struct_vk_semaphore_signal_info">VkSemaphoreSignalInfo</link><link linkend="_struct_vk_semaphore_submit_info">VkSemaphoreSubmitInfo</link><link linkend="_struct_vk_semaphore_type_create_info">VkSemaphoreTypeCreateInfo</link><link linkend="_struct_vk_semaphore_wait_info">VkSemaphoreWaitInfo</link><link linkend="_struct_vk_shader_module_create_info">VkShaderModuleCreateInfo</link><link linkend="_struct_vk_sparse_buffer_memory_bind_info">VkSparseBufferMemoryBindInfo</link><link linkend="_struct_vk_sparse_image_format_properties">VkSparseImageFormatProperties</link><link linkend="_struct_vk_sparse_image_format_properties2">VkSparseImageFormatProperties2</link><link linkend="_struct_vk_sparse_image_memory_bind">VkSparseImageMemoryBind</link><link linkend="_struct_vk_sparse_image_memory_bind_info">VkSparseImageMemoryBindInfo</link><link linkend="_struct_vk_sparse_image_memory_requirements">VkSparseImageMemoryRequirements</link><link linkend="_struct_vk_sparse_image_memory_requirements2">VkSparseImageMemoryRequirements2</link><link linkend="_struct_vk_sparse_image_opaque_memory_bind_info">VkSparseImageOpaqueMemoryBindInfo</link><link linkend="_struct_vk_sparse_memory_bind">VkSparseMemoryBind</link><link linkend="_struct_vk_specialization_info">VkSpecializationInfo</link><link linkend="_struct_vk_specialization_map_entry">VkSpecializationMapEntry</link><link linkend="_struct_vk_stencil_op_state">VkStencilOpState</link><link linkend="_struct_vk_submit_info">VkSubmitInfo</link><link linkend="_struct_vk_submit_info2">VkSubmitInfo2</link><link linkend="_struct_vk_subpass_begin_info">VkSubpassBeginInfo</link><link linkend="_struct_vk_subpass_dependency">VkSubpassDependency</link><link linkend="_struct_vk_subpass_dependency2">VkSubpassDependency2</link><link linkend="_struct_vk_subpass_description">VkSubpassDescription</link><link linkend="_struct_vk_subpass_description2">VkSubpassDescription2</link><link linkend="_struct_vk_subpass_description_depth_stencil_resolve">VkSubpassDescriptionDepthStencilResolve</link><link linkend="_struct_vk_subpass_end_info">VkSubpassEndInfo</link><link linkend="_struct_vk_subresource_layout">VkSubresourceLayout</link><link linkend="_struct_vk_surface_capabilities_k_h_r">VkSurfaceCapabilitiesKHR</link><link linkend="_struct_vk_surface_format_k_h_r">VkSurfaceFormatKHR</link><link linkend="_struct_vk_swapchain_create_info_k_h_r">VkSwapchainCreateInfoKHR</link><link linkend="_struct_vk_timeline_semaphore_submit_info">VkTimelineSemaphoreSubmitInfo</link><link linkend="_struct_vk_vertex_input_attribute_description">VkVertexInputAttributeDescription</link><link linkend="_struct_vk_vertex_input_binding_description">VkVertexInputBindingDescription</link><link linkend="_struct_vk_viewport">VkViewport</link><link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link><link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link><link linkend="_struct_vk_write_descriptor_set">VkWriteDescriptorSet</link><link linkend="_struct_vk_write_descriptor_set_inline_uniform_block">VkWriteDescriptorSetInlineUniformBlock</link><link linkend="_struct_vk_xcb_surface_create_info_k_h_r">VkXcbSurfaceCreateInfoKHR</link><link linkend="_struct_vk_xlib_surface_create_info_k_h_r">VkXlibSurfaceCreateInfoKHR</link><link linkend="_struct_catch_1_1detail_1_1void__type">Catch::detail::void_type&lt;... &gt;</link><link linkend="_struct_vox_array3_d">VoxArray3D</link><link linkend="_struct_vox_color">VoxColor</link><link linkend="_class_voxel_terrain_pager">VoxelTerrainPager</link><link linkend="_struct_vox_vector3">VoxVector3</link><link linkend="_struct_vr_device_info">VrDeviceInfo</link><link linkend="_struct_vr_stereo_config">VrStereoConfig</link><link linkend="_struct_wave">Wave</link><link linkend="_structglm_1_1io_1_1width">glm::io::width</link><link linkend="_class_window">Window</link><link linkend="_struct_catch_1_1_matchers_1_1_floating_1_1_within_abs_matcher">Catch::Matchers::Floating::WithinAbsMatcher</link><link linkend="_struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher">Catch::Matchers::Floating::WithinRelMatcher</link><link linkend="_struct_catch_1_1_matchers_1_1_floating_1_1_within_ulps_matcher">Catch::Matchers::Floating::WithinUlpsMatcher</link><link linkend="_structwl__cursor">wl_cursor</link><link linkend="_structwl__cursor__image">wl_cursor_image</link><link linkend="_class_world_floor">WorldFloor</link><link linkend="_class_world_screen_comp">WorldScreenComp</link></section>
