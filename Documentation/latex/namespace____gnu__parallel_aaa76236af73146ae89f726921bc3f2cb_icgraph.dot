digraph "__gnu_parallel::__yield"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="__gnu_parallel::__yield",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Yield control to another thread, without waiting for the end of the time slice."];
  Node1 -> Node2 [id="edge10_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="__gnu_parallel::__for\l_each_template_random\l_access_workstealing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a14bdca2e9c62cde7dd8478d972f60272",tooltip="Work stealing algorithm for random access iterators."];
  Node2 -> Node3 [id="edge11_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="__gnu_parallel::__for\l_each_template_random\l_access",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a0ebbe56e1b059cba72c3d706307a0e50",tooltip="Chose the desired algorithm by evaluating __parallelism_tag."];
  Node3 -> Node4 [id="edge12_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="_GLIBCXX_VISIBILITY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_classes_2lib_2include_2c_09_09_2parallel_2algo_8h.html#a544d74b2d5d0dd2197f5fd6f02691de0",tooltip=" "];
  Node1 -> Node5 [id="edge13_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="__gnu_parallel::__qsb\l_local_sort_with_helping",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a7565d258aacb02328cef6eb2781ab711",tooltip="Quicksort step doing load-balanced local sort."];
  Node5 -> Node6 [id="edge14_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="__gnu_parallel::__qsb\l_conquer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a8d9c5686c4621822c7c3cdd015f7e693",tooltip="Quicksort conquer step."];
  Node6 -> Node7 [id="edge15_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="__gnu_parallel::__parallel\l_sort_qsb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a4093dd098b32542e3d3f43ebd4c6f940",tooltip="Top-level quicksort routine."];
  Node7 -> Node8 [id="edge16_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="__gnu_parallel::__parallel_sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#a000f037b08d237d140dd6144a11fb73f",tooltip="Choose balanced quicksort for parallel sorting."];
  Node7 -> Node9 [id="edge17_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="__gnu_parallel::__parallel_sort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace____gnu__parallel.html#aa47b469dd82347dd63c3996eda2e237b",tooltip="Choose a parallel sorting algorithm."];
  Node6 -> Node6 [id="edge18_Node000006_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
